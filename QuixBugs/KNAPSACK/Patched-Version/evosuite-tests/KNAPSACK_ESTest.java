/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 30 00:09:43 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KNAPSACK_ESTest extends KNAPSACK_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[][] intArray0 = new int[8][4];
      int[] intArray1 = new int[3];
      intArray1[1] = 545;
      intArray0[2] = intArray1;
      int int0 = KNAPSACK.knapsack(545, intArray0);
      assertEquals(545, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[][] intArray0 = new int[5][3];
      // Undeclared exception!
      KNAPSACK.knapsack(1813, intArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack((-1), (int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("KNAPSACK", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[][] intArray0 = new int[1][5];
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack((-1046), intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("KNAPSACK", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[][] intArray0 = new int[8][4];
      int[] intArray1 = new int[0];
      intArray0[4] = intArray1;
      // Undeclared exception!
      try { 
        KNAPSACK.knapsack(545, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[2];
      intArray1[0] = 1140;
      intArray0[0] = intArray1;
      int int0 = KNAPSACK.knapsack(1140, intArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      KNAPSACK kNAPSACK0 = new KNAPSACK();
  }
}
