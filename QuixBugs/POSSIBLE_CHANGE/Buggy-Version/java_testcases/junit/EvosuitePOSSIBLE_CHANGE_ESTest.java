/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 01 06:11:29 GMT 2024
 */

package java_programs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java_programs.POSSIBLE_CHANGE;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EvosuitePOSSIBLE_CHANGE_ESTest extends EvosuitePOSSIBLE_CHANGE_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[0];
      int int0 = POSSIBLE_CHANGE.possible_change(intArray0, (-1));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int int0 = POSSIBLE_CHANGE.possible_change((int[]) null, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        POSSIBLE_CHANGE.possible_change((int[]) null, 2015);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java_programs.POSSIBLE_CHANGE", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 2133;
      intArray0[1] = 1;
      intArray0[2] = 1539;
      // Undeclared exception!
      try { 
        POSSIBLE_CHANGE.possible_change(intArray0, 276);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java_programs.POSSIBLE_CHANGE", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      POSSIBLE_CHANGE pOSSIBLE_CHANGE0 = new POSSIBLE_CHANGE();
  }
}
