package org.jfree.chart.plot;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RandoopRegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test001");
        org.jfree.data.xy.OHLCDataset oHLCDataset3 = null;
        org.jfree.chart.axis.SegmentedTimeline segmentedTimeline4 = org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline();
        long long6 = segmentedTimeline4.getTimeFromLong((long) (byte) 10);
        long long7 = segmentedTimeline4.getSegmentSize();
        org.jfree.chart.JFreeChart jFreeChart9 = org.jfree.chart.ChartFactory.createHighLowChart("RectangleEdge.RIGHT", "", "[10.0, 0.0]", oHLCDataset3, (org.jfree.chart.axis.Timeline) segmentedTimeline4, true);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean13 = xYAreaRenderer11.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint14 = xYAreaRenderer11.getBaseLegendTextPaint();
        java.awt.Stroke stroke16 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer11.setSeriesOutlineStroke(0, stroke16, false);
        java.awt.Font font20 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        xYAreaRenderer11.setSeriesItemLabelFont(0, font20);
        // The following exception was thrown during execution in test generation
        try {
            jFreeChart9.setTextAntiAlias((java.lang.Object) xYAreaRenderer11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: org.jfree.chart.renderer.xy.XYAreaRenderer@6e2d2c6b incompatible with Text-specific antialiasing enable key");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(segmentedTimeline4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 86400000L + "'", long7 == 86400000L);
        org.junit.Assert.assertNotNull(jFreeChart9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(paint14);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(font20);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test002");
        org.jfree.data.xy.OHLCDataset oHLCDataset3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart5 = org.jfree.chart.ChartFactory.createCandlestickChart("Last", "PlotOrientation.VERTICAL", "LGPL", oHLCDataset3, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@131d6d6a is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test003");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        org.jfree.chart.entity.EntityCollection entityCollection19 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo20 = new org.jfree.chart.ChartRenderingInfo(entityCollection19);
        java.awt.Paint paint21 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean22 = chartRenderingInfo20.equals((java.lang.Object) paint21);
        java.awt.geom.Rectangle2D rectangle2D23 = chartRenderingInfo20.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo24 = chartRenderingInfo20.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo25 = plotRenderingInfo24.getOwner();
        java.awt.geom.Point2D point2D26 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.zoomRangeAxes((double) 100L, plotRenderingInfo24, point2D26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'source' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(rectangle2D23);
        org.junit.Assert.assertNotNull(plotRenderingInfo24);
        org.junit.Assert.assertNotNull(chartRenderingInfo25);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test004");
        java.util.TimeZone timeZone4 = org.jfree.chart.axis.SegmentedTimeline.DEFAULT_TIME_ZONE;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection5 = new org.jfree.data.time.TimeSeriesCollection(timeZone4);
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer8 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection9 = categoryPlot6.getDomainMarkers((int) 'a', layer8);
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        categoryPlot6.setDataset(4, categoryDataset11);
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = new org.jfree.chart.plot.CategoryPlot();
        int int14 = categoryPlot13.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation15 = categoryPlot13.getOrientation();
        categoryPlot6.setOrientation(plotOrientation15);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart20 = org.jfree.chart.ChartFactory.createXYBarChart("", "0,0,0,0,0,0,0,0", false, "", (org.jfree.data.xy.IntervalXYDataset) timeSeriesCollection5, plotOrientation15, true, true, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@29686e67 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeZone4);
        org.junit.Assert.assertEquals(timeZone4.getDisplayName(), "Pacific Standard Time");
        org.junit.Assert.assertNotNull(layer8);
        org.junit.Assert.assertNull(collection9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(plotOrientation15);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test005");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean20 = xYAreaRenderer11.isSeriesVisible((-16777216));
        java.awt.Shape shape22 = xYAreaRenderer11.getLegendShape(0);
        java.awt.Shape shape24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        xYAreaRenderer11.setSeriesShape((int) (byte) 100, shape24, false);
        java.awt.Paint paint28 = xYAreaRenderer11.getSeriesItemLabelPaint(5);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        org.jfree.chart.annotations.XYAnnotation xYAnnotation30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = combinedDomainXYPlot1.removeAnnotation(xYAnnotation30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(shape22);
        org.junit.Assert.assertNotNull(shape24);
        org.junit.Assert.assertNull(paint28);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test006");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        java.awt.geom.Point2D point2D25 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.setQuadrantOrigin(point2D25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'origin' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test007");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean20 = xYAreaRenderer11.isSeriesVisible((-16777216));
        java.awt.Shape shape22 = xYAreaRenderer11.getLegendShape(0);
        java.awt.Shape shape24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        xYAreaRenderer11.setSeriesShape((int) (byte) 100, shape24, false);
        java.awt.Paint paint28 = xYAreaRenderer11.getSeriesItemLabelPaint(5);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        java.awt.Stroke stroke30 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.setDomainZeroBaselineStroke(stroke30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'stroke' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(shape22);
        org.junit.Assert.assertNotNull(shape24);
        org.junit.Assert.assertNull(paint28);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test008");
        org.jfree.data.xy.OHLCDataset oHLCDataset3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart5 = org.jfree.chart.ChartFactory.createCandlestickChart("[10.0, 0.0]", "DatasetRenderingOrder.FORWARD", "0,0,0,0,0,0,0,0", oHLCDataset3, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@4ddf1518 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test009");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        barRenderer3D0.setSeriesToolTipGenerator(15, categoryToolTipGenerator6, true);
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer12 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection13 = categoryPlot10.getDomainMarkers((int) 'a', layer12);
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        categoryPlot10.setDataset(4, categoryDataset15);
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot();
        int int18 = categoryPlot17.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation19 = categoryPlot17.getOrientation();
        categoryPlot10.setOrientation(plotOrientation19);
        org.jfree.chart.axis.AxisLocation axisLocation21 = categoryPlot10.getDomainAxisLocation();
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        categoryPlot10.setDomainAxis(7, categoryAxis23, false);
        org.jfree.chart.axis.ValueAxis valueAxis26 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot27 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis26);
        java.awt.Graphics2D graphics2D28 = null;
        org.jfree.chart.entity.EntityCollection entityCollection29 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo30 = new org.jfree.chart.ChartRenderingInfo(entityCollection29);
        java.awt.Paint paint31 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean32 = chartRenderingInfo30.equals((java.lang.Object) paint31);
        java.awt.geom.Rectangle2D rectangle2D33 = chartRenderingInfo30.getChartArea();
        java.util.List list34 = null;
        combinedDomainXYPlot27.drawDomainGridlines(graphics2D28, rectangle2D33, list34);
        org.jfree.chart.axis.NumberAxis numberAxis37 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity40 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D33, (org.jfree.chart.axis.Axis) numberAxis37, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.plot.PiePlot piePlot41 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup42 = piePlot41.getDatasetGroup();
        int int43 = piePlot41.getBackgroundImageAlignment();
        boolean boolean44 = piePlot41.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D45 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo46 = null;
        piePlot41.createAndAddEntity(rectangle2D45, plotRenderingInfo46, "hi!", "LGPL");
        piePlot41.setStartAngle((double) 1);
        org.jfree.data.xy.XYDataItem xYDataItem54 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        java.awt.Color color57 = java.awt.Color.getColor("hi!", (int) (short) 100);
        boolean boolean58 = xYDataItem54.equals((java.lang.Object) "hi!");
        java.awt.Color color59 = java.awt.Color.MAGENTA;
        piePlot41.setSectionPaint((java.lang.Comparable) "hi!", (java.awt.Paint) color59);
        java.awt.Graphics2D graphics2D61 = null;
        org.jfree.chart.entity.EntityCollection entityCollection62 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo63 = new org.jfree.chart.ChartRenderingInfo(entityCollection62);
        java.awt.Paint paint64 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean65 = chartRenderingInfo63.equals((java.lang.Object) paint64);
        java.awt.geom.Rectangle2D rectangle2D66 = chartRenderingInfo63.getChartArea();
        piePlot41.drawBackgroundImage(graphics2D61, rectangle2D66);
        java.awt.Color color69 = java.awt.Color.blue;
        java.awt.Stroke stroke70 = null;
        // The following exception was thrown during execution in test generation
        try {
            barRenderer3D0.drawRangeLine(graphics2D9, categoryPlot10, (org.jfree.chart.axis.ValueAxis) numberAxis37, rectangle2D66, 0.05d, (java.awt.Paint) color69, stroke70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(layer12);
        org.junit.Assert.assertNull(collection13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(plotOrientation19);
        org.junit.Assert.assertNotNull(axisLocation21);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(rectangle2D33);
        org.junit.Assert.assertNull(datasetGroup42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 15 + "'", int43 == 15);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(color57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(color59);
        org.junit.Assert.assertNotNull(paint64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(rectangle2D66);
        org.junit.Assert.assertNotNull(color69);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test010");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        boolean boolean18 = combinedDomainXYPlot1.canSelectByRegion();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test011");
        org.jfree.chart.axis.CategoryAxis3D categoryAxis3D1 = new org.jfree.chart.axis.CategoryAxis3D("hi!");
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.axis.ValueAxis valueAxis4 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot5 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis4);
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.entity.EntityCollection entityCollection7 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo8 = new org.jfree.chart.ChartRenderingInfo(entityCollection7);
        java.awt.Paint paint9 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean10 = chartRenderingInfo8.equals((java.lang.Object) paint9);
        java.awt.geom.Rectangle2D rectangle2D11 = chartRenderingInfo8.getChartArea();
        java.util.List list12 = null;
        combinedDomainXYPlot5.drawDomainGridlines(graphics2D6, rectangle2D11, list12);
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot15 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis14);
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.entity.EntityCollection entityCollection17 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo18 = new org.jfree.chart.ChartRenderingInfo(entityCollection17);
        java.awt.Paint paint19 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean20 = chartRenderingInfo18.equals((java.lang.Object) paint19);
        java.awt.geom.Rectangle2D rectangle2D21 = chartRenderingInfo18.getChartArea();
        java.util.List list22 = null;
        combinedDomainXYPlot15.drawDomainGridlines(graphics2D16, rectangle2D21, list22);
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer26 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection27 = categoryPlot24.getDomainMarkers((int) 'a', layer26);
        categoryPlot24.setAnchorValue((double) 0.0f, false);
        categoryPlot24.configureDomainAxes();
        org.jfree.chart.util.RectangleEdge rectangleEdge35 = org.jfree.chart.util.RectangleEdge.RIGHT;
        double double36 = categoryPlot24.getRectX(0.0d, (double) ' ', (double) 15, rectangleEdge35);
        org.jfree.chart.entity.EntityCollection entityCollection37 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo38 = new org.jfree.chart.ChartRenderingInfo(entityCollection37);
        java.awt.Paint paint39 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean40 = chartRenderingInfo38.equals((java.lang.Object) paint39);
        java.awt.geom.Rectangle2D rectangle2D41 = chartRenderingInfo38.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo42 = chartRenderingInfo38.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo43 = plotRenderingInfo42.getOwner();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo44 = new org.jfree.chart.plot.PlotRenderingInfo(chartRenderingInfo43);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.AxisState axisState45 = categoryAxis3D1.draw(graphics2D2, 0.0d, rectangle2D11, rectangle2D21, rectangleEdge35, plotRenderingInfo44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(rectangle2D11);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(rectangle2D21);
        org.junit.Assert.assertNotNull(layer26);
        org.junit.Assert.assertNull(collection27);
        org.junit.Assert.assertNotNull(rectangleEdge35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 15.0d + "'", double36 == 15.0d);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(rectangle2D41);
        org.junit.Assert.assertNotNull(plotRenderingInfo42);
        org.junit.Assert.assertNotNull(chartRenderingInfo43);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test012");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        java.awt.Color color13 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer15 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean17 = xYAreaRenderer15.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint18 = xYAreaRenderer15.getBaseLegendTextPaint();
        java.awt.Stroke stroke20 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer15.setSeriesOutlineStroke(0, stroke20, false);
        java.awt.Color color25 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer27 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean29 = xYAreaRenderer27.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint30 = xYAreaRenderer27.getBaseLegendTextPaint();
        java.awt.Stroke stroke32 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer27.setSeriesOutlineStroke(0, stroke32, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker36 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color13, stroke20, (java.awt.Paint) color25, stroke32, (float) (byte) 1);
        org.jfree.chart.text.TextAnchor textAnchor37 = org.jfree.chart.text.TextAnchor.BASELINE_LEFT;
        intervalMarker36.setLabelTextAnchor(textAnchor37);
        java.lang.String str39 = intervalMarker36.getLabel();
        org.jfree.chart.plot.CategoryPlot categoryPlot40 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer42 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection43 = categoryPlot40.getDomainMarkers((int) 'a', layer42);
        org.jfree.data.category.CategoryDataset categoryDataset45 = null;
        categoryPlot40.setDataset(4, categoryDataset45);
        org.jfree.chart.axis.AxisSpace axisSpace47 = categoryPlot40.getFixedDomainAxisSpace();
        java.awt.Graphics2D graphics2D48 = null;
        java.awt.geom.Rectangle2D rectangle2D49 = null;
        org.jfree.chart.util.Layer layer51 = org.jfree.chart.util.Layer.BACKGROUND;
        categoryPlot40.drawRangeMarkers(graphics2D48, rectangle2D49, 0, layer51);
        java.awt.Color color55 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer57 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean59 = xYAreaRenderer57.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint60 = xYAreaRenderer57.getBaseLegendTextPaint();
        java.awt.Stroke stroke62 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer57.setSeriesOutlineStroke(0, stroke62, false);
        java.awt.Color color67 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer69 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean71 = xYAreaRenderer69.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint72 = xYAreaRenderer69.getBaseLegendTextPaint();
        java.awt.Stroke stroke74 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer69.setSeriesOutlineStroke(0, stroke74, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker78 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color55, stroke62, (java.awt.Paint) color67, stroke74, (float) (byte) 1);
        org.jfree.chart.text.TextAnchor textAnchor79 = intervalMarker78.getLabelTextAnchor();
        org.jfree.chart.util.Layer layer80 = org.jfree.chart.util.Layer.BACKGROUND;
        boolean boolean81 = categoryPlot40.removeDomainMarker((org.jfree.chart.plot.Marker) intervalMarker78, layer80);
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.addRangeMarker((int) '#', (org.jfree.chart.plot.Marker) intervalMarker36, layer80, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.plot.CombinedDomainXYPlot@2290970 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNotNull(color13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(paint18);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNotNull(color25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNotNull(stroke32);
        org.junit.Assert.assertNotNull(textAnchor37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(layer42);
        org.junit.Assert.assertNull(collection43);
        org.junit.Assert.assertNull(axisSpace47);
        org.junit.Assert.assertNotNull(layer51);
        org.junit.Assert.assertNotNull(color55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(paint60);
        org.junit.Assert.assertNotNull(stroke62);
        org.junit.Assert.assertNotNull(color67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(paint72);
        org.junit.Assert.assertNotNull(stroke74);
        org.junit.Assert.assertNotNull(textAnchor79);
        org.junit.Assert.assertNotNull(layer80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test013");
        org.jfree.chart.axis.NumberAxis numberAxis1 = new org.jfree.chart.axis.NumberAxis("");
        int int2 = numberAxis1.getMinorTickCount();
        java.awt.Graphics2D graphics2D3 = null;
        org.jfree.chart.plot.PiePlot piePlot5 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup6 = piePlot5.getDatasetGroup();
        int int7 = piePlot5.getBackgroundImageAlignment();
        boolean boolean8 = piePlot5.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo10 = null;
        piePlot5.createAndAddEntity(rectangle2D9, plotRenderingInfo10, "hi!", "LGPL");
        piePlot5.setStartAngle((double) 1);
        org.jfree.data.xy.XYDataItem xYDataItem18 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        java.awt.Color color21 = java.awt.Color.getColor("hi!", (int) (short) 100);
        boolean boolean22 = xYDataItem18.equals((java.lang.Object) "hi!");
        java.awt.Color color23 = java.awt.Color.MAGENTA;
        piePlot5.setSectionPaint((java.lang.Comparable) "hi!", (java.awt.Paint) color23);
        java.awt.Graphics2D graphics2D25 = null;
        org.jfree.chart.entity.EntityCollection entityCollection26 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo27 = new org.jfree.chart.ChartRenderingInfo(entityCollection26);
        java.awt.Paint paint28 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean29 = chartRenderingInfo27.equals((java.lang.Object) paint28);
        java.awt.geom.Rectangle2D rectangle2D30 = chartRenderingInfo27.getChartArea();
        piePlot5.drawBackgroundImage(graphics2D25, rectangle2D30);
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot33 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis32);
        java.awt.Graphics2D graphics2D34 = null;
        org.jfree.chart.entity.EntityCollection entityCollection35 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo36 = new org.jfree.chart.ChartRenderingInfo(entityCollection35);
        java.awt.Paint paint37 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean38 = chartRenderingInfo36.equals((java.lang.Object) paint37);
        java.awt.geom.Rectangle2D rectangle2D39 = chartRenderingInfo36.getChartArea();
        java.util.List list40 = null;
        combinedDomainXYPlot33.drawDomainGridlines(graphics2D34, rectangle2D39, list40);
        org.jfree.chart.axis.NumberAxis numberAxis43 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity46 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D39, (org.jfree.chart.axis.Axis) numberAxis43, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.util.RectangleEdge rectangleEdge47 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str48 = rectangleEdge47.toString();
        org.jfree.chart.entity.EntityCollection entityCollection49 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo50 = new org.jfree.chart.ChartRenderingInfo(entityCollection49);
        java.awt.Paint paint51 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean52 = chartRenderingInfo50.equals((java.lang.Object) paint51);
        java.awt.geom.Rectangle2D rectangle2D53 = chartRenderingInfo50.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo54 = chartRenderingInfo50.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo55 = plotRenderingInfo54.getOwner();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo56 = new org.jfree.chart.plot.PlotRenderingInfo(chartRenderingInfo55);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.AxisState axisState57 = numberAxis1.draw(graphics2D3, 149.0d, rectangle2D30, rectangle2D39, rectangleEdge47, plotRenderingInfo56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(datasetGroup6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 15 + "'", int7 == 15);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(color21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(color23);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(rectangle2D30);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(rectangle2D39);
        org.junit.Assert.assertNotNull(rectangleEdge47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "RectangleEdge.RIGHT" + "'", str48, "RectangleEdge.RIGHT");
        org.junit.Assert.assertNotNull(paint51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(rectangle2D53);
        org.junit.Assert.assertNotNull(plotRenderingInfo54);
        org.junit.Assert.assertNotNull(chartRenderingInfo55);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test014");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        org.jfree.chart.title.TextTitle textTitle9 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity10 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.title.Title) textTitle9);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor11 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D12 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D7, rectangleAnchor11);
        org.jfree.chart.title.TextTitle textTitle15 = new org.jfree.chart.title.TextTitle("");
        boolean boolean16 = textTitle15.getExpandToFitSpace();
        textTitle15.setText("");
        java.awt.Stroke stroke19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        boolean boolean20 = textTitle15.equals((java.lang.Object) stroke19);
        java.awt.Paint paint21 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.drawVerticalLine(graphics2D2, rectangle2D7, 0.0d, stroke19, paint21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNotNull(rectangleAnchor11);
        org.junit.Assert.assertNotNull(point2D12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test015");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.axis.AxisSpace axisSpace7 = categoryPlot0.getFixedDomainAxisSpace();
        java.awt.Graphics2D graphics2D8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        org.jfree.chart.util.Layer layer11 = org.jfree.chart.util.Layer.BACKGROUND;
        categoryPlot0.drawRangeMarkers(graphics2D8, rectangle2D9, 0, layer11);
        java.awt.Color color15 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer17 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean19 = xYAreaRenderer17.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint20 = xYAreaRenderer17.getBaseLegendTextPaint();
        java.awt.Stroke stroke22 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer17.setSeriesOutlineStroke(0, stroke22, false);
        java.awt.Color color27 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer29 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean31 = xYAreaRenderer29.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint32 = xYAreaRenderer29.getBaseLegendTextPaint();
        java.awt.Stroke stroke34 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer29.setSeriesOutlineStroke(0, stroke34, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker38 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color15, stroke22, (java.awt.Paint) color27, stroke34, (float) (byte) 1);
        org.jfree.chart.text.TextAnchor textAnchor39 = intervalMarker38.getLabelTextAnchor();
        org.jfree.chart.util.Layer layer40 = org.jfree.chart.util.Layer.BACKGROUND;
        boolean boolean41 = categoryPlot0.removeDomainMarker((org.jfree.chart.plot.Marker) intervalMarker38, layer40);
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot42 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        // The following exception was thrown during execution in test generation
        try {
            intervalMarker38.addChangeListener((org.jfree.chart.event.MarkerChangeListener) combinedDomainXYPlot42);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.plot.CombinedDomainXYPlot@63e17a64 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertNull(axisSpace7);
        org.junit.Assert.assertNotNull(layer11);
        org.junit.Assert.assertNotNull(color15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(paint20);
        org.junit.Assert.assertNotNull(stroke22);
        org.junit.Assert.assertNotNull(color27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(paint32);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertNotNull(textAnchor39);
        org.junit.Assert.assertNotNull(layer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test016");
        org.jfree.data.general.SeriesException seriesException1 = new org.jfree.data.general.SeriesException("[10.0, 0.0]");
        org.jfree.data.general.SeriesException seriesException3 = new org.jfree.data.general.SeriesException("[10.0, 0.0]");
        seriesException1.addSuppressed((java.lang.Throwable) seriesException3);
        org.jfree.data.general.SeriesException seriesException6 = new org.jfree.data.general.SeriesException("[10.0, 0.0]");
        org.jfree.data.general.SeriesException seriesException8 = new org.jfree.data.general.SeriesException("[10.0, 0.0]");
        seriesException6.addSuppressed((java.lang.Throwable) seriesException8);
        seriesException3.addSuppressed((java.lang.Throwable) seriesException8);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test017");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        java.awt.Paint paint26 = combinedDomainXYPlot1.getRangeGridlinePaint();
        org.jfree.chart.plot.Marker marker28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer31 = org.jfree.chart.util.Layer.BACKGROUND;
        java.util.Collection collection32 = categoryPlot29.getRangeMarkers(7, layer31);
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.addRangeMarker(4, marker28, layer31, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(layer31);
        org.junit.Assert.assertNull(collection32);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test018");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot3 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis2);
        java.awt.Graphics2D graphics2D4 = null;
        org.jfree.chart.entity.EntityCollection entityCollection5 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo6 = new org.jfree.chart.ChartRenderingInfo(entityCollection5);
        java.awt.Paint paint7 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean8 = chartRenderingInfo6.equals((java.lang.Object) paint7);
        java.awt.geom.Rectangle2D rectangle2D9 = chartRenderingInfo6.getChartArea();
        java.util.List list10 = null;
        combinedDomainXYPlot3.drawDomainGridlines(graphics2D4, rectangle2D9, list10);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer13 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer13.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator16 = null;
        xYAreaRenderer13.setLegendItemURLGenerator(xYSeriesLabelGenerator16);
        xYAreaRenderer13.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean22 = xYAreaRenderer13.isSeriesVisible((-16777216));
        java.awt.Shape shape24 = xYAreaRenderer13.getLegendShape(0);
        java.awt.Shape shape26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        xYAreaRenderer13.setSeriesShape((int) (byte) 100, shape26, false);
        java.awt.Paint paint30 = xYAreaRenderer13.getSeriesItemLabelPaint(5);
        combinedDomainXYPlot3.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer13);
        int int32 = combinedRangeXYPlot0.getIndexOf((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer13);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator33 = null;
        // The following exception was thrown during execution in test generation
        try {
            xYAreaRenderer13.setLegendItemLabelGenerator(xYSeriesLabelGenerator33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'generator' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(rectangle2D9);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(shape24);
        org.junit.Assert.assertNotNull(shape26);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test019");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean20 = xYAreaRenderer11.isSeriesVisible((-16777216));
        java.awt.Shape shape22 = xYAreaRenderer11.getLegendShape(0);
        java.awt.Shape shape24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        xYAreaRenderer11.setSeriesShape((int) (byte) 100, shape24, false);
        java.awt.Paint paint28 = xYAreaRenderer11.getSeriesItemLabelPaint(5);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator30 = null;
        xYAreaRenderer11.setBaseURLGenerator(xYURLGenerator30);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator33 = xYAreaRenderer11.getSeriesURLGenerator((int) (short) 10);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(shape22);
        org.junit.Assert.assertNotNull(shape24);
        org.junit.Assert.assertNull(paint28);
        org.junit.Assert.assertNull(xYURLGenerator33);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test020");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        int int1 = categoryPlot0.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge5 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str6 = rectangleEdge5.toString();
        double double7 = categoryPlot0.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge5);
        boolean boolean8 = categoryPlot0.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = categoryPlot0.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge11 = categoryPlot0.getDomainAxisEdge();
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot13 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.entity.EntityCollection entityCollection15 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo16 = new org.jfree.chart.ChartRenderingInfo(entityCollection15);
        java.awt.Paint paint17 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean18 = chartRenderingInfo16.equals((java.lang.Object) paint17);
        java.awt.geom.Rectangle2D rectangle2D19 = chartRenderingInfo16.getChartArea();
        java.util.List list20 = null;
        combinedDomainXYPlot13.drawDomainGridlines(graphics2D14, rectangle2D19, list20);
        org.jfree.chart.axis.NumberAxis numberAxis23 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity26 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D19, (org.jfree.chart.axis.Axis) numberAxis23, "", "DatasetRenderingOrder.FORWARD");
        numberAxis23.centerRange(10.0d);
        org.jfree.data.Range range29 = categoryPlot0.getDataRange((org.jfree.chart.axis.ValueAxis) numberAxis23);
        numberAxis23.setAutoRangeStickyZero(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "RectangleEdge.RIGHT" + "'", str6, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 149.0d + "'", double7 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(categoryAxis10);
        org.junit.Assert.assertNotNull(rectangleEdge11);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(rectangle2D19);
        org.junit.Assert.assertNull(range29);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test021");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.axis.AxisLocation axisLocation7 = org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT;
        categoryPlot0.setRangeAxisLocation(axisLocation7, false);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot0.zoomRangeAxes((double) (-16777216), plotRenderingInfo11, point2D12, false);
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot16 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list17 = combinedRangeXYPlot16.getSubplots();
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot0.mapDatasetToDomainAxes(4, list17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Empty list not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertNotNull(axisLocation7);
        org.junit.Assert.assertNotNull(list17);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test022");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent26 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.rendererChanged(rendererChangeEvent26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test023");
        org.jfree.chart.axis.CategoryAxis3D categoryAxis3D1 = new org.jfree.chart.axis.CategoryAxis3D("hi!");
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot3 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer5 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection6 = categoryPlot3.getDomainMarkers((int) 'a', layer5);
        org.jfree.data.category.CategoryDataset categoryDataset8 = null;
        categoryPlot3.setDataset(4, categoryDataset8);
        org.jfree.chart.entity.EntityCollection entityCollection10 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo11 = new org.jfree.chart.ChartRenderingInfo(entityCollection10);
        java.awt.Paint paint12 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean13 = chartRenderingInfo11.equals((java.lang.Object) paint12);
        java.awt.geom.Rectangle2D rectangle2D14 = chartRenderingInfo11.getChartArea();
        org.jfree.chart.title.TextTitle textTitle16 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity17 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D14, (org.jfree.chart.title.Title) textTitle16);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor18 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D19 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D14, rectangleAnchor18);
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot();
        java.awt.Color color21 = org.jfree.chart.ChartColor.VERY_DARK_MAGENTA;
        categoryPlot20.setRangeZeroBaselinePaint((java.awt.Paint) color21);
        org.jfree.chart.util.RectangleEdge rectangleEdge24 = categoryPlot20.getRangeAxisEdge((int) ' ');
        org.jfree.chart.axis.AxisSpace axisSpace25 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot28 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis27);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer30 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer30.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator33 = null;
        xYAreaRenderer30.setLegendItemURLGenerator(xYSeriesLabelGenerator33);
        xYAreaRenderer30.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean41 = xYAreaRenderer30.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot28.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer30);
        org.jfree.chart.axis.ValueAxis valueAxis43 = null;
        int int44 = combinedDomainXYPlot28.getRangeAxisIndex(valueAxis43);
        org.jfree.chart.axis.ValueAxis valueAxis45 = null;
        combinedDomainXYPlot28.setDomainAxis(valueAxis45);
        org.jfree.chart.util.RectangleEdge rectangleEdge48 = combinedDomainXYPlot28.getDomainAxisEdge(0);
        axisSpace25.add((double) 10L, rectangleEdge48);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.AxisSpace axisSpace50 = categoryAxis3D1.reserveSpace(graphics2D2, (org.jfree.chart.plot.Plot) categoryPlot3, rectangle2D14, rectangleEdge24, axisSpace25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(layer5);
        org.junit.Assert.assertNull(collection6);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(rectangle2D14);
        org.junit.Assert.assertNotNull(rectangleAnchor18);
        org.junit.Assert.assertNotNull(point2D19);
        org.junit.Assert.assertNotNull(color21);
        org.junit.Assert.assertNotNull(rectangleEdge24);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge48);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test024");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        combinedDomainXYPlot1.setDomainAxis(valueAxis18);
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot21 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis20);
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.entity.EntityCollection entityCollection23 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo24 = new org.jfree.chart.ChartRenderingInfo(entityCollection23);
        java.awt.Paint paint25 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean26 = chartRenderingInfo24.equals((java.lang.Object) paint25);
        java.awt.geom.Rectangle2D rectangle2D27 = chartRenderingInfo24.getChartArea();
        java.util.List list28 = null;
        combinedDomainXYPlot21.drawDomainGridlines(graphics2D22, rectangle2D27, list28);
        org.jfree.chart.axis.NumberAxis numberAxis31 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity34 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D27, (org.jfree.chart.axis.Axis) numberAxis31, "", "DatasetRenderingOrder.FORWARD");
        combinedDomainXYPlot1.setRangeAxis((org.jfree.chart.axis.ValueAxis) numberAxis31);
        org.jfree.chart.axis.NumberTickUnit numberTickUnit36 = null;
        // The following exception was thrown during execution in test generation
        try {
            numberAxis31.setTickUnit(numberTickUnit36, true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'unit' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangle2D27);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test025");
        org.jfree.chart.title.TextTitle textTitle1 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.util.HorizontalAlignment horizontalAlignment2 = textTitle1.getTextAlignment();
        org.jfree.chart.block.BorderArrangement borderArrangement3 = new org.jfree.chart.block.BorderArrangement();
        org.jfree.chart.block.BlockContainer blockContainer4 = new org.jfree.chart.block.BlockContainer((org.jfree.chart.block.Arrangement) borderArrangement3);
        boolean boolean5 = horizontalAlignment2.equals((java.lang.Object) borderArrangement3);
        org.jfree.chart.block.BorderArrangement borderArrangement6 = new org.jfree.chart.block.BorderArrangement();
        java.util.TimeZone timeZone7 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection8 = new org.jfree.data.time.TimeSeriesCollection(timeZone7);
        org.jfree.chart.title.LegendItemBlockContainer legendItemBlockContainer10 = new org.jfree.chart.title.LegendItemBlockContainer((org.jfree.chart.block.Arrangement) borderArrangement6, (org.jfree.data.general.Dataset) timeSeriesCollection8, (java.lang.Comparable) (byte) 10);
        java.lang.Object obj11 = legendItemBlockContainer10.clone();
        org.jfree.data.general.Dataset dataset12 = legendItemBlockContainer10.getDataset();
        java.awt.Graphics2D graphics2D13 = null;
        org.jfree.data.Range range15 = null;
        org.jfree.chart.block.RectangleConstraint rectangleConstraint16 = new org.jfree.chart.block.RectangleConstraint(0.0d, range15);
        org.jfree.data.Range range19 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range22 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range23 = org.jfree.data.Range.combine(range19, range22);
        org.jfree.data.Range range24 = org.jfree.chart.axis.ValueAxis.DEFAULT_RANGE;
        org.jfree.data.Range range25 = org.jfree.data.Range.combine(range19, range24);
        org.jfree.chart.block.RectangleConstraint rectangleConstraint26 = rectangleConstraint16.toRangeWidth(range19);
        org.jfree.data.Range range27 = org.jfree.chart.axis.ValueAxis.DEFAULT_RANGE;
        org.jfree.chart.block.RectangleConstraint rectangleConstraint28 = rectangleConstraint16.toRangeHeight(range27);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.util.Size2D size2D29 = borderArrangement3.arrange((org.jfree.chart.block.BlockContainer) legendItemBlockContainer10, graphics2D13, rectangleConstraint16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(horizontalAlignment2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(dataset12);
        org.junit.Assert.assertNotNull(range23);
        org.junit.Assert.assertNotNull(range24);
        org.junit.Assert.assertNotNull(range25);
        org.junit.Assert.assertNotNull(rectangleConstraint26);
        org.junit.Assert.assertNotNull(range27);
        org.junit.Assert.assertNotNull(rectangleConstraint28);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test026");
        java.lang.Number number0 = null;
        java.awt.Graphics2D graphics2D3 = null;
        org.jfree.chart.axis.TickType tickType6 = org.jfree.chart.axis.TickType.MINOR;
        java.awt.Color color11 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer13 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean15 = xYAreaRenderer13.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint16 = xYAreaRenderer13.getBaseLegendTextPaint();
        java.awt.Stroke stroke18 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer13.setSeriesOutlineStroke(0, stroke18, false);
        java.awt.Color color23 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer25 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean27 = xYAreaRenderer25.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint28 = xYAreaRenderer25.getBaseLegendTextPaint();
        java.awt.Stroke stroke30 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer25.setSeriesOutlineStroke(0, stroke30, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker34 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color11, stroke18, (java.awt.Paint) color23, stroke30, (float) (byte) 1);
        org.jfree.chart.text.TextAnchor textAnchor35 = intervalMarker34.getLabelTextAnchor();
        java.awt.Color color38 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer40 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean42 = xYAreaRenderer40.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint43 = xYAreaRenderer40.getBaseLegendTextPaint();
        java.awt.Stroke stroke45 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer40.setSeriesOutlineStroke(0, stroke45, false);
        java.awt.Color color50 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer52 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean54 = xYAreaRenderer52.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint55 = xYAreaRenderer52.getBaseLegendTextPaint();
        java.awt.Stroke stroke57 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer52.setSeriesOutlineStroke(0, stroke57, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker61 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color38, stroke45, (java.awt.Paint) color50, stroke57, (float) (byte) 1);
        org.jfree.chart.text.TextAnchor textAnchor62 = org.jfree.chart.text.TextAnchor.BASELINE_LEFT;
        intervalMarker61.setLabelTextAnchor(textAnchor62);
        org.jfree.chart.axis.NumberTick numberTick65 = new org.jfree.chart.axis.NumberTick(tickType6, 2.0d, "ThreadContext", textAnchor35, textAnchor62, 0.0d);
        org.jfree.chart.text.TextAnchor textAnchor67 = org.jfree.chart.text.TextAnchor.TOP_RIGHT;
        java.awt.Shape shape68 = org.jfree.chart.text.TextUtilities.calculateRotatedStringBounds("", graphics2D3, (float) 255, (float) 100, textAnchor35, (double) (-1L), textAnchor67);
        java.awt.Color color71 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer73 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean75 = xYAreaRenderer73.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint76 = xYAreaRenderer73.getBaseLegendTextPaint();
        java.awt.Stroke stroke78 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer73.setSeriesOutlineStroke(0, stroke78, false);
        java.awt.Color color83 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer85 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean87 = xYAreaRenderer85.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint88 = xYAreaRenderer85.getBaseLegendTextPaint();
        java.awt.Stroke stroke90 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer85.setSeriesOutlineStroke(0, stroke90, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker94 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color71, stroke78, (java.awt.Paint) color83, stroke90, (float) (byte) 1);
        org.jfree.chart.text.TextAnchor textAnchor95 = org.jfree.chart.text.TextAnchor.BASELINE_LEFT;
        intervalMarker94.setLabelTextAnchor(textAnchor95);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.NumberTick numberTick98 = new org.jfree.chart.axis.NumberTick(number0, "0,0,0,0,0,0,0,0", textAnchor35, textAnchor95, (double) 60000L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tickType6);
        org.junit.Assert.assertNotNull(color11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(paint16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(color23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(paint28);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNotNull(textAnchor35);
        org.junit.Assert.assertNotNull(color38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(paint43);
        org.junit.Assert.assertNotNull(stroke45);
        org.junit.Assert.assertNotNull(color50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(paint55);
        org.junit.Assert.assertNotNull(stroke57);
        org.junit.Assert.assertNotNull(textAnchor62);
        org.junit.Assert.assertNotNull(textAnchor67);
        org.junit.Assert.assertNull(shape68);
        org.junit.Assert.assertNotNull(color71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(paint76);
        org.junit.Assert.assertNotNull(stroke78);
        org.junit.Assert.assertNotNull(color83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(paint88);
        org.junit.Assert.assertNotNull(stroke90);
        org.junit.Assert.assertNotNull(textAnchor95);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test027");
        org.jfree.data.general.WaferMapDataset waferMapDataset0 = null;
        org.jfree.chart.renderer.WaferMapRenderer waferMapRenderer1 = null;
        org.jfree.chart.plot.WaferMapPlot waferMapPlot2 = new org.jfree.chart.plot.WaferMapPlot(waferMapDataset0, waferMapRenderer1);
        java.awt.Graphics2D graphics2D3 = null;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer5 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer5.clearSeriesStrokes(false);
        boolean boolean8 = xYAreaRenderer5.getPlotLines();
        boolean boolean9 = xYAreaRenderer5.getBaseItemLabelsVisible();
        java.awt.Paint paint10 = xYAreaRenderer5.getBasePaint();
        java.awt.Font font11 = xYAreaRenderer5.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator12 = null;
        xYAreaRenderer5.setBaseItemLabelGenerator(xYItemLabelGenerator12);
        xYAreaRenderer5.setUseFillPaint(true);
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        boolean boolean34 = combinedDomainXYPlot18.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.NumberAxis numberAxis36 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis36.pan((double) 1);
        org.jfree.chart.axis.ValueAxis valueAxis39 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot40 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis39);
        java.awt.Graphics2D graphics2D41 = null;
        org.jfree.chart.entity.EntityCollection entityCollection42 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo43 = new org.jfree.chart.ChartRenderingInfo(entityCollection42);
        java.awt.Paint paint44 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean45 = chartRenderingInfo43.equals((java.lang.Object) paint44);
        java.awt.geom.Rectangle2D rectangle2D46 = chartRenderingInfo43.getChartArea();
        java.util.List list47 = null;
        combinedDomainXYPlot40.drawDomainGridlines(graphics2D41, rectangle2D46, list47);
        org.jfree.chart.axis.NumberAxis numberAxis50 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity53 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D46, (org.jfree.chart.axis.Axis) numberAxis50, "", "DatasetRenderingOrder.FORWARD");
        xYAreaRenderer5.drawDomainGridLine(graphics2D16, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot18, (org.jfree.chart.axis.ValueAxis) numberAxis36, rectangle2D46, (double) 11);
        // The following exception was thrown during execution in test generation
        try {
            waferMapPlot2.drawWaferEdge(graphics2D3, rectangle2D46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(font11);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(rectangle2D46);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test028");
        org.jfree.chart.plot.XYPlot xYPlot0 = new org.jfree.chart.plot.XYPlot();
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test029");
        org.jfree.data.time.Year year1 = new org.jfree.data.time.Year((int) (short) 0);
        long long2 = year1.getFirstMillisecond();
        org.jfree.data.time.RegularTimePeriod regularTimePeriod3 = year1.previous();
        java.util.Date date4 = year1.getStart();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-62167363200000L) + "'", long2 == (-62167363200000L));
        org.junit.Assert.assertNotNull(regularTimePeriod3);
        org.junit.Assert.assertNotNull(date4);
        org.junit.Assert.assertEquals(date4.toString(), "Thu Jan 01 00:00:00 PST 1");
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test030");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        boolean boolean16 = combinedDomainXYPlot1.canSelectByPoint();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer19 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer19.clearSeriesStrokes(false);
        boolean boolean22 = xYAreaRenderer19.getPlotLines();
        java.awt.Stroke stroke24 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        xYAreaRenderer19.setSeriesStroke((int) (short) 1, stroke24, true);
        combinedDomainXYPlot1.setRenderer(1, (org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer19, true);
        xYAreaRenderer19.setAutoPopulateSeriesPaint(true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(stroke24);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test031");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape5 = barRenderer3D0.getBaseShape();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer8 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer8.clearSeriesStrokes(false);
        boolean boolean11 = xYAreaRenderer8.getPlotLines();
        boolean boolean12 = xYAreaRenderer8.getBaseItemLabelsVisible();
        java.awt.Paint paint14 = org.jfree.chart.plot.WaferMapPlot.DEFAULT_CROSSHAIR_PAINT;
        xYAreaRenderer8.setSeriesFillPaint(7, paint14);
        barRenderer3D0.setSeriesFillPaint(10, paint14);
        org.jfree.data.category.CategoryDataset categoryDataset17 = null;
        org.jfree.data.Range range18 = barRenderer3D0.findRangeBounds(categoryDataset17);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = barRenderer3D0.getBaseURLGenerator();
        java.awt.Graphics2D graphics2D20 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot21 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer23 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection24 = categoryPlot21.getDomainMarkers((int) 'a', layer23);
        org.jfree.data.category.CategoryDataset categoryDataset26 = null;
        categoryPlot21.setDataset(4, categoryDataset26);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier28 = categoryPlot21.getDrawingSupplier();
        org.jfree.chart.axis.CategoryAxis3D categoryAxis3D30 = new org.jfree.chart.axis.CategoryAxis3D("LGPL");
        org.jfree.chart.plot.CategoryMarker categoryMarker31 = null;
        org.jfree.chart.plot.PiePlot piePlot32 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup33 = piePlot32.getDatasetGroup();
        int int34 = piePlot32.getBackgroundImageAlignment();
        boolean boolean35 = piePlot32.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D36 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo37 = null;
        piePlot32.createAndAddEntity(rectangle2D36, plotRenderingInfo37, "hi!", "LGPL");
        piePlot32.setStartAngle((double) 1);
        org.jfree.data.xy.XYDataItem xYDataItem45 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        java.awt.Color color48 = java.awt.Color.getColor("hi!", (int) (short) 100);
        boolean boolean49 = xYDataItem45.equals((java.lang.Object) "hi!");
        java.awt.Color color50 = java.awt.Color.MAGENTA;
        piePlot32.setSectionPaint((java.lang.Comparable) "hi!", (java.awt.Paint) color50);
        java.awt.Graphics2D graphics2D52 = null;
        org.jfree.chart.entity.EntityCollection entityCollection53 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo54 = new org.jfree.chart.ChartRenderingInfo(entityCollection53);
        java.awt.Paint paint55 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean56 = chartRenderingInfo54.equals((java.lang.Object) paint55);
        java.awt.geom.Rectangle2D rectangle2D57 = chartRenderingInfo54.getChartArea();
        piePlot32.drawBackgroundImage(graphics2D52, rectangle2D57);
        // The following exception was thrown during execution in test generation
        try {
            barRenderer3D0.drawDomainMarker(graphics2D20, categoryPlot21, (org.jfree.chart.axis.CategoryAxis) categoryAxis3D30, categoryMarker31, rectangle2D57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(range18);
        org.junit.Assert.assertNull(categoryURLGenerator19);
        org.junit.Assert.assertNotNull(layer23);
        org.junit.Assert.assertNull(collection24);
        org.junit.Assert.assertNotNull(drawingSupplier28);
        org.junit.Assert.assertNull(datasetGroup33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 15 + "'", int34 == 15);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(color48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(color50);
        org.junit.Assert.assertNotNull(paint55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(rectangle2D57);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test032");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean20 = xYAreaRenderer11.isSeriesVisible((-16777216));
        java.awt.Shape shape22 = xYAreaRenderer11.getLegendShape(0);
        java.awt.Shape shape24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        xYAreaRenderer11.setSeriesShape((int) (byte) 100, shape24, false);
        java.awt.Paint paint28 = xYAreaRenderer11.getSeriesItemLabelPaint(5);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator30 = null;
        xYAreaRenderer11.setBaseURLGenerator(xYURLGenerator30);
        java.awt.Color color32 = org.jfree.chart.ChartColor.LIGHT_GREEN;
        xYAreaRenderer11.setBaseFillPaint((java.awt.Paint) color32);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer35 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer35.clearSeriesStrokes(false);
        boolean boolean38 = xYAreaRenderer35.getPlotLines();
        boolean boolean39 = xYAreaRenderer35.getBaseItemLabelsVisible();
        java.awt.Paint paint40 = xYAreaRenderer35.getBasePaint();
        double double41 = xYAreaRenderer35.getItemLabelAnchorOffset();
        java.awt.Stroke stroke42 = xYAreaRenderer35.getBaseOutlineStroke();
        xYAreaRenderer11.setBaseOutlineStroke(stroke42, false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(shape22);
        org.junit.Assert.assertNotNull(shape24);
        org.junit.Assert.assertNull(paint28);
        org.junit.Assert.assertNotNull(color32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2.0d + "'", double41 == 2.0d);
        org.junit.Assert.assertNotNull(stroke42);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test033");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        int int1 = categoryPlot0.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge5 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str6 = rectangleEdge5.toString();
        double double7 = categoryPlot0.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge5);
        boolean boolean8 = categoryPlot0.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = categoryPlot0.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge11 = categoryPlot0.getDomainAxisEdge();
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot13 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.entity.EntityCollection entityCollection15 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo16 = new org.jfree.chart.ChartRenderingInfo(entityCollection15);
        java.awt.Paint paint17 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean18 = chartRenderingInfo16.equals((java.lang.Object) paint17);
        java.awt.geom.Rectangle2D rectangle2D19 = chartRenderingInfo16.getChartArea();
        java.util.List list20 = null;
        combinedDomainXYPlot13.drawDomainGridlines(graphics2D14, rectangle2D19, list20);
        org.jfree.chart.axis.NumberAxis numberAxis23 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity26 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D19, (org.jfree.chart.axis.Axis) numberAxis23, "", "DatasetRenderingOrder.FORWARD");
        numberAxis23.centerRange(10.0d);
        org.jfree.data.Range range29 = categoryPlot0.getDataRange((org.jfree.chart.axis.ValueAxis) numberAxis23);
        java.awt.Graphics2D graphics2D30 = null;
        org.jfree.chart.axis.AxisState axisState31 = new org.jfree.chart.axis.AxisState();
        org.jfree.chart.plot.CategoryPlot categoryPlot32 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer34 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection35 = categoryPlot32.getDomainMarkers((int) 'a', layer34);
        org.jfree.data.category.CategoryDataset categoryDataset37 = null;
        categoryPlot32.setDataset(4, categoryDataset37);
        org.jfree.chart.plot.CategoryPlot categoryPlot39 = new org.jfree.chart.plot.CategoryPlot();
        int int40 = categoryPlot39.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation41 = categoryPlot39.getOrientation();
        categoryPlot32.setOrientation(plotOrientation41);
        boolean boolean43 = categoryPlot32.isDomainPannable();
        categoryPlot32.setRangeCrosshairValue((double) 10);
        java.awt.Graphics2D graphics2D46 = null;
        org.jfree.chart.entity.EntityCollection entityCollection47 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo48 = new org.jfree.chart.ChartRenderingInfo(entityCollection47);
        java.awt.Paint paint49 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean50 = chartRenderingInfo48.equals((java.lang.Object) paint49);
        java.awt.geom.Rectangle2D rectangle2D51 = chartRenderingInfo48.getChartArea();
        org.jfree.chart.title.TextTitle textTitle53 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity54 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D51, (org.jfree.chart.title.Title) textTitle53);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor55 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D56 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D51, rectangleAnchor55);
        org.jfree.data.general.PieDataset pieDataset57 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity63 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D51, pieDataset57, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.AxisSpace axisSpace64 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis66 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot67 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis66);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer69 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer69.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator72 = null;
        xYAreaRenderer69.setLegendItemURLGenerator(xYSeriesLabelGenerator72);
        xYAreaRenderer69.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean80 = xYAreaRenderer69.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot67.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer69);
        org.jfree.chart.axis.ValueAxis valueAxis82 = null;
        int int83 = combinedDomainXYPlot67.getRangeAxisIndex(valueAxis82);
        org.jfree.chart.axis.ValueAxis valueAxis84 = null;
        combinedDomainXYPlot67.setDomainAxis(valueAxis84);
        org.jfree.chart.util.RectangleEdge rectangleEdge87 = combinedDomainXYPlot67.getDomainAxisEdge(0);
        axisSpace64.add((double) 10L, rectangleEdge87);
        org.jfree.chart.axis.AxisSpace axisSpace89 = categoryPlot32.calculateDomainAxisSpace(graphics2D46, rectangle2D51, axisSpace64);
        org.jfree.chart.plot.CategoryPlot categoryPlot90 = new org.jfree.chart.plot.CategoryPlot();
        java.awt.Color color91 = org.jfree.chart.ChartColor.VERY_DARK_MAGENTA;
        categoryPlot90.setRangeZeroBaselinePaint((java.awt.Paint) color91);
        org.jfree.chart.util.RectangleEdge rectangleEdge94 = categoryPlot90.getRangeAxisEdge((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list95 = numberAxis23.refreshTicks(graphics2D30, axisState31, rectangle2D51, rectangleEdge94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "RectangleEdge.RIGHT" + "'", str6, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 149.0d + "'", double7 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(categoryAxis10);
        org.junit.Assert.assertNotNull(rectangleEdge11);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(rectangle2D19);
        org.junit.Assert.assertNull(range29);
        org.junit.Assert.assertNotNull(layer34);
        org.junit.Assert.assertNull(collection35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(plotOrientation41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(rectangle2D51);
        org.junit.Assert.assertNotNull(rectangleAnchor55);
        org.junit.Assert.assertNotNull(point2D56);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge87);
        org.junit.Assert.assertNotNull(axisSpace89);
        org.junit.Assert.assertNotNull(color91);
        org.junit.Assert.assertNotNull(rectangleEdge94);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test034");
        org.jfree.data.xy.OHLCDataset oHLCDataset3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart5 = org.jfree.chart.ChartFactory.createCandlestickChart("ThreadContext", "MINOR", "RectangleAnchor.BOTTOM_RIGHT", oHLCDataset3, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@7ad81585 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test035");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        numberAxis11.centerRange(10.0d);
        org.jfree.chart.axis.TickUnits tickUnits17 = new org.jfree.chart.axis.TickUnits();
        numberAxis11.setStandardTickUnits((org.jfree.chart.axis.TickUnitSource) tickUnits17);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.TickUnit tickUnit20 = tickUnits17.getCeilingTickUnit((double) (-16777116));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test036");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        boolean boolean18 = combinedDomainXYPlot1.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets19 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double20 = rectangleInsets19.getLeft();
        double double22 = rectangleInsets19.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot1.setAxisOffset(rectangleInsets19);
        org.jfree.chart.annotations.XYAnnotation xYAnnotation24 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.addAnnotation(xYAnnotation24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(rectangleInsets19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test037");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke1 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot0.setRangeCrosshairStroke(stroke1);
        org.jfree.chart.annotations.XYAnnotation xYAnnotation3 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedRangeXYPlot0.addAnnotation(xYAnnotation3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke1);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test038");
        org.jfree.data.time.Year year2 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year4 = new org.jfree.data.time.Year((int) (short) 0);
        long long5 = year4.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis6 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year2, (org.jfree.data.time.RegularTimePeriod) year4);
        org.jfree.chart.entity.EntityCollection entityCollection8 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo9 = new org.jfree.chart.ChartRenderingInfo(entityCollection8);
        java.awt.Paint paint10 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean11 = chartRenderingInfo9.equals((java.lang.Object) paint10);
        java.awt.geom.Rectangle2D rectangle2D12 = chartRenderingInfo9.getChartArea();
        org.jfree.chart.title.TextTitle textTitle14 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity15 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D12, (org.jfree.chart.title.Title) textTitle14);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor16 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D17 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D12, rectangleAnchor16);
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = new org.jfree.chart.plot.CategoryPlot();
        java.awt.Color color19 = org.jfree.chart.ChartColor.VERY_DARK_MAGENTA;
        categoryPlot18.setRangeZeroBaselinePaint((java.awt.Paint) color19);
        org.jfree.chart.util.RectangleEdge rectangleEdge22 = categoryPlot18.getRangeAxisEdge((int) ' ');
        double double23 = periodAxis6.java2DToValue(0.0d, rectangle2D12, rectangleEdge22);
        java.lang.String str24 = periodAxis6.getLabelToolTip();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-62167363200000L) + "'", long5 == (-62167363200000L));
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(rectangle2D12);
        org.junit.Assert.assertNotNull(rectangleAnchor16);
        org.junit.Assert.assertNotNull(point2D17);
        org.junit.Assert.assertNotNull(color19);
        org.junit.Assert.assertNotNull(rectangleEdge22);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test039");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        java.lang.String str15 = axisEntity14.toString();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AxisEntity: tooltip = " + "'", str15, "AxisEntity: tooltip = ");
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test040");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        combinedDomainXYPlot1.setDomainAxis(valueAxis18);
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot21 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis20);
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.entity.EntityCollection entityCollection23 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo24 = new org.jfree.chart.ChartRenderingInfo(entityCollection23);
        java.awt.Paint paint25 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean26 = chartRenderingInfo24.equals((java.lang.Object) paint25);
        java.awt.geom.Rectangle2D rectangle2D27 = chartRenderingInfo24.getChartArea();
        java.util.List list28 = null;
        combinedDomainXYPlot21.drawDomainGridlines(graphics2D22, rectangle2D27, list28);
        org.jfree.chart.axis.NumberAxis numberAxis31 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity34 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D27, (org.jfree.chart.axis.Axis) numberAxis31, "", "DatasetRenderingOrder.FORWARD");
        combinedDomainXYPlot1.setRangeAxis((org.jfree.chart.axis.ValueAxis) numberAxis31);
        org.jfree.chart.ui.ProjectInfo projectInfo37 = org.jfree.chart.JFreeChart.INFO;
        org.jfree.chart.ui.Library[] libraryArray38 = projectInfo37.getOptionalLibraries();
        org.jfree.chart.axis.SegmentedTimeline segmentedTimeline39 = org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline();
        boolean boolean42 = segmentedTimeline39.containsDomainRange((long) 1, (long) (byte) 10);
        long long44 = segmentedTimeline39.toTimelineValue((long) '#');
        java.util.List list45 = segmentedTimeline39.getExceptionSegments();
        projectInfo37.setContributors(list45);
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.mapDatasetToDomainAxes((int) (byte) 10, list45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Empty list not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangle2D27);
        org.junit.Assert.assertNotNull(projectInfo37);
        org.junit.Assert.assertNotNull(libraryArray38);
        org.junit.Assert.assertNotNull(segmentedTimeline39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1577894400035L + "'", long44 == 1577894400035L);
        org.junit.Assert.assertNotNull(list45);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test041");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        categoryPlot0.setAnchorValue((double) 0.0f, false);
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = categoryPlot0.getDomainAxis(0);
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertNull(categoryAxis8);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test042");
        org.jfree.chart.title.TextTitle textTitle1 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot3 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis2);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer5 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer5.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator8 = null;
        xYAreaRenderer5.setLegendItemURLGenerator(xYSeriesLabelGenerator8);
        xYAreaRenderer5.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean16 = xYAreaRenderer5.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot3.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer5);
        boolean boolean18 = combinedDomainXYPlot3.canSelectByPoint();
        org.jfree.chart.axis.AxisLocation axisLocation19 = org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT;
        combinedDomainXYPlot3.setRangeAxisLocation(axisLocation19, true);
        boolean boolean22 = textTitle1.equals((java.lang.Object) combinedDomainXYPlot3);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer25 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer25.clearSeriesStrokes(false);
        boolean boolean28 = xYAreaRenderer25.getPlotLines();
        combinedDomainXYPlot3.setRenderer(0, (org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer25, true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(axisLocation19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test043");
        org.jfree.data.general.PieDataset pieDataset0 = null;
        org.jfree.chart.plot.PiePlot piePlot1 = new org.jfree.chart.plot.PiePlot(pieDataset0);
        java.awt.Graphics2D graphics2D2 = null;
        java.util.List list3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer7 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection8 = categoryPlot5.getDomainMarkers((int) 'a', layer7);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        categoryPlot5.setDataset(4, categoryDataset10);
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = new org.jfree.chart.plot.CategoryPlot();
        int int13 = categoryPlot12.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation14 = categoryPlot12.getOrientation();
        categoryPlot5.setOrientation(plotOrientation14);
        boolean boolean16 = categoryPlot5.isDomainPannable();
        categoryPlot5.setRangeCrosshairValue((double) 10);
        java.awt.Graphics2D graphics2D19 = null;
        org.jfree.chart.entity.EntityCollection entityCollection20 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo21 = new org.jfree.chart.ChartRenderingInfo(entityCollection20);
        java.awt.Paint paint22 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean23 = chartRenderingInfo21.equals((java.lang.Object) paint22);
        java.awt.geom.Rectangle2D rectangle2D24 = chartRenderingInfo21.getChartArea();
        org.jfree.chart.title.TextTitle textTitle26 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity27 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D24, (org.jfree.chart.title.Title) textTitle26);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor28 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D29 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D24, rectangleAnchor28);
        org.jfree.data.general.PieDataset pieDataset30 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity36 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D24, pieDataset30, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.AxisSpace axisSpace37 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis39 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot40 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis39);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer42 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer42.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator45 = null;
        xYAreaRenderer42.setLegendItemURLGenerator(xYSeriesLabelGenerator45);
        xYAreaRenderer42.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean53 = xYAreaRenderer42.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot40.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer42);
        org.jfree.chart.axis.ValueAxis valueAxis55 = null;
        int int56 = combinedDomainXYPlot40.getRangeAxisIndex(valueAxis55);
        org.jfree.chart.axis.ValueAxis valueAxis57 = null;
        combinedDomainXYPlot40.setDomainAxis(valueAxis57);
        org.jfree.chart.util.RectangleEdge rectangleEdge60 = combinedDomainXYPlot40.getDomainAxisEdge(0);
        axisSpace37.add((double) 10L, rectangleEdge60);
        org.jfree.chart.axis.AxisSpace axisSpace62 = categoryPlot5.calculateDomainAxisSpace(graphics2D19, rectangle2D24, axisSpace37);
        org.jfree.chart.entity.EntityCollection entityCollection63 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo64 = new org.jfree.chart.ChartRenderingInfo(entityCollection63);
        java.awt.Paint paint65 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean66 = chartRenderingInfo64.equals((java.lang.Object) paint65);
        java.awt.geom.Rectangle2D rectangle2D67 = chartRenderingInfo64.getChartArea();
        org.jfree.chart.title.TextTitle textTitle69 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity70 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D67, (org.jfree.chart.title.Title) textTitle69);
        org.jfree.chart.plot.PiePlotState piePlotState71 = null;
        // The following exception was thrown during execution in test generation
        try {
            piePlot1.drawSimpleLabels(graphics2D2, list3, 1.0d, rectangle2D24, rectangle2D67, piePlotState71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(layer7);
        org.junit.Assert.assertNull(collection8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(plotOrientation14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(rectangle2D24);
        org.junit.Assert.assertNotNull(rectangleAnchor28);
        org.junit.Assert.assertNotNull(point2D29);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge60);
        org.junit.Assert.assertNotNull(axisSpace62);
        org.junit.Assert.assertNotNull(paint65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(rectangle2D67);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test044");
        org.jfree.data.xy.XYZDataset xYZDataset3 = null;
        org.jfree.chart.plot.PlotOrientation plotOrientation4 = org.jfree.chart.plot.PlotOrientation.VERTICAL;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart8 = org.jfree.chart.ChartFactory.createBubbleChart("ClassContext", "LGPL", "", xYZDataset3, plotOrientation4, false, true, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@6c3983f1 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(plotOrientation4);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test045");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Graphics2D graphics2D27 = null;
        org.jfree.chart.axis.ValueAxis valueAxis28 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot29 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis28);
        java.awt.Graphics2D graphics2D30 = null;
        org.jfree.chart.entity.EntityCollection entityCollection31 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo32 = new org.jfree.chart.ChartRenderingInfo(entityCollection31);
        java.awt.Paint paint33 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean34 = chartRenderingInfo32.equals((java.lang.Object) paint33);
        java.awt.geom.Rectangle2D rectangle2D35 = chartRenderingInfo32.getChartArea();
        java.util.List list36 = null;
        combinedDomainXYPlot29.drawDomainGridlines(graphics2D30, rectangle2D35, list36);
        org.jfree.chart.axis.NumberAxis numberAxis39 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity42 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D35, (org.jfree.chart.axis.Axis) numberAxis39, "", "DatasetRenderingOrder.FORWARD");
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.drawBackground(graphics2D27, rectangle2D35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(rectangle2D35);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test046");
        java.awt.Color color2 = java.awt.Color.gray;
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D3 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font7 = barRenderer3D3.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape8 = barRenderer3D3.getBaseShape();
        java.awt.Color color11 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer13 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean15 = xYAreaRenderer13.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint16 = xYAreaRenderer13.getBaseLegendTextPaint();
        java.awt.Stroke stroke18 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer13.setSeriesOutlineStroke(0, stroke18, false);
        java.awt.Color color23 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer25 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean27 = xYAreaRenderer25.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint28 = xYAreaRenderer25.getBaseLegendTextPaint();
        java.awt.Stroke stroke30 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer25.setSeriesOutlineStroke(0, stroke30, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker34 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color11, stroke18, (java.awt.Paint) color23, stroke30, (float) (byte) 1);
        barRenderer3D3.setBaseOutlineStroke(stroke18);
        boolean boolean36 = barRenderer3D3.getBaseCreateEntities();
        java.awt.Stroke stroke37 = org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE;
        barRenderer3D3.setBaseOutlineStroke(stroke37);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D39 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font43 = barRenderer3D39.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator45 = null;
        barRenderer3D39.setSeriesToolTipGenerator(15, categoryToolTipGenerator45, true);
        org.jfree.chart.util.LengthAdjustmentType lengthAdjustmentType48 = org.jfree.chart.util.LengthAdjustmentType.EXPAND;
        boolean boolean49 = barRenderer3D39.equals((java.lang.Object) lengthAdjustmentType48);
        java.awt.Paint paint50 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT;
        barRenderer3D39.setBaseFillPaint(paint50, false);
        org.jfree.chart.axis.ValueAxis valueAxis53 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot54 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis53);
        java.awt.Stroke stroke55 = combinedDomainXYPlot54.getRangeZeroBaselineStroke();
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.plot.IntervalMarker intervalMarker57 = new org.jfree.chart.plot.IntervalMarker((double) 2147483647, (double) 'a', (java.awt.Paint) color2, stroke37, paint50, stroke55, (float) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The 'alpha' value must be in the range 0.0f to 1.0f");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(color2);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertNotNull(shape8);
        org.junit.Assert.assertNotNull(color11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(paint16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(color23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(paint28);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(stroke37);
        org.junit.Assert.assertNotNull(font43);
        org.junit.Assert.assertNotNull(lengthAdjustmentType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNotNull(stroke55);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test047");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Color color2 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot1.setRangeMinorGridlinePaint((java.awt.Paint) color2);
        boolean boolean4 = combinedDomainXYPlot1.canSelectByRegion();
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot7.clearAnnotations();
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent9 = null;
        categoryPlot7.rendererChanged(rendererChangeEvent9);
        org.jfree.chart.entity.EntityCollection entityCollection12 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo13 = new org.jfree.chart.ChartRenderingInfo(entityCollection12);
        java.awt.Paint paint14 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean15 = chartRenderingInfo13.equals((java.lang.Object) paint14);
        java.awt.geom.Rectangle2D rectangle2D16 = chartRenderingInfo13.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo17 = chartRenderingInfo13.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo18 = plotRenderingInfo17.getOwner();
        java.awt.geom.Point2D point2D19 = null;
        categoryPlot7.zoomRangeAxes(1.0E-8d, plotRenderingInfo17, point2D19, true);
        java.awt.geom.Point2D point2D22 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.zoomRangeAxes((double) (short) 1, (double) 100, plotRenderingInfo17, point2D22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'source' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(color2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(rectangle2D16);
        org.junit.Assert.assertNotNull(plotRenderingInfo17);
        org.junit.Assert.assertNotNull(chartRenderingInfo18);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test048");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape5 = barRenderer3D0.getBaseShape();
        java.awt.Color color8 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer10 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean12 = xYAreaRenderer10.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint13 = xYAreaRenderer10.getBaseLegendTextPaint();
        java.awt.Stroke stroke15 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer10.setSeriesOutlineStroke(0, stroke15, false);
        java.awt.Color color20 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer22 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean24 = xYAreaRenderer22.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint25 = xYAreaRenderer22.getBaseLegendTextPaint();
        java.awt.Stroke stroke27 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer22.setSeriesOutlineStroke(0, stroke27, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker31 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color8, stroke15, (java.awt.Paint) color20, stroke27, (float) (byte) 1);
        barRenderer3D0.setBaseOutlineStroke(stroke15);
        java.awt.Graphics2D graphics2D33 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot34 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer36 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection37 = categoryPlot34.getDomainMarkers((int) 'a', layer36);
        org.jfree.data.category.CategoryDataset categoryDataset39 = null;
        categoryPlot34.setDataset(4, categoryDataset39);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier41 = categoryPlot34.getDrawingSupplier();
        org.jfree.chart.axis.NumberAxis numberAxis43 = new org.jfree.chart.axis.NumberAxis("");
        int int44 = numberAxis43.getMinorTickCount();
        numberAxis43.setMinorTickMarksVisible(true);
        numberAxis43.setAutoRangeMinimumSize(1.0E-8d, false);
        org.jfree.chart.plot.Plot plot50 = numberAxis43.getPlot();
        org.jfree.chart.axis.ValueAxis valueAxis51 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot52 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis51);
        java.awt.Graphics2D graphics2D53 = null;
        org.jfree.chart.entity.EntityCollection entityCollection54 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo55 = new org.jfree.chart.ChartRenderingInfo(entityCollection54);
        java.awt.Paint paint56 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean57 = chartRenderingInfo55.equals((java.lang.Object) paint56);
        java.awt.geom.Rectangle2D rectangle2D58 = chartRenderingInfo55.getChartArea();
        java.util.List list59 = null;
        combinedDomainXYPlot52.drawDomainGridlines(graphics2D53, rectangle2D58, list59);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer63 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer63.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator66 = null;
        xYAreaRenderer63.setLegendItemURLGenerator(xYSeriesLabelGenerator66);
        xYAreaRenderer63.setSeriesVisibleInLegend((int) (byte) 10, (java.lang.Boolean) false);
        xYAreaRenderer63.setBaseItemLabelsVisible(true);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator74 = null;
        xYAreaRenderer63.setSeriesURLGenerator((int) (short) 100, xYURLGenerator74, false);
        java.awt.Paint paint80 = xYAreaRenderer63.getItemFillPaint((int) (short) 10, (int) 'a', true);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer82 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean84 = xYAreaRenderer82.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint85 = xYAreaRenderer82.getBaseLegendTextPaint();
        java.awt.Stroke stroke87 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer82.setSeriesOutlineStroke(0, stroke87, false);
        // The following exception was thrown during execution in test generation
        try {
            barRenderer3D0.drawRangeLine(graphics2D33, categoryPlot34, (org.jfree.chart.axis.ValueAxis) numberAxis43, rectangle2D58, 0.0d, paint80, stroke87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(paint13);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(color20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(paint25);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNotNull(layer36);
        org.junit.Assert.assertNull(collection37);
        org.junit.Assert.assertNotNull(drawingSupplier41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(plot50);
        org.junit.Assert.assertNotNull(paint56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(rectangle2D58);
        org.junit.Assert.assertNotNull(paint80);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(paint85);
        org.junit.Assert.assertNotNull(stroke87);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test049");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        org.jfree.chart.plot.PiePlot piePlot1 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup2 = piePlot1.getDatasetGroup();
        int int3 = piePlot1.getBackgroundImageAlignment();
        boolean boolean4 = piePlot1.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D5 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo6 = null;
        piePlot1.createAndAddEntity(rectangle2D5, plotRenderingInfo6, "hi!", "LGPL");
        java.awt.Paint paint10 = piePlot1.getLabelPaint();
        java.awt.Stroke stroke11 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        piePlot1.setOutlineStroke(stroke11);
        combinedDomainXYPlot0.setDomainMinorGridlineStroke(stroke11);
        combinedDomainXYPlot0.clearRangeMarkers();
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot0.setBackgroundImageAlpha((float) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The 'alpha' value must be in the range 0.0f to 1.0f.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(datasetGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 15 + "'", int3 == 15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(stroke11);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test050");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        java.lang.Object obj15 = numberAxis11.clone();
        numberAxis11.setAutoRange(true);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNotNull(obj15);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test051");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.PiePlot piePlot25 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup26 = piePlot25.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener27 = null;
        piePlot25.addChangeListener(plotChangeListener27);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent29 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot25);
        combinedDomainXYPlot1.plotChanged(plotChangeEvent29);
        java.lang.String str31 = combinedDomainXYPlot1.getPlotType();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNull(datasetGroup26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Combined_Domain_XYPlot" + "'", str31, "Combined_Domain_XYPlot");
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test052");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        org.jfree.chart.axis.ValueAxis valueAxis19 = combinedDomainXYPlot1.getRangeAxis((int) (short) -1);
        combinedDomainXYPlot1.configureDomainAxes();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(valueAxis19);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test053");
        org.jfree.chart.plot.PolarPlot polarPlot0 = new org.jfree.chart.plot.PolarPlot();
        org.jfree.chart.axis.ValueAxis valueAxis1 = null;
        polarPlot0.setAxis(valueAxis1);
        int int3 = polarPlot0.getSeriesCount();
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot5 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list6 = combinedRangeXYPlot5.getSubplots();
        combinedRangeXYPlot5.setGap((double) (-16777216));
        org.jfree.chart.entity.EntityCollection entityCollection11 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo12 = new org.jfree.chart.ChartRenderingInfo(entityCollection11);
        java.awt.Paint paint13 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean14 = chartRenderingInfo12.equals((java.lang.Object) paint13);
        java.awt.geom.Rectangle2D rectangle2D15 = chartRenderingInfo12.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo16 = chartRenderingInfo12.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo17 = plotRenderingInfo16.getOwner();
        combinedRangeXYPlot5.handleClick((-9999), 5, plotRenderingInfo16);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D21 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot23 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis22);
        java.awt.Color color24 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot23.setRangeMinorGridlinePaint((java.awt.Paint) color24);
        boolean boolean26 = combinedDomainXYPlot23.canSelectByRegion();
        barRenderer3D21.addChangeListener((org.jfree.chart.event.RendererChangeListener) combinedDomainXYPlot23);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo29 = null;
        org.jfree.chart.entity.EntityCollection entityCollection30 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo31 = new org.jfree.chart.ChartRenderingInfo(entityCollection30);
        java.awt.Paint paint32 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean33 = chartRenderingInfo31.equals((java.lang.Object) paint32);
        java.awt.geom.Rectangle2D rectangle2D34 = chartRenderingInfo31.getChartArea();
        org.jfree.chart.title.TextTitle textTitle36 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity37 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D34, (org.jfree.chart.title.Title) textTitle36);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor38 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D39 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D34, rectangleAnchor38);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor40 = null;
        java.awt.geom.Point2D point2D41 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D34, rectangleAnchor40);
        combinedDomainXYPlot23.zoomDomainAxes((double) (-16777216), plotRenderingInfo29, point2D41);
        // The following exception was thrown during execution in test generation
        try {
            polarPlot0.zoomRangeAxes(1.0E-8d, plotRenderingInfo16, point2D41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(list6);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(rectangle2D15);
        org.junit.Assert.assertNotNull(plotRenderingInfo16);
        org.junit.Assert.assertNotNull(chartRenderingInfo17);
        org.junit.Assert.assertNotNull(color24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(rectangle2D34);
        org.junit.Assert.assertNotNull(rectangleAnchor38);
        org.junit.Assert.assertNotNull(point2D39);
        org.junit.Assert.assertNotNull(point2D41);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test054");
        org.jfree.chart.axis.NumberAxis numberAxis1 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis1.pan((double) 1);
        numberAxis1.setTickLabelsVisible(false);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D10 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font14 = barRenderer3D10.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        org.jfree.chart.axis.MarkerAxisBand markerAxisBand15 = new org.jfree.chart.axis.MarkerAxisBand(numberAxis1, (double) (short) -1, (double) (short) 1, (double) (-16777216), (double) 1L, font14);
        java.awt.Color color18 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean22 = xYAreaRenderer20.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint23 = xYAreaRenderer20.getBaseLegendTextPaint();
        java.awt.Stroke stroke25 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer20.setSeriesOutlineStroke(0, stroke25, false);
        java.awt.Color color30 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer32 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean34 = xYAreaRenderer32.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint35 = xYAreaRenderer32.getBaseLegendTextPaint();
        java.awt.Stroke stroke37 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer32.setSeriesOutlineStroke(0, stroke37, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker41 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color18, stroke25, (java.awt.Paint) color30, stroke37, (float) (byte) 1);
        org.jfree.chart.text.TextAnchor textAnchor42 = org.jfree.chart.text.TextAnchor.BASELINE_LEFT;
        intervalMarker41.setLabelTextAnchor(textAnchor42);
        java.lang.String str44 = intervalMarker41.getLabel();
        markerAxisBand15.addMarker(intervalMarker41);
        org.junit.Assert.assertNotNull(font14);
        org.junit.Assert.assertNotNull(color18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(paint23);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNotNull(color30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(paint35);
        org.junit.Assert.assertNotNull(stroke37);
        org.junit.Assert.assertNotNull(textAnchor42);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test055");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Color color2 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot1.setRangeMinorGridlinePaint((java.awt.Paint) color2);
        org.jfree.chart.util.RectangleEdge rectangleEdge4 = combinedDomainXYPlot1.getDomainAxisEdge();
        combinedDomainXYPlot1.setNoDataMessage("NO_CHANGE");
        org.junit.Assert.assertNotNull(color2);
        org.junit.Assert.assertNotNull(rectangleEdge4);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test056");
        org.jfree.chart.block.LabelBlock labelBlock1 = new org.jfree.chart.block.LabelBlock("");
        java.lang.Object obj2 = labelBlock1.clone();
        labelBlock1.setURLText("TitleEntity: tooltip = LGPL");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer6 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer6.clearSeriesStrokes(false);
        boolean boolean9 = xYAreaRenderer6.getPlotLines();
        boolean boolean10 = xYAreaRenderer6.getBaseItemLabelsVisible();
        java.awt.Paint paint11 = xYAreaRenderer6.getBasePaint();
        java.awt.Font font12 = xYAreaRenderer6.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator13 = null;
        xYAreaRenderer6.setBaseItemLabelGenerator(xYItemLabelGenerator13);
        xYAreaRenderer6.setUseFillPaint(true);
        java.awt.Graphics2D graphics2D17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot19 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis18);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer21 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer21.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator24 = null;
        xYAreaRenderer21.setLegendItemURLGenerator(xYSeriesLabelGenerator24);
        xYAreaRenderer21.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean32 = xYAreaRenderer21.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot19.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer21);
        combinedDomainXYPlot19.clearDomainMarkers();
        boolean boolean35 = combinedDomainXYPlot19.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.NumberAxis numberAxis37 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis37.pan((double) 1);
        org.jfree.chart.axis.ValueAxis valueAxis40 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot41 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis40);
        java.awt.Graphics2D graphics2D42 = null;
        org.jfree.chart.entity.EntityCollection entityCollection43 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo44 = new org.jfree.chart.ChartRenderingInfo(entityCollection43);
        java.awt.Paint paint45 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean46 = chartRenderingInfo44.equals((java.lang.Object) paint45);
        java.awt.geom.Rectangle2D rectangle2D47 = chartRenderingInfo44.getChartArea();
        java.util.List list48 = null;
        combinedDomainXYPlot41.drawDomainGridlines(graphics2D42, rectangle2D47, list48);
        org.jfree.chart.axis.NumberAxis numberAxis51 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity54 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D47, (org.jfree.chart.axis.Axis) numberAxis51, "", "DatasetRenderingOrder.FORWARD");
        xYAreaRenderer6.drawDomainGridLine(graphics2D17, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot19, (org.jfree.chart.axis.ValueAxis) numberAxis37, rectangle2D47, (double) 11);
        numberAxis37.setLabelToolTip("{0}: ({1}, {2})");
        org.jfree.chart.text.TextLine textLine60 = new org.jfree.chart.text.TextLine("hi!");
        org.jfree.chart.text.TextFragment textFragment61 = textLine60.getLastTextFragment();
        java.awt.Font font62 = textFragment61.getFont();
        numberAxis37.setLabelFont(font62);
        labelBlock1.setFont(font62);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(font12);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(rectangle2D47);
        org.junit.Assert.assertNotNull(textFragment61);
        org.junit.Assert.assertNotNull(font62);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test057");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean3 = xYAreaRenderer1.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint4 = xYAreaRenderer1.getBaseLegendTextPaint();
        java.awt.Stroke stroke6 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer1.setSeriesOutlineStroke(0, stroke6, false);
        org.jfree.chart.LegendItem legendItem11 = xYAreaRenderer1.getLegendItem(8, (int) (byte) 10);
        java.awt.Paint paint13 = xYAreaRenderer1.getSeriesOutlinePaint((-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(paint4);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNull(legendItem11);
        org.junit.Assert.assertNull(paint13);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test058");
        org.jfree.data.xy.XYDataset xYDataset3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer6 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection7 = categoryPlot4.getDomainMarkers((int) 'a', layer6);
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        categoryPlot4.setDataset(4, categoryDataset9);
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot();
        int int12 = categoryPlot11.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation13 = categoryPlot11.getOrientation();
        categoryPlot4.setOrientation(plotOrientation13);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart18 = org.jfree.chart.ChartFactory.createXYStepChart("{0}", "", "ThreadContext", xYDataset3, plotOrientation13, false, true, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@1f0f82db is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(layer6);
        org.junit.Assert.assertNull(collection7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(plotOrientation13);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test059");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator4 = null;
        xYAreaRenderer1.setLegendItemURLGenerator(xYSeriesLabelGenerator4);
        xYAreaRenderer1.setSeriesVisibleInLegend((int) (byte) 10, (java.lang.Boolean) false);
        xYAreaRenderer1.setBaseItemLabelsVisible(true);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator12 = null;
        xYAreaRenderer1.setSeriesURLGenerator((int) (short) 100, xYURLGenerator12, false);
        java.awt.Paint paint18 = xYAreaRenderer1.getItemFillPaint((int) (short) 10, (int) 'a', true);
        java.awt.Graphics2D graphics2D19 = null;
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot21 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis20);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer23 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer23.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator26 = null;
        xYAreaRenderer23.setLegendItemURLGenerator(xYSeriesLabelGenerator26);
        xYAreaRenderer23.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean34 = xYAreaRenderer23.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot21.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer23);
        boolean boolean36 = combinedDomainXYPlot21.canSelectByPoint();
        org.jfree.chart.axis.NumberAxis numberAxis38 = new org.jfree.chart.axis.NumberAxis("");
        int int39 = numberAxis38.getMinorTickCount();
        numberAxis38.setMinorTickMarksVisible(true);
        org.jfree.chart.entity.EntityCollection entityCollection42 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo43 = new org.jfree.chart.ChartRenderingInfo(entityCollection42);
        java.awt.Paint paint44 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean45 = chartRenderingInfo43.equals((java.lang.Object) paint44);
        java.awt.geom.Rectangle2D rectangle2D46 = chartRenderingInfo43.getChartArea();
        org.jfree.chart.title.TextTitle textTitle48 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity49 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D46, (org.jfree.chart.title.Title) textTitle48);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor50 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D51 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D46, rectangleAnchor50);
        java.awt.Paint paint53 = org.jfree.chart.axis.Axis.DEFAULT_AXIS_LABEL_PAINT;
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot54 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke55 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot54.setRangeCrosshairStroke(stroke55);
        xYAreaRenderer1.drawDomainLine(graphics2D19, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot21, (org.jfree.chart.axis.ValueAxis) numberAxis38, rectangle2D46, (double) 60000L, paint53, stroke55);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.ValueAxis valueAxis59 = combinedDomainXYPlot21.getDomainAxisForDataset(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Index 2147483647 out of bounds.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(rectangle2D46);
        org.junit.Assert.assertNotNull(rectangleAnchor50);
        org.junit.Assert.assertNotNull(point2D51);
        org.junit.Assert.assertNotNull(paint53);
        org.junit.Assert.assertNotNull(stroke55);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test060");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D2 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.axis.ValueAxis valueAxis3 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot4 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis3);
        java.awt.Color color5 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot4.setRangeMinorGridlinePaint((java.awt.Paint) color5);
        boolean boolean7 = combinedDomainXYPlot4.canSelectByRegion();
        barRenderer3D2.addChangeListener((org.jfree.chart.event.RendererChangeListener) combinedDomainXYPlot4);
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot();
        int int11 = categoryPlot10.getDatasetCount();
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        // The following exception was thrown during execution in test generation
        try {
            barRenderer3D2.drawDomainGridline(graphics2D9, categoryPlot10, rectangle2D12, 0.2d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(color5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test061");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean20 = xYAreaRenderer11.isSeriesVisible((-16777216));
        java.awt.Shape shape22 = xYAreaRenderer11.getLegendShape(0);
        java.awt.Shape shape24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        xYAreaRenderer11.setSeriesShape((int) (byte) 100, shape24, false);
        java.awt.Paint paint28 = xYAreaRenderer11.getSeriesItemLabelPaint(5);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator31 = null;
        xYAreaRenderer11.setSeriesURLGenerator(5, xYURLGenerator31);
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator36 = xYAreaRenderer11.getItemLabelGenerator(0, (int) '#', false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(shape22);
        org.junit.Assert.assertNotNull(shape24);
        org.junit.Assert.assertNull(paint28);
        org.junit.Assert.assertNull(xYItemLabelGenerator36);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test062");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        org.jfree.chart.axis.AxisLocation axisLocation26 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.setDomainAxisLocation(axisLocation26, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'location' for index 0 not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test063");
        org.jfree.chart.labels.StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new org.jfree.chart.labels.StandardPieSectionLabelGenerator();
        org.jfree.data.general.PieDataset pieDataset1 = null;
        java.lang.String str3 = standardPieSectionLabelGenerator0.generateSectionLabel(pieDataset1, (java.lang.Comparable) 2.0d);
        java.text.AttributedString attributedString5 = null;
        standardPieSectionLabelGenerator0.setAttributedLabel((int) (short) 1, attributedString5);
        java.text.AttributedString attributedString8 = null;
        standardPieSectionLabelGenerator0.setAttributedLabel(0, attributedString8);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test064");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape5 = barRenderer3D0.getBaseShape();
        barRenderer3D0.setBaseCreateEntities(true);
        double double8 = barRenderer3D0.getXOffset();
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        org.jfree.chart.block.BorderArrangement borderArrangement11 = new org.jfree.chart.block.BorderArrangement();
        org.jfree.chart.block.BlockContainer blockContainer12 = new org.jfree.chart.block.BlockContainer((org.jfree.chart.block.Arrangement) borderArrangement11);
        blockContainer12.clear();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer15 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer15.clearSeriesStrokes(false);
        boolean boolean18 = xYAreaRenderer15.getPlotLines();
        boolean boolean19 = xYAreaRenderer15.getBaseItemLabelsVisible();
        java.awt.Paint paint20 = xYAreaRenderer15.getBasePaint();
        boolean boolean21 = blockContainer12.equals((java.lang.Object) paint20);
        org.jfree.chart.util.RectangleInsets rectangleInsets22 = blockContainer12.getMargin();
        org.jfree.chart.plot.PiePlot piePlot23 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup24 = piePlot23.getDatasetGroup();
        int int25 = piePlot23.getBackgroundImageAlignment();
        boolean boolean26 = piePlot23.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D27 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo28 = null;
        piePlot23.createAndAddEntity(rectangle2D27, plotRenderingInfo28, "hi!", "LGPL");
        piePlot23.setStartAngle((double) 1);
        org.jfree.data.xy.XYDataItem xYDataItem36 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        java.awt.Color color39 = java.awt.Color.getColor("hi!", (int) (short) 100);
        boolean boolean40 = xYDataItem36.equals((java.lang.Object) "hi!");
        java.awt.Color color41 = java.awt.Color.MAGENTA;
        piePlot23.setSectionPaint((java.lang.Comparable) "hi!", (java.awt.Paint) color41);
        java.awt.Graphics2D graphics2D43 = null;
        org.jfree.chart.entity.EntityCollection entityCollection44 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo45 = new org.jfree.chart.ChartRenderingInfo(entityCollection44);
        java.awt.Paint paint46 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean47 = chartRenderingInfo45.equals((java.lang.Object) paint46);
        java.awt.geom.Rectangle2D rectangle2D48 = chartRenderingInfo45.getChartArea();
        piePlot23.drawBackgroundImage(graphics2D43, rectangle2D48);
        java.awt.geom.Rectangle2D rectangle2D50 = rectangleInsets22.createInsetRectangle(rectangle2D48);
        // The following exception was thrown during execution in test generation
        try {
            barRenderer3D0.drawDomainGridline(graphics2D9, categoryPlot10, rectangle2D50, (double) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 12.0d + "'", double8 == 12.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(rectangleInsets22);
        org.junit.Assert.assertNull(datasetGroup24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 15 + "'", int25 == 15);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(color39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(color41);
        org.junit.Assert.assertNotNull(paint46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(rectangle2D48);
        org.junit.Assert.assertNotNull(rectangle2D50);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test065");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape5 = barRenderer3D0.getBaseShape();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer8 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer8.clearSeriesStrokes(false);
        boolean boolean11 = xYAreaRenderer8.getPlotLines();
        boolean boolean12 = xYAreaRenderer8.getBaseItemLabelsVisible();
        java.awt.Paint paint14 = org.jfree.chart.plot.WaferMapPlot.DEFAULT_CROSSHAIR_PAINT;
        xYAreaRenderer8.setSeriesFillPaint(7, paint14);
        barRenderer3D0.setSeriesFillPaint(10, paint14);
        org.jfree.data.category.CategoryDataset categoryDataset17 = null;
        org.jfree.data.Range range18 = barRenderer3D0.findRangeBounds(categoryDataset17);
        java.awt.Paint paint19 = barRenderer3D0.getWallPaint();
        double double20 = barRenderer3D0.getItemMargin();
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(range18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.2d + "'", double20 == 0.2d);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test066");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.axis.AxisSpace axisSpace7 = categoryPlot0.getFixedDomainAxisSpace();
        java.awt.Graphics2D graphics2D8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        org.jfree.chart.util.Layer layer11 = org.jfree.chart.util.Layer.BACKGROUND;
        categoryPlot0.drawRangeMarkers(graphics2D8, rectangle2D9, 0, layer11);
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = new org.jfree.chart.plot.CategoryPlot();
        int int14 = categoryPlot13.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge18 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str19 = rectangleEdge18.toString();
        double double20 = categoryPlot13.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge18);
        boolean boolean21 = categoryPlot13.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = categoryPlot13.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge24 = categoryPlot13.getDomainAxisEdge();
        org.jfree.chart.axis.ValueAxis valueAxis25 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot26 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis25);
        java.awt.Graphics2D graphics2D27 = null;
        org.jfree.chart.entity.EntityCollection entityCollection28 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo29 = new org.jfree.chart.ChartRenderingInfo(entityCollection28);
        java.awt.Paint paint30 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean31 = chartRenderingInfo29.equals((java.lang.Object) paint30);
        java.awt.geom.Rectangle2D rectangle2D32 = chartRenderingInfo29.getChartArea();
        java.util.List list33 = null;
        combinedDomainXYPlot26.drawDomainGridlines(graphics2D27, rectangle2D32, list33);
        org.jfree.chart.axis.NumberAxis numberAxis36 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity39 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D32, (org.jfree.chart.axis.Axis) numberAxis36, "", "DatasetRenderingOrder.FORWARD");
        numberAxis36.centerRange(10.0d);
        org.jfree.data.Range range42 = categoryPlot13.getDataRange((org.jfree.chart.axis.ValueAxis) numberAxis36);
        org.jfree.data.Range range43 = categoryPlot0.getDataRange((org.jfree.chart.axis.ValueAxis) numberAxis36);
        java.awt.Stroke stroke44 = categoryPlot0.getRangeZeroBaselineStroke();
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertNull(axisSpace7);
        org.junit.Assert.assertNotNull(layer11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "RectangleEdge.RIGHT" + "'", str19, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 149.0d + "'", double20 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(categoryAxis23);
        org.junit.Assert.assertNotNull(rectangleEdge24);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(rectangle2D32);
        org.junit.Assert.assertNull(range42);
        org.junit.Assert.assertNull(range43);
        org.junit.Assert.assertNotNull(stroke44);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test067");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Graphics2D graphics2D17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D22 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator23 = barRenderer3D22.getBaseToolTipGenerator();
        java.awt.Stroke stroke27 = barRenderer3D22.getItemOutlineStroke((int) '#', 3, false);
        java.awt.Paint paint28 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.drawVerticalLine(graphics2D17, rectangle2D18, 149.0d, stroke27, paint28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator23);
        org.junit.Assert.assertNotNull(stroke27);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test068");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        boolean boolean16 = combinedDomainXYPlot1.canSelectByPoint();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer19 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer19.clearSeriesStrokes(false);
        boolean boolean22 = xYAreaRenderer19.getPlotLines();
        java.awt.Stroke stroke24 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        xYAreaRenderer19.setSeriesStroke((int) (short) 1, stroke24, true);
        combinedDomainXYPlot1.setRenderer(1, (org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer19, true);
        java.awt.Graphics2D graphics2D29 = null;
        org.jfree.chart.axis.ValueAxis valueAxis30 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot31 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis30);
        java.awt.Graphics2D graphics2D32 = null;
        org.jfree.chart.entity.EntityCollection entityCollection33 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo34 = new org.jfree.chart.ChartRenderingInfo(entityCollection33);
        java.awt.Paint paint35 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean36 = chartRenderingInfo34.equals((java.lang.Object) paint35);
        java.awt.geom.Rectangle2D rectangle2D37 = chartRenderingInfo34.getChartArea();
        java.util.List list38 = null;
        combinedDomainXYPlot31.drawDomainGridlines(graphics2D32, rectangle2D37, list38);
        boolean boolean40 = combinedDomainXYPlot31.isDomainGridlinesVisible();
        combinedDomainXYPlot31.setDomainPannable(true);
        org.jfree.chart.axis.NumberAxis numberAxis44 = new org.jfree.chart.axis.NumberAxis("");
        double double45 = numberAxis44.getAutoRangeMinimumSize();
        java.awt.Color color48 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer50 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean52 = xYAreaRenderer50.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint53 = xYAreaRenderer50.getBaseLegendTextPaint();
        java.awt.Stroke stroke55 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer50.setSeriesOutlineStroke(0, stroke55, false);
        java.awt.Color color60 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer62 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean64 = xYAreaRenderer62.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint65 = xYAreaRenderer62.getBaseLegendTextPaint();
        java.awt.Stroke stroke67 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer62.setSeriesOutlineStroke(0, stroke67, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker71 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color48, stroke55, (java.awt.Paint) color60, stroke67, (float) (byte) 1);
        java.lang.Object obj72 = intervalMarker71.clone();
        org.jfree.chart.plot.CategoryPlot categoryPlot73 = new org.jfree.chart.plot.CategoryPlot();
        int int74 = categoryPlot73.getDatasetCount();
        categoryPlot73.setAnchorValue((double) 10.0f);
        java.awt.Graphics2D graphics2D77 = null;
        org.jfree.chart.entity.EntityCollection entityCollection78 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo79 = new org.jfree.chart.ChartRenderingInfo(entityCollection78);
        java.awt.Paint paint80 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean81 = chartRenderingInfo79.equals((java.lang.Object) paint80);
        java.awt.geom.Rectangle2D rectangle2D82 = chartRenderingInfo79.getChartArea();
        org.jfree.chart.title.TextTitle textTitle84 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity85 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D82, (org.jfree.chart.title.Title) textTitle84);
        org.jfree.chart.axis.AxisSpace axisSpace86 = categoryPlot73.calculateAxisSpace(graphics2D77, rectangle2D82);
        // The following exception was thrown during execution in test generation
        try {
            xYAreaRenderer19.drawDomainMarker(graphics2D29, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot31, (org.jfree.chart.axis.ValueAxis) numberAxis44, (org.jfree.chart.plot.Marker) intervalMarker71, rectangle2D82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(rectangle2D37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1.0E-8d + "'", double45 == 1.0E-8d);
        org.junit.Assert.assertNotNull(color48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(paint53);
        org.junit.Assert.assertNotNull(stroke55);
        org.junit.Assert.assertNotNull(color60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(paint65);
        org.junit.Assert.assertNotNull(stroke67);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(paint80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(rectangle2D82);
        org.junit.Assert.assertNotNull(axisSpace86);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test069");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        int int1 = categoryPlot0.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge5 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str6 = rectangleEdge5.toString();
        double double7 = categoryPlot0.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge5);
        boolean boolean8 = categoryPlot0.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = categoryPlot0.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge11 = categoryPlot0.getDomainAxisEdge();
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot13 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.entity.EntityCollection entityCollection15 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo16 = new org.jfree.chart.ChartRenderingInfo(entityCollection15);
        java.awt.Paint paint17 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean18 = chartRenderingInfo16.equals((java.lang.Object) paint17);
        java.awt.geom.Rectangle2D rectangle2D19 = chartRenderingInfo16.getChartArea();
        java.util.List list20 = null;
        combinedDomainXYPlot13.drawDomainGridlines(graphics2D14, rectangle2D19, list20);
        org.jfree.chart.axis.NumberAxis numberAxis23 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity26 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D19, (org.jfree.chart.axis.Axis) numberAxis23, "", "DatasetRenderingOrder.FORWARD");
        numberAxis23.centerRange(10.0d);
        org.jfree.data.Range range29 = categoryPlot0.getDataRange((org.jfree.chart.axis.ValueAxis) numberAxis23);
        categoryPlot0.clearRangeMarkers();
        categoryPlot0.setRangeCrosshairValue((double) (-1.0f), false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "RectangleEdge.RIGHT" + "'", str6, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 149.0d + "'", double7 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(categoryAxis10);
        org.junit.Assert.assertNotNull(rectangleEdge11);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(rectangle2D19);
        org.junit.Assert.assertNull(range29);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test070");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        org.jfree.chart.title.LegendTitle legendTitle5 = new org.jfree.chart.title.LegendTitle((org.jfree.chart.LegendItemSource) xYAreaRenderer1);
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str7 = rectangleEdge6.toString();
        legendTitle5.setLegendItemGraphicEdge(rectangleEdge6);
        org.jfree.chart.util.RectangleInsets rectangleInsets9 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double10 = rectangleInsets9.getLeft();
        double double12 = rectangleInsets9.calculateLeftOutset((double) 0L);
        legendTitle5.setLegendItemGraphicPadding(rectangleInsets9);
        org.jfree.chart.util.RectangleInsets rectangleInsets14 = legendTitle5.getLegendItemGraphicPadding();
        org.jfree.chart.title.TextTitle textTitle16 = new org.jfree.chart.title.TextTitle("");
        boolean boolean17 = textTitle16.getExpandToFitSpace();
        textTitle16.setText("");
        java.lang.String str20 = textTitle16.getID();
        java.awt.Font font21 = textTitle16.getFont();
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.entity.EntityCollection entityCollection23 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo24 = new org.jfree.chart.ChartRenderingInfo(entityCollection23);
        java.awt.Paint paint25 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean26 = chartRenderingInfo24.equals((java.lang.Object) paint25);
        java.awt.geom.Rectangle2D rectangle2D27 = chartRenderingInfo24.getChartArea();
        textTitle16.draw(graphics2D22, rectangle2D27);
        legendTitle5.setBounds(rectangle2D27);
        java.awt.Graphics2D graphics2D30 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot31 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        java.awt.Paint paint32 = combinedDomainXYPlot31.getRangeGridlinePaint();
        java.awt.Graphics2D graphics2D33 = null;
        org.jfree.chart.entity.EntityCollection entityCollection34 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo35 = new org.jfree.chart.ChartRenderingInfo(entityCollection34);
        java.awt.Paint paint36 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean37 = chartRenderingInfo35.equals((java.lang.Object) paint36);
        java.awt.geom.Rectangle2D rectangle2D38 = chartRenderingInfo35.getChartArea();
        org.jfree.chart.title.TextTitle textTitle40 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity41 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D38, (org.jfree.chart.title.Title) textTitle40);
        combinedDomainXYPlot31.drawQuadrants(graphics2D33, rectangle2D38);
        // The following exception was thrown during execution in test generation
        try {
            legendTitle5.draw(graphics2D30, rectangle2D38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RectangleEdge.RIGHT" + "'", str7, "RectangleEdge.RIGHT");
        org.junit.Assert.assertNotNull(rectangleInsets9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(rectangleInsets14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(font21);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangle2D27);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(rectangle2D38);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test071");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean3 = xYAreaRenderer1.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint4 = xYAreaRenderer1.getBaseLegendTextPaint();
        java.awt.Stroke stroke6 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer1.setSeriesOutlineStroke(0, stroke6, false);
        org.jfree.chart.LegendItem legendItem11 = xYAreaRenderer1.getLegendItem(8, (int) (byte) 10);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot14 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis13);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer16 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer16.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator19 = null;
        xYAreaRenderer16.setLegendItemURLGenerator(xYSeriesLabelGenerator19);
        xYAreaRenderer16.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean27 = xYAreaRenderer16.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot14.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer16);
        org.jfree.chart.axis.ValueAxis valueAxis29 = null;
        int int30 = combinedDomainXYPlot14.getRangeAxisIndex(valueAxis29);
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        combinedDomainXYPlot14.setDomainAxis(valueAxis31);
        combinedDomainXYPlot14.clearRangeMarkers();
        org.jfree.data.time.Year year36 = new org.jfree.data.time.Year((int) (short) 0);
        long long37 = year36.getFirstMillisecond();
        org.jfree.data.time.Year year39 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis40 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year36, (org.jfree.data.time.RegularTimePeriod) year39);
        org.jfree.data.time.Year year43 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year45 = new org.jfree.data.time.Year((int) (short) 0);
        long long46 = year45.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis47 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year43, (org.jfree.data.time.RegularTimePeriod) year45);
        periodAxis40.setLast((org.jfree.data.time.RegularTimePeriod) year45);
        java.awt.Stroke stroke49 = periodAxis40.getMinorTickMarkStroke();
        java.lang.Class class50 = periodAxis40.getMajorTickTimePeriodClass();
        org.jfree.chart.plot.Marker marker51 = null;
        org.jfree.chart.entity.EntityCollection entityCollection52 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo53 = new org.jfree.chart.ChartRenderingInfo(entityCollection52);
        java.awt.Paint paint54 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean55 = chartRenderingInfo53.equals((java.lang.Object) paint54);
        java.awt.geom.Rectangle2D rectangle2D56 = chartRenderingInfo53.getChartArea();
        org.jfree.chart.title.TextTitle textTitle58 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity59 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D56, (org.jfree.chart.title.Title) textTitle58);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor60 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D61 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D56, rectangleAnchor60);
        xYAreaRenderer1.drawDomainMarker(graphics2D12, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot14, (org.jfree.chart.axis.ValueAxis) periodAxis40, marker51, rectangle2D56);
        org.jfree.chart.urls.StandardXYURLGenerator standardXYURLGenerator65 = new org.jfree.chart.urls.StandardXYURLGenerator("RectangleEdge.RIGHT");
        xYAreaRenderer1.setSeriesURLGenerator((int) (byte) 1, (org.jfree.chart.urls.XYURLGenerator) standardXYURLGenerator65);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(paint4);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNull(legendItem11);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-62167363200000L) + "'", long37 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-62167363200000L) + "'", long46 == (-62167363200000L));
        org.junit.Assert.assertNotNull(stroke49);
        org.junit.Assert.assertNotNull(class50);
        org.junit.Assert.assertNotNull(paint54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(rectangle2D56);
        org.junit.Assert.assertNotNull(rectangleAnchor60);
        org.junit.Assert.assertNotNull(point2D61);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test072");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.PiePlot piePlot25 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup26 = piePlot25.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener27 = null;
        piePlot25.addChangeListener(plotChangeListener27);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent29 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot25);
        combinedDomainXYPlot1.plotChanged(plotChangeEvent29);
        org.jfree.chart.plot.PiePlot piePlot31 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup32 = piePlot31.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener33 = null;
        piePlot31.addChangeListener(plotChangeListener33);
        java.awt.Color color37 = java.awt.Color.getColor("hi!", (int) (short) 100);
        piePlot31.setLabelOutlinePaint((java.awt.Paint) color37);
        java.awt.Paint paint39 = piePlot31.getLabelLinkPaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets40 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        piePlot31.setLabelPadding(rectangleInsets40);
        double double42 = rectangleInsets40.getRight();
        combinedDomainXYPlot1.setAxisOffset(rectangleInsets40);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNull(datasetGroup26);
        org.junit.Assert.assertNull(datasetGroup32);
        org.junit.Assert.assertNotNull(color37);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNotNull(rectangleInsets40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test073");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        org.jfree.chart.title.LegendTitle legendTitle5 = new org.jfree.chart.title.LegendTitle((org.jfree.chart.LegendItemSource) xYAreaRenderer1);
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str7 = rectangleEdge6.toString();
        legendTitle5.setLegendItemGraphicEdge(rectangleEdge6);
        org.jfree.chart.util.RectangleInsets rectangleInsets9 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double10 = rectangleInsets9.getLeft();
        double double12 = rectangleInsets9.calculateLeftOutset((double) 0L);
        legendTitle5.setLegendItemGraphicPadding(rectangleInsets9);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot15 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        java.awt.Paint paint16 = combinedDomainXYPlot15.getRangeGridlinePaint();
        java.awt.Graphics2D graphics2D17 = null;
        org.jfree.chart.entity.EntityCollection entityCollection18 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo19 = new org.jfree.chart.ChartRenderingInfo(entityCollection18);
        java.awt.Paint paint20 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean21 = chartRenderingInfo19.equals((java.lang.Object) paint20);
        java.awt.geom.Rectangle2D rectangle2D22 = chartRenderingInfo19.getChartArea();
        org.jfree.chart.title.TextTitle textTitle24 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity25 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D22, (org.jfree.chart.title.Title) textTitle24);
        combinedDomainXYPlot15.drawQuadrants(graphics2D17, rectangle2D22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = legendTitle5.draw(graphics2D14, rectangle2D22, (java.lang.Object) "http://www.jfree.org/jfreechart/index.html");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RectangleEdge.RIGHT" + "'", str7, "RectangleEdge.RIGHT");
        org.junit.Assert.assertNotNull(rectangleInsets9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(rectangle2D22);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test074");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean3 = xYAreaRenderer1.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint5 = xYAreaRenderer1.getSeriesPaint(0);
        java.awt.Stroke stroke6 = org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE;
        xYAreaRenderer1.setBaseOutlineStroke(stroke6);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(paint5);
        org.junit.Assert.assertNotNull(stroke6);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test075");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        numberAxis11.centerRange(10.0d);
        org.jfree.chart.axis.TickUnits tickUnits17 = new org.jfree.chart.axis.TickUnits();
        numberAxis11.setStandardTickUnits((org.jfree.chart.axis.TickUnitSource) tickUnits17);
        int int19 = tickUnits17.size();
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.TickUnit tickUnit21 = tickUnits17.get(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test076");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        org.jfree.chart.plot.PiePlot piePlot1 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup2 = piePlot1.getDatasetGroup();
        int int3 = piePlot1.getBackgroundImageAlignment();
        boolean boolean4 = piePlot1.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D5 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo6 = null;
        piePlot1.createAndAddEntity(rectangle2D5, plotRenderingInfo6, "hi!", "LGPL");
        java.awt.Paint paint10 = piePlot1.getLabelPaint();
        java.awt.Stroke stroke11 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        piePlot1.setOutlineStroke(stroke11);
        combinedDomainXYPlot0.setDomainMinorGridlineStroke(stroke11);
        int int14 = combinedDomainXYPlot0.getDatasetCount();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer17 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer17.clearSeriesStrokes(false);
        boolean boolean20 = xYAreaRenderer17.getPlotLines();
        java.awt.Paint paint24 = xYAreaRenderer17.getItemPaint((int) (byte) -1, 7, false);
        java.awt.Shape shape26 = xYAreaRenderer17.getLegendShape(8);
        combinedDomainXYPlot0.setRenderer((int) (byte) 100, (org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer17);
        org.junit.Assert.assertNull(datasetGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 15 + "'", int3 == 15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNull(shape26);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test077");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot3 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis2);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer5 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer5.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator8 = null;
        xYAreaRenderer5.setLegendItemURLGenerator(xYSeriesLabelGenerator8);
        xYAreaRenderer5.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean16 = xYAreaRenderer5.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot3.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer5);
        combinedDomainXYPlot3.clearDomainMarkers();
        java.awt.Font font20 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint21 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer24 = null;
        org.jfree.chart.text.TextBlock textBlock25 = org.jfree.chart.text.TextUtilities.createTextBlock("", font20, paint21, (float) (-1L), (int) (short) -1, textMeasurer24);
        combinedDomainXYPlot3.setDomainCrosshairPaint(paint21);
        org.jfree.chart.plot.PiePlot piePlot27 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup28 = piePlot27.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener29 = null;
        piePlot27.addChangeListener(plotChangeListener29);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent31 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot27);
        combinedDomainXYPlot3.plotChanged(plotChangeEvent31);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType33 = plotChangeEvent31.getType();
        combinedRangeXYPlot0.plotChanged(plotChangeEvent31);
        org.jfree.chart.plot.IntervalMarker intervalMarker37 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        boolean boolean38 = combinedRangeXYPlot0.removeRangeMarker((org.jfree.chart.plot.Marker) intervalMarker37);
        org.jfree.chart.entity.EntityCollection entityCollection41 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo42 = new org.jfree.chart.ChartRenderingInfo(entityCollection41);
        java.awt.Paint paint43 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean44 = chartRenderingInfo42.equals((java.lang.Object) paint43);
        java.awt.geom.Rectangle2D rectangle2D45 = chartRenderingInfo42.getChartArea();
        org.jfree.chart.title.TextTitle textTitle47 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity48 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D45, (org.jfree.chart.title.Title) textTitle47);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor49 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D50 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D45, rectangleAnchor49);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor51 = null;
        java.awt.geom.Point2D point2D52 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D45, rectangleAnchor51);
        org.jfree.chart.RenderingSource renderingSource53 = null;
        combinedRangeXYPlot0.select(0.0d, (double) (-16777216), rectangle2D45, renderingSource53);
        org.jfree.chart.ui.ProjectInfo projectInfo56 = org.jfree.chart.JFreeChart.INFO;
        org.jfree.chart.ui.Library[] libraryArray57 = projectInfo56.getOptionalLibraries();
        org.jfree.chart.axis.SegmentedTimeline segmentedTimeline58 = org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline();
        boolean boolean61 = segmentedTimeline58.containsDomainRange((long) 1, (long) (byte) 10);
        long long63 = segmentedTimeline58.toTimelineValue((long) '#');
        java.util.List list64 = segmentedTimeline58.getExceptionSegments();
        projectInfo56.setContributors(list64);
        // The following exception was thrown during execution in test generation
        try {
            combinedRangeXYPlot0.mapDatasetToRangeAxes((int) (short) -1, list64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires 'index' >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(textBlock25);
        org.junit.Assert.assertNull(datasetGroup28);
        org.junit.Assert.assertNotNull(chartChangeEventType33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(rectangle2D45);
        org.junit.Assert.assertNotNull(rectangleAnchor49);
        org.junit.Assert.assertNotNull(point2D50);
        org.junit.Assert.assertNotNull(point2D52);
        org.junit.Assert.assertNotNull(projectInfo56);
        org.junit.Assert.assertNotNull(libraryArray57);
        org.junit.Assert.assertNotNull(segmentedTimeline58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1577894400035L + "'", long63 == 1577894400035L);
        org.junit.Assert.assertNotNull(list64);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test078");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        numberAxis11.centerRange(10.0d);
        org.jfree.chart.axis.TickUnits tickUnits17 = new org.jfree.chart.axis.TickUnits();
        numberAxis11.setStandardTickUnits((org.jfree.chart.axis.TickUnitSource) tickUnits17);
        org.jfree.chart.axis.DateTickUnitType dateTickUnitType19 = org.jfree.chart.axis.DateTickUnitType.HOUR;
        org.jfree.chart.axis.DateTickUnit dateTickUnit21 = new org.jfree.chart.axis.DateTickUnit(dateTickUnitType19, 100);
        java.lang.String str23 = dateTickUnit21.valueToString((double) (short) 1);
        org.jfree.chart.title.TextTitle textTitle25 = new org.jfree.chart.title.TextTitle("");
        boolean boolean26 = textTitle25.getExpandToFitSpace();
        boolean boolean27 = dateTickUnit21.equals((java.lang.Object) boolean26);
        org.jfree.data.time.DateRange dateRange28 = new org.jfree.data.time.DateRange();
        java.util.Date date29 = dateRange28.getUpperDate();
        org.jfree.data.time.Month month30 = new org.jfree.data.time.Month(date29);
        java.util.Date date31 = dateTickUnit21.rollDate(date29);
        org.jfree.chart.plot.CategoryPlot categoryPlot32 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer34 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection35 = categoryPlot32.getDomainMarkers((int) 'a', layer34);
        org.jfree.data.category.CategoryDataset categoryDataset37 = null;
        categoryPlot32.setDataset(4, categoryDataset37);
        org.jfree.chart.plot.CategoryPlot categoryPlot39 = new org.jfree.chart.plot.CategoryPlot();
        int int40 = categoryPlot39.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation41 = categoryPlot39.getOrientation();
        categoryPlot32.setOrientation(plotOrientation41);
        org.jfree.chart.axis.AxisLocation axisLocation43 = categoryPlot32.getDomainAxisLocation();
        org.jfree.chart.axis.CategoryAxis categoryAxis45 = null;
        categoryPlot32.setDomainAxis(7, categoryAxis45, false);
        boolean boolean48 = dateTickUnit21.equals((java.lang.Object) categoryPlot32);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.TickUnit tickUnit49 = tickUnits17.getLargerTickUnit((org.jfree.chart.axis.TickUnit) dateTickUnit21);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNotNull(dateTickUnitType19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "12/31/69" + "'", str23, "12/31/69");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(date29);
        org.junit.Assert.assertEquals(date29.toString(), "Wed Dec 31 16:00:00 PST 1969");
        org.junit.Assert.assertNotNull(date31);
        org.junit.Assert.assertEquals(date31.toString(), "Sun Jan 04 20:00:00 PST 1970");
        org.junit.Assert.assertNotNull(layer34);
        org.junit.Assert.assertNull(collection35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(plotOrientation41);
        org.junit.Assert.assertNotNull(axisLocation43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test079");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D2 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.axis.ValueAxis valueAxis3 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot4 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis3);
        java.awt.Color color5 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot4.setRangeMinorGridlinePaint((java.awt.Paint) color5);
        boolean boolean7 = combinedDomainXYPlot4.canSelectByRegion();
        barRenderer3D2.addChangeListener((org.jfree.chart.event.RendererChangeListener) combinedDomainXYPlot4);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo10 = null;
        org.jfree.chart.entity.EntityCollection entityCollection11 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo12 = new org.jfree.chart.ChartRenderingInfo(entityCollection11);
        java.awt.Paint paint13 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean14 = chartRenderingInfo12.equals((java.lang.Object) paint13);
        java.awt.geom.Rectangle2D rectangle2D15 = chartRenderingInfo12.getChartArea();
        org.jfree.chart.title.TextTitle textTitle17 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity18 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D15, (org.jfree.chart.title.Title) textTitle17);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor19 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D20 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D15, rectangleAnchor19);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor21 = null;
        java.awt.geom.Point2D point2D22 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D15, rectangleAnchor21);
        combinedDomainXYPlot4.zoomDomainAxes((double) (-16777216), plotRenderingInfo10, point2D22);
        java.io.ObjectOutputStream objectOutputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.util.SerialUtilities.writePoint2D(point2D22, objectOutputStream24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'stream' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(color5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(rectangle2D15);
        org.junit.Assert.assertNotNull(rectangleAnchor19);
        org.junit.Assert.assertNotNull(point2D20);
        org.junit.Assert.assertNotNull(point2D22);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test080");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        numberAxis11.centerRange(10.0d);
        org.jfree.chart.axis.TickUnits tickUnits17 = new org.jfree.chart.axis.TickUnits();
        numberAxis11.setStandardTickUnits((org.jfree.chart.axis.TickUnitSource) tickUnits17);
        int int19 = tickUnits17.size();
        org.jfree.chart.axis.DateTickUnitType dateTickUnitType20 = org.jfree.chart.axis.DateTickUnitType.HOUR;
        org.jfree.chart.axis.DateTickUnit dateTickUnit22 = new org.jfree.chart.axis.DateTickUnit(dateTickUnitType20, 100);
        java.lang.String str24 = dateTickUnit22.valueToString((double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.TickUnit tickUnit25 = tickUnits17.getLargerTickUnit((org.jfree.chart.axis.TickUnit) dateTickUnit22);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(dateTickUnitType20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "12/31/69" + "'", str24, "12/31/69");
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test081");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean20 = xYAreaRenderer11.isSeriesVisible((-16777216));
        java.awt.Shape shape22 = xYAreaRenderer11.getLegendShape(0);
        java.awt.Shape shape24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        xYAreaRenderer11.setSeriesShape((int) (byte) 100, shape24, false);
        java.awt.Paint paint28 = xYAreaRenderer11.getSeriesItemLabelPaint(5);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator30 = null;
        xYAreaRenderer11.setBaseURLGenerator(xYURLGenerator30);
        java.awt.Color color32 = org.jfree.chart.ChartColor.LIGHT_GREEN;
        xYAreaRenderer11.setBaseFillPaint((java.awt.Paint) color32);
        org.jfree.chart.axis.TickType tickType34 = org.jfree.chart.axis.TickType.MINOR;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer36 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer36.clearSeriesStrokes(false);
        boolean boolean39 = xYAreaRenderer36.getPlotLines();
        xYAreaRenderer36.setAutoPopulateSeriesStroke(false);
        boolean boolean42 = tickType34.equals((java.lang.Object) false);
        org.jfree.chart.urls.StandardXYURLGenerator standardXYURLGenerator43 = new org.jfree.chart.urls.StandardXYURLGenerator();
        boolean boolean44 = tickType34.equals((java.lang.Object) standardXYURLGenerator43);
        xYAreaRenderer11.setBaseURLGenerator((org.jfree.chart.urls.XYURLGenerator) standardXYURLGenerator43, false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(shape22);
        org.junit.Assert.assertNotNull(shape24);
        org.junit.Assert.assertNull(paint28);
        org.junit.Assert.assertNotNull(color32);
        org.junit.Assert.assertNotNull(tickType34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test082");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        combinedRangeXYPlot0.setGap((double) (-16777216));
        org.jfree.chart.util.RectangleEdge rectangleEdge4 = combinedRangeXYPlot0.getRangeAxisEdge();
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D7 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = barRenderer3D7.getBaseToolTipGenerator();
        java.awt.Stroke stroke9 = barRenderer3D7.getBaseStroke();
        combinedRangeXYPlot0.setRangeGridlineStroke(stroke9);
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot12 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis11);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer14 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer14.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator17 = null;
        xYAreaRenderer14.setLegendItemURLGenerator(xYSeriesLabelGenerator17);
        xYAreaRenderer14.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean25 = xYAreaRenderer14.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot12.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer14);
        combinedDomainXYPlot12.clearDomainMarkers();
        java.awt.Font font29 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint30 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer33 = null;
        org.jfree.chart.text.TextBlock textBlock34 = org.jfree.chart.text.TextUtilities.createTextBlock("", font29, paint30, (float) (-1L), (int) (short) -1, textMeasurer33);
        combinedDomainXYPlot12.setDomainCrosshairPaint(paint30);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder36 = combinedDomainXYPlot12.getSeriesRenderingOrder();
        combinedDomainXYPlot12.clearDomainMarkers();
        // The following exception was thrown during execution in test generation
        try {
            combinedRangeXYPlot0.add((org.jfree.chart.plot.XYPlot) combinedDomainXYPlot12);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.plot.CombinedRangeXYPlot@6d297096 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(rectangleEdge4);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(font29);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertNotNull(textBlock34);
        org.junit.Assert.assertNotNull(seriesRenderingOrder36);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test083");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        numberAxis11.setLabelURL("org.jfree.chart.event.RendererChangeEvent[source=ItemLabelAnchor.INSIDE9]");
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test084");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean3 = xYAreaRenderer1.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint4 = xYAreaRenderer1.getBaseLegendTextPaint();
        java.awt.Stroke stroke6 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer1.setSeriesOutlineStroke(0, stroke6, false);
        org.jfree.chart.LegendItem legendItem11 = xYAreaRenderer1.getLegendItem(8, (int) (byte) 10);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot14 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis13);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer16 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer16.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator19 = null;
        xYAreaRenderer16.setLegendItemURLGenerator(xYSeriesLabelGenerator19);
        xYAreaRenderer16.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean27 = xYAreaRenderer16.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot14.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer16);
        org.jfree.chart.axis.ValueAxis valueAxis29 = null;
        int int30 = combinedDomainXYPlot14.getRangeAxisIndex(valueAxis29);
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        combinedDomainXYPlot14.setDomainAxis(valueAxis31);
        combinedDomainXYPlot14.clearRangeMarkers();
        org.jfree.data.time.Year year36 = new org.jfree.data.time.Year((int) (short) 0);
        long long37 = year36.getFirstMillisecond();
        org.jfree.data.time.Year year39 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis40 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year36, (org.jfree.data.time.RegularTimePeriod) year39);
        org.jfree.data.time.Year year43 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year45 = new org.jfree.data.time.Year((int) (short) 0);
        long long46 = year45.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis47 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year43, (org.jfree.data.time.RegularTimePeriod) year45);
        periodAxis40.setLast((org.jfree.data.time.RegularTimePeriod) year45);
        java.awt.Stroke stroke49 = periodAxis40.getMinorTickMarkStroke();
        java.lang.Class class50 = periodAxis40.getMajorTickTimePeriodClass();
        org.jfree.chart.plot.Marker marker51 = null;
        org.jfree.chart.entity.EntityCollection entityCollection52 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo53 = new org.jfree.chart.ChartRenderingInfo(entityCollection52);
        java.awt.Paint paint54 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean55 = chartRenderingInfo53.equals((java.lang.Object) paint54);
        java.awt.geom.Rectangle2D rectangle2D56 = chartRenderingInfo53.getChartArea();
        org.jfree.chart.title.TextTitle textTitle58 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity59 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D56, (org.jfree.chart.title.Title) textTitle58);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor60 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D61 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D56, rectangleAnchor60);
        xYAreaRenderer1.drawDomainMarker(graphics2D12, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot14, (org.jfree.chart.axis.ValueAxis) periodAxis40, marker51, rectangle2D56);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.ValueAxis valueAxis64 = combinedDomainXYPlot14.getDomainAxisForDataset((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Index -1 out of bounds.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(paint4);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNull(legendItem11);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-62167363200000L) + "'", long37 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-62167363200000L) + "'", long46 == (-62167363200000L));
        org.junit.Assert.assertNotNull(stroke49);
        org.junit.Assert.assertNotNull(class50);
        org.junit.Assert.assertNotNull(paint54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(rectangle2D56);
        org.junit.Assert.assertNotNull(rectangleAnchor60);
        org.junit.Assert.assertNotNull(point2D61);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test085");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        boolean boolean16 = combinedDomainXYPlot1.canSelectByPoint();
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.ValueAxis valueAxis18 = combinedDomainXYPlot1.getRangeAxisForDataset((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Index 97 out of bounds.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test086");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        java.awt.Paint paint8 = xYAreaRenderer1.getItemPaint((int) (byte) -1, 7, false);
        java.awt.Shape shape10 = xYAreaRenderer1.getLegendShape(8);
        org.jfree.chart.labels.XYToolTipGenerator xYToolTipGenerator11 = xYAreaRenderer1.getBaseToolTipGenerator();
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot13 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis12);
        java.awt.Color color14 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot13.setRangeMinorGridlinePaint((java.awt.Paint) color14);
        boolean boolean16 = combinedDomainXYPlot13.isDomainPannable();
        xYAreaRenderer1.setPlot((org.jfree.chart.plot.XYPlot) combinedDomainXYPlot13);
        java.awt.Paint paint18 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot13.setRangeMinorGridlinePaint(paint18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNull(shape10);
        org.junit.Assert.assertNull(xYToolTipGenerator11);
        org.junit.Assert.assertNotNull(color14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test087");
        org.jfree.data.xy.XYZDataset xYZDataset3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot();
        int int5 = categoryPlot4.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge9 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str10 = rectangleEdge9.toString();
        double double11 = categoryPlot4.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge9);
        boolean boolean12 = categoryPlot4.isRangeZoomable();
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = new org.jfree.chart.plot.CategoryPlot();
        int int14 = categoryPlot13.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation15 = categoryPlot13.getOrientation();
        categoryPlot4.setOrientation(plotOrientation15);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart20 = org.jfree.chart.ChartFactory.createBubbleChart("EXPAND", "RectangleEdge.RIGHT?series=5&amp;item=11", "Last", xYZDataset3, plotOrientation15, true, false, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@19b23a23 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RectangleEdge.RIGHT" + "'", str10, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 149.0d + "'", double11 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(plotOrientation15);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test088");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D2 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator3 = barRenderer3D2.getBaseToolTipGenerator();
        boolean boolean6 = barRenderer3D2.getItemVisible(0, 8);
        java.awt.Stroke stroke8 = barRenderer3D2.getSeriesOutlineStroke((int) (byte) 100);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = barRenderer3D2.getLegendItemURLGenerator();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        org.jfree.chart.util.Layer layer11 = org.jfree.chart.util.Layer.BACKGROUND;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer14 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection15 = categoryPlot12.getDomainMarkers((int) 'a', layer14);
        org.jfree.data.category.CategoryDataset categoryDataset17 = null;
        categoryPlot12.setDataset(4, categoryDataset17);
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot();
        int int20 = categoryPlot19.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation21 = categoryPlot19.getOrientation();
        categoryPlot12.setOrientation(plotOrientation21);
        boolean boolean23 = categoryPlot12.isDomainPannable();
        categoryPlot12.setRangeCrosshairValue((double) 10);
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot26 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        org.jfree.chart.LegendItemCollection legendItemCollection27 = combinedRangeXYPlot26.getLegendItems();
        categoryPlot12.setFixedLegendItems(legendItemCollection27);
        boolean boolean29 = layer11.equals((java.lang.Object) legendItemCollection27);
        // The following exception was thrown during execution in test generation
        try {
            barRenderer3D2.addAnnotation(categoryAnnotation10, layer11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(categoryToolTipGenerator3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNotNull(layer11);
        org.junit.Assert.assertNotNull(layer14);
        org.junit.Assert.assertNull(collection15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(plotOrientation21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(legendItemCollection27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test089");
        org.jfree.chart.renderer.xy.XYBarRenderer xYBarRenderer1 = new org.jfree.chart.renderer.xy.XYBarRenderer((double) 255);
        org.jfree.chart.axis.NumberAxis numberAxis3 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.data.Range range5 = null;
        org.jfree.chart.block.RectangleConstraint rectangleConstraint6 = new org.jfree.chart.block.RectangleConstraint(0.0d, range5);
        org.jfree.data.Range range9 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range12 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range13 = org.jfree.data.Range.combine(range9, range12);
        org.jfree.data.Range range14 = org.jfree.chart.axis.ValueAxis.DEFAULT_RANGE;
        org.jfree.data.Range range15 = org.jfree.data.Range.combine(range9, range14);
        org.jfree.chart.block.RectangleConstraint rectangleConstraint16 = rectangleConstraint6.toRangeWidth(range9);
        numberAxis3.setRangeWithMargins(range9, false, true);
        boolean boolean20 = xYBarRenderer1.equals((java.lang.Object) false);
        org.junit.Assert.assertNotNull(range13);
        org.junit.Assert.assertNotNull(range14);
        org.junit.Assert.assertNotNull(range15);
        org.junit.Assert.assertNotNull(rectangleConstraint16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test090");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape5 = barRenderer3D0.getBaseShape();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer8 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer8.clearSeriesStrokes(false);
        boolean boolean11 = xYAreaRenderer8.getPlotLines();
        boolean boolean12 = xYAreaRenderer8.getBaseItemLabelsVisible();
        java.awt.Paint paint14 = org.jfree.chart.plot.WaferMapPlot.DEFAULT_CROSSHAIR_PAINT;
        xYAreaRenderer8.setSeriesFillPaint(7, paint14);
        barRenderer3D0.setSeriesFillPaint(10, paint14);
        org.jfree.data.category.CategoryDataset categoryDataset17 = null;
        org.jfree.data.Range range18 = barRenderer3D0.findRangeBounds(categoryDataset17);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = barRenderer3D0.getBaseURLGenerator();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        barRenderer3D0.setBaseURLGenerator(categoryURLGenerator20, false);
        java.awt.Graphics2D graphics2D23 = null;
        org.jfree.chart.axis.DateTickUnitType dateTickUnitType24 = org.jfree.chart.axis.DateTickUnitType.HOUR;
        org.jfree.chart.axis.DateTickUnit dateTickUnit26 = new org.jfree.chart.axis.DateTickUnit(dateTickUnitType24, 100);
        java.lang.String str28 = dateTickUnit26.valueToString((double) (short) 1);
        org.jfree.chart.title.TextTitle textTitle30 = new org.jfree.chart.title.TextTitle("");
        boolean boolean31 = textTitle30.getExpandToFitSpace();
        boolean boolean32 = dateTickUnit26.equals((java.lang.Object) boolean31);
        org.jfree.data.time.DateRange dateRange33 = new org.jfree.data.time.DateRange();
        java.util.Date date34 = dateRange33.getUpperDate();
        org.jfree.data.time.Month month35 = new org.jfree.data.time.Month(date34);
        java.util.Date date36 = dateTickUnit26.rollDate(date34);
        org.jfree.chart.plot.CategoryPlot categoryPlot37 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer39 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection40 = categoryPlot37.getDomainMarkers((int) 'a', layer39);
        org.jfree.data.category.CategoryDataset categoryDataset42 = null;
        categoryPlot37.setDataset(4, categoryDataset42);
        org.jfree.chart.plot.CategoryPlot categoryPlot44 = new org.jfree.chart.plot.CategoryPlot();
        int int45 = categoryPlot44.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation46 = categoryPlot44.getOrientation();
        categoryPlot37.setOrientation(plotOrientation46);
        org.jfree.chart.axis.AxisLocation axisLocation48 = categoryPlot37.getDomainAxisLocation();
        org.jfree.chart.axis.CategoryAxis categoryAxis50 = null;
        categoryPlot37.setDomainAxis(7, categoryAxis50, false);
        boolean boolean53 = dateTickUnit26.equals((java.lang.Object) categoryPlot37);
        org.jfree.chart.axis.ValueAxis valueAxis54 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot55 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis54);
        java.awt.Graphics2D graphics2D56 = null;
        org.jfree.chart.entity.EntityCollection entityCollection57 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo58 = new org.jfree.chart.ChartRenderingInfo(entityCollection57);
        java.awt.Paint paint59 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean60 = chartRenderingInfo58.equals((java.lang.Object) paint59);
        java.awt.geom.Rectangle2D rectangle2D61 = chartRenderingInfo58.getChartArea();
        java.util.List list62 = null;
        combinedDomainXYPlot55.drawDomainGridlines(graphics2D56, rectangle2D61, list62);
        org.jfree.chart.axis.NumberAxis numberAxis65 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity68 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D61, (org.jfree.chart.axis.Axis) numberAxis65, "", "DatasetRenderingOrder.FORWARD");
        numberAxis65.centerRange(10.0d);
        numberAxis65.setRangeWithMargins(1.0E-8d, (double) (short) 1);
        org.jfree.chart.entity.EntityCollection entityCollection74 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo75 = new org.jfree.chart.ChartRenderingInfo(entityCollection74);
        java.awt.Paint paint76 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean77 = chartRenderingInfo75.equals((java.lang.Object) paint76);
        java.awt.geom.Rectangle2D rectangle2D78 = chartRenderingInfo75.getChartArea();
        java.awt.Paint paint80 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        org.jfree.chart.title.TextTitle textTitle82 = new org.jfree.chart.title.TextTitle("");
        boolean boolean83 = textTitle82.getExpandToFitSpace();
        textTitle82.setText("");
        java.awt.Stroke stroke86 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        boolean boolean87 = textTitle82.equals((java.lang.Object) stroke86);
        // The following exception was thrown during execution in test generation
        try {
            barRenderer3D0.drawRangeLine(graphics2D23, categoryPlot37, (org.jfree.chart.axis.ValueAxis) numberAxis65, rectangle2D78, 0.2d, paint80, stroke86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(range18);
        org.junit.Assert.assertNull(categoryURLGenerator19);
        org.junit.Assert.assertNotNull(dateTickUnitType24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "12/31/69" + "'", str28, "12/31/69");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(date34);
        org.junit.Assert.assertEquals(date34.toString(), "Wed Dec 31 16:00:00 PST 1969");
        org.junit.Assert.assertNotNull(date36);
        org.junit.Assert.assertEquals(date36.toString(), "Sun Jan 04 20:00:00 PST 1970");
        org.junit.Assert.assertNotNull(layer39);
        org.junit.Assert.assertNull(collection40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(plotOrientation46);
        org.junit.Assert.assertNotNull(axisLocation48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(paint59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(rectangle2D61);
        org.junit.Assert.assertNotNull(paint76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(rectangle2D78);
        org.junit.Assert.assertNotNull(paint80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(stroke86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test091");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean3 = xYAreaRenderer1.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint4 = xYAreaRenderer1.getBaseLegendTextPaint();
        java.awt.Stroke stroke6 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer1.setSeriesOutlineStroke(0, stroke6, false);
        org.jfree.chart.LegendItem legendItem11 = xYAreaRenderer1.getLegendItem(8, (int) (byte) 10);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot14 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis13);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer16 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer16.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator19 = null;
        xYAreaRenderer16.setLegendItemURLGenerator(xYSeriesLabelGenerator19);
        xYAreaRenderer16.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean27 = xYAreaRenderer16.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot14.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer16);
        org.jfree.chart.axis.ValueAxis valueAxis29 = null;
        int int30 = combinedDomainXYPlot14.getRangeAxisIndex(valueAxis29);
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        combinedDomainXYPlot14.setDomainAxis(valueAxis31);
        combinedDomainXYPlot14.clearRangeMarkers();
        org.jfree.data.time.Year year36 = new org.jfree.data.time.Year((int) (short) 0);
        long long37 = year36.getFirstMillisecond();
        org.jfree.data.time.Year year39 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis40 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year36, (org.jfree.data.time.RegularTimePeriod) year39);
        org.jfree.data.time.Year year43 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year45 = new org.jfree.data.time.Year((int) (short) 0);
        long long46 = year45.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis47 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year43, (org.jfree.data.time.RegularTimePeriod) year45);
        periodAxis40.setLast((org.jfree.data.time.RegularTimePeriod) year45);
        java.awt.Stroke stroke49 = periodAxis40.getMinorTickMarkStroke();
        java.lang.Class class50 = periodAxis40.getMajorTickTimePeriodClass();
        org.jfree.chart.plot.Marker marker51 = null;
        org.jfree.chart.entity.EntityCollection entityCollection52 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo53 = new org.jfree.chart.ChartRenderingInfo(entityCollection52);
        java.awt.Paint paint54 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean55 = chartRenderingInfo53.equals((java.lang.Object) paint54);
        java.awt.geom.Rectangle2D rectangle2D56 = chartRenderingInfo53.getChartArea();
        org.jfree.chart.title.TextTitle textTitle58 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity59 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D56, (org.jfree.chart.title.Title) textTitle58);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor60 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D61 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D56, rectangleAnchor60);
        xYAreaRenderer1.drawDomainMarker(graphics2D12, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot14, (org.jfree.chart.axis.ValueAxis) periodAxis40, marker51, rectangle2D56);
        java.awt.Paint paint63 = xYAreaRenderer1.getBasePaint();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(paint4);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNull(legendItem11);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-62167363200000L) + "'", long37 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-62167363200000L) + "'", long46 == (-62167363200000L));
        org.junit.Assert.assertNotNull(stroke49);
        org.junit.Assert.assertNotNull(class50);
        org.junit.Assert.assertNotNull(paint54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(rectangle2D56);
        org.junit.Assert.assertNotNull(rectangleAnchor60);
        org.junit.Assert.assertNotNull(point2D61);
        org.junit.Assert.assertNotNull(paint63);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test092");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        combinedDomainXYPlot1.setDomainAxis(valueAxis18);
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot21 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis20);
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.entity.EntityCollection entityCollection23 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo24 = new org.jfree.chart.ChartRenderingInfo(entityCollection23);
        java.awt.Paint paint25 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean26 = chartRenderingInfo24.equals((java.lang.Object) paint25);
        java.awt.geom.Rectangle2D rectangle2D27 = chartRenderingInfo24.getChartArea();
        java.util.List list28 = null;
        combinedDomainXYPlot21.drawDomainGridlines(graphics2D22, rectangle2D27, list28);
        org.jfree.chart.axis.NumberAxis numberAxis31 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity34 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D27, (org.jfree.chart.axis.Axis) numberAxis31, "", "DatasetRenderingOrder.FORWARD");
        combinedDomainXYPlot1.setRangeAxis((org.jfree.chart.axis.ValueAxis) numberAxis31);
        numberAxis31.pan((double) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangle2D27);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test093");
        org.jfree.chart.title.TextTitle textTitle1 = new org.jfree.chart.title.TextTitle("");
        boolean boolean2 = textTitle1.getExpandToFitSpace();
        textTitle1.setText("");
        java.lang.String str5 = textTitle1.getID();
        java.awt.Font font6 = textTitle1.getFont();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer8 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer8.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator11 = null;
        xYAreaRenderer8.setLegendItemURLGenerator(xYSeriesLabelGenerator11);
        xYAreaRenderer8.setSeriesVisibleInLegend((int) (byte) 10, (java.lang.Boolean) false);
        xYAreaRenderer8.setBaseItemLabelsVisible(true);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator19 = null;
        xYAreaRenderer8.setSeriesURLGenerator((int) (short) 100, xYURLGenerator19, false);
        java.awt.Paint paint25 = xYAreaRenderer8.getItemFillPaint((int) (short) 10, (int) 'a', true);
        textTitle1.setBackgroundPaint(paint25);
        double double27 = textTitle1.getContentYOffset();
        textTitle1.setVisible(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(font6);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test094");
        org.jfree.chart.util.LogFormat logFormat4 = new org.jfree.chart.util.LogFormat((double) 7, "RectangleEdge.RIGHT", "", false);
        java.lang.StringBuffer stringBuffer6 = null;
        java.text.FieldPosition fieldPosition7 = null;
        java.lang.StringBuffer stringBuffer8 = logFormat4.format((long) (short) 0, stringBuffer6, fieldPosition7);
        org.jfree.chart.util.LogFormat logFormat14 = new org.jfree.chart.util.LogFormat((double) 7, "RectangleEdge.RIGHT", "", false);
        org.jfree.chart.util.LogFormat logFormat20 = new org.jfree.chart.util.LogFormat((double) 7, "RectangleEdge.RIGHT", "", false);
        java.lang.StringBuffer stringBuffer22 = null;
        java.text.FieldPosition fieldPosition23 = null;
        java.lang.StringBuffer stringBuffer24 = logFormat20.format((long) (short) 0, stringBuffer22, fieldPosition23);
        java.text.FieldPosition fieldPosition25 = null;
        java.lang.StringBuffer stringBuffer26 = logFormat14.format((long) (short) 0, stringBuffer24, fieldPosition25);
        java.text.FieldPosition fieldPosition27 = null;
        java.lang.StringBuffer stringBuffer28 = logFormat4.format((double) 0L, stringBuffer24, fieldPosition27);
        org.jfree.chart.labels.StandardXYToolTipGenerator standardXYToolTipGenerator29 = org.jfree.chart.labels.StandardXYToolTipGenerator.getTimeSeriesInstance();
        java.text.NumberFormat numberFormat30 = standardXYToolTipGenerator29.getXFormat();
        logFormat4.setExponentFormat(numberFormat30);
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot33 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis32);
        java.awt.Color color34 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot33.setRangeMinorGridlinePaint((java.awt.Paint) color34);
        boolean boolean36 = combinedDomainXYPlot33.canSelectByRegion();
        org.jfree.chart.axis.AxisSpace axisSpace37 = null;
        combinedDomainXYPlot33.setFixedRangeAxisSpace(axisSpace37, false);
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator40 = logFormat4.formatToCharacterIterator((java.lang.Object) axisSpace37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(stringBuffer8);
// flaky:         org.junit.Assert.assertEquals(stringBuffer8.toString(), "\u221e");
        org.junit.Assert.assertNotNull(stringBuffer24);
// flaky:         org.junit.Assert.assertEquals(stringBuffer24.toString(), "\u221e");
        org.junit.Assert.assertNotNull(stringBuffer26);
// flaky:         org.junit.Assert.assertEquals(stringBuffer26.toString(), "\u221e");
        org.junit.Assert.assertNotNull(stringBuffer28);
// flaky:         org.junit.Assert.assertEquals(stringBuffer28.toString(), "\u221e");
        org.junit.Assert.assertNotNull(standardXYToolTipGenerator29);
        org.junit.Assert.assertNotNull(numberFormat30);
        org.junit.Assert.assertNotNull(color34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test095");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier7 = categoryPlot0.getDrawingSupplier();
        categoryPlot0.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace9 = null;
        categoryPlot0.setFixedDomainAxisSpace(axisSpace9);
        org.jfree.chart.axis.CategoryAxis3D categoryAxis3D12 = new org.jfree.chart.axis.CategoryAxis3D("hi!");
        categoryPlot0.setDomainAxis((org.jfree.chart.axis.CategoryAxis) categoryAxis3D12);
        categoryAxis3D12.configure();
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot21 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis20);
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.entity.EntityCollection entityCollection23 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo24 = new org.jfree.chart.ChartRenderingInfo(entityCollection23);
        java.awt.Paint paint25 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean26 = chartRenderingInfo24.equals((java.lang.Object) paint25);
        java.awt.geom.Rectangle2D rectangle2D27 = chartRenderingInfo24.getChartArea();
        java.util.List list28 = null;
        combinedDomainXYPlot21.drawDomainGridlines(graphics2D22, rectangle2D27, list28);
        org.jfree.chart.axis.NumberAxis numberAxis31 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity34 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D27, (org.jfree.chart.axis.Axis) numberAxis31, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = new org.jfree.chart.plot.CategoryPlot();
        int int36 = categoryPlot35.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge40 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str41 = rectangleEdge40.toString();
        double double42 = categoryPlot35.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge40);
        boolean boolean43 = categoryPlot35.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis45 = categoryPlot35.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge46 = categoryPlot35.getDomainAxisEdge();
        double double47 = categoryAxis3D12.getCategorySeriesMiddle(11, (int) ' ', (int) (byte) 0, (int) (short) 100, 0.0d, rectangle2D27, rectangleEdge46);
        boolean boolean48 = org.jfree.chart.util.RectangleEdge.isTopOrBottom(rectangleEdge46);
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertNotNull(drawingSupplier7);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangle2D27);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "RectangleEdge.RIGHT" + "'", str41, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 149.0d + "'", double42 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(categoryAxis45);
        org.junit.Assert.assertNotNull(rectangleEdge46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test096");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator4 = null;
        xYAreaRenderer1.setLegendItemURLGenerator(xYSeriesLabelGenerator4);
        xYAreaRenderer1.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean10 = xYAreaRenderer1.isSeriesVisible((-16777216));
        java.awt.Shape shape11 = xYAreaRenderer1.getBaseShape();
        java.awt.Paint paint12 = null;
        // The following exception was thrown during execution in test generation
        try {
            xYAreaRenderer1.setBaseFillPaint(paint12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(shape11);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test097");
        org.jfree.chart.axis.DateTickUnitType dateTickUnitType0 = org.jfree.chart.axis.DateTickUnitType.HOUR;
        org.jfree.chart.axis.DateTickUnit dateTickUnit2 = new org.jfree.chart.axis.DateTickUnit(dateTickUnitType0, 100);
        java.lang.String str4 = dateTickUnit2.valueToString((double) (short) 1);
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        boolean boolean7 = textTitle6.getExpandToFitSpace();
        boolean boolean8 = dateTickUnit2.equals((java.lang.Object) boolean7);
        org.jfree.data.time.DateRange dateRange9 = new org.jfree.data.time.DateRange();
        java.util.Date date10 = dateRange9.getUpperDate();
        org.jfree.data.time.Month month11 = new org.jfree.data.time.Month(date10);
        java.util.Date date12 = dateTickUnit2.rollDate(date10);
        int int14 = dateTickUnit2.compareTo((java.lang.Object) (-16777216));
        org.junit.Assert.assertNotNull(dateTickUnitType0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "12/31/69" + "'", str4, "12/31/69");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(date10);
        org.junit.Assert.assertEquals(date10.toString(), "Wed Dec 31 16:00:00 PST 1969");
        org.junit.Assert.assertNotNull(date12);
        org.junit.Assert.assertEquals(date12.toString(), "Sun Jan 04 20:00:00 PST 1970");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test098");
        java.awt.Color color0 = java.awt.Color.YELLOW;
        org.junit.Assert.assertNotNull(color0);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test099");
        org.jfree.chart.renderer.category.GradientBarPainter gradientBarPainter0 = new org.jfree.chart.renderer.category.GradientBarPainter();
        java.awt.Graphics2D graphics2D1 = null;
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D2 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font6 = barRenderer3D2.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer8 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer8.clearSeriesStrokes(false);
        boolean boolean11 = xYAreaRenderer8.getPlotLines();
        java.awt.Paint paint15 = xYAreaRenderer8.getItemPaint((int) (byte) -1, 7, false);
        barRenderer3D2.setBaseFillPaint(paint15);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = barRenderer3D2.getBasePositiveItemLabelPosition();
        barRenderer3D2.removeAnnotations();
        org.jfree.chart.entity.EntityCollection entityCollection22 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo23 = new org.jfree.chart.ChartRenderingInfo(entityCollection22);
        java.awt.Paint paint24 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean25 = chartRenderingInfo23.equals((java.lang.Object) paint24);
        java.awt.geom.Rectangle2D rectangle2D26 = chartRenderingInfo23.getChartArea();
        org.jfree.chart.title.TextTitle textTitle28 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity29 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D26, (org.jfree.chart.title.Title) textTitle28);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor30 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D31 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D26, rectangleAnchor30);
        org.jfree.data.general.PieDataset pieDataset32 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity38 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D26, pieDataset32, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis39 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot40 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis39);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer42 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer42.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator45 = null;
        xYAreaRenderer42.setLegendItemURLGenerator(xYSeriesLabelGenerator45);
        xYAreaRenderer42.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean53 = xYAreaRenderer42.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot40.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer42);
        combinedDomainXYPlot40.clearDomainMarkers();
        java.awt.Font font57 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint58 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer61 = null;
        org.jfree.chart.text.TextBlock textBlock62 = org.jfree.chart.text.TextUtilities.createTextBlock("", font57, paint58, (float) (-1L), (int) (short) -1, textMeasurer61);
        combinedDomainXYPlot40.setDomainCrosshairPaint(paint58);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder64 = combinedDomainXYPlot40.getSeriesRenderingOrder();
        java.awt.Paint paint65 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot40.setRangeTickBandPaint(paint65);
        org.jfree.chart.title.LegendGraphic legendGraphic67 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D26, paint65);
        org.jfree.chart.util.RectangleEdge rectangleEdge68 = null;
        // The following exception was thrown during execution in test generation
        try {
            gradientBarPainter0.paintBarShadow(graphics2D1, (org.jfree.chart.renderer.category.BarRenderer) barRenderer3D2, 2958465, (-16777116), true, (java.awt.geom.RectangularShape) rectangle2D26, rectangleEdge68, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(font6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(rectangle2D26);
        org.junit.Assert.assertNotNull(rectangleAnchor30);
        org.junit.Assert.assertNotNull(point2D31);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(font57);
        org.junit.Assert.assertNotNull(paint58);
        org.junit.Assert.assertNotNull(textBlock62);
        org.junit.Assert.assertNotNull(seriesRenderingOrder64);
        org.junit.Assert.assertNotNull(paint65);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test100");
        org.jfree.chart.plot.PiePlot piePlot0 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup1 = piePlot0.getDatasetGroup();
        int int2 = piePlot0.getBackgroundImageAlignment();
        boolean boolean3 = piePlot0.getAutoPopulateSectionOutlineStroke();
        boolean boolean4 = piePlot0.isNotify();
        java.awt.Paint paint6 = null;
        piePlot0.setSectionPaint((java.lang.Comparable) 100.0d, paint6);
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer11 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection12 = categoryPlot9.getDomainMarkers((int) 'a', layer11);
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        categoryPlot9.setDataset(4, categoryDataset14);
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot();
        int int17 = categoryPlot16.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation18 = categoryPlot16.getOrientation();
        categoryPlot9.setOrientation(plotOrientation18);
        boolean boolean20 = categoryPlot9.isDomainPannable();
        categoryPlot9.setRangeCrosshairValue((double) 10);
        java.awt.Graphics2D graphics2D23 = null;
        org.jfree.chart.entity.EntityCollection entityCollection24 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo25 = new org.jfree.chart.ChartRenderingInfo(entityCollection24);
        java.awt.Paint paint26 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean27 = chartRenderingInfo25.equals((java.lang.Object) paint26);
        java.awt.geom.Rectangle2D rectangle2D28 = chartRenderingInfo25.getChartArea();
        org.jfree.chart.title.TextTitle textTitle30 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity31 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D28, (org.jfree.chart.title.Title) textTitle30);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor32 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D33 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D28, rectangleAnchor32);
        org.jfree.data.general.PieDataset pieDataset34 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity40 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D28, pieDataset34, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.AxisSpace axisSpace41 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis43 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot44 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis43);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer46 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer46.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator49 = null;
        xYAreaRenderer46.setLegendItemURLGenerator(xYSeriesLabelGenerator49);
        xYAreaRenderer46.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean57 = xYAreaRenderer46.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot44.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer46);
        org.jfree.chart.axis.ValueAxis valueAxis59 = null;
        int int60 = combinedDomainXYPlot44.getRangeAxisIndex(valueAxis59);
        org.jfree.chart.axis.ValueAxis valueAxis61 = null;
        combinedDomainXYPlot44.setDomainAxis(valueAxis61);
        org.jfree.chart.util.RectangleEdge rectangleEdge64 = combinedDomainXYPlot44.getDomainAxisEdge(0);
        axisSpace41.add((double) 10L, rectangleEdge64);
        org.jfree.chart.axis.AxisSpace axisSpace66 = categoryPlot9.calculateDomainAxisSpace(graphics2D23, rectangle2D28, axisSpace41);
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot67 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list68 = combinedRangeXYPlot67.getSubplots();
        combinedRangeXYPlot67.setGap((double) (-16777216));
        org.jfree.chart.entity.EntityCollection entityCollection73 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo74 = new org.jfree.chart.ChartRenderingInfo(entityCollection73);
        java.awt.Paint paint75 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean76 = chartRenderingInfo74.equals((java.lang.Object) paint75);
        java.awt.geom.Rectangle2D rectangle2D77 = chartRenderingInfo74.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo78 = chartRenderingInfo74.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo79 = plotRenderingInfo78.getOwner();
        combinedRangeXYPlot67.handleClick((-9999), 5, plotRenderingInfo78);
        // The following exception was thrown during execution in test generation
        try {
            piePlot0.drawPie(graphics2D8, rectangle2D28, plotRenderingInfo78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(datasetGroup1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 15 + "'", int2 == 15);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(layer11);
        org.junit.Assert.assertNull(collection12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(plotOrientation18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(rectangle2D28);
        org.junit.Assert.assertNotNull(rectangleAnchor32);
        org.junit.Assert.assertNotNull(point2D33);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge64);
        org.junit.Assert.assertNotNull(axisSpace66);
        org.junit.Assert.assertNotNull(list68);
        org.junit.Assert.assertNotNull(paint75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(rectangle2D77);
        org.junit.Assert.assertNotNull(plotRenderingInfo78);
        org.junit.Assert.assertNotNull(chartRenderingInfo79);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test101");
        org.jfree.data.time.Year year2 = new org.jfree.data.time.Year((int) (short) 0);
        long long3 = year2.getFirstMillisecond();
        org.jfree.data.time.Year year5 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis6 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year2, (org.jfree.data.time.RegularTimePeriod) year5);
        org.jfree.data.time.Year year9 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year11 = new org.jfree.data.time.Year((int) (short) 0);
        long long12 = year11.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis13 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year9, (org.jfree.data.time.RegularTimePeriod) year11);
        periodAxis6.setLast((org.jfree.data.time.RegularTimePeriod) year11);
        periodAxis6.setLowerMargin((double) 1577894400035L);
        java.awt.Graphics2D graphics2D17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot20 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis19);
        java.awt.Graphics2D graphics2D21 = null;
        org.jfree.chart.entity.EntityCollection entityCollection22 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo23 = new org.jfree.chart.ChartRenderingInfo(entityCollection22);
        java.awt.Paint paint24 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean25 = chartRenderingInfo23.equals((java.lang.Object) paint24);
        java.awt.geom.Rectangle2D rectangle2D26 = chartRenderingInfo23.getChartArea();
        java.util.List list27 = null;
        combinedDomainXYPlot20.drawDomainGridlines(graphics2D21, rectangle2D26, list27);
        org.jfree.chart.axis.NumberAxis numberAxis30 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity33 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D26, (org.jfree.chart.axis.Axis) numberAxis30, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.axis.ValueAxis valueAxis34 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot35 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis34);
        java.awt.Graphics2D graphics2D36 = null;
        org.jfree.chart.entity.EntityCollection entityCollection37 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo38 = new org.jfree.chart.ChartRenderingInfo(entityCollection37);
        java.awt.Paint paint39 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean40 = chartRenderingInfo38.equals((java.lang.Object) paint39);
        java.awt.geom.Rectangle2D rectangle2D41 = chartRenderingInfo38.getChartArea();
        java.util.List list42 = null;
        combinedDomainXYPlot35.drawDomainGridlines(graphics2D36, rectangle2D41, list42);
        org.jfree.chart.plot.CategoryPlot categoryPlot44 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot44.clearAnnotations();
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent46 = null;
        categoryPlot44.rendererChanged(rendererChangeEvent46);
        org.jfree.chart.util.RectangleInsets rectangleInsets48 = categoryPlot44.getAxisOffset();
        org.jfree.chart.util.RectangleEdge rectangleEdge50 = categoryPlot44.getRangeAxisEdge((int) (byte) -1);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.AxisState axisState52 = periodAxis6.draw(graphics2D17, (double) 11, rectangle2D26, rectangle2D41, rectangleEdge50, plotRenderingInfo51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-62167363200000L) + "'", long3 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-62167363200000L) + "'", long12 == (-62167363200000L));
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(rectangle2D26);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(rectangle2D41);
        org.junit.Assert.assertNotNull(rectangleInsets48);
        org.junit.Assert.assertNotNull(rectangleEdge50);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test102");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = new org.jfree.chart.plot.CategoryPlot();
        int int8 = categoryPlot7.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation9 = categoryPlot7.getOrientation();
        categoryPlot0.setOrientation(plotOrientation9);
        boolean boolean11 = categoryPlot0.isDomainPannable();
        categoryPlot0.setRangeCrosshairValue((double) 10);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.entity.EntityCollection entityCollection15 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo16 = new org.jfree.chart.ChartRenderingInfo(entityCollection15);
        java.awt.Paint paint17 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean18 = chartRenderingInfo16.equals((java.lang.Object) paint17);
        java.awt.geom.Rectangle2D rectangle2D19 = chartRenderingInfo16.getChartArea();
        org.jfree.chart.title.TextTitle textTitle21 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity22 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D19, (org.jfree.chart.title.Title) textTitle21);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor23 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D24 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D19, rectangleAnchor23);
        org.jfree.data.general.PieDataset pieDataset25 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity31 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D19, pieDataset25, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.AxisSpace axisSpace32 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis34 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot35 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis34);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer37 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer37.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator40 = null;
        xYAreaRenderer37.setLegendItemURLGenerator(xYSeriesLabelGenerator40);
        xYAreaRenderer37.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean48 = xYAreaRenderer37.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot35.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer37);
        org.jfree.chart.axis.ValueAxis valueAxis50 = null;
        int int51 = combinedDomainXYPlot35.getRangeAxisIndex(valueAxis50);
        org.jfree.chart.axis.ValueAxis valueAxis52 = null;
        combinedDomainXYPlot35.setDomainAxis(valueAxis52);
        org.jfree.chart.util.RectangleEdge rectangleEdge55 = combinedDomainXYPlot35.getDomainAxisEdge(0);
        axisSpace32.add((double) 10L, rectangleEdge55);
        org.jfree.chart.axis.AxisSpace axisSpace57 = categoryPlot0.calculateDomainAxisSpace(graphics2D14, rectangle2D19, axisSpace32);
        org.jfree.chart.axis.SegmentedTimeline segmentedTimeline59 = org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline();
        boolean boolean62 = segmentedTimeline59.containsDomainRange((long) 1, (long) (byte) 10);
        long long64 = segmentedTimeline59.toTimelineValue((long) '#');
        java.util.List list65 = segmentedTimeline59.getExceptionSegments();
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot0.mapDatasetToDomainAxes(11, list65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Empty list not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(plotOrientation9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(rectangle2D19);
        org.junit.Assert.assertNotNull(rectangleAnchor23);
        org.junit.Assert.assertNotNull(point2D24);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge55);
        org.junit.Assert.assertNotNull(axisSpace57);
        org.junit.Assert.assertNotNull(segmentedTimeline59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1577894400035L + "'", long64 == 1577894400035L);
        org.junit.Assert.assertNotNull(list65);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test103");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier7 = categoryPlot0.getDrawingSupplier();
        categoryPlot0.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace9 = null;
        categoryPlot0.setFixedDomainAxisSpace(axisSpace9);
        categoryPlot0.setCrosshairDatasetIndex((int) (short) 100);
        java.awt.Color color13 = java.awt.Color.blue;
        int int14 = color13.getBlue();
        categoryPlot0.setRangeMinorGridlinePaint((java.awt.Paint) color13);
        java.lang.Comparable comparable16 = null;
        categoryPlot0.setDomainCrosshairColumnKey(comparable16);
        org.jfree.chart.title.LegendTitle legendTitle18 = new org.jfree.chart.title.LegendTitle((org.jfree.chart.LegendItemSource) categoryPlot0);
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertNotNull(drawingSupplier7);
        org.junit.Assert.assertNotNull(color13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 255 + "'", int14 == 255);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test104");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator7 = xYAreaRenderer1.getItemLabelGenerator((int) (short) -1, 7, false);
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot9 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list10 = combinedRangeXYPlot9.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot12 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis11);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer14 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer14.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator17 = null;
        xYAreaRenderer14.setLegendItemURLGenerator(xYSeriesLabelGenerator17);
        xYAreaRenderer14.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean25 = xYAreaRenderer14.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot12.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer14);
        combinedDomainXYPlot12.clearDomainMarkers();
        java.awt.Font font29 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint30 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer33 = null;
        org.jfree.chart.text.TextBlock textBlock34 = org.jfree.chart.text.TextUtilities.createTextBlock("", font29, paint30, (float) (-1L), (int) (short) -1, textMeasurer33);
        combinedDomainXYPlot12.setDomainCrosshairPaint(paint30);
        org.jfree.chart.plot.PiePlot piePlot36 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup37 = piePlot36.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener38 = null;
        piePlot36.addChangeListener(plotChangeListener38);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent40 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot36);
        combinedDomainXYPlot12.plotChanged(plotChangeEvent40);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType42 = plotChangeEvent40.getType();
        combinedRangeXYPlot9.plotChanged(plotChangeEvent40);
        org.jfree.chart.plot.IntervalMarker intervalMarker46 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        boolean boolean47 = combinedRangeXYPlot9.removeRangeMarker((org.jfree.chart.plot.Marker) intervalMarker46);
        org.jfree.chart.entity.EntityCollection entityCollection50 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo51 = new org.jfree.chart.ChartRenderingInfo(entityCollection50);
        java.awt.Paint paint52 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean53 = chartRenderingInfo51.equals((java.lang.Object) paint52);
        java.awt.geom.Rectangle2D rectangle2D54 = chartRenderingInfo51.getChartArea();
        org.jfree.chart.title.TextTitle textTitle56 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity57 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D54, (org.jfree.chart.title.Title) textTitle56);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor58 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D59 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D54, rectangleAnchor58);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor60 = null;
        java.awt.geom.Point2D point2D61 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D54, rectangleAnchor60);
        org.jfree.chart.RenderingSource renderingSource62 = null;
        combinedRangeXYPlot9.select(0.0d, (double) (-16777216), rectangle2D54, renderingSource62);
        xYAreaRenderer1.setSeriesShape((int) 'a', (java.awt.Shape) rectangle2D54);
        org.junit.Assert.assertNull(xYItemLabelGenerator7);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(font29);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertNotNull(textBlock34);
        org.junit.Assert.assertNull(datasetGroup37);
        org.junit.Assert.assertNotNull(chartChangeEventType42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(paint52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(rectangle2D54);
        org.junit.Assert.assertNotNull(rectangleAnchor58);
        org.junit.Assert.assertNotNull(point2D59);
        org.junit.Assert.assertNotNull(point2D61);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test105");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        org.jfree.chart.plot.PiePlot piePlot1 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup2 = piePlot1.getDatasetGroup();
        int int3 = piePlot1.getBackgroundImageAlignment();
        boolean boolean4 = piePlot1.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D5 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo6 = null;
        piePlot1.createAndAddEntity(rectangle2D5, plotRenderingInfo6, "hi!", "LGPL");
        java.awt.Paint paint10 = piePlot1.getLabelPaint();
        java.awt.Stroke stroke11 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        piePlot1.setOutlineStroke(stroke11);
        combinedDomainXYPlot0.setDomainMinorGridlineStroke(stroke11);
        int int14 = combinedDomainXYPlot0.getDatasetCount();
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer17 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection18 = categoryPlot15.getDomainMarkers((int) 'a', layer17);
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        categoryPlot15.setDataset(4, categoryDataset20);
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = new org.jfree.chart.plot.CategoryPlot();
        int int23 = categoryPlot22.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation24 = categoryPlot22.getOrientation();
        categoryPlot15.setOrientation(plotOrientation24);
        boolean boolean26 = categoryPlot15.isDomainPannable();
        categoryPlot15.setRangeCrosshairValue((double) 10);
        java.awt.Graphics2D graphics2D29 = null;
        org.jfree.chart.entity.EntityCollection entityCollection30 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo31 = new org.jfree.chart.ChartRenderingInfo(entityCollection30);
        java.awt.Paint paint32 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean33 = chartRenderingInfo31.equals((java.lang.Object) paint32);
        java.awt.geom.Rectangle2D rectangle2D34 = chartRenderingInfo31.getChartArea();
        org.jfree.chart.title.TextTitle textTitle36 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity37 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D34, (org.jfree.chart.title.Title) textTitle36);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor38 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D39 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D34, rectangleAnchor38);
        org.jfree.data.general.PieDataset pieDataset40 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity46 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D34, pieDataset40, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.AxisSpace axisSpace47 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis49 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot50 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis49);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer52 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer52.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator55 = null;
        xYAreaRenderer52.setLegendItemURLGenerator(xYSeriesLabelGenerator55);
        xYAreaRenderer52.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean63 = xYAreaRenderer52.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot50.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer52);
        org.jfree.chart.axis.ValueAxis valueAxis65 = null;
        int int66 = combinedDomainXYPlot50.getRangeAxisIndex(valueAxis65);
        org.jfree.chart.axis.ValueAxis valueAxis67 = null;
        combinedDomainXYPlot50.setDomainAxis(valueAxis67);
        org.jfree.chart.util.RectangleEdge rectangleEdge70 = combinedDomainXYPlot50.getDomainAxisEdge(0);
        axisSpace47.add((double) 10L, rectangleEdge70);
        org.jfree.chart.axis.AxisSpace axisSpace72 = categoryPlot15.calculateDomainAxisSpace(graphics2D29, rectangle2D34, axisSpace47);
        combinedDomainXYPlot0.setFixedDomainAxisSpace(axisSpace72, false);
        org.jfree.chart.axis.ValueAxis valueAxis75 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot76 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis75);
        java.awt.Color color77 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot76.setRangeMinorGridlinePaint((java.awt.Paint) color77);
        boolean boolean79 = combinedDomainXYPlot76.canSelectByRegion();
        org.jfree.chart.axis.AxisSpace axisSpace80 = null;
        combinedDomainXYPlot76.setFixedRangeAxisSpace(axisSpace80, false);
        java.awt.Stroke stroke83 = combinedDomainXYPlot76.getRangeCrosshairStroke();
        combinedDomainXYPlot0.setRangeZeroBaselineStroke(stroke83);
        org.junit.Assert.assertNull(datasetGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 15 + "'", int3 == 15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(layer17);
        org.junit.Assert.assertNull(collection18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(plotOrientation24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(rectangle2D34);
        org.junit.Assert.assertNotNull(rectangleAnchor38);
        org.junit.Assert.assertNotNull(point2D39);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge70);
        org.junit.Assert.assertNotNull(axisSpace72);
        org.junit.Assert.assertNotNull(color77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(stroke83);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test106");
        double double0 = org.jfree.chart.plot.PiePlot.MAX_INTERIOR_GAP;
        org.junit.Assert.assertTrue("'" + double0 + "' != '" + 0.4d + "'", double0 == 0.4d);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test107");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        combinedRangeXYPlot0.setGap((double) (-16777216));
        org.jfree.chart.util.RectangleEdge rectangleEdge4 = combinedRangeXYPlot0.getRangeAxisEdge();
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D7 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = barRenderer3D7.getBaseToolTipGenerator();
        java.awt.Stroke stroke9 = barRenderer3D7.getBaseStroke();
        combinedRangeXYPlot0.setRangeGridlineStroke(stroke9);
        boolean boolean11 = combinedRangeXYPlot0.isRangeMinorGridlinesVisible();
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.entity.EntityCollection entityCollection13 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo14 = new org.jfree.chart.ChartRenderingInfo(entityCollection13);
        java.awt.Paint paint15 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean16 = chartRenderingInfo14.equals((java.lang.Object) paint15);
        java.awt.geom.Rectangle2D rectangle2D17 = chartRenderingInfo14.getChartArea();
        org.jfree.chart.title.TextTitle textTitle19 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity20 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D17, (org.jfree.chart.title.Title) textTitle19);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor21 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D22 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D17, rectangleAnchor21);
        org.jfree.data.general.PieDataset pieDataset23 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity29 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D17, pieDataset23, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis30 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot31 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis30);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer33 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer33.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator36 = null;
        xYAreaRenderer33.setLegendItemURLGenerator(xYSeriesLabelGenerator36);
        xYAreaRenderer33.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean44 = xYAreaRenderer33.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot31.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer33);
        combinedDomainXYPlot31.clearDomainMarkers();
        java.awt.Font font48 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint49 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer52 = null;
        org.jfree.chart.text.TextBlock textBlock53 = org.jfree.chart.text.TextUtilities.createTextBlock("", font48, paint49, (float) (-1L), (int) (short) -1, textMeasurer52);
        combinedDomainXYPlot31.setDomainCrosshairPaint(paint49);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder55 = combinedDomainXYPlot31.getSeriesRenderingOrder();
        java.awt.Paint paint56 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot31.setRangeTickBandPaint(paint56);
        org.jfree.chart.title.LegendGraphic legendGraphic58 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D17, paint56);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.AxisSpace axisSpace59 = combinedRangeXYPlot0.calculateAxisSpace(graphics2D12, rectangle2D17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(rectangleEdge4);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(rectangle2D17);
        org.junit.Assert.assertNotNull(rectangleAnchor21);
        org.junit.Assert.assertNotNull(point2D22);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(font48);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNotNull(textBlock53);
        org.junit.Assert.assertNotNull(seriesRenderingOrder55);
        org.junit.Assert.assertNotNull(paint56);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test108");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        int int1 = categoryPlot0.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation2 = categoryPlot0.getOrientation();
        org.jfree.chart.axis.ValueAxis valueAxis3 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot4 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis3);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer6 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer6.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator9 = null;
        xYAreaRenderer6.setLegendItemURLGenerator(xYSeriesLabelGenerator9);
        xYAreaRenderer6.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean17 = xYAreaRenderer6.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot4.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer6);
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        int int20 = combinedDomainXYPlot4.getRangeAxisIndex(valueAxis19);
        boolean boolean21 = combinedDomainXYPlot4.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets22 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double23 = rectangleInsets22.getLeft();
        double double25 = rectangleInsets22.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot4.setAxisOffset(rectangleInsets22);
        combinedDomainXYPlot4.setDomainGridlinesVisible(false);
        boolean boolean29 = combinedDomainXYPlot4.isDomainMinorGridlinesVisible();
        boolean boolean30 = plotOrientation2.equals((java.lang.Object) combinedDomainXYPlot4);
        int int31 = combinedDomainXYPlot4.getDatasetCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(plotOrientation2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(rectangleInsets22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test109");
        org.jfree.chart.renderer.category.GradientBarPainter gradientBarPainter3 = new org.jfree.chart.renderer.category.GradientBarPainter((double) 0L, (double) 10, (double) 100);
        org.jfree.chart.util.RectangleInsets rectangleInsets4 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        boolean boolean5 = gradientBarPainter3.equals((java.lang.Object) rectangleInsets4);
        org.jfree.chart.renderer.category.BarRenderer.setDefaultBarPainter((org.jfree.chart.renderer.category.BarPainter) gradientBarPainter3);
        java.awt.Graphics2D graphics2D7 = null;
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D8 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font12 = barRenderer3D8.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = null;
        barRenderer3D8.setSeriesToolTipGenerator(15, categoryToolTipGenerator14, true);
        org.jfree.chart.util.LengthAdjustmentType lengthAdjustmentType17 = org.jfree.chart.util.LengthAdjustmentType.EXPAND;
        boolean boolean18 = barRenderer3D8.equals((java.lang.Object) lengthAdjustmentType17);
        java.awt.Paint paint19 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT;
        barRenderer3D8.setBaseFillPaint(paint19, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator22 = null;
        barRenderer3D8.setBaseItemLabelGenerator(categoryItemLabelGenerator22, true);
        org.jfree.chart.plot.CategoryPlot categoryPlot28 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer30 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection31 = categoryPlot28.getDomainMarkers((int) 'a', layer30);
        org.jfree.data.category.CategoryDataset categoryDataset33 = null;
        categoryPlot28.setDataset(4, categoryDataset33);
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = new org.jfree.chart.plot.CategoryPlot();
        int int36 = categoryPlot35.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation37 = categoryPlot35.getOrientation();
        categoryPlot28.setOrientation(plotOrientation37);
        boolean boolean39 = categoryPlot28.isDomainPannable();
        categoryPlot28.setRangeCrosshairValue((double) 10);
        java.awt.Graphics2D graphics2D42 = null;
        org.jfree.chart.entity.EntityCollection entityCollection43 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo44 = new org.jfree.chart.ChartRenderingInfo(entityCollection43);
        java.awt.Paint paint45 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean46 = chartRenderingInfo44.equals((java.lang.Object) paint45);
        java.awt.geom.Rectangle2D rectangle2D47 = chartRenderingInfo44.getChartArea();
        org.jfree.chart.title.TextTitle textTitle49 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity50 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D47, (org.jfree.chart.title.Title) textTitle49);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor51 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D52 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D47, rectangleAnchor51);
        org.jfree.data.general.PieDataset pieDataset53 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity59 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D47, pieDataset53, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.AxisSpace axisSpace60 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis62 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot63 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis62);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer65 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer65.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator68 = null;
        xYAreaRenderer65.setLegendItemURLGenerator(xYSeriesLabelGenerator68);
        xYAreaRenderer65.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean76 = xYAreaRenderer65.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot63.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer65);
        org.jfree.chart.axis.ValueAxis valueAxis78 = null;
        int int79 = combinedDomainXYPlot63.getRangeAxisIndex(valueAxis78);
        org.jfree.chart.axis.ValueAxis valueAxis80 = null;
        combinedDomainXYPlot63.setDomainAxis(valueAxis80);
        org.jfree.chart.util.RectangleEdge rectangleEdge83 = combinedDomainXYPlot63.getDomainAxisEdge(0);
        axisSpace60.add((double) 10L, rectangleEdge83);
        org.jfree.chart.axis.AxisSpace axisSpace85 = categoryPlot28.calculateDomainAxisSpace(graphics2D42, rectangle2D47, axisSpace60);
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot86 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list87 = combinedRangeXYPlot86.getSubplots();
        combinedRangeXYPlot86.setGap((double) (-16777216));
        org.jfree.chart.util.RectangleEdge rectangleEdge90 = combinedRangeXYPlot86.getRangeAxisEdge();
        // The following exception was thrown during execution in test generation
        try {
            gradientBarPainter3.paintBarShadow(graphics2D7, (org.jfree.chart.renderer.category.BarRenderer) barRenderer3D8, (int) (byte) 0, 0, false, (java.awt.geom.RectangularShape) rectangle2D47, rectangleEdge90, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(rectangleInsets4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(font12);
        org.junit.Assert.assertNotNull(lengthAdjustmentType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(layer30);
        org.junit.Assert.assertNull(collection31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(plotOrientation37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(rectangle2D47);
        org.junit.Assert.assertNotNull(rectangleAnchor51);
        org.junit.Assert.assertNotNull(point2D52);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge83);
        org.junit.Assert.assertNotNull(axisSpace85);
        org.junit.Assert.assertNotNull(list87);
        org.junit.Assert.assertNotNull(rectangleEdge90);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test110");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        boolean boolean18 = combinedDomainXYPlot1.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets19 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double20 = rectangleInsets19.getLeft();
        double double22 = rectangleInsets19.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot1.setAxisOffset(rectangleInsets19);
        combinedDomainXYPlot1.setDomainGridlinesVisible(false);
        java.awt.Paint paint26 = combinedDomainXYPlot1.getNoDataMessagePaint();
        org.jfree.chart.axis.AxisState axisState28 = new org.jfree.chart.axis.AxisState();
        double double29 = axisState28.getMax();
        java.util.List list30 = axisState28.getTicks();
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.mapDatasetToRangeAxes((-16777116), list30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires 'index' >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(rectangleInsets19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(list30);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test111");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        org.jfree.chart.LegendItemCollection legendItemCollection1 = combinedRangeXYPlot0.getLegendItems();
        org.jfree.chart.axis.AxisLocation axisLocation3 = null;
        combinedRangeXYPlot0.setDomainAxisLocation(12, axisLocation3, false);
        org.junit.Assert.assertNotNull(legendItemCollection1);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test112");
        org.jfree.data.category.CategoryDataset categoryDataset3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot();
        int int5 = categoryPlot4.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation6 = categoryPlot4.getOrientation();
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot8 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis7);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer10 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer10.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator13 = null;
        xYAreaRenderer10.setLegendItemURLGenerator(xYSeriesLabelGenerator13);
        xYAreaRenderer10.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean21 = xYAreaRenderer10.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot8.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer10);
        org.jfree.chart.axis.ValueAxis valueAxis23 = null;
        int int24 = combinedDomainXYPlot8.getRangeAxisIndex(valueAxis23);
        boolean boolean25 = combinedDomainXYPlot8.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets26 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double27 = rectangleInsets26.getLeft();
        double double29 = rectangleInsets26.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot8.setAxisOffset(rectangleInsets26);
        combinedDomainXYPlot8.setDomainGridlinesVisible(false);
        boolean boolean33 = combinedDomainXYPlot8.isDomainMinorGridlinesVisible();
        boolean boolean34 = plotOrientation6.equals((java.lang.Object) combinedDomainXYPlot8);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart38 = org.jfree.chart.ChartFactory.createStackedBarChart3D("item", "ChartChangeEventType.GENERAL", "", categoryDataset3, plotOrientation6, false, true, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@20b41f9a is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(plotOrientation6);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(rectangleInsets26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test113");
        org.jfree.chart.plot.PolarPlot polarPlot0 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Paint paint1 = polarPlot0.getAngleLabelPaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot3 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot3.clearAnnotations();
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent5 = null;
        categoryPlot3.rendererChanged(rendererChangeEvent5);
        org.jfree.chart.entity.EntityCollection entityCollection8 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo9 = new org.jfree.chart.ChartRenderingInfo(entityCollection8);
        java.awt.Paint paint10 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean11 = chartRenderingInfo9.equals((java.lang.Object) paint10);
        java.awt.geom.Rectangle2D rectangle2D12 = chartRenderingInfo9.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo13 = chartRenderingInfo9.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo14 = plotRenderingInfo13.getOwner();
        java.awt.geom.Point2D point2D15 = null;
        categoryPlot3.zoomRangeAxes(1.0E-8d, plotRenderingInfo13, point2D15, true);
        java.lang.Object obj18 = plotRenderingInfo13.clone();
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D21 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot23 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis22);
        java.awt.Color color24 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot23.setRangeMinorGridlinePaint((java.awt.Paint) color24);
        boolean boolean26 = combinedDomainXYPlot23.canSelectByRegion();
        barRenderer3D21.addChangeListener((org.jfree.chart.event.RendererChangeListener) combinedDomainXYPlot23);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo29 = null;
        org.jfree.chart.entity.EntityCollection entityCollection30 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo31 = new org.jfree.chart.ChartRenderingInfo(entityCollection30);
        java.awt.Paint paint32 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean33 = chartRenderingInfo31.equals((java.lang.Object) paint32);
        java.awt.geom.Rectangle2D rectangle2D34 = chartRenderingInfo31.getChartArea();
        org.jfree.chart.title.TextTitle textTitle36 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity37 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D34, (org.jfree.chart.title.Title) textTitle36);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor38 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D39 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D34, rectangleAnchor38);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor40 = null;
        java.awt.geom.Point2D point2D41 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D34, rectangleAnchor40);
        combinedDomainXYPlot23.zoomDomainAxes((double) (-16777216), plotRenderingInfo29, point2D41);
        // The following exception was thrown during execution in test generation
        try {
            polarPlot0.zoomRangeAxes((double) (-1L), plotRenderingInfo13, point2D41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(rectangle2D12);
        org.junit.Assert.assertNotNull(plotRenderingInfo13);
        org.junit.Assert.assertNotNull(chartRenderingInfo14);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(color24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(rectangle2D34);
        org.junit.Assert.assertNotNull(rectangleAnchor38);
        org.junit.Assert.assertNotNull(point2D39);
        org.junit.Assert.assertNotNull(point2D41);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test114");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        int int1 = categoryPlot0.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge5 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str6 = rectangleEdge5.toString();
        double double7 = categoryPlot0.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge5);
        boolean boolean8 = categoryPlot0.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = categoryPlot0.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge11 = categoryPlot0.getDomainAxisEdge();
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot13 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.entity.EntityCollection entityCollection15 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo16 = new org.jfree.chart.ChartRenderingInfo(entityCollection15);
        java.awt.Paint paint17 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean18 = chartRenderingInfo16.equals((java.lang.Object) paint17);
        java.awt.geom.Rectangle2D rectangle2D19 = chartRenderingInfo16.getChartArea();
        java.util.List list20 = null;
        combinedDomainXYPlot13.drawDomainGridlines(graphics2D14, rectangle2D19, list20);
        org.jfree.chart.axis.NumberAxis numberAxis23 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity26 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D19, (org.jfree.chart.axis.Axis) numberAxis23, "", "DatasetRenderingOrder.FORWARD");
        numberAxis23.centerRange(10.0d);
        org.jfree.data.Range range29 = categoryPlot0.getDataRange((org.jfree.chart.axis.ValueAxis) numberAxis23);
        categoryPlot0.clearRangeMarkers();
        java.awt.Graphics2D graphics2D31 = null;
        org.jfree.chart.title.TextTitle textTitle33 = new org.jfree.chart.title.TextTitle("");
        boolean boolean34 = textTitle33.getExpandToFitSpace();
        textTitle33.setText("");
        java.lang.String str37 = textTitle33.getID();
        java.awt.Font font38 = textTitle33.getFont();
        java.awt.Graphics2D graphics2D39 = null;
        org.jfree.chart.entity.EntityCollection entityCollection40 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo41 = new org.jfree.chart.ChartRenderingInfo(entityCollection40);
        java.awt.Paint paint42 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean43 = chartRenderingInfo41.equals((java.lang.Object) paint42);
        java.awt.geom.Rectangle2D rectangle2D44 = chartRenderingInfo41.getChartArea();
        textTitle33.draw(graphics2D39, rectangle2D44);
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot0.drawNoDataMessage(graphics2D31, rectangle2D44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "RectangleEdge.RIGHT" + "'", str6, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 149.0d + "'", double7 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(categoryAxis10);
        org.junit.Assert.assertNotNull(rectangleEdge11);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(rectangle2D19);
        org.junit.Assert.assertNull(range29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(font38);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(rectangle2D44);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test115");
        org.jfree.chart.renderer.xy.XYStepRenderer xYStepRenderer0 = new org.jfree.chart.renderer.xy.XYStepRenderer();
        java.awt.Graphics2D graphics2D1 = null;
        org.jfree.chart.renderer.xy.XYItemRendererState xYItemRendererState2 = null;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer4 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer4.clearSeriesStrokes(false);
        boolean boolean7 = xYAreaRenderer4.getPlotLines();
        org.jfree.chart.title.LegendTitle legendTitle8 = new org.jfree.chart.title.LegendTitle((org.jfree.chart.LegendItemSource) xYAreaRenderer4);
        org.jfree.chart.util.RectangleEdge rectangleEdge9 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str10 = rectangleEdge9.toString();
        legendTitle8.setLegendItemGraphicEdge(rectangleEdge9);
        org.jfree.chart.title.TextTitle textTitle13 = new org.jfree.chart.title.TextTitle("");
        boolean boolean14 = textTitle13.getExpandToFitSpace();
        textTitle13.setText("");
        java.lang.String str17 = textTitle13.getID();
        java.awt.Font font18 = textTitle13.getFont();
        java.awt.Graphics2D graphics2D19 = null;
        org.jfree.chart.entity.EntityCollection entityCollection20 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo21 = new org.jfree.chart.ChartRenderingInfo(entityCollection20);
        java.awt.Paint paint22 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean23 = chartRenderingInfo21.equals((java.lang.Object) paint22);
        java.awt.geom.Rectangle2D rectangle2D24 = chartRenderingInfo21.getChartArea();
        textTitle13.draw(graphics2D19, rectangle2D24);
        legendTitle8.setBounds(rectangle2D24);
        org.jfree.chart.axis.NumberAxis numberAxis28 = new org.jfree.chart.axis.NumberAxis("");
        int int29 = numberAxis28.getMinorTickCount();
        numberAxis28.setMinorTickMarksVisible(true);
        org.jfree.chart.entity.AxisEntity axisEntity34 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D24, (org.jfree.chart.axis.Axis) numberAxis28, "org.jfree.chart.event.RendererChangeEvent[source=ItemLabelAnchor.INSIDE9]", "AxisEntity: tooltip = ");
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot36 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis35);
        java.awt.Color color37 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot36.setRangeMinorGridlinePaint((java.awt.Paint) color37);
        org.jfree.data.time.Year year41 = new org.jfree.data.time.Year((int) (short) 0);
        long long42 = year41.getFirstMillisecond();
        org.jfree.data.time.Year year44 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis45 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year41, (org.jfree.data.time.RegularTimePeriod) year44);
        java.lang.Object obj46 = periodAxis45.clone();
        java.lang.Class class47 = periodAxis45.getAutoRangeTimePeriodClass();
        org.jfree.data.time.Year year50 = new org.jfree.data.time.Year((int) (short) 0);
        long long51 = year50.getFirstMillisecond();
        org.jfree.data.time.Year year53 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis54 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year50, (org.jfree.data.time.RegularTimePeriod) year53);
        org.jfree.data.time.DateRange dateRange55 = new org.jfree.data.time.DateRange();
        long long56 = dateRange55.getUpperMillis();
        periodAxis54.setRange((org.jfree.data.Range) dateRange55, true, true);
        java.util.TimeZone timeZone60 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection61 = new org.jfree.data.time.TimeSeriesCollection(timeZone60);
        java.text.DateFormat dateFormat63 = null;
        java.text.DateFormat dateFormat64 = null;
        org.jfree.chart.labels.StandardXYToolTipGenerator standardXYToolTipGenerator65 = new org.jfree.chart.labels.StandardXYToolTipGenerator("[10.0, 0.0]", dateFormat63, dateFormat64);
        boolean boolean66 = timeSeriesCollection61.equals((java.lang.Object) "[10.0, 0.0]");
        org.jfree.data.Range range67 = org.jfree.data.general.DatasetUtilities.iterateRangeBounds((org.jfree.data.xy.XYDataset) timeSeriesCollection61);
        // The following exception was thrown during execution in test generation
        try {
            xYStepRenderer0.drawItem(graphics2D1, xYItemRendererState2, rectangle2D24, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot36, (org.jfree.chart.axis.ValueAxis) periodAxis45, (org.jfree.chart.axis.ValueAxis) periodAxis54, (org.jfree.data.xy.XYDataset) timeSeriesCollection61, (int) (short) 100, 1, true, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(rectangleEdge9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RectangleEdge.RIGHT" + "'", str10, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(rectangle2D24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(color37);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-62167363200000L) + "'", long42 == (-62167363200000L));
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(class47);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-62167363200000L) + "'", long51 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(range67);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test116");
        java.util.TimeZone timeZone3 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection4 = new org.jfree.data.time.TimeSeriesCollection(timeZone3);
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot5.clearAnnotations();
        timeSeriesCollection4.removeChangeListener((org.jfree.data.general.DatasetChangeListener) categoryPlot5);
        org.jfree.data.Range range9 = timeSeriesCollection4.getDomainBounds(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot();
        int int11 = categoryPlot10.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation12 = categoryPlot10.getOrientation();
        java.lang.String str13 = plotOrientation12.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart17 = org.jfree.chart.ChartFactory.createXYStepChart("DateTickUnit[DateTickUnitType.HOUR, 100]", "item", "org.jfree.data.general.SeriesException: [10.0, 0.0]", (org.jfree.data.xy.XYDataset) timeSeriesCollection4, plotOrientation12, false, false, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@463af863 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(range9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(plotOrientation12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PlotOrientation.VERTICAL" + "'", str13, "PlotOrientation.VERTICAL");
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test117");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        java.awt.Paint paint1 = combinedDomainXYPlot0.getRangeGridlinePaint();
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.ValueAxis valueAxis3 = combinedDomainXYPlot0.getDomainAxisForDataset(12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Index 12 out of bounds.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test118");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        combinedDomainXYPlot1.setDomainMinorGridlinesVisible(false);
        org.jfree.chart.axis.AxisLocation axisLocation4 = org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT;
        java.text.DateFormat dateFormat6 = null;
        java.text.DateFormat dateFormat7 = null;
        org.jfree.chart.labels.StandardXYToolTipGenerator standardXYToolTipGenerator8 = new org.jfree.chart.labels.StandardXYToolTipGenerator("LGPL", dateFormat6, dateFormat7);
        java.text.NumberFormat numberFormat9 = standardXYToolTipGenerator8.getYFormat();
        java.text.NumberFormat numberFormat10 = standardXYToolTipGenerator8.getXFormat();
        boolean boolean11 = axisLocation4.equals((java.lang.Object) standardXYToolTipGenerator8);
        combinedDomainXYPlot1.setRangeAxisLocation(axisLocation4);
        combinedDomainXYPlot1.clearRangeMarkers((int) (byte) 1);
        java.awt.Stroke stroke15 = combinedDomainXYPlot1.getDomainCrosshairStroke();
        org.junit.Assert.assertNotNull(axisLocation4);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(stroke15);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test119");
        org.jfree.data.time.TimeSeries timeSeries1 = new org.jfree.data.time.TimeSeries((java.lang.Comparable) 5);
        int int2 = timeSeries1.getItemCount();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test120");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        java.awt.Paint paint1 = combinedDomainXYPlot0.getRangeGridlinePaint();
        org.jfree.chart.plot.PolarPlot polarPlot2 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Font font3 = polarPlot2.getAngleLabelFont();
        org.jfree.chart.axis.ValueAxis valueAxis4 = polarPlot2.getAxis();
        org.jfree.chart.entity.EntityCollection entityCollection6 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo7 = new org.jfree.chart.ChartRenderingInfo(entityCollection6);
        java.awt.Paint paint8 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean9 = chartRenderingInfo7.equals((java.lang.Object) paint8);
        java.awt.geom.Rectangle2D rectangle2D10 = chartRenderingInfo7.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = chartRenderingInfo7.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo12 = plotRenderingInfo11.getOwner();
        java.awt.geom.Point2D point2D13 = null;
        polarPlot2.zoomDomainAxes((double) (byte) 1, plotRenderingInfo11, point2D13, false);
        java.awt.Stroke stroke16 = polarPlot2.getRadiusGridlineStroke();
        combinedDomainXYPlot0.setRangeZeroBaselineStroke(stroke16);
        java.awt.Graphics2D graphics2D18 = null;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        boolean boolean23 = xYAreaRenderer20.getPlotLines();
        boolean boolean24 = xYAreaRenderer20.getBaseItemLabelsVisible();
        java.awt.Paint paint25 = xYAreaRenderer20.getBasePaint();
        java.awt.Font font26 = xYAreaRenderer20.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator27 = null;
        xYAreaRenderer20.setBaseItemLabelGenerator(xYItemLabelGenerator27);
        xYAreaRenderer20.setUseFillPaint(true);
        java.awt.Graphics2D graphics2D31 = null;
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot33 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis32);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer35 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer35.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator38 = null;
        xYAreaRenderer35.setLegendItemURLGenerator(xYSeriesLabelGenerator38);
        xYAreaRenderer35.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean46 = xYAreaRenderer35.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot33.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer35);
        combinedDomainXYPlot33.clearDomainMarkers();
        boolean boolean49 = combinedDomainXYPlot33.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.NumberAxis numberAxis51 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis51.pan((double) 1);
        org.jfree.chart.axis.ValueAxis valueAxis54 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot55 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis54);
        java.awt.Graphics2D graphics2D56 = null;
        org.jfree.chart.entity.EntityCollection entityCollection57 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo58 = new org.jfree.chart.ChartRenderingInfo(entityCollection57);
        java.awt.Paint paint59 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean60 = chartRenderingInfo58.equals((java.lang.Object) paint59);
        java.awt.geom.Rectangle2D rectangle2D61 = chartRenderingInfo58.getChartArea();
        java.util.List list62 = null;
        combinedDomainXYPlot55.drawDomainGridlines(graphics2D56, rectangle2D61, list62);
        org.jfree.chart.axis.NumberAxis numberAxis65 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity68 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D61, (org.jfree.chart.axis.Axis) numberAxis65, "", "DatasetRenderingOrder.FORWARD");
        xYAreaRenderer20.drawDomainGridLine(graphics2D31, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot33, (org.jfree.chart.axis.ValueAxis) numberAxis51, rectangle2D61, (double) 11);
        org.jfree.chart.plot.CategoryPlot categoryPlot71 = new org.jfree.chart.plot.CategoryPlot();
        int int72 = categoryPlot71.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation73 = categoryPlot71.getOrientation();
        java.lang.String str74 = plotOrientation73.toString();
        org.jfree.chart.axis.NumberAxis numberAxis77 = new org.jfree.chart.axis.NumberAxis("");
        double double78 = numberAxis77.getAutoRangeMinimumSize();
        numberAxis77.setLowerBound((double) (byte) -1);
        org.jfree.chart.plot.PolarPlot polarPlot81 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Paint paint82 = polarPlot81.getAngleLabelPaint();
        java.awt.Stroke stroke83 = polarPlot81.getAngleGridlineStroke();
        java.awt.Color color86 = java.awt.Color.getColor("hi!", (int) (short) 100);
        int int87 = color86.getTransparency();
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot0.drawDomainCrosshair(graphics2D18, rectangle2D61, plotOrientation73, (double) 0L, (org.jfree.chart.axis.ValueAxis) numberAxis77, stroke83, (java.awt.Paint) color86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(font3);
        org.junit.Assert.assertNull(valueAxis4);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(rectangle2D10);
        org.junit.Assert.assertNotNull(plotRenderingInfo11);
        org.junit.Assert.assertNotNull(chartRenderingInfo12);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(font26);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(paint59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(rectangle2D61);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(plotOrientation73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "PlotOrientation.VERTICAL" + "'", str74, "PlotOrientation.VERTICAL");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1.0E-8d + "'", double78 == 1.0E-8d);
        org.junit.Assert.assertNotNull(paint82);
        org.junit.Assert.assertNotNull(stroke83);
        org.junit.Assert.assertNotNull(color86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test121");
        org.jfree.chart.axis.NumberAxis numberAxis1 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis1.pan((double) 1);
        numberAxis1.setMinorTickMarkInsideLength((float) 255);
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot7 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        org.jfree.chart.LegendItemCollection legendItemCollection8 = combinedRangeXYPlot7.getLegendItems();
        org.jfree.chart.plot.PiePlot piePlot9 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup10 = piePlot9.getDatasetGroup();
        int int11 = piePlot9.getBackgroundImageAlignment();
        boolean boolean12 = piePlot9.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo14 = null;
        piePlot9.createAndAddEntity(rectangle2D13, plotRenderingInfo14, "hi!", "LGPL");
        piePlot9.setStartAngle((double) 1);
        org.jfree.data.xy.XYDataItem xYDataItem22 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        java.awt.Color color25 = java.awt.Color.getColor("hi!", (int) (short) 100);
        boolean boolean26 = xYDataItem22.equals((java.lang.Object) "hi!");
        java.awt.Color color27 = java.awt.Color.MAGENTA;
        piePlot9.setSectionPaint((java.lang.Comparable) "hi!", (java.awt.Paint) color27);
        java.awt.Graphics2D graphics2D29 = null;
        org.jfree.chart.entity.EntityCollection entityCollection30 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo31 = new org.jfree.chart.ChartRenderingInfo(entityCollection30);
        java.awt.Paint paint32 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean33 = chartRenderingInfo31.equals((java.lang.Object) paint32);
        java.awt.geom.Rectangle2D rectangle2D34 = chartRenderingInfo31.getChartArea();
        piePlot9.drawBackgroundImage(graphics2D29, rectangle2D34);
        org.jfree.chart.axis.CategoryAxis3D categoryAxis3D37 = new org.jfree.chart.axis.CategoryAxis3D("hi!");
        categoryAxis3D37.setLabelURL("EXPAND");
        categoryAxis3D37.configure();
        org.jfree.chart.axis.CategoryLabelPositions categoryLabelPositions41 = categoryAxis3D37.getCategoryLabelPositions();
        org.jfree.data.time.Year year46 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year48 = new org.jfree.data.time.Year((int) (short) 0);
        long long49 = year48.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis50 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year46, (org.jfree.data.time.RegularTimePeriod) year48);
        org.jfree.chart.entity.EntityCollection entityCollection52 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo53 = new org.jfree.chart.ChartRenderingInfo(entityCollection52);
        java.awt.Paint paint54 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean55 = chartRenderingInfo53.equals((java.lang.Object) paint54);
        java.awt.geom.Rectangle2D rectangle2D56 = chartRenderingInfo53.getChartArea();
        org.jfree.chart.title.TextTitle textTitle58 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity59 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D56, (org.jfree.chart.title.Title) textTitle58);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor60 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D61 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D56, rectangleAnchor60);
        org.jfree.chart.plot.CategoryPlot categoryPlot62 = new org.jfree.chart.plot.CategoryPlot();
        java.awt.Color color63 = org.jfree.chart.ChartColor.VERY_DARK_MAGENTA;
        categoryPlot62.setRangeZeroBaselinePaint((java.awt.Paint) color63);
        org.jfree.chart.util.RectangleEdge rectangleEdge66 = categoryPlot62.getRangeAxisEdge((int) ' ');
        double double67 = periodAxis50.java2DToValue(0.0d, rectangle2D56, rectangleEdge66);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer69 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer69.clearSeriesStrokes(false);
        boolean boolean72 = xYAreaRenderer69.getPlotLines();
        org.jfree.chart.title.LegendTitle legendTitle73 = new org.jfree.chart.title.LegendTitle((org.jfree.chart.LegendItemSource) xYAreaRenderer69);
        org.jfree.chart.util.RectangleEdge rectangleEdge74 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str75 = rectangleEdge74.toString();
        legendTitle73.setLegendItemGraphicEdge(rectangleEdge74);
        double double77 = categoryAxis3D37.getCategoryStart(0, 10, rectangle2D56, rectangleEdge74);
        org.jfree.chart.plot.CategoryPlot categoryPlot78 = new org.jfree.chart.plot.CategoryPlot();
        int int79 = categoryPlot78.getDatasetCount();
        categoryPlot78.setAnchorValue((double) 10.0f);
        java.awt.Graphics2D graphics2D82 = null;
        org.jfree.chart.entity.EntityCollection entityCollection83 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo84 = new org.jfree.chart.ChartRenderingInfo(entityCollection83);
        java.awt.Paint paint85 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean86 = chartRenderingInfo84.equals((java.lang.Object) paint85);
        java.awt.geom.Rectangle2D rectangle2D87 = chartRenderingInfo84.getChartArea();
        org.jfree.chart.title.TextTitle textTitle89 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity90 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D87, (org.jfree.chart.title.Title) textTitle89);
        org.jfree.chart.axis.AxisSpace axisSpace91 = categoryPlot78.calculateAxisSpace(graphics2D82, rectangle2D87);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.AxisSpace axisSpace92 = numberAxis1.reserveSpace(graphics2D6, (org.jfree.chart.plot.Plot) combinedRangeXYPlot7, rectangle2D34, rectangleEdge74, axisSpace91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(legendItemCollection8);
        org.junit.Assert.assertNull(datasetGroup10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 15 + "'", int11 == 15);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(color25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(color27);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(rectangle2D34);
        org.junit.Assert.assertNotNull(categoryLabelPositions41);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-62167363200000L) + "'", long49 == (-62167363200000L));
        org.junit.Assert.assertNotNull(paint54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(rectangle2D56);
        org.junit.Assert.assertNotNull(rectangleAnchor60);
        org.junit.Assert.assertNotNull(point2D61);
        org.junit.Assert.assertNotNull(color63);
        org.junit.Assert.assertNotNull(rectangleEdge66);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(rectangleEdge74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "RectangleEdge.RIGHT" + "'", str75, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(paint85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(rectangle2D87);
        org.junit.Assert.assertNotNull(axisSpace91);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test122");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        combinedDomainXYPlot1.clearDomainMarkers();
        int int27 = combinedDomainXYPlot1.getRendererCount();
        org.jfree.chart.renderer.xy.XYItemRenderer xYItemRenderer29 = combinedDomainXYPlot1.getRenderer((-1));
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot32 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis31);
        java.awt.Graphics2D graphics2D33 = null;
        org.jfree.chart.entity.EntityCollection entityCollection34 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo35 = new org.jfree.chart.ChartRenderingInfo(entityCollection34);
        java.awt.Paint paint36 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean37 = chartRenderingInfo35.equals((java.lang.Object) paint36);
        java.awt.geom.Rectangle2D rectangle2D38 = chartRenderingInfo35.getChartArea();
        java.util.List list39 = null;
        combinedDomainXYPlot32.drawDomainGridlines(graphics2D33, rectangle2D38, list39);
        org.jfree.chart.axis.NumberAxis numberAxis42 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity45 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D38, (org.jfree.chart.axis.Axis) numberAxis42, "", "DatasetRenderingOrder.FORWARD");
        java.lang.Object obj46 = numberAxis42.clone();
        combinedDomainXYPlot1.setRangeAxis(0, (org.jfree.chart.axis.ValueAxis) numberAxis42);
        java.awt.Paint paint48 = combinedDomainXYPlot1.getDomainTickBandPaint();
        org.jfree.chart.annotations.XYAnnotation xYAnnotation49 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.addAnnotation(xYAnnotation49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(xYItemRenderer29);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(rectangle2D38);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNull(paint48);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test123");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        int int1 = combinedDomainXYPlot0.getBackgroundImageAlignment();
        double double2 = combinedDomainXYPlot0.getDomainCrosshairValue();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 15 + "'", int1 == 15);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test124");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator4 = null;
        xYAreaRenderer1.setLegendItemURLGenerator(xYSeriesLabelGenerator4);
        xYAreaRenderer1.setSeriesVisibleInLegend((int) (byte) 10, (java.lang.Boolean) false);
        xYAreaRenderer1.setBaseItemLabelsVisible(true);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator12 = null;
        xYAreaRenderer1.setSeriesURLGenerator((int) (short) 100, xYURLGenerator12, false);
        java.awt.Paint paint18 = xYAreaRenderer1.getItemFillPaint((int) (short) 10, (int) 'a', true);
        java.awt.Graphics2D graphics2D19 = null;
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot21 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis20);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer23 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer23.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator26 = null;
        xYAreaRenderer23.setLegendItemURLGenerator(xYSeriesLabelGenerator26);
        xYAreaRenderer23.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean34 = xYAreaRenderer23.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot21.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer23);
        boolean boolean36 = combinedDomainXYPlot21.canSelectByPoint();
        org.jfree.chart.axis.NumberAxis numberAxis38 = new org.jfree.chart.axis.NumberAxis("");
        int int39 = numberAxis38.getMinorTickCount();
        numberAxis38.setMinorTickMarksVisible(true);
        org.jfree.chart.entity.EntityCollection entityCollection42 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo43 = new org.jfree.chart.ChartRenderingInfo(entityCollection42);
        java.awt.Paint paint44 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean45 = chartRenderingInfo43.equals((java.lang.Object) paint44);
        java.awt.geom.Rectangle2D rectangle2D46 = chartRenderingInfo43.getChartArea();
        org.jfree.chart.title.TextTitle textTitle48 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity49 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D46, (org.jfree.chart.title.Title) textTitle48);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor50 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D51 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D46, rectangleAnchor50);
        java.awt.Paint paint53 = org.jfree.chart.axis.Axis.DEFAULT_AXIS_LABEL_PAINT;
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot54 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke55 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot54.setRangeCrosshairStroke(stroke55);
        xYAreaRenderer1.drawDomainLine(graphics2D19, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot21, (org.jfree.chart.axis.ValueAxis) numberAxis38, rectangle2D46, (double) 60000L, paint53, stroke55);
        // The following exception was thrown during execution in test generation
        try {
            numberAxis38.setAutoRangeMinimumSize(0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: NumberAxis.setAutoRangeMinimumSize(double): must be > 0.0.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(rectangle2D46);
        org.junit.Assert.assertNotNull(rectangleAnchor50);
        org.junit.Assert.assertNotNull(point2D51);
        org.junit.Assert.assertNotNull(paint53);
        org.junit.Assert.assertNotNull(stroke55);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test125");
        java.lang.String[] strArray1 = org.jfree.data.time.SerialDate.getMonths(false);
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test126");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot3 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis2);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer5 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer5.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator8 = null;
        xYAreaRenderer5.setLegendItemURLGenerator(xYSeriesLabelGenerator8);
        xYAreaRenderer5.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean16 = xYAreaRenderer5.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot3.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer5);
        combinedDomainXYPlot3.clearDomainMarkers();
        java.awt.Font font20 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint21 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer24 = null;
        org.jfree.chart.text.TextBlock textBlock25 = org.jfree.chart.text.TextUtilities.createTextBlock("", font20, paint21, (float) (-1L), (int) (short) -1, textMeasurer24);
        combinedDomainXYPlot3.setDomainCrosshairPaint(paint21);
        org.jfree.chart.plot.PiePlot piePlot27 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup28 = piePlot27.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener29 = null;
        piePlot27.addChangeListener(plotChangeListener29);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent31 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot27);
        combinedDomainXYPlot3.plotChanged(plotChangeEvent31);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType33 = plotChangeEvent31.getType();
        combinedRangeXYPlot0.plotChanged(plotChangeEvent31);
        org.jfree.chart.plot.IntervalMarker intervalMarker37 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        boolean boolean38 = combinedRangeXYPlot0.removeRangeMarker((org.jfree.chart.plot.Marker) intervalMarker37);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer41 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean43 = xYAreaRenderer41.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint44 = xYAreaRenderer41.getBaseLegendTextPaint();
        java.awt.Stroke stroke46 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer41.setSeriesOutlineStroke(0, stroke46, false);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator52 = xYAreaRenderer41.getURLGenerator((-9999), (int) (byte) 10, true);
        combinedRangeXYPlot0.setRenderer(10, (org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer41, true);
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator58 = xYAreaRenderer41.getItemLabelGenerator(11, (-9999), false);
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(textBlock25);
        org.junit.Assert.assertNull(datasetGroup28);
        org.junit.Assert.assertNotNull(chartChangeEventType33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(paint44);
        org.junit.Assert.assertNotNull(stroke46);
        org.junit.Assert.assertNull(xYURLGenerator52);
        org.junit.Assert.assertNull(xYItemLabelGenerator58);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test127");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.general.DatasetGroup datasetGroup4 = categoryPlot0.getDatasetGroup();
        org.jfree.chart.plot.Marker marker6 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer9 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection10 = categoryPlot7.getDomainMarkers((int) 'a', layer9);
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        categoryPlot7.setDataset(4, categoryDataset12);
        org.jfree.chart.axis.AxisSpace axisSpace14 = categoryPlot7.getFixedDomainAxisSpace();
        java.awt.Graphics2D graphics2D15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        org.jfree.chart.util.Layer layer18 = org.jfree.chart.util.Layer.BACKGROUND;
        categoryPlot7.drawRangeMarkers(graphics2D15, rectangle2D16, 0, layer18);
        java.awt.Color color22 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer24 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean26 = xYAreaRenderer24.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint27 = xYAreaRenderer24.getBaseLegendTextPaint();
        java.awt.Stroke stroke29 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer24.setSeriesOutlineStroke(0, stroke29, false);
        java.awt.Color color34 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer36 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean38 = xYAreaRenderer36.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint39 = xYAreaRenderer36.getBaseLegendTextPaint();
        java.awt.Stroke stroke41 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer36.setSeriesOutlineStroke(0, stroke41, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker45 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color22, stroke29, (java.awt.Paint) color34, stroke41, (float) (byte) 1);
        org.jfree.chart.text.TextAnchor textAnchor46 = intervalMarker45.getLabelTextAnchor();
        org.jfree.chart.util.Layer layer47 = org.jfree.chart.util.Layer.BACKGROUND;
        boolean boolean48 = categoryPlot7.removeDomainMarker((org.jfree.chart.plot.Marker) intervalMarker45, layer47);
        boolean boolean50 = categoryPlot0.removeDomainMarker((int) (byte) 10, marker6, layer47, false);
        categoryPlot0.setAnchorValue(0.0d, false);
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertNull(datasetGroup4);
        org.junit.Assert.assertNotNull(layer9);
        org.junit.Assert.assertNull(collection10);
        org.junit.Assert.assertNull(axisSpace14);
        org.junit.Assert.assertNotNull(layer18);
        org.junit.Assert.assertNotNull(color22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(paint27);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(color34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(paint39);
        org.junit.Assert.assertNotNull(stroke41);
        org.junit.Assert.assertNotNull(textAnchor46);
        org.junit.Assert.assertNotNull(layer47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test128");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        double double1 = combinedRangeXYPlot0.getGap();
        org.jfree.chart.LegendItemCollection legendItemCollection2 = combinedRangeXYPlot0.getLegendItems();
        java.lang.Object obj3 = legendItemCollection2.clone();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 5.0d + "'", double1 == 5.0d);
        org.junit.Assert.assertNotNull(legendItemCollection2);
        org.junit.Assert.assertNotNull(obj3);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test129");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        numberAxis11.centerRange(10.0d);
        org.jfree.chart.axis.TickUnits tickUnits17 = new org.jfree.chart.axis.TickUnits();
        numberAxis11.setStandardTickUnits((org.jfree.chart.axis.TickUnitSource) tickUnits17);
        int int19 = tickUnits17.size();
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.TickUnit tickUnit21 = tickUnits17.get((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test130");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        java.awt.Font font10 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        combinedDomainXYPlot1.setNoDataMessageFont(font10);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNotNull(font10);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test131");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        combinedDomainXYPlot1.setDomainAxis(valueAxis18);
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot21 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis20);
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.entity.EntityCollection entityCollection23 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo24 = new org.jfree.chart.ChartRenderingInfo(entityCollection23);
        java.awt.Paint paint25 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean26 = chartRenderingInfo24.equals((java.lang.Object) paint25);
        java.awt.geom.Rectangle2D rectangle2D27 = chartRenderingInfo24.getChartArea();
        java.util.List list28 = null;
        combinedDomainXYPlot21.drawDomainGridlines(graphics2D22, rectangle2D27, list28);
        org.jfree.chart.axis.NumberAxis numberAxis31 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity34 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D27, (org.jfree.chart.axis.Axis) numberAxis31, "", "DatasetRenderingOrder.FORWARD");
        combinedDomainXYPlot1.setRangeAxis((org.jfree.chart.axis.ValueAxis) numberAxis31);
        org.jfree.chart.axis.ValueAxis valueAxis36 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot37 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis36);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer39 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer39.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator42 = null;
        xYAreaRenderer39.setLegendItemURLGenerator(xYSeriesLabelGenerator42);
        xYAreaRenderer39.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean50 = xYAreaRenderer39.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot37.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer39);
        combinedDomainXYPlot37.clearDomainMarkers();
        java.awt.Font font54 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint55 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer58 = null;
        org.jfree.chart.text.TextBlock textBlock59 = org.jfree.chart.text.TextUtilities.createTextBlock("", font54, paint55, (float) (-1L), (int) (short) -1, textMeasurer58);
        combinedDomainXYPlot37.setDomainCrosshairPaint(paint55);
        org.jfree.chart.plot.PiePlot piePlot61 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup62 = piePlot61.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener63 = null;
        piePlot61.addChangeListener(plotChangeListener63);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent65 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot61);
        combinedDomainXYPlot37.plotChanged(plotChangeEvent65);
        java.awt.Paint paint67 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        combinedDomainXYPlot37.setDomainGridlinePaint(paint67);
        java.awt.Paint paint69 = combinedDomainXYPlot37.getRangeGridlinePaint();
        combinedDomainXYPlot1.setRangeZeroBaselinePaint(paint69);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangle2D27);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(font54);
        org.junit.Assert.assertNotNull(paint55);
        org.junit.Assert.assertNotNull(textBlock59);
        org.junit.Assert.assertNull(datasetGroup62);
        org.junit.Assert.assertNotNull(paint67);
        org.junit.Assert.assertNotNull(paint69);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test132");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape5 = barRenderer3D0.getBaseShape();
        barRenderer3D0.setBaseCreateEntities(true);
        java.awt.Shape shape9 = org.jfree.chart.util.ShapeUtilities.createUpTriangle((float) (byte) 0);
        org.jfree.chart.title.TextTitle textTitle11 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity14 = new org.jfree.chart.entity.TitleEntity(shape9, (org.jfree.chart.title.Title) textTitle11, "LGPL", "ThreadContext");
        barRenderer3D0.setBaseLegendShape(shape9);
        org.jfree.chart.plot.PiePlot piePlot16 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup17 = piePlot16.getDatasetGroup();
        int int18 = piePlot16.getBackgroundImageAlignment();
        org.jfree.chart.labels.PieSectionLabelGenerator pieSectionLabelGenerator19 = piePlot16.getLegendLabelGenerator();
        boolean boolean20 = barRenderer3D0.equals((java.lang.Object) pieSectionLabelGenerator19);
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(datasetGroup17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 15 + "'", int18 == 15);
        org.junit.Assert.assertNotNull(pieSectionLabelGenerator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test133");
        int int0 = org.jfree.data.time.MonthConstants.SEPTEMBER;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 9 + "'", int0 == 9);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test134");
        org.jfree.chart.util.GradientPaintTransformType gradientPaintTransformType0 = org.jfree.chart.util.GradientPaintTransformType.HORIZONTAL;
        org.jfree.chart.block.LabelBlock labelBlock2 = new org.jfree.chart.block.LabelBlock("");
        java.lang.Object obj3 = labelBlock2.clone();
        org.jfree.chart.text.TextBlockAnchor textBlockAnchor4 = org.jfree.chart.text.TextBlockAnchor.TOP_CENTER;
        labelBlock2.setContentAlignmentPoint(textBlockAnchor4);
        boolean boolean6 = gradientPaintTransformType0.equals((java.lang.Object) textBlockAnchor4);
        org.junit.Assert.assertNotNull(gradientPaintTransformType0);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertNotNull(textBlockAnchor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test135");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        boolean boolean5 = xYAreaRenderer1.getBaseItemLabelsVisible();
        java.awt.Paint paint6 = xYAreaRenderer1.getBasePaint();
        java.awt.Font font7 = xYAreaRenderer1.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator8 = null;
        xYAreaRenderer1.setBaseItemLabelGenerator(xYItemLabelGenerator8);
        xYAreaRenderer1.setUseFillPaint(true);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot14 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis13);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer16 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer16.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator19 = null;
        xYAreaRenderer16.setLegendItemURLGenerator(xYSeriesLabelGenerator19);
        xYAreaRenderer16.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean27 = xYAreaRenderer16.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot14.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer16);
        combinedDomainXYPlot14.clearDomainMarkers();
        boolean boolean30 = combinedDomainXYPlot14.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.NumberAxis numberAxis32 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis32.pan((double) 1);
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot36 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis35);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.entity.EntityCollection entityCollection38 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo39 = new org.jfree.chart.ChartRenderingInfo(entityCollection38);
        java.awt.Paint paint40 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean41 = chartRenderingInfo39.equals((java.lang.Object) paint40);
        java.awt.geom.Rectangle2D rectangle2D42 = chartRenderingInfo39.getChartArea();
        java.util.List list43 = null;
        combinedDomainXYPlot36.drawDomainGridlines(graphics2D37, rectangle2D42, list43);
        org.jfree.chart.axis.NumberAxis numberAxis46 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity49 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D42, (org.jfree.chart.axis.Axis) numberAxis46, "", "DatasetRenderingOrder.FORWARD");
        xYAreaRenderer1.drawDomainGridLine(graphics2D12, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot14, (org.jfree.chart.axis.ValueAxis) numberAxis32, rectangle2D42, (double) 11);
        numberAxis32.setLabelToolTip("{0}: ({1}, {2})");
        org.jfree.chart.text.TextLine textLine55 = new org.jfree.chart.text.TextLine("hi!");
        org.jfree.chart.text.TextFragment textFragment56 = textLine55.getLastTextFragment();
        java.awt.Font font57 = textFragment56.getFont();
        numberAxis32.setLabelFont(font57);
        numberAxis32.configure();
        numberAxis32.setMinorTickMarkOutsideLength((float) 28799999L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(rectangle2D42);
        org.junit.Assert.assertNotNull(textFragment56);
        org.junit.Assert.assertNotNull(font57);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test136");
        org.jfree.data.time.Year year2 = new org.jfree.data.time.Year((int) (short) 0);
        long long3 = year2.getFirstMillisecond();
        org.jfree.data.time.Year year5 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis6 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year2, (org.jfree.data.time.RegularTimePeriod) year5);
        int int7 = year5.getYear();
        org.jfree.data.xy.XYSeries xYSeries8 = new org.jfree.data.xy.XYSeries((java.lang.Comparable) year5);
        org.jfree.data.xy.XYSeries xYSeries11 = xYSeries8.createCopy((int) (short) 0, (int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            xYSeries8.update((java.lang.Number) 1577894400035L, (java.lang.Number) 0.4d);
            org.junit.Assert.fail("Expected exception of type org.jfree.data.general.SeriesException; message: No observation for x = 1577894400035");
        } catch (org.jfree.data.general.SeriesException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-62167363200000L) + "'", long3 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(xYSeries11);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test137");
        org.jfree.chart.plot.PiePlot piePlot1 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup2 = piePlot1.getDatasetGroup();
        int int3 = piePlot1.getBackgroundImageAlignment();
        boolean boolean4 = piePlot1.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D5 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo6 = null;
        piePlot1.createAndAddEntity(rectangle2D5, plotRenderingInfo6, "hi!", "LGPL");
        piePlot1.setStartAngle((double) 1);
        org.jfree.data.xy.XYDataItem xYDataItem14 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        java.awt.Color color17 = java.awt.Color.getColor("hi!", (int) (short) 100);
        boolean boolean18 = xYDataItem14.equals((java.lang.Object) "hi!");
        java.awt.Color color19 = java.awt.Color.MAGENTA;
        piePlot1.setSectionPaint((java.lang.Comparable) "hi!", (java.awt.Paint) color19);
        org.jfree.chart.LegendItem legendItem21 = new org.jfree.chart.LegendItem("http://www.jfree.org/jfreechart/index.html", (java.awt.Paint) color19);
        legendItem21.setSeriesIndex((-1));
        boolean boolean24 = legendItem21.isShapeVisible();
        org.junit.Assert.assertNull(datasetGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 15 + "'", int3 == 15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(color17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(color19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test138");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        combinedRangeXYPlot0.setGap((double) (-16777216));
        combinedRangeXYPlot0.clearRangeMarkers();
        org.junit.Assert.assertNotNull(list1);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test139");
        org.jfree.chart.renderer.xy.GradientXYBarPainter gradientXYBarPainter3 = new org.jfree.chart.renderer.xy.GradientXYBarPainter((double) 100.0f, (double) 60000L, (double) 1.0f);
        java.awt.Graphics2D graphics2D4 = null;
        org.jfree.chart.renderer.xy.XYBarRenderer xYBarRenderer6 = new org.jfree.chart.renderer.xy.XYBarRenderer(10.0d);
        org.jfree.chart.title.TextTitle textTitle11 = new org.jfree.chart.title.TextTitle("");
        boolean boolean12 = textTitle11.getExpandToFitSpace();
        textTitle11.setText("");
        java.lang.String str15 = textTitle11.getID();
        java.awt.Font font16 = textTitle11.getFont();
        java.awt.Graphics2D graphics2D17 = null;
        org.jfree.chart.entity.EntityCollection entityCollection18 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo19 = new org.jfree.chart.ChartRenderingInfo(entityCollection18);
        java.awt.Paint paint20 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean21 = chartRenderingInfo19.equals((java.lang.Object) paint20);
        java.awt.geom.Rectangle2D rectangle2D22 = chartRenderingInfo19.getChartArea();
        textTitle11.draw(graphics2D17, rectangle2D22);
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot25 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis24);
        java.awt.Graphics2D graphics2D26 = null;
        org.jfree.chart.entity.EntityCollection entityCollection27 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo28 = new org.jfree.chart.ChartRenderingInfo(entityCollection27);
        java.awt.Paint paint29 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean30 = chartRenderingInfo28.equals((java.lang.Object) paint29);
        java.awt.geom.Rectangle2D rectangle2D31 = chartRenderingInfo28.getChartArea();
        java.util.List list32 = null;
        combinedDomainXYPlot25.drawDomainGridlines(graphics2D26, rectangle2D31, list32);
        combinedDomainXYPlot25.clearSelection();
        org.jfree.chart.util.RectangleEdge rectangleEdge36 = combinedDomainXYPlot25.getRangeAxisEdge(15);
        // The following exception was thrown during execution in test generation
        try {
            gradientXYBarPainter3.paintBarShadow(graphics2D4, xYBarRenderer6, 7, (int) (byte) 100, true, (java.awt.geom.RectangularShape) rectangle2D22, rectangleEdge36, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(rectangle2D22);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(rectangle2D31);
        org.junit.Assert.assertNotNull(rectangleEdge36);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test140");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape5 = barRenderer3D0.getBaseShape();
        barRenderer3D0.setBaseSeriesVisible(false);
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot9 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean22 = xYAreaRenderer11.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot9.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        int int25 = combinedDomainXYPlot9.getRangeAxisIndex(valueAxis24);
        boolean boolean26 = combinedDomainXYPlot9.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets27 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double28 = rectangleInsets27.getLeft();
        double double30 = rectangleInsets27.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot9.setAxisOffset(rectangleInsets27);
        combinedDomainXYPlot9.setDomainGridlinesVisible(false);
        java.awt.Paint paint34 = combinedDomainXYPlot9.getNoDataMessagePaint();
        barRenderer3D0.setBaseItemLabelPaint(paint34, false);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot38 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot38.clearAnnotations();
        org.jfree.data.time.Year year42 = new org.jfree.data.time.Year((int) (short) 0);
        long long43 = year42.getFirstMillisecond();
        org.jfree.data.time.Year year45 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis46 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year42, (org.jfree.data.time.RegularTimePeriod) year45);
        org.jfree.data.time.Year year49 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year51 = new org.jfree.data.time.Year((int) (short) 0);
        long long52 = year51.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis53 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year49, (org.jfree.data.time.RegularTimePeriod) year51);
        periodAxis46.setLast((org.jfree.data.time.RegularTimePeriod) year51);
        java.awt.Stroke stroke55 = periodAxis46.getMinorTickMarkStroke();
        java.lang.Class class56 = periodAxis46.getMajorTickTimePeriodClass();
        org.jfree.chart.entity.EntityCollection entityCollection57 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo58 = new org.jfree.chart.ChartRenderingInfo(entityCollection57);
        java.awt.Paint paint59 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean60 = chartRenderingInfo58.equals((java.lang.Object) paint59);
        java.awt.geom.Rectangle2D rectangle2D61 = chartRenderingInfo58.getChartArea();
        org.jfree.chart.title.TextTitle textTitle63 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity64 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D61, (org.jfree.chart.title.Title) textTitle63);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor65 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D66 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D61, rectangleAnchor65);
        java.awt.Color color71 = java.awt.Color.getHSBColor((float) 2, (float) 15, (float) 0);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D72 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font76 = barRenderer3D72.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape77 = barRenderer3D72.getBaseShape();
        java.awt.Paint paint78 = barRenderer3D72.getShadowPaint();
        java.awt.Stroke stroke82 = barRenderer3D72.getItemOutlineStroke((int) (byte) 1, (int) '#', false);
        barRenderer3D0.drawRangeLine(graphics2D37, categoryPlot38, (org.jfree.chart.axis.ValueAxis) periodAxis46, rectangle2D61, (double) 10L, (java.awt.Paint) color71, stroke82);
        org.jfree.data.general.SeriesChangeInfo seriesChangeInfo84 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.general.SeriesChangeEvent seriesChangeEvent85 = new org.jfree.data.general.SeriesChangeEvent((java.lang.Object) graphics2D37, seriesChangeInfo84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null source");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangleInsets27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-62167363200000L) + "'", long43 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-62167363200000L) + "'", long52 == (-62167363200000L));
        org.junit.Assert.assertNotNull(stroke55);
        org.junit.Assert.assertNotNull(class56);
        org.junit.Assert.assertNotNull(paint59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(rectangle2D61);
        org.junit.Assert.assertNotNull(rectangleAnchor65);
        org.junit.Assert.assertNotNull(point2D66);
        org.junit.Assert.assertNotNull(color71);
        org.junit.Assert.assertNotNull(font76);
        org.junit.Assert.assertNotNull(shape77);
        org.junit.Assert.assertNotNull(paint78);
        org.junit.Assert.assertNotNull(stroke82);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test141");
        org.jfree.chart.title.TextTitle textTitle1 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot3 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis2);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer5 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer5.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator8 = null;
        xYAreaRenderer5.setLegendItemURLGenerator(xYSeriesLabelGenerator8);
        xYAreaRenderer5.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean16 = xYAreaRenderer5.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot3.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer5);
        boolean boolean18 = combinedDomainXYPlot3.canSelectByPoint();
        org.jfree.chart.axis.AxisLocation axisLocation19 = org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT;
        combinedDomainXYPlot3.setRangeAxisLocation(axisLocation19, true);
        boolean boolean22 = textTitle1.equals((java.lang.Object) combinedDomainXYPlot3);
        org.jfree.chart.axis.AxisLocation axisLocation24 = combinedDomainXYPlot3.getRangeAxisLocation((int) '#');
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(axisLocation19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(axisLocation24);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test142");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        barRenderer3D0.setSeriesToolTipGenerator(15, categoryToolTipGenerator6, true);
        org.jfree.chart.util.LengthAdjustmentType lengthAdjustmentType9 = org.jfree.chart.util.LengthAdjustmentType.EXPAND;
        boolean boolean10 = barRenderer3D0.equals((java.lang.Object) lengthAdjustmentType9);
        java.awt.Paint paint11 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT;
        barRenderer3D0.setBaseFillPaint(paint11, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = barRenderer3D0.getSeriesItemLabelGenerator((int) (byte) 100);
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.title.TextTitle textTitle18 = new org.jfree.chart.title.TextTitle("");
        boolean boolean19 = textTitle18.getExpandToFitSpace();
        textTitle18.setText("");
        java.lang.String str22 = textTitle18.getID();
        java.awt.Font font23 = textTitle18.getFont();
        java.awt.Graphics2D graphics2D24 = null;
        org.jfree.chart.entity.EntityCollection entityCollection25 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo26 = new org.jfree.chart.ChartRenderingInfo(entityCollection25);
        java.awt.Paint paint27 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean28 = chartRenderingInfo26.equals((java.lang.Object) paint27);
        java.awt.geom.Rectangle2D rectangle2D29 = chartRenderingInfo26.getChartArea();
        textTitle18.draw(graphics2D24, rectangle2D29);
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer33 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection34 = categoryPlot31.getDomainMarkers((int) 'a', layer33);
        org.jfree.data.category.CategoryDataset categoryDataset36 = null;
        categoryPlot31.setDataset(4, categoryDataset36);
        org.jfree.chart.axis.AxisLocation axisLocation38 = org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT;
        categoryPlot31.setRangeAxisLocation(axisLocation38, false);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo42 = null;
        java.awt.geom.Point2D point2D43 = null;
        categoryPlot31.zoomRangeAxes((double) (-16777216), plotRenderingInfo42, point2D43, false);
        org.jfree.chart.plot.PiePlot piePlot46 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup47 = piePlot46.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener48 = null;
        piePlot46.addChangeListener(plotChangeListener48);
        java.awt.Color color52 = java.awt.Color.getColor("hi!", (int) (short) 100);
        piePlot46.setLabelOutlinePaint((java.awt.Paint) color52);
        boolean boolean54 = piePlot46.getLabelLinksVisible();
        org.jfree.chart.title.TextTitle textTitle55 = new org.jfree.chart.title.TextTitle();
        boolean boolean56 = piePlot46.equals((java.lang.Object) textTitle55);
        java.awt.Stroke stroke57 = piePlot46.getLabelLinkStroke();
        categoryPlot31.setRangeZeroBaselineStroke(stroke57);
        categoryPlot31.configureRangeAxes();
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot61 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list62 = combinedRangeXYPlot61.getSubplots();
        combinedRangeXYPlot61.setGap((double) (-16777216));
        org.jfree.chart.entity.EntityCollection entityCollection67 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo68 = new org.jfree.chart.ChartRenderingInfo(entityCollection67);
        java.awt.Paint paint69 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean70 = chartRenderingInfo68.equals((java.lang.Object) paint69);
        java.awt.geom.Rectangle2D rectangle2D71 = chartRenderingInfo68.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo72 = chartRenderingInfo68.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo73 = plotRenderingInfo72.getOwner();
        combinedRangeXYPlot61.handleClick((-9999), 5, plotRenderingInfo72);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState75 = barRenderer3D0.initialise(graphics2D16, rectangle2D29, categoryPlot31, (int) '4', plotRenderingInfo72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(lengthAdjustmentType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(font23);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(rectangle2D29);
        org.junit.Assert.assertNotNull(layer33);
        org.junit.Assert.assertNull(collection34);
        org.junit.Assert.assertNotNull(axisLocation38);
        org.junit.Assert.assertNull(datasetGroup47);
        org.junit.Assert.assertNotNull(color52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(stroke57);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(paint69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(rectangle2D71);
        org.junit.Assert.assertNotNull(plotRenderingInfo72);
        org.junit.Assert.assertNotNull(chartRenderingInfo73);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test143");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        xYAreaRenderer1.setBaseSeriesVisible(false);
        java.awt.Paint paint7 = xYAreaRenderer1.getBaseLegendTextPaint();
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator8 = null;
        xYAreaRenderer1.setBaseURLGenerator(xYURLGenerator8, false);
        org.jfree.chart.title.TextTitle textTitle13 = new org.jfree.chart.title.TextTitle("");
        boolean boolean14 = textTitle13.getExpandToFitSpace();
        textTitle13.setText("");
        java.lang.String str17 = textTitle13.getID();
        java.awt.Font font18 = textTitle13.getFont();
        org.jfree.chart.title.TextTitle textTitle19 = new org.jfree.chart.title.TextTitle("null", font18);
        xYAreaRenderer1.setBaseLegendTextFont(font18);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(font18);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test144");
        java.util.Locale locale1 = null;
        java.lang.ClassLoader classLoader2 = null;
        java.util.ResourceBundle.Control control3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ResourceBundle resourceBundle4 = java.util.ResourceBundle.getBundle("DateTickMarkPosition.MIDDLE", locale1, classLoader2, control3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test145");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Color color4 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer6 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean8 = xYAreaRenderer6.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint9 = xYAreaRenderer6.getBaseLegendTextPaint();
        java.awt.Stroke stroke11 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer6.setSeriesOutlineStroke(0, stroke11, false);
        java.awt.Color color16 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer18 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean20 = xYAreaRenderer18.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint21 = xYAreaRenderer18.getBaseLegendTextPaint();
        java.awt.Stroke stroke23 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer18.setSeriesOutlineStroke(0, stroke23, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker27 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color4, stroke11, (java.awt.Paint) color16, stroke23, (float) (byte) 1);
        org.jfree.chart.plot.CategoryPlot categoryPlot28 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot28.clearAnnotations();
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent30 = null;
        categoryPlot28.rendererChanged(rendererChangeEvent30);
        double double32 = categoryPlot28.getAnchorValue();
        java.awt.Color color36 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer38 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean40 = xYAreaRenderer38.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint41 = xYAreaRenderer38.getBaseLegendTextPaint();
        java.awt.Stroke stroke43 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer38.setSeriesOutlineStroke(0, stroke43, false);
        java.awt.Color color48 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer50 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean52 = xYAreaRenderer50.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint53 = xYAreaRenderer50.getBaseLegendTextPaint();
        java.awt.Stroke stroke55 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer50.setSeriesOutlineStroke(0, stroke55, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker59 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color36, stroke43, (java.awt.Paint) color48, stroke55, (float) (byte) 1);
        java.lang.Object obj60 = intervalMarker59.clone();
        org.jfree.chart.plot.PiePlot piePlot61 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup62 = piePlot61.getDatasetGroup();
        int int63 = piePlot61.getBackgroundImageAlignment();
        org.jfree.chart.labels.PieSectionLabelGenerator pieSectionLabelGenerator64 = piePlot61.getLegendLabelGenerator();
        boolean boolean65 = intervalMarker59.equals((java.lang.Object) piePlot61);
        org.jfree.chart.plot.CategoryPlot categoryPlot66 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer68 = org.jfree.chart.util.Layer.BACKGROUND;
        java.util.Collection collection69 = categoryPlot66.getRangeMarkers(7, layer68);
        java.lang.Object obj70 = null;
        boolean boolean71 = layer68.equals(obj70);
        boolean boolean73 = categoryPlot28.removeDomainMarker(7, (org.jfree.chart.plot.Marker) intervalMarker59, layer68, false);
        // The following exception was thrown during execution in test generation
        try {
            combinedRangeXYPlot0.addRangeMarker((int) (byte) -1, (org.jfree.chart.plot.Marker) intervalMarker27, layer68, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.plot.CombinedRangeXYPlot@16d94ac9 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(color4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(paint9);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNotNull(color16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(paint21);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(color36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(paint41);
        org.junit.Assert.assertNotNull(stroke43);
        org.junit.Assert.assertNotNull(color48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(paint53);
        org.junit.Assert.assertNotNull(stroke55);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNull(datasetGroup62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 15 + "'", int63 == 15);
        org.junit.Assert.assertNotNull(pieSectionLabelGenerator64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(layer68);
        org.junit.Assert.assertNull(collection69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test146");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Paint paint46 = legendGraphic45.getOutlinePaint();
        legendGraphic45.setShapeOutlineVisible(false);
        boolean boolean49 = legendGraphic45.isShapeOutlineVisible();
        java.awt.Graphics2D graphics2D50 = null;
        org.jfree.data.Range range52 = null;
        org.jfree.chart.block.RectangleConstraint rectangleConstraint53 = new org.jfree.chart.block.RectangleConstraint(0.0d, range52);
        org.jfree.data.Range range56 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range59 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range60 = org.jfree.data.Range.combine(range56, range59);
        org.jfree.data.Range range61 = org.jfree.chart.axis.ValueAxis.DEFAULT_RANGE;
        org.jfree.data.Range range62 = org.jfree.data.Range.combine(range56, range61);
        org.jfree.chart.block.RectangleConstraint rectangleConstraint63 = rectangleConstraint53.toRangeWidth(range56);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.util.Size2D size2D64 = legendGraphic45.arrange(graphics2D50, rectangleConstraint63);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: Not yet implemented.");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(range60);
        org.junit.Assert.assertNotNull(range61);
        org.junit.Assert.assertNotNull(range62);
        org.junit.Assert.assertNotNull(rectangleConstraint63);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test147");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        org.jfree.chart.labels.StandardXYToolTipGenerator standardXYToolTipGenerator3 = org.jfree.chart.labels.StandardXYToolTipGenerator.getTimeSeriesInstance();
        java.text.NumberFormat numberFormat4 = standardXYToolTipGenerator3.getXFormat();
        java.lang.Object obj5 = standardXYToolTipGenerator3.clone();
        xYAreaRenderer1.setSeriesToolTipGenerator(1, (org.jfree.chart.labels.XYToolTipGenerator) standardXYToolTipGenerator3, false);
        java.text.NumberFormat numberFormat8 = standardXYToolTipGenerator3.getYFormat();
        org.junit.Assert.assertNotNull(standardXYToolTipGenerator3);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(numberFormat8);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test148");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D2 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.axis.ValueAxis valueAxis3 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot4 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis3);
        java.awt.Color color5 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot4.setRangeMinorGridlinePaint((java.awt.Paint) color5);
        boolean boolean7 = combinedDomainXYPlot4.canSelectByRegion();
        barRenderer3D2.addChangeListener((org.jfree.chart.event.RendererChangeListener) combinedDomainXYPlot4);
        java.lang.String str9 = combinedDomainXYPlot4.getPlotType();
        org.junit.Assert.assertNotNull(color5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Combined_Domain_XYPlot" + "'", str9, "Combined_Domain_XYPlot");
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test149");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.ui.ProjectInfo projectInfo25 = org.jfree.chart.JFreeChart.INFO;
        org.jfree.chart.ui.Library[] libraryArray26 = projectInfo25.getOptionalLibraries();
        org.jfree.chart.axis.SegmentedTimeline segmentedTimeline27 = org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline();
        boolean boolean30 = segmentedTimeline27.containsDomainRange((long) 1, (long) (byte) 10);
        long long32 = segmentedTimeline27.toTimelineValue((long) '#');
        java.util.List list33 = segmentedTimeline27.getExceptionSegments();
        projectInfo25.setContributors(list33);
        java.awt.Image image35 = projectInfo25.getLogo();
        combinedDomainXYPlot1.setBackgroundImage(image35);
        boolean boolean37 = combinedDomainXYPlot1.isDomainZoomable();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(projectInfo25);
        org.junit.Assert.assertNotNull(libraryArray26);
        org.junit.Assert.assertNotNull(segmentedTimeline27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1577894400035L + "'", long32 == 1577894400035L);
        org.junit.Assert.assertNotNull(list33);
        org.junit.Assert.assertNotNull(image35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test150");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        org.jfree.chart.plot.PiePlot piePlot1 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup2 = piePlot1.getDatasetGroup();
        int int3 = piePlot1.getBackgroundImageAlignment();
        boolean boolean4 = piePlot1.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D5 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo6 = null;
        piePlot1.createAndAddEntity(rectangle2D5, plotRenderingInfo6, "hi!", "LGPL");
        java.awt.Paint paint10 = piePlot1.getLabelPaint();
        java.awt.Stroke stroke11 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        piePlot1.setOutlineStroke(stroke11);
        combinedDomainXYPlot0.setDomainMinorGridlineStroke(stroke11);
        int int14 = combinedDomainXYPlot0.getWeight();
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer17 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection18 = categoryPlot15.getDomainMarkers((int) 'a', layer17);
        org.jfree.data.general.DatasetGroup datasetGroup19 = categoryPlot15.getDatasetGroup();
        categoryPlot15.setCrosshairDatasetIndex((int) (short) 10, true);
        java.awt.Paint paint23 = categoryPlot15.getDomainGridlinePaint();
        combinedDomainXYPlot0.setDomainZeroBaselinePaint(paint23);
        org.junit.Assert.assertNull(datasetGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 15 + "'", int3 == 15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(layer17);
        org.junit.Assert.assertNull(collection18);
        org.junit.Assert.assertNull(datasetGroup19);
        org.junit.Assert.assertNotNull(paint23);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test151");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        boolean boolean18 = combinedDomainXYPlot1.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets19 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double20 = rectangleInsets19.getLeft();
        double double22 = rectangleInsets19.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot1.setAxisOffset(rectangleInsets19);
        combinedDomainXYPlot1.setDomainGridlinesVisible(false);
        boolean boolean26 = combinedDomainXYPlot1.isDomainMinorGridlinesVisible();
        combinedDomainXYPlot1.setDomainCrosshairValue((double) 1.0f, false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(rectangleInsets19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test152");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Paint paint46 = legendGraphic45.getOutlinePaint();
        org.jfree.data.time.Year year49 = new org.jfree.data.time.Year((int) (short) 0);
        long long50 = year49.getFirstMillisecond();
        org.jfree.data.time.Year year52 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis53 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year49, (org.jfree.data.time.RegularTimePeriod) year52);
        org.jfree.data.time.Year year56 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year58 = new org.jfree.data.time.Year((int) (short) 0);
        long long59 = year58.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis60 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year56, (org.jfree.data.time.RegularTimePeriod) year58);
        periodAxis53.setLast((org.jfree.data.time.RegularTimePeriod) year58);
        java.awt.Stroke stroke62 = periodAxis53.getMinorTickMarkStroke();
        legendGraphic45.setLineStroke(stroke62);
        java.awt.Graphics2D graphics2D64 = null;
        org.jfree.chart.entity.EntityCollection entityCollection65 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo66 = new org.jfree.chart.ChartRenderingInfo(entityCollection65);
        java.awt.Paint paint67 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean68 = chartRenderingInfo66.equals((java.lang.Object) paint67);
        java.awt.geom.Rectangle2D rectangle2D69 = chartRenderingInfo66.getChartArea();
        // The following exception was thrown during execution in test generation
        try {
            legendGraphic45.draw(graphics2D64, rectangle2D69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-62167363200000L) + "'", long50 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-62167363200000L) + "'", long59 == (-62167363200000L));
        org.junit.Assert.assertNotNull(stroke62);
        org.junit.Assert.assertNotNull(paint67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(rectangle2D69);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test153");
        java.util.Locale locale1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.labels.StandardPieToolTipGenerator standardPieToolTipGenerator2 = new org.jfree.chart.labels.StandardPieToolTipGenerator("LGPL", locale1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test154");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        boolean boolean18 = combinedDomainXYPlot1.isRangeCrosshairVisible();
        boolean boolean19 = combinedDomainXYPlot1.isDomainCrosshairVisible();
        java.util.TimeZone timeZone20 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection21 = new org.jfree.data.time.TimeSeriesCollection(timeZone20);
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot22.clearAnnotations();
        timeSeriesCollection21.removeChangeListener((org.jfree.data.general.DatasetChangeListener) categoryPlot22);
        org.jfree.data.general.DatasetGroup datasetGroup25 = timeSeriesCollection21.getGroup();
        org.jfree.chart.renderer.xy.XYItemRenderer xYItemRenderer26 = combinedDomainXYPlot1.getRendererForDataset((org.jfree.data.xy.XYDataset) timeSeriesCollection21);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.event.ChartChangeEvent chartChangeEvent27 = new org.jfree.chart.event.ChartChangeEvent((java.lang.Object) xYItemRenderer26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null source");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(datasetGroup25);
        org.junit.Assert.assertNull(xYItemRenderer26);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test155");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D2 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.axis.ValueAxis valueAxis3 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot4 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis3);
        java.awt.Color color5 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot4.setRangeMinorGridlinePaint((java.awt.Paint) color5);
        boolean boolean7 = combinedDomainXYPlot4.canSelectByRegion();
        barRenderer3D2.addChangeListener((org.jfree.chart.event.RendererChangeListener) combinedDomainXYPlot4);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = barRenderer3D2.getLegendItemURLGenerator();
        java.awt.Graphics2D graphics2D10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = null;
        org.jfree.chart.plot.PiePlot piePlot12 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup13 = piePlot12.getDatasetGroup();
        int int14 = piePlot12.getBackgroundImageAlignment();
        boolean boolean15 = piePlot12.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo17 = null;
        piePlot12.createAndAddEntity(rectangle2D16, plotRenderingInfo17, "hi!", "LGPL");
        piePlot12.setStartAngle((double) 1);
        org.jfree.data.xy.XYDataItem xYDataItem25 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        java.awt.Color color28 = java.awt.Color.getColor("hi!", (int) (short) 100);
        boolean boolean29 = xYDataItem25.equals((java.lang.Object) "hi!");
        java.awt.Color color30 = java.awt.Color.MAGENTA;
        piePlot12.setSectionPaint((java.lang.Comparable) "hi!", (java.awt.Paint) color30);
        java.awt.Graphics2D graphics2D32 = null;
        org.jfree.chart.entity.EntityCollection entityCollection33 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo34 = new org.jfree.chart.ChartRenderingInfo(entityCollection33);
        java.awt.Paint paint35 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean36 = chartRenderingInfo34.equals((java.lang.Object) paint35);
        java.awt.geom.Rectangle2D rectangle2D37 = chartRenderingInfo34.getChartArea();
        piePlot12.drawBackgroundImage(graphics2D32, rectangle2D37);
        org.jfree.chart.plot.CategoryPlot categoryPlot39 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer41 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection42 = categoryPlot39.getDomainMarkers((int) 'a', layer41);
        org.jfree.data.category.CategoryDataset categoryDataset44 = null;
        categoryPlot39.setDataset(4, categoryDataset44);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier46 = categoryPlot39.getDrawingSupplier();
        categoryPlot39.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace48 = null;
        categoryPlot39.setFixedDomainAxisSpace(axisSpace48);
        categoryPlot39.setCrosshairDatasetIndex((int) (short) 100);
        categoryPlot39.setBackgroundAlpha((float) 8);
        org.jfree.chart.util.RectangleEdge rectangleEdge54 = categoryPlot39.getDomainAxisEdge();
        double double55 = org.jfree.chart.util.RectangleEdge.coordinate(rectangle2D37, rectangleEdge54);
        // The following exception was thrown during execution in test generation
        try {
            barRenderer3D2.drawOutline(graphics2D10, categoryPlot11, rectangle2D37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(color5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNull(datasetGroup13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 15 + "'", int14 == 15);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(color28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(color30);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(rectangle2D37);
        org.junit.Assert.assertNotNull(layer41);
        org.junit.Assert.assertNull(collection42);
        org.junit.Assert.assertNotNull(drawingSupplier46);
        org.junit.Assert.assertNotNull(rectangleEdge54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test156");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke1 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot0.setRangeCrosshairStroke(stroke1);
        org.jfree.data.xy.XYSeries xYSeries6 = new org.jfree.data.xy.XYSeries((java.lang.Comparable) 0.2d, true, false);
        xYSeries6.setDescription("DateTickMarkPosition.MIDDLE");
        org.jfree.data.xy.XYDataItem xYDataItem11 = xYSeries6.addOrUpdate((java.lang.Number) (-1L), (java.lang.Number) (-1));
        boolean boolean12 = combinedRangeXYPlot0.equals((java.lang.Object) xYDataItem11);
        org.jfree.chart.renderer.xy.XYItemRenderer xYItemRenderer14 = combinedRangeXYPlot0.getRenderer(15);
        org.junit.Assert.assertNotNull(stroke1);
        org.junit.Assert.assertNull(xYDataItem11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(xYItemRenderer14);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test157");
        org.jfree.chart.util.GradientPaintTransformType gradientPaintTransformType0 = org.jfree.chart.util.GradientPaintTransformType.HORIZONTAL;
        org.jfree.chart.util.StandardGradientPaintTransformer standardGradientPaintTransformer1 = new org.jfree.chart.util.StandardGradientPaintTransformer(gradientPaintTransformType0);
        java.lang.Object obj2 = standardGradientPaintTransformer1.clone();
        java.awt.GradientPaint gradientPaint3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer6 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection7 = categoryPlot4.getDomainMarkers((int) 'a', layer6);
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        categoryPlot4.setDataset(4, categoryDataset9);
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot();
        int int12 = categoryPlot11.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation13 = categoryPlot11.getOrientation();
        categoryPlot4.setOrientation(plotOrientation13);
        boolean boolean15 = categoryPlot4.isDomainPannable();
        categoryPlot4.setRangeCrosshairValue((double) 10);
        java.awt.Graphics2D graphics2D18 = null;
        org.jfree.chart.entity.EntityCollection entityCollection19 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo20 = new org.jfree.chart.ChartRenderingInfo(entityCollection19);
        java.awt.Paint paint21 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean22 = chartRenderingInfo20.equals((java.lang.Object) paint21);
        java.awt.geom.Rectangle2D rectangle2D23 = chartRenderingInfo20.getChartArea();
        org.jfree.chart.title.TextTitle textTitle25 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity26 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D23, (org.jfree.chart.title.Title) textTitle25);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor27 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D28 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D23, rectangleAnchor27);
        org.jfree.data.general.PieDataset pieDataset29 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity35 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D23, pieDataset29, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.AxisSpace axisSpace36 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis38 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot39 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis38);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer41 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer41.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator44 = null;
        xYAreaRenderer41.setLegendItemURLGenerator(xYSeriesLabelGenerator44);
        xYAreaRenderer41.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean52 = xYAreaRenderer41.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot39.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer41);
        org.jfree.chart.axis.ValueAxis valueAxis54 = null;
        int int55 = combinedDomainXYPlot39.getRangeAxisIndex(valueAxis54);
        org.jfree.chart.axis.ValueAxis valueAxis56 = null;
        combinedDomainXYPlot39.setDomainAxis(valueAxis56);
        org.jfree.chart.util.RectangleEdge rectangleEdge59 = combinedDomainXYPlot39.getDomainAxisEdge(0);
        axisSpace36.add((double) 10L, rectangleEdge59);
        org.jfree.chart.axis.AxisSpace axisSpace61 = categoryPlot4.calculateDomainAxisSpace(graphics2D18, rectangle2D23, axisSpace36);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.GradientPaint gradientPaint62 = standardGradientPaintTransformer1.transform(gradientPaint3, (java.awt.Shape) rectangle2D23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(gradientPaintTransformType0);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(layer6);
        org.junit.Assert.assertNull(collection7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(plotOrientation13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(rectangle2D23);
        org.junit.Assert.assertNotNull(rectangleAnchor27);
        org.junit.Assert.assertNotNull(point2D28);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge59);
        org.junit.Assert.assertNotNull(axisSpace61);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test158");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D17 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font21 = barRenderer3D17.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape22 = barRenderer3D17.getBaseShape();
        java.awt.Color color25 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer27 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean29 = xYAreaRenderer27.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint30 = xYAreaRenderer27.getBaseLegendTextPaint();
        java.awt.Stroke stroke32 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer27.setSeriesOutlineStroke(0, stroke32, false);
        java.awt.Color color37 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer39 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean41 = xYAreaRenderer39.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint42 = xYAreaRenderer39.getBaseLegendTextPaint();
        java.awt.Stroke stroke44 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer39.setSeriesOutlineStroke(0, stroke44, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker48 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color25, stroke32, (java.awt.Paint) color37, stroke44, (float) (byte) 1);
        barRenderer3D17.setBaseOutlineStroke(stroke32);
        boolean boolean50 = barRenderer3D17.getBaseCreateEntities();
        boolean boolean51 = barRenderer3D17.getBaseItemLabelsVisible();
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D55 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator56 = null;
        barRenderer3D55.setLegendItemToolTipGenerator(categorySeriesLabelGenerator56);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator58 = null;
        barRenderer3D55.setBaseURLGenerator(categoryURLGenerator58, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition64 = barRenderer3D55.getPositiveItemLabelPosition(15, 1, true);
        barRenderer3D17.setSeriesPositiveItemLabelPosition((int) (short) 100, itemLabelPosition64);
        xYAreaRenderer3.setSeriesNegativeItemLabelPosition(0, itemLabelPosition64);
        xYAreaRenderer3.setBaseSeriesVisible(true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font21);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(color25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNotNull(stroke32);
        org.junit.Assert.assertNotNull(color37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(paint42);
        org.junit.Assert.assertNotNull(stroke44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition64);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test159");
        org.jfree.chart.block.BorderArrangement borderArrangement0 = new org.jfree.chart.block.BorderArrangement();
        java.util.TimeZone timeZone1 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection2 = new org.jfree.data.time.TimeSeriesCollection(timeZone1);
        org.jfree.chart.title.LegendItemBlockContainer legendItemBlockContainer4 = new org.jfree.chart.title.LegendItemBlockContainer((org.jfree.chart.block.Arrangement) borderArrangement0, (org.jfree.data.general.Dataset) timeSeriesCollection2, (java.lang.Comparable) (byte) 10);
        java.lang.Comparable comparable5 = null;
        int int6 = timeSeriesCollection2.indexOf(comparable5);
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot8 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis7);
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.entity.EntityCollection entityCollection10 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo11 = new org.jfree.chart.ChartRenderingInfo(entityCollection10);
        java.awt.Paint paint12 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean13 = chartRenderingInfo11.equals((java.lang.Object) paint12);
        java.awt.geom.Rectangle2D rectangle2D14 = chartRenderingInfo11.getChartArea();
        java.util.List list15 = null;
        combinedDomainXYPlot8.drawDomainGridlines(graphics2D9, rectangle2D14, list15);
        org.jfree.chart.axis.NumberAxis numberAxis18 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity21 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D14, (org.jfree.chart.axis.Axis) numberAxis18, "", "DatasetRenderingOrder.FORWARD");
        numberAxis18.centerRange(10.0d);
        org.jfree.chart.axis.NumberAxis numberAxis25 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis25.pan((double) 1);
        numberAxis25.setTickLabelsVisible(false);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer31 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean33 = xYAreaRenderer31.isSeriesItemLabelsVisible((int) (byte) 1);
        org.jfree.chart.plot.XYPlot xYPlot34 = new org.jfree.chart.plot.XYPlot((org.jfree.data.xy.XYDataset) timeSeriesCollection2, (org.jfree.chart.axis.ValueAxis) numberAxis18, (org.jfree.chart.axis.ValueAxis) numberAxis25, (org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer31);
        org.jfree.data.RangeType rangeType35 = numberAxis18.getRangeType();
        java.lang.String str36 = rangeType35.toString();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(rectangle2D14);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(rangeType35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "RangeType.FULL" + "'", str36, "RangeType.FULL");
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test160");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Graphics2D graphics2D46 = null;
        org.jfree.chart.entity.EntityCollection entityCollection47 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo48 = new org.jfree.chart.ChartRenderingInfo(entityCollection47);
        java.awt.Paint paint49 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean50 = chartRenderingInfo48.equals((java.lang.Object) paint49);
        java.awt.geom.Rectangle2D rectangle2D51 = chartRenderingInfo48.getChartArea();
        org.jfree.chart.title.TextTitle textTitle53 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity54 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D51, (org.jfree.chart.title.Title) textTitle53);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor55 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D56 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D51, rectangleAnchor55);
        // The following exception was thrown during execution in test generation
        try {
            legendGraphic45.draw(graphics2D46, rectangle2D51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(rectangle2D51);
        org.junit.Assert.assertNotNull(rectangleAnchor55);
        org.junit.Assert.assertNotNull(point2D56);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test161");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        boolean boolean5 = xYAreaRenderer1.getBaseItemLabelsVisible();
        java.awt.Paint paint6 = xYAreaRenderer1.getBasePaint();
        java.awt.Font font7 = xYAreaRenderer1.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator8 = null;
        xYAreaRenderer1.setBaseItemLabelGenerator(xYItemLabelGenerator8);
        xYAreaRenderer1.setUseFillPaint(true);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot14 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis13);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer16 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer16.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator19 = null;
        xYAreaRenderer16.setLegendItemURLGenerator(xYSeriesLabelGenerator19);
        xYAreaRenderer16.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean27 = xYAreaRenderer16.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot14.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer16);
        combinedDomainXYPlot14.clearDomainMarkers();
        boolean boolean30 = combinedDomainXYPlot14.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.NumberAxis numberAxis32 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis32.pan((double) 1);
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot36 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis35);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.entity.EntityCollection entityCollection38 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo39 = new org.jfree.chart.ChartRenderingInfo(entityCollection38);
        java.awt.Paint paint40 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean41 = chartRenderingInfo39.equals((java.lang.Object) paint40);
        java.awt.geom.Rectangle2D rectangle2D42 = chartRenderingInfo39.getChartArea();
        java.util.List list43 = null;
        combinedDomainXYPlot36.drawDomainGridlines(graphics2D37, rectangle2D42, list43);
        org.jfree.chart.axis.NumberAxis numberAxis46 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity49 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D42, (org.jfree.chart.axis.Axis) numberAxis46, "", "DatasetRenderingOrder.FORWARD");
        xYAreaRenderer1.drawDomainGridLine(graphics2D12, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot14, (org.jfree.chart.axis.ValueAxis) numberAxis32, rectangle2D42, (double) 11);
        numberAxis32.setLabelToolTip("{0}: ({1}, {2})");
        numberAxis32.setRange(0.0d, (double) 1L);
        double double57 = numberAxis32.getLowerMargin();
        org.jfree.chart.plot.Plot plot58 = numberAxis32.getPlot();
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot59 = new org.jfree.chart.plot.CombinedDomainXYPlot((org.jfree.chart.axis.ValueAxis) numberAxis32);
        org.jfree.chart.util.RectangleEdge rectangleEdge60 = combinedDomainXYPlot59.getDomainAxisEdge();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(rectangle2D42);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.05d + "'", double57 == 0.05d);
        org.junit.Assert.assertNull(plot58);
        org.junit.Assert.assertNotNull(rectangleEdge60);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test162");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D2 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator3 = barRenderer3D2.getBaseToolTipGenerator();
        boolean boolean6 = barRenderer3D2.getItemVisible(0, 8);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = null;
        barRenderer3D2.setBaseItemLabelGenerator(categoryItemLabelGenerator7, false);
        org.junit.Assert.assertNull(categoryToolTipGenerator3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test163");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = null;
        xYAreaRenderer3.setSeriesPositiveItemLabelPosition(0, itemLabelPosition17, false);
        boolean boolean20 = xYAreaRenderer3.getAutoPopulateSeriesShape();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test164");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        double double1 = combinedRangeXYPlot0.getGap();
        java.awt.Paint paint2 = combinedRangeXYPlot0.getDomainTickBandPaint();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 5.0d + "'", double1 == 5.0d);
        org.junit.Assert.assertNull(paint2);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test165");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        boolean boolean5 = xYAreaRenderer1.getBaseItemLabelsVisible();
        java.awt.Paint paint6 = xYAreaRenderer1.getBasePaint();
        java.awt.Font font7 = xYAreaRenderer1.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator8 = null;
        xYAreaRenderer1.setBaseItemLabelGenerator(xYItemLabelGenerator8);
        xYAreaRenderer1.setUseFillPaint(true);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot14 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis13);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer16 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer16.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator19 = null;
        xYAreaRenderer16.setLegendItemURLGenerator(xYSeriesLabelGenerator19);
        xYAreaRenderer16.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean27 = xYAreaRenderer16.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot14.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer16);
        combinedDomainXYPlot14.clearDomainMarkers();
        boolean boolean30 = combinedDomainXYPlot14.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.NumberAxis numberAxis32 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis32.pan((double) 1);
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot36 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis35);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.entity.EntityCollection entityCollection38 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo39 = new org.jfree.chart.ChartRenderingInfo(entityCollection38);
        java.awt.Paint paint40 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean41 = chartRenderingInfo39.equals((java.lang.Object) paint40);
        java.awt.geom.Rectangle2D rectangle2D42 = chartRenderingInfo39.getChartArea();
        java.util.List list43 = null;
        combinedDomainXYPlot36.drawDomainGridlines(graphics2D37, rectangle2D42, list43);
        org.jfree.chart.axis.NumberAxis numberAxis46 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity49 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D42, (org.jfree.chart.axis.Axis) numberAxis46, "", "DatasetRenderingOrder.FORWARD");
        xYAreaRenderer1.drawDomainGridLine(graphics2D12, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot14, (org.jfree.chart.axis.ValueAxis) numberAxis32, rectangle2D42, (double) 11);
        numberAxis32.setLabelToolTip("{0}: ({1}, {2})");
        org.jfree.chart.util.LogFormat logFormat58 = new org.jfree.chart.util.LogFormat((double) 7, "RectangleEdge.RIGHT", "", false);
        java.lang.StringBuffer stringBuffer60 = null;
        java.text.FieldPosition fieldPosition61 = null;
        java.lang.StringBuffer stringBuffer62 = logFormat58.format((long) (short) 0, stringBuffer60, fieldPosition61);
        java.text.NumberFormat numberFormat63 = logFormat58.getExponentFormat();
        java.text.NumberFormat numberFormat66 = java.text.NumberFormat.getNumberInstance();
        java.text.DateFormat dateFormat67 = null;
        org.jfree.chart.labels.StandardXYToolTipGenerator standardXYToolTipGenerator68 = new org.jfree.chart.labels.StandardXYToolTipGenerator("LGPL", numberFormat66, dateFormat67);
        java.text.NumberFormat numberFormat69 = java.text.NumberFormat.getNumberInstance();
        int int70 = numberFormat69.getMinimumFractionDigits();
        boolean boolean71 = numberFormat69.isGroupingUsed();
        org.jfree.chart.labels.StandardPieToolTipGenerator standardPieToolTipGenerator72 = new org.jfree.chart.labels.StandardPieToolTipGenerator("NO_CHANGE", numberFormat66, numberFormat69);
        logFormat58.setExponentFormat(numberFormat66);
        numberAxis32.setNumberFormatOverride(numberFormat66);
        java.text.NumberFormat numberFormat77 = java.text.NumberFormat.getNumberInstance();
        java.text.DateFormat dateFormat78 = null;
        org.jfree.chart.labels.StandardXYToolTipGenerator standardXYToolTipGenerator79 = new org.jfree.chart.labels.StandardXYToolTipGenerator("LGPL", numberFormat77, dateFormat78);
        java.text.NumberFormat numberFormat80 = java.text.NumberFormat.getNumberInstance();
        int int81 = numberFormat80.getMinimumFractionDigits();
        boolean boolean82 = numberFormat80.isGroupingUsed();
        org.jfree.chart.labels.StandardPieToolTipGenerator standardPieToolTipGenerator83 = new org.jfree.chart.labels.StandardPieToolTipGenerator("NO_CHANGE", numberFormat77, numberFormat80);
        java.util.Currency currency84 = numberFormat77.getCurrency();
        numberFormat66.setCurrency(currency84);
        java.lang.String str87 = numberFormat66.format((long) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(rectangle2D42);
        org.junit.Assert.assertNotNull(stringBuffer62);
// flaky:         org.junit.Assert.assertEquals(stringBuffer62.toString(), "\u221e");
        org.junit.Assert.assertNotNull(numberFormat63);
        org.junit.Assert.assertNotNull(numberFormat66);
        org.junit.Assert.assertNotNull(numberFormat69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(numberFormat77);
        org.junit.Assert.assertNotNull(numberFormat80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(currency84);
        org.junit.Assert.assertEquals(currency84.toString(), "USD");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "0" + "'", str87, "0");
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test166");
        org.jfree.data.time.Year year2 = new org.jfree.data.time.Year((int) (short) 0);
        long long3 = year2.getFirstMillisecond();
        org.jfree.data.time.Year year5 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis6 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year2, (org.jfree.data.time.RegularTimePeriod) year5);
        org.jfree.data.time.Year year9 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year11 = new org.jfree.data.time.Year((int) (short) 0);
        long long12 = year11.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis13 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year9, (org.jfree.data.time.RegularTimePeriod) year11);
        periodAxis6.setLast((org.jfree.data.time.RegularTimePeriod) year11);
        java.lang.Class class15 = periodAxis6.getAutoRangeTimePeriodClass();
        org.jfree.data.time.RegularTimePeriod regularTimePeriod16 = null;
        // The following exception was thrown during execution in test generation
        try {
            periodAxis6.setLast(regularTimePeriod16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'last' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-62167363200000L) + "'", long3 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-62167363200000L) + "'", long12 == (-62167363200000L));
        org.junit.Assert.assertNotNull(class15);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test167");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        numberAxis11.centerRange(10.0d);
        org.jfree.chart.axis.TickUnits tickUnits17 = new org.jfree.chart.axis.TickUnits();
        numberAxis11.setStandardTickUnits((org.jfree.chart.axis.TickUnitSource) tickUnits17);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.TickUnit tickUnit20 = tickUnits17.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test168");
        org.jfree.chart.title.TextTitle textTitle1 = new org.jfree.chart.title.TextTitle("");
        boolean boolean2 = textTitle1.getExpandToFitSpace();
        textTitle1.setText("");
        java.lang.String str5 = textTitle1.getID();
        java.lang.Object obj6 = textTitle1.clone();
        textTitle1.setURLText("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test169");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        int int1 = categoryPlot0.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge5 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str6 = rectangleEdge5.toString();
        double double7 = categoryPlot0.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge5);
        boolean boolean8 = categoryPlot0.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = categoryPlot0.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge11 = categoryPlot0.getDomainAxisEdge();
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot13 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.entity.EntityCollection entityCollection15 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo16 = new org.jfree.chart.ChartRenderingInfo(entityCollection15);
        java.awt.Paint paint17 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean18 = chartRenderingInfo16.equals((java.lang.Object) paint17);
        java.awt.geom.Rectangle2D rectangle2D19 = chartRenderingInfo16.getChartArea();
        java.util.List list20 = null;
        combinedDomainXYPlot13.drawDomainGridlines(graphics2D14, rectangle2D19, list20);
        org.jfree.chart.axis.NumberAxis numberAxis23 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity26 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D19, (org.jfree.chart.axis.Axis) numberAxis23, "", "DatasetRenderingOrder.FORWARD");
        numberAxis23.centerRange(10.0d);
        org.jfree.data.Range range29 = categoryPlot0.getDataRange((org.jfree.chart.axis.ValueAxis) numberAxis23);
        java.awt.Stroke stroke30 = null;
        // The following exception was thrown during execution in test generation
        try {
            numberAxis23.setAxisLineStroke(stroke30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'stroke' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "RectangleEdge.RIGHT" + "'", str6, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 149.0d + "'", double7 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(categoryAxis10);
        org.junit.Assert.assertNotNull(rectangleEdge11);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(rectangle2D19);
        org.junit.Assert.assertNull(range29);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test170");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        combinedDomainXYPlot1.clearDomainMarkers();
        int int27 = combinedDomainXYPlot1.getRendererCount();
        org.jfree.chart.renderer.xy.XYItemRenderer xYItemRenderer29 = combinedDomainXYPlot1.getRenderer((-1));
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot32 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis31);
        java.awt.Graphics2D graphics2D33 = null;
        org.jfree.chart.entity.EntityCollection entityCollection34 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo35 = new org.jfree.chart.ChartRenderingInfo(entityCollection34);
        java.awt.Paint paint36 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean37 = chartRenderingInfo35.equals((java.lang.Object) paint36);
        java.awt.geom.Rectangle2D rectangle2D38 = chartRenderingInfo35.getChartArea();
        java.util.List list39 = null;
        combinedDomainXYPlot32.drawDomainGridlines(graphics2D33, rectangle2D38, list39);
        org.jfree.chart.axis.NumberAxis numberAxis42 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity45 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D38, (org.jfree.chart.axis.Axis) numberAxis42, "", "DatasetRenderingOrder.FORWARD");
        java.lang.Object obj46 = numberAxis42.clone();
        combinedDomainXYPlot1.setRangeAxis(0, (org.jfree.chart.axis.ValueAxis) numberAxis42);
        org.jfree.chart.axis.NumberAxis numberAxis49 = new org.jfree.chart.axis.NumberAxis("");
        double double50 = numberAxis49.getAutoRangeMinimumSize();
        numberAxis49.setLowerBound((double) (byte) -1);
        int int53 = combinedDomainXYPlot1.getRangeAxisIndex((org.jfree.chart.axis.ValueAxis) numberAxis49);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer55 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer55.clearSeriesStrokes(false);
        boolean boolean58 = xYAreaRenderer55.getPlotLines();
        java.awt.Font font60 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint61 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer64 = null;
        org.jfree.chart.text.TextBlock textBlock65 = org.jfree.chart.text.TextUtilities.createTextBlock("", font60, paint61, (float) (-1L), (int) (short) -1, textMeasurer64);
        xYAreaRenderer55.setBaseItemLabelPaint(paint61, true);
        java.awt.Stroke stroke69 = xYAreaRenderer55.getSeriesOutlineStroke((int) ' ');
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer55);
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot71 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        java.awt.Paint paint72 = combinedDomainXYPlot71.getRangeGridlinePaint();
        org.jfree.chart.plot.PolarPlot polarPlot73 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Font font74 = polarPlot73.getAngleLabelFont();
        org.jfree.chart.axis.ValueAxis valueAxis75 = polarPlot73.getAxis();
        org.jfree.chart.entity.EntityCollection entityCollection77 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo78 = new org.jfree.chart.ChartRenderingInfo(entityCollection77);
        java.awt.Paint paint79 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean80 = chartRenderingInfo78.equals((java.lang.Object) paint79);
        java.awt.geom.Rectangle2D rectangle2D81 = chartRenderingInfo78.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo82 = chartRenderingInfo78.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo83 = plotRenderingInfo82.getOwner();
        java.awt.geom.Point2D point2D84 = null;
        polarPlot73.zoomDomainAxes((double) (byte) 1, plotRenderingInfo82, point2D84, false);
        java.awt.Stroke stroke87 = polarPlot73.getRadiusGridlineStroke();
        combinedDomainXYPlot71.setRangeZeroBaselineStroke(stroke87);
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.add((org.jfree.chart.plot.XYPlot) combinedDomainXYPlot71, 7);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.plot.CombinedDomainXYPlot@542abbb6 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(xYItemRenderer29);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(rectangle2D38);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0E-8d + "'", double50 == 1.0E-8d);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(font60);
        org.junit.Assert.assertNotNull(paint61);
        org.junit.Assert.assertNotNull(textBlock65);
        org.junit.Assert.assertNull(stroke69);
        org.junit.Assert.assertNotNull(paint72);
        org.junit.Assert.assertNotNull(font74);
        org.junit.Assert.assertNull(valueAxis75);
        org.junit.Assert.assertNotNull(paint79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(rectangle2D81);
        org.junit.Assert.assertNotNull(plotRenderingInfo82);
        org.junit.Assert.assertNotNull(chartRenderingInfo83);
        org.junit.Assert.assertNotNull(stroke87);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test171");
        java.awt.Shape shape1 = org.jfree.chart.util.ShapeUtilities.createUpTriangle((float) (byte) 0);
        org.jfree.chart.title.TextTitle textTitle3 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity6 = new org.jfree.chart.entity.TitleEntity(shape1, (org.jfree.chart.title.Title) textTitle3, "LGPL", "ThreadContext");
        textTitle3.setID("June");
        org.junit.Assert.assertNotNull(shape1);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test172");
        org.jfree.chart.util.PaintMap paintMap0 = new org.jfree.chart.util.PaintMap();
        java.awt.Paint paint2 = paintMap0.getPaint((java.lang.Comparable) "ChartChangeEventType.GENERAL");
        java.awt.Color color5 = java.awt.Color.getColor("hi!", (int) (short) 100);
        java.awt.color.ColorSpace colorSpace6 = color5.getColorSpace();
        boolean boolean7 = paintMap0.equals((java.lang.Object) color5);
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot9 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis8);
        java.awt.Graphics2D graphics2D10 = null;
        org.jfree.chart.entity.EntityCollection entityCollection11 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo12 = new org.jfree.chart.ChartRenderingInfo(entityCollection11);
        java.awt.Paint paint13 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean14 = chartRenderingInfo12.equals((java.lang.Object) paint13);
        java.awt.geom.Rectangle2D rectangle2D15 = chartRenderingInfo12.getChartArea();
        java.util.List list16 = null;
        combinedDomainXYPlot9.drawDomainGridlines(graphics2D10, rectangle2D15, list16);
        boolean boolean18 = paintMap0.equals((java.lang.Object) graphics2D10);
        org.junit.Assert.assertNull(paint2);
        org.junit.Assert.assertNotNull(color5);
        org.junit.Assert.assertNotNull(colorSpace6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(rectangle2D15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test173");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        numberAxis11.setMinorTickMarkInsideLength((float) 60000L);
        java.text.NumberFormat numberFormat17 = numberAxis11.getNumberFormatOverride();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = numberAxis11.getTickLabelInsets();
        double double19 = numberAxis11.getLowerMargin();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.05d + "'", double19 == 0.05d);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test174");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape5 = barRenderer3D0.getBaseShape();
        barRenderer3D0.setBaseSeriesVisible(false);
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot9 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean22 = xYAreaRenderer11.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot9.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        int int25 = combinedDomainXYPlot9.getRangeAxisIndex(valueAxis24);
        boolean boolean26 = combinedDomainXYPlot9.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets27 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double28 = rectangleInsets27.getLeft();
        double double30 = rectangleInsets27.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot9.setAxisOffset(rectangleInsets27);
        combinedDomainXYPlot9.setDomainGridlinesVisible(false);
        java.awt.Paint paint34 = combinedDomainXYPlot9.getNoDataMessagePaint();
        barRenderer3D0.setBaseItemLabelPaint(paint34, false);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot38 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot38.clearAnnotations();
        org.jfree.data.time.Year year42 = new org.jfree.data.time.Year((int) (short) 0);
        long long43 = year42.getFirstMillisecond();
        org.jfree.data.time.Year year45 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis46 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year42, (org.jfree.data.time.RegularTimePeriod) year45);
        org.jfree.data.time.Year year49 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year51 = new org.jfree.data.time.Year((int) (short) 0);
        long long52 = year51.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis53 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year49, (org.jfree.data.time.RegularTimePeriod) year51);
        periodAxis46.setLast((org.jfree.data.time.RegularTimePeriod) year51);
        java.awt.Stroke stroke55 = periodAxis46.getMinorTickMarkStroke();
        java.lang.Class class56 = periodAxis46.getMajorTickTimePeriodClass();
        org.jfree.chart.entity.EntityCollection entityCollection57 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo58 = new org.jfree.chart.ChartRenderingInfo(entityCollection57);
        java.awt.Paint paint59 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean60 = chartRenderingInfo58.equals((java.lang.Object) paint59);
        java.awt.geom.Rectangle2D rectangle2D61 = chartRenderingInfo58.getChartArea();
        org.jfree.chart.title.TextTitle textTitle63 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity64 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D61, (org.jfree.chart.title.Title) textTitle63);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor65 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D66 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D61, rectangleAnchor65);
        java.awt.Color color71 = java.awt.Color.getHSBColor((float) 2, (float) 15, (float) 0);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D72 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font76 = barRenderer3D72.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape77 = barRenderer3D72.getBaseShape();
        java.awt.Paint paint78 = barRenderer3D72.getShadowPaint();
        java.awt.Stroke stroke82 = barRenderer3D72.getItemOutlineStroke((int) (byte) 1, (int) '#', false);
        barRenderer3D0.drawRangeLine(graphics2D37, categoryPlot38, (org.jfree.chart.axis.ValueAxis) periodAxis46, rectangle2D61, (double) 10L, (java.awt.Paint) color71, stroke82);
        boolean boolean84 = barRenderer3D0.getBaseSeriesVisible();
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangleInsets27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-62167363200000L) + "'", long43 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-62167363200000L) + "'", long52 == (-62167363200000L));
        org.junit.Assert.assertNotNull(stroke55);
        org.junit.Assert.assertNotNull(class56);
        org.junit.Assert.assertNotNull(paint59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(rectangle2D61);
        org.junit.Assert.assertNotNull(rectangleAnchor65);
        org.junit.Assert.assertNotNull(point2D66);
        org.junit.Assert.assertNotNull(color71);
        org.junit.Assert.assertNotNull(font76);
        org.junit.Assert.assertNotNull(shape77);
        org.junit.Assert.assertNotNull(paint78);
        org.junit.Assert.assertNotNull(stroke82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test175");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean3 = xYAreaRenderer1.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint5 = xYAreaRenderer1.getSeriesPaint(0);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = xYAreaRenderer1.getLegendItemLabelGenerator();
        boolean boolean7 = xYAreaRenderer1.getPlotArea();
        java.awt.Paint paint9 = xYAreaRenderer1.getSeriesOutlinePaint(11);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D10 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font14 = barRenderer3D10.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape15 = barRenderer3D10.getBaseShape();
        java.awt.Color color18 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean22 = xYAreaRenderer20.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint23 = xYAreaRenderer20.getBaseLegendTextPaint();
        java.awt.Stroke stroke25 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer20.setSeriesOutlineStroke(0, stroke25, false);
        java.awt.Color color30 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer32 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean34 = xYAreaRenderer32.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint35 = xYAreaRenderer32.getBaseLegendTextPaint();
        java.awt.Stroke stroke37 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer32.setSeriesOutlineStroke(0, stroke37, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker41 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color18, stroke25, (java.awt.Paint) color30, stroke37, (float) (byte) 1);
        barRenderer3D10.setBaseOutlineStroke(stroke25);
        boolean boolean43 = barRenderer3D10.getBaseCreateEntities();
        boolean boolean44 = barRenderer3D10.getBaseItemLabelsVisible();
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D48 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator49 = null;
        barRenderer3D48.setLegendItemToolTipGenerator(categorySeriesLabelGenerator49);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator51 = null;
        barRenderer3D48.setBaseURLGenerator(categoryURLGenerator51, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition57 = barRenderer3D48.getPositiveItemLabelPosition(15, 1, true);
        barRenderer3D10.setSeriesPositiveItemLabelPosition((int) (short) 100, itemLabelPosition57);
        xYAreaRenderer1.setBasePositiveItemLabelPosition(itemLabelPosition57, true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(paint5);
        org.junit.Assert.assertNotNull(xYSeriesLabelGenerator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(paint9);
        org.junit.Assert.assertNotNull(font14);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(color18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(paint23);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNotNull(color30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(paint35);
        org.junit.Assert.assertNotNull(stroke37);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition57);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test176");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        org.jfree.chart.labels.StandardXYToolTipGenerator standardXYToolTipGenerator3 = org.jfree.chart.labels.StandardXYToolTipGenerator.getTimeSeriesInstance();
        java.text.NumberFormat numberFormat4 = standardXYToolTipGenerator3.getXFormat();
        java.lang.Object obj5 = standardXYToolTipGenerator3.clone();
        xYAreaRenderer1.setSeriesToolTipGenerator(1, (org.jfree.chart.labels.XYToolTipGenerator) standardXYToolTipGenerator3, false);
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot8 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list9 = combinedRangeXYPlot8.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot11 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis10);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer13 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer13.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator16 = null;
        xYAreaRenderer13.setLegendItemURLGenerator(xYSeriesLabelGenerator16);
        xYAreaRenderer13.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean24 = xYAreaRenderer13.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot11.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer13);
        combinedDomainXYPlot11.clearDomainMarkers();
        java.awt.Font font28 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint29 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer32 = null;
        org.jfree.chart.text.TextBlock textBlock33 = org.jfree.chart.text.TextUtilities.createTextBlock("", font28, paint29, (float) (-1L), (int) (short) -1, textMeasurer32);
        combinedDomainXYPlot11.setDomainCrosshairPaint(paint29);
        org.jfree.chart.plot.PiePlot piePlot35 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup36 = piePlot35.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener37 = null;
        piePlot35.addChangeListener(plotChangeListener37);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent39 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot35);
        combinedDomainXYPlot11.plotChanged(plotChangeEvent39);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType41 = plotChangeEvent39.getType();
        combinedRangeXYPlot8.plotChanged(plotChangeEvent39);
        org.jfree.chart.plot.IntervalMarker intervalMarker45 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        boolean boolean46 = combinedRangeXYPlot8.removeRangeMarker((org.jfree.chart.plot.Marker) intervalMarker45);
        combinedRangeXYPlot8.configureRangeAxes();
        org.jfree.chart.util.RectangleInsets rectangleInsets48 = combinedRangeXYPlot8.getAxisOffset();
        xYAreaRenderer1.setPlot((org.jfree.chart.plot.XYPlot) combinedRangeXYPlot8);
        org.junit.Assert.assertNotNull(standardXYToolTipGenerator3);
        org.junit.Assert.assertNotNull(numberFormat4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(list9);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(font28);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNotNull(textBlock33);
        org.junit.Assert.assertNull(datasetGroup36);
        org.junit.Assert.assertNotNull(chartChangeEventType41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(rectangleInsets48);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test177");
        org.jfree.chart.renderer.PaintScale paintScale0 = null;
        org.jfree.chart.axis.ValueAxis valueAxis1 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot2 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis1);
        java.awt.Graphics2D graphics2D3 = null;
        org.jfree.chart.entity.EntityCollection entityCollection4 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo5 = new org.jfree.chart.ChartRenderingInfo(entityCollection4);
        java.awt.Paint paint6 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean7 = chartRenderingInfo5.equals((java.lang.Object) paint6);
        java.awt.geom.Rectangle2D rectangle2D8 = chartRenderingInfo5.getChartArea();
        java.util.List list9 = null;
        combinedDomainXYPlot2.drawDomainGridlines(graphics2D3, rectangle2D8, list9);
        org.jfree.chart.axis.NumberAxis numberAxis12 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity15 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D8, (org.jfree.chart.axis.Axis) numberAxis12, "", "DatasetRenderingOrder.FORWARD");
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.title.PaintScaleLegend paintScaleLegend16 = new org.jfree.chart.title.PaintScaleLegend(paintScale0, (org.jfree.chart.axis.ValueAxis) numberAxis12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(rectangle2D8);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test178");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        boolean boolean5 = xYAreaRenderer1.getBaseItemLabelsVisible();
        java.awt.Paint paint6 = xYAreaRenderer1.getBasePaint();
        java.awt.Font font7 = xYAreaRenderer1.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator8 = null;
        xYAreaRenderer1.setBaseItemLabelGenerator(xYItemLabelGenerator8);
        xYAreaRenderer1.setUseFillPaint(true);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot14 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis13);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer16 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer16.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator19 = null;
        xYAreaRenderer16.setLegendItemURLGenerator(xYSeriesLabelGenerator19);
        xYAreaRenderer16.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean27 = xYAreaRenderer16.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot14.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer16);
        combinedDomainXYPlot14.clearDomainMarkers();
        boolean boolean30 = combinedDomainXYPlot14.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.NumberAxis numberAxis32 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis32.pan((double) 1);
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot36 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis35);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.entity.EntityCollection entityCollection38 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo39 = new org.jfree.chart.ChartRenderingInfo(entityCollection38);
        java.awt.Paint paint40 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean41 = chartRenderingInfo39.equals((java.lang.Object) paint40);
        java.awt.geom.Rectangle2D rectangle2D42 = chartRenderingInfo39.getChartArea();
        java.util.List list43 = null;
        combinedDomainXYPlot36.drawDomainGridlines(graphics2D37, rectangle2D42, list43);
        org.jfree.chart.axis.NumberAxis numberAxis46 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity49 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D42, (org.jfree.chart.axis.Axis) numberAxis46, "", "DatasetRenderingOrder.FORWARD");
        xYAreaRenderer1.drawDomainGridLine(graphics2D12, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot14, (org.jfree.chart.axis.ValueAxis) numberAxis32, rectangle2D42, (double) 11);
        numberAxis32.setLabelToolTip("{0}: ({1}, {2})");
        org.jfree.chart.event.AxisChangeListener axisChangeListener54 = null;
        numberAxis32.addChangeListener(axisChangeListener54);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(rectangle2D42);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test179");
        org.jfree.chart.renderer.xy.XYBarRenderer xYBarRenderer1 = new org.jfree.chart.renderer.xy.XYBarRenderer(10.0d);
        xYBarRenderer1.setMargin(0.05d);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition4 = xYBarRenderer1.getNegativeItemLabelPositionFallback();
        java.awt.Shape shape6 = null;
        xYBarRenderer1.setSeriesShape(15, shape6, false);
        org.junit.Assert.assertNull(itemLabelPosition4);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test180");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        int int1 = categoryPlot0.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge5 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str6 = rectangleEdge5.toString();
        double double7 = categoryPlot0.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge5);
        boolean boolean8 = categoryPlot0.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = categoryPlot0.getDomainAxis(10);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D11 = new org.jfree.chart.renderer.category.BarRenderer3D();
        categoryPlot0.setRenderer((org.jfree.chart.renderer.category.CategoryItemRenderer) barRenderer3D11, false);
        org.jfree.chart.axis.CategoryAnchor categoryAnchor14 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot0.setDomainGridlinePosition(categoryAnchor14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "RectangleEdge.RIGHT" + "'", str6, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 149.0d + "'", double7 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(categoryAxis10);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test181");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        int int1 = combinedDomainXYPlot0.getBackgroundImageAlignment();
        org.jfree.chart.entity.EntityCollection entityCollection2 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo3 = new org.jfree.chart.ChartRenderingInfo(entityCollection2);
        java.awt.Paint paint4 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean5 = chartRenderingInfo3.equals((java.lang.Object) paint4);
        java.awt.geom.Rectangle2D rectangle2D6 = chartRenderingInfo3.getChartArea();
        org.jfree.chart.title.TextTitle textTitle8 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity9 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D6, (org.jfree.chart.title.Title) textTitle8);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor10 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D11 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D6, rectangleAnchor10);
        combinedDomainXYPlot0.setQuadrantOrigin(point2D11);
        org.jfree.chart.block.Arrangement arrangement13 = null;
        org.jfree.chart.block.Arrangement arrangement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.title.LegendTitle legendTitle15 = new org.jfree.chart.title.LegendTitle((org.jfree.chart.LegendItemSource) combinedDomainXYPlot0, arrangement13, arrangement14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'arrangement' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 15 + "'", int1 == 15);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(rectangle2D6);
        org.junit.Assert.assertNotNull(rectangleAnchor10);
        org.junit.Assert.assertNotNull(point2D11);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test182");
        org.jfree.chart.plot.PolarPlot polarPlot0 = new org.jfree.chart.plot.PolarPlot();
        org.jfree.chart.axis.ValueAxis valueAxis1 = null;
        polarPlot0.setAxis(valueAxis1);
        polarPlot0.addCornerTextItem("");
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test183");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.setDomainCrosshairValue((double) 12);
        org.jfree.chart.axis.AxisLocation axisLocation19 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.setRangeAxisLocation(0, axisLocation19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'location' for index 0 not permitted.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test184");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot3 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis2);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer5 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer5.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator8 = null;
        xYAreaRenderer5.setLegendItemURLGenerator(xYSeriesLabelGenerator8);
        xYAreaRenderer5.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean16 = xYAreaRenderer5.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot3.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer5);
        combinedDomainXYPlot3.clearDomainMarkers();
        java.awt.Font font20 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint21 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer24 = null;
        org.jfree.chart.text.TextBlock textBlock25 = org.jfree.chart.text.TextUtilities.createTextBlock("", font20, paint21, (float) (-1L), (int) (short) -1, textMeasurer24);
        combinedDomainXYPlot3.setDomainCrosshairPaint(paint21);
        org.jfree.chart.plot.PiePlot piePlot27 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup28 = piePlot27.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener29 = null;
        piePlot27.addChangeListener(plotChangeListener29);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent31 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot27);
        combinedDomainXYPlot3.plotChanged(plotChangeEvent31);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType33 = plotChangeEvent31.getType();
        combinedRangeXYPlot0.plotChanged(plotChangeEvent31);
        org.jfree.chart.plot.IntervalMarker intervalMarker37 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        boolean boolean38 = combinedRangeXYPlot0.removeRangeMarker((org.jfree.chart.plot.Marker) intervalMarker37);
        combinedRangeXYPlot0.configureRangeAxes();
        org.jfree.chart.util.RectangleInsets rectangleInsets40 = combinedRangeXYPlot0.getAxisOffset();
        org.jfree.chart.entity.EntityCollection entityCollection43 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo44 = new org.jfree.chart.ChartRenderingInfo(entityCollection43);
        java.awt.Paint paint45 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean46 = chartRenderingInfo44.equals((java.lang.Object) paint45);
        java.awt.geom.Rectangle2D rectangle2D47 = chartRenderingInfo44.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo48 = chartRenderingInfo44.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo49 = plotRenderingInfo48.getOwner();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo50 = new org.jfree.chart.plot.PlotRenderingInfo(chartRenderingInfo49);
        combinedRangeXYPlot0.handleClick((int) '#', 3, plotRenderingInfo50);
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(textBlock25);
        org.junit.Assert.assertNull(datasetGroup28);
        org.junit.Assert.assertNotNull(chartChangeEventType33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(rectangleInsets40);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(rectangle2D47);
        org.junit.Assert.assertNotNull(plotRenderingInfo48);
        org.junit.Assert.assertNotNull(chartRenderingInfo49);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test185");
        java.awt.Shape shape1 = org.jfree.chart.util.ShapeUtilities.createDiamond((float) 1577894400001L);
        org.junit.Assert.assertNotNull(shape1);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test186");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot3 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis2);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer5 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer5.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator8 = null;
        xYAreaRenderer5.setLegendItemURLGenerator(xYSeriesLabelGenerator8);
        xYAreaRenderer5.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean16 = xYAreaRenderer5.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot3.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer5);
        combinedDomainXYPlot3.clearDomainMarkers();
        java.awt.Font font20 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint21 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer24 = null;
        org.jfree.chart.text.TextBlock textBlock25 = org.jfree.chart.text.TextUtilities.createTextBlock("", font20, paint21, (float) (-1L), (int) (short) -1, textMeasurer24);
        combinedDomainXYPlot3.setDomainCrosshairPaint(paint21);
        org.jfree.chart.plot.PiePlot piePlot27 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup28 = piePlot27.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener29 = null;
        piePlot27.addChangeListener(plotChangeListener29);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent31 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot27);
        combinedDomainXYPlot3.plotChanged(plotChangeEvent31);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType33 = plotChangeEvent31.getType();
        combinedRangeXYPlot0.plotChanged(plotChangeEvent31);
        org.jfree.chart.plot.IntervalMarker intervalMarker37 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        boolean boolean38 = combinedRangeXYPlot0.removeRangeMarker((org.jfree.chart.plot.Marker) intervalMarker37);
        combinedRangeXYPlot0.configureRangeAxes();
        org.jfree.chart.util.RectangleInsets rectangleInsets40 = combinedRangeXYPlot0.getAxisOffset();
        java.awt.Color color43 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer45 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean47 = xYAreaRenderer45.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint48 = xYAreaRenderer45.getBaseLegendTextPaint();
        java.awt.Stroke stroke50 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer45.setSeriesOutlineStroke(0, stroke50, false);
        java.awt.Color color55 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer57 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean59 = xYAreaRenderer57.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint60 = xYAreaRenderer57.getBaseLegendTextPaint();
        java.awt.Stroke stroke62 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer57.setSeriesOutlineStroke(0, stroke62, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker66 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color43, stroke50, (java.awt.Paint) color55, stroke62, (float) (byte) 1);
        org.jfree.chart.text.TextAnchor textAnchor67 = org.jfree.chart.text.TextAnchor.BASELINE_LEFT;
        intervalMarker66.setLabelTextAnchor(textAnchor67);
        java.lang.String str69 = intervalMarker66.getLabel();
        org.jfree.chart.util.RectangleAnchor rectangleAnchor70 = intervalMarker66.getLabelAnchor();
        org.jfree.chart.plot.PolarPlot polarPlot71 = new org.jfree.chart.plot.PolarPlot();
        org.jfree.chart.plot.PiePlot piePlot72 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup73 = piePlot72.getDatasetGroup();
        int int74 = piePlot72.getBackgroundImageAlignment();
        boolean boolean75 = piePlot72.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D76 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo77 = null;
        piePlot72.createAndAddEntity(rectangle2D76, plotRenderingInfo77, "hi!", "LGPL");
        piePlot72.setStartAngle((double) 1);
        org.jfree.data.xy.XYDataItem xYDataItem85 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        java.awt.Color color88 = java.awt.Color.getColor("hi!", (int) (short) 100);
        boolean boolean89 = xYDataItem85.equals((java.lang.Object) "hi!");
        java.awt.Color color90 = java.awt.Color.MAGENTA;
        piePlot72.setSectionPaint((java.lang.Comparable) "hi!", (java.awt.Paint) color90);
        polarPlot71.setAngleLabelPaint((java.awt.Paint) color90);
        boolean boolean93 = intervalMarker66.equals((java.lang.Object) color90);
        // The following exception was thrown during execution in test generation
        try {
            combinedRangeXYPlot0.addDomainMarker((org.jfree.chart.plot.Marker) intervalMarker66);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.plot.CombinedRangeXYPlot@51d1be32 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(textBlock25);
        org.junit.Assert.assertNull(datasetGroup28);
        org.junit.Assert.assertNotNull(chartChangeEventType33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(rectangleInsets40);
        org.junit.Assert.assertNotNull(color43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(paint48);
        org.junit.Assert.assertNotNull(stroke50);
        org.junit.Assert.assertNotNull(color55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(paint60);
        org.junit.Assert.assertNotNull(stroke62);
        org.junit.Assert.assertNotNull(textAnchor67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(rectangleAnchor70);
        org.junit.Assert.assertNull(datasetGroup73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 15 + "'", int74 == 15);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(color88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(color90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test187");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot0.clearAnnotations();
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent2 = null;
        categoryPlot0.rendererChanged(rendererChangeEvent2);
        org.jfree.chart.entity.EntityCollection entityCollection5 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo6 = new org.jfree.chart.ChartRenderingInfo(entityCollection5);
        java.awt.Paint paint7 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean8 = chartRenderingInfo6.equals((java.lang.Object) paint7);
        java.awt.geom.Rectangle2D rectangle2D9 = chartRenderingInfo6.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo10 = chartRenderingInfo6.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo11 = plotRenderingInfo10.getOwner();
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot0.zoomRangeAxes(1.0E-8d, plotRenderingInfo10, point2D12, true);
        java.awt.Graphics2D graphics2D15 = null;
        org.jfree.data.time.Year year18 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year20 = new org.jfree.data.time.Year((int) (short) 0);
        long long21 = year20.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis22 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year18, (org.jfree.data.time.RegularTimePeriod) year20);
        float float23 = periodAxis22.getMinorTickMarkInsideLength();
        java.awt.Graphics2D graphics2D24 = null;
        org.jfree.chart.axis.AxisState axisState25 = new org.jfree.chart.axis.AxisState();
        double double26 = axisState25.getMax();
        java.util.List list27 = axisState25.getTicks();
        org.jfree.chart.entity.EntityCollection entityCollection28 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo29 = new org.jfree.chart.ChartRenderingInfo(entityCollection28);
        java.awt.Paint paint30 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean31 = chartRenderingInfo29.equals((java.lang.Object) paint30);
        java.awt.geom.Rectangle2D rectangle2D32 = chartRenderingInfo29.getChartArea();
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer35 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection36 = categoryPlot33.getDomainMarkers((int) 'a', layer35);
        org.jfree.data.category.CategoryDataset categoryDataset38 = null;
        categoryPlot33.setDataset(4, categoryDataset38);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier40 = categoryPlot33.getDrawingSupplier();
        categoryPlot33.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace42 = null;
        categoryPlot33.setFixedDomainAxisSpace(axisSpace42);
        categoryPlot33.setCrosshairDatasetIndex((int) (short) 100);
        categoryPlot33.setBackgroundAlpha((float) 8);
        org.jfree.chart.util.RectangleEdge rectangleEdge48 = categoryPlot33.getDomainAxisEdge();
        java.util.List list49 = periodAxis22.refreshTicks(graphics2D24, axisState25, rectangle2D32, rectangleEdge48);
        java.awt.geom.Rectangle2D rectangle2D50 = null;
        org.jfree.chart.axis.ValueAxis valueAxis51 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot52 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis51);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer54 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer54.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator57 = null;
        xYAreaRenderer54.setLegendItemURLGenerator(xYSeriesLabelGenerator57);
        xYAreaRenderer54.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean65 = xYAreaRenderer54.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot52.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer54);
        combinedDomainXYPlot52.clearDomainMarkers();
        java.awt.Font font69 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint70 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer73 = null;
        org.jfree.chart.text.TextBlock textBlock74 = org.jfree.chart.text.TextUtilities.createTextBlock("", font69, paint70, (float) (-1L), (int) (short) -1, textMeasurer73);
        combinedDomainXYPlot52.setDomainCrosshairPaint(paint70);
        org.jfree.chart.entity.EntityCollection entityCollection78 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo79 = new org.jfree.chart.ChartRenderingInfo(entityCollection78);
        java.awt.Paint paint80 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean81 = chartRenderingInfo79.equals((java.lang.Object) paint80);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo82 = chartRenderingInfo79.getPlotInfo();
        combinedDomainXYPlot52.handleClick(255, 2, plotRenderingInfo82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map map84 = categoryPlot0.drawAxes(graphics2D15, rectangle2D32, rectangle2D50, plotRenderingInfo82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(rectangle2D9);
        org.junit.Assert.assertNotNull(plotRenderingInfo10);
        org.junit.Assert.assertNotNull(chartRenderingInfo11);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-62167363200000L) + "'", long21 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 0.0f + "'", float23 == 0.0f);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(rectangle2D32);
        org.junit.Assert.assertNotNull(layer35);
        org.junit.Assert.assertNull(collection36);
        org.junit.Assert.assertNotNull(drawingSupplier40);
        org.junit.Assert.assertNotNull(rectangleEdge48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(font69);
        org.junit.Assert.assertNotNull(paint70);
        org.junit.Assert.assertNotNull(textBlock74);
        org.junit.Assert.assertNotNull(paint80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(plotRenderingInfo82);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test188");
        org.jfree.chart.axis.NumberAxis numberAxis1 = new org.jfree.chart.axis.NumberAxis("");
        int int2 = numberAxis1.getMinorTickCount();
        numberAxis1.setMinorTickMarksVisible(true);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer6 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer6.clearSeriesStrokes(false);
        boolean boolean9 = xYAreaRenderer6.getPlotLines();
        boolean boolean10 = xYAreaRenderer6.getBaseItemLabelsVisible();
        java.awt.Paint paint11 = xYAreaRenderer6.getBasePaint();
        java.awt.Font font12 = xYAreaRenderer6.getBaseItemLabelFont();
        java.awt.Font font13 = xYAreaRenderer6.getBaseItemLabelFont();
        numberAxis1.setTickLabelFont(font13);
        numberAxis1.setMinorTickMarksVisible(false);
        java.awt.Graphics2D graphics2D17 = null;
        org.jfree.chart.axis.AxisState axisState18 = new org.jfree.chart.axis.AxisState();
        double double19 = axisState18.getCursor();
        org.jfree.chart.entity.EntityCollection entityCollection22 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo23 = new org.jfree.chart.ChartRenderingInfo(entityCollection22);
        java.awt.Paint paint24 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean25 = chartRenderingInfo23.equals((java.lang.Object) paint24);
        java.awt.geom.Rectangle2D rectangle2D26 = chartRenderingInfo23.getChartArea();
        org.jfree.chart.title.TextTitle textTitle28 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity29 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D26, (org.jfree.chart.title.Title) textTitle28);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor30 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D31 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D26, rectangleAnchor30);
        org.jfree.data.general.PieDataset pieDataset32 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity38 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D26, pieDataset32, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis39 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot40 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis39);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer42 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer42.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator45 = null;
        xYAreaRenderer42.setLegendItemURLGenerator(xYSeriesLabelGenerator45);
        xYAreaRenderer42.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean53 = xYAreaRenderer42.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot40.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer42);
        combinedDomainXYPlot40.clearDomainMarkers();
        java.awt.Font font57 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint58 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer61 = null;
        org.jfree.chart.text.TextBlock textBlock62 = org.jfree.chart.text.TextUtilities.createTextBlock("", font57, paint58, (float) (-1L), (int) (short) -1, textMeasurer61);
        combinedDomainXYPlot40.setDomainCrosshairPaint(paint58);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder64 = combinedDomainXYPlot40.getSeriesRenderingOrder();
        java.awt.Paint paint65 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot40.setRangeTickBandPaint(paint65);
        org.jfree.chart.title.LegendGraphic legendGraphic67 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D26, paint65);
        java.awt.geom.Point2D point2D68 = org.jfree.chart.util.ShapeUtilities.getPointInRectangle((double) 10L, (double) 1577894400035L, rectangle2D26);
        org.jfree.chart.util.RectangleEdge rectangleEdge69 = org.jfree.chart.util.RectangleEdge.BOTTOM;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list70 = numberAxis1.refreshTicks(graphics2D17, axisState18, rectangle2D26, rectangleEdge69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(font12);
        org.junit.Assert.assertNotNull(font13);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(rectangle2D26);
        org.junit.Assert.assertNotNull(rectangleAnchor30);
        org.junit.Assert.assertNotNull(point2D31);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(font57);
        org.junit.Assert.assertNotNull(paint58);
        org.junit.Assert.assertNotNull(textBlock62);
        org.junit.Assert.assertNotNull(seriesRenderingOrder64);
        org.junit.Assert.assertNotNull(paint65);
        org.junit.Assert.assertNotNull(point2D68);
        org.junit.Assert.assertNotNull(rectangleEdge69);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test189");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.axis.AxisLocation axisLocation7 = org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT;
        categoryPlot0.setRangeAxisLocation(axisLocation7, false);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot0.zoomRangeAxes((double) (-16777216), plotRenderingInfo11, point2D12, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot();
        int int16 = categoryPlot15.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge20 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str21 = rectangleEdge20.toString();
        double double22 = categoryPlot15.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge20);
        boolean boolean23 = categoryPlot15.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis25 = categoryPlot15.getDomainAxis(10);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D26 = new org.jfree.chart.renderer.category.BarRenderer3D();
        categoryPlot15.setRenderer((org.jfree.chart.renderer.category.CategoryItemRenderer) barRenderer3D26, false);
        categoryPlot0.setRenderer((org.jfree.chart.renderer.category.CategoryItemRenderer) barRenderer3D26);
        org.jfree.chart.axis.AxisSpace axisSpace30 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot33 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis32);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer35 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer35.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator38 = null;
        xYAreaRenderer35.setLegendItemURLGenerator(xYSeriesLabelGenerator38);
        xYAreaRenderer35.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean46 = xYAreaRenderer35.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot33.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer35);
        org.jfree.chart.axis.ValueAxis valueAxis48 = null;
        int int49 = combinedDomainXYPlot33.getRangeAxisIndex(valueAxis48);
        org.jfree.chart.axis.ValueAxis valueAxis50 = null;
        combinedDomainXYPlot33.setDomainAxis(valueAxis50);
        org.jfree.chart.util.RectangleEdge rectangleEdge53 = combinedDomainXYPlot33.getDomainAxisEdge(0);
        axisSpace30.add((double) 10L, rectangleEdge53);
        categoryPlot0.setFixedRangeAxisSpace(axisSpace30);
        java.lang.String str56 = axisSpace30.toString();
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertNotNull(axisLocation7);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "RectangleEdge.RIGHT" + "'", str21, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 149.0d + "'", double22 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(categoryAxis25);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge53);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test190");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        java.awt.Paint paint26 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot1.setRangeTickBandPaint(paint26);
        combinedDomainXYPlot1.setGap(0.0d);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder30 = combinedDomainXYPlot1.getDatasetRenderingOrder();
        java.lang.String str31 = datasetRenderingOrder30.toString();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(datasetRenderingOrder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "DatasetRenderingOrder.REVERSE" + "'", str31, "DatasetRenderingOrder.REVERSE");
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test191");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        double double1 = combinedRangeXYPlot0.getGap();
        org.jfree.chart.LegendItemCollection legendItemCollection2 = combinedRangeXYPlot0.getLegendItems();
        org.jfree.chart.plot.PiePlot piePlot3 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup4 = piePlot3.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener5 = null;
        piePlot3.addChangeListener(plotChangeListener5);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent7 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot3);
        combinedRangeXYPlot0.plotChanged(plotChangeEvent7);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 5.0d + "'", double1 == 5.0d);
        org.junit.Assert.assertNotNull(legendItemCollection2);
        org.junit.Assert.assertNull(datasetGroup4);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test192");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Paint paint46 = legendGraphic45.getOutlinePaint();
        boolean boolean47 = legendGraphic45.isLineVisible();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test193");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        org.jfree.chart.plot.PiePlot piePlot1 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup2 = piePlot1.getDatasetGroup();
        int int3 = piePlot1.getBackgroundImageAlignment();
        boolean boolean4 = piePlot1.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D5 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo6 = null;
        piePlot1.createAndAddEntity(rectangle2D5, plotRenderingInfo6, "hi!", "LGPL");
        java.awt.Paint paint10 = piePlot1.getLabelPaint();
        java.awt.Stroke stroke11 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        piePlot1.setOutlineStroke(stroke11);
        combinedDomainXYPlot0.setDomainMinorGridlineStroke(stroke11);
        int int14 = combinedDomainXYPlot0.getDatasetCount();
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer17 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection18 = categoryPlot15.getDomainMarkers((int) 'a', layer17);
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        categoryPlot15.setDataset(4, categoryDataset20);
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = new org.jfree.chart.plot.CategoryPlot();
        int int23 = categoryPlot22.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation24 = categoryPlot22.getOrientation();
        categoryPlot15.setOrientation(plotOrientation24);
        boolean boolean26 = categoryPlot15.isDomainPannable();
        categoryPlot15.setRangeCrosshairValue((double) 10);
        java.awt.Graphics2D graphics2D29 = null;
        org.jfree.chart.entity.EntityCollection entityCollection30 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo31 = new org.jfree.chart.ChartRenderingInfo(entityCollection30);
        java.awt.Paint paint32 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean33 = chartRenderingInfo31.equals((java.lang.Object) paint32);
        java.awt.geom.Rectangle2D rectangle2D34 = chartRenderingInfo31.getChartArea();
        org.jfree.chart.title.TextTitle textTitle36 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity37 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D34, (org.jfree.chart.title.Title) textTitle36);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor38 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D39 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D34, rectangleAnchor38);
        org.jfree.data.general.PieDataset pieDataset40 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity46 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D34, pieDataset40, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.AxisSpace axisSpace47 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis49 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot50 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis49);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer52 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer52.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator55 = null;
        xYAreaRenderer52.setLegendItemURLGenerator(xYSeriesLabelGenerator55);
        xYAreaRenderer52.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean63 = xYAreaRenderer52.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot50.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer52);
        org.jfree.chart.axis.ValueAxis valueAxis65 = null;
        int int66 = combinedDomainXYPlot50.getRangeAxisIndex(valueAxis65);
        org.jfree.chart.axis.ValueAxis valueAxis67 = null;
        combinedDomainXYPlot50.setDomainAxis(valueAxis67);
        org.jfree.chart.util.RectangleEdge rectangleEdge70 = combinedDomainXYPlot50.getDomainAxisEdge(0);
        axisSpace47.add((double) 10L, rectangleEdge70);
        org.jfree.chart.axis.AxisSpace axisSpace72 = categoryPlot15.calculateDomainAxisSpace(graphics2D29, rectangle2D34, axisSpace47);
        combinedDomainXYPlot0.setFixedDomainAxisSpace(axisSpace72, false);
        java.awt.Paint paint75 = combinedDomainXYPlot0.getRangeMinorGridlinePaint();
        org.junit.Assert.assertNull(datasetGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 15 + "'", int3 == 15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(layer17);
        org.junit.Assert.assertNull(collection18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(plotOrientation24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(rectangle2D34);
        org.junit.Assert.assertNotNull(rectangleAnchor38);
        org.junit.Assert.assertNotNull(point2D39);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge70);
        org.junit.Assert.assertNotNull(axisSpace72);
        org.junit.Assert.assertNotNull(paint75);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test194");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer5 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer5.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator8 = null;
        xYAreaRenderer5.setLegendItemURLGenerator(xYSeriesLabelGenerator8);
        xYAreaRenderer5.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer5.isSeriesVisible((-16777216));
        java.awt.Shape shape15 = xYAreaRenderer5.getBaseShape();
        java.awt.Shape shape18 = org.jfree.chart.util.ShapeUtilities.createTranslatedShape(shape15, 0.0d, (double) '#');
        java.awt.Stroke stroke19 = org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE;
        java.awt.Paint paint20 = org.jfree.chart.plot.XYPlot.DEFAULT_CROSSHAIR_PAINT;
        org.jfree.chart.LegendItem legendItem21 = new org.jfree.chart.LegendItem("DateTickUnit[DateTickUnitType.HOUR, 100]", "[10.0, 0.0]", "RectangleAnchor.BOTTOM_RIGHT", "NO_CHANGE", shape18, stroke19, paint20);
        java.lang.String str22 = legendItem21.getDescription();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10.0, 0.0]" + "'", str22, "[10.0, 0.0]");
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test195");
        org.jfree.chart.title.TextTitle textTitle1 = new org.jfree.chart.title.TextTitle("");
        boolean boolean2 = textTitle1.getExpandToFitSpace();
        textTitle1.setText("");
        java.awt.Stroke stroke5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        boolean boolean6 = textTitle1.equals((java.lang.Object) stroke5);
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot8 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis7);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer10 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer10.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator13 = null;
        xYAreaRenderer10.setLegendItemURLGenerator(xYSeriesLabelGenerator13);
        xYAreaRenderer10.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean21 = xYAreaRenderer10.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot8.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer10);
        org.jfree.chart.axis.ValueAxis valueAxis23 = null;
        int int24 = combinedDomainXYPlot8.getRangeAxisIndex(valueAxis23);
        boolean boolean25 = combinedDomainXYPlot8.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets26 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double27 = rectangleInsets26.getLeft();
        double double29 = rectangleInsets26.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot8.setAxisOffset(rectangleInsets26);
        textTitle1.setPadding(rectangleInsets26);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(rectangleInsets26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test196");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.PiePlot piePlot25 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup26 = piePlot25.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener27 = null;
        piePlot25.addChangeListener(plotChangeListener27);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent29 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot25);
        combinedDomainXYPlot1.plotChanged(plotChangeEvent29);
        org.jfree.chart.LegendItemCollection legendItemCollection31 = combinedDomainXYPlot1.getFixedLegendItems();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNull(datasetGroup26);
        org.junit.Assert.assertNull(legendItemCollection31);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test197");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.PiePlot piePlot25 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup26 = piePlot25.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener27 = null;
        piePlot25.addChangeListener(plotChangeListener27);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent29 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot25);
        combinedDomainXYPlot1.plotChanged(plotChangeEvent29);
        java.awt.Paint paint31 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        combinedDomainXYPlot1.setDomainGridlinePaint(paint31);
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer35 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection36 = categoryPlot33.getDomainMarkers((int) 'a', layer35);
        org.jfree.data.category.CategoryDataset categoryDataset38 = null;
        categoryPlot33.setDataset(4, categoryDataset38);
        org.jfree.chart.axis.AxisLocation axisLocation40 = org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT;
        categoryPlot33.setRangeAxisLocation(axisLocation40, false);
        org.jfree.chart.axis.AxisLocation axisLocation44 = categoryPlot33.getRangeAxisLocation((-1));
        combinedDomainXYPlot1.setRangeAxisLocation(axisLocation44, true);
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot47 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke48 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot47.setRangeCrosshairStroke(stroke48);
        combinedDomainXYPlot1.setDomainMinorGridlineStroke(stroke48);
        org.jfree.chart.axis.ValueAxis valueAxis51 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot52 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis51);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer54 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer54.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator57 = null;
        xYAreaRenderer54.setLegendItemURLGenerator(xYSeriesLabelGenerator57);
        xYAreaRenderer54.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean65 = xYAreaRenderer54.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot52.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer54);
        combinedDomainXYPlot52.setDomainCrosshairValue((double) 12);
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.addChangeListener((org.jfree.chart.event.PlotChangeListener) combinedDomainXYPlot52);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.plot.CombinedDomainXYPlot@59922ffc is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNull(datasetGroup26);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(layer35);
        org.junit.Assert.assertNull(collection36);
        org.junit.Assert.assertNotNull(axisLocation40);
        org.junit.Assert.assertNotNull(axisLocation44);
        org.junit.Assert.assertNotNull(stroke48);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test198");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.event.AxisChangeEvent axisChangeEvent2 = null;
        combinedDomainXYPlot1.axisChanged(axisChangeEvent2);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot();
        int int5 = categoryPlot4.getDatasetCount();
        categoryPlot4.setAnchorValue((double) 10.0f);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) "TitleEntity: tooltip = LGPL", true);
        org.jfree.chart.axis.AxisSpace axisSpace11 = new org.jfree.chart.axis.AxisSpace();
        categoryPlot4.setFixedDomainAxisSpace(axisSpace11);
        org.jfree.data.general.SeriesException seriesException14 = new org.jfree.data.general.SeriesException("ClassContext");
        boolean boolean15 = axisSpace11.equals((java.lang.Object) seriesException14);
        combinedDomainXYPlot1.setFixedDomainAxisSpace(axisSpace11);
        java.awt.Stroke stroke17 = combinedDomainXYPlot1.getRangeZeroBaselineStroke();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(stroke17);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test199");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean3 = xYAreaRenderer1.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint4 = xYAreaRenderer1.getBaseLegendTextPaint();
        java.awt.Stroke stroke6 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer1.setSeriesOutlineStroke(0, stroke6, false);
        java.awt.Stroke stroke9 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        xYAreaRenderer1.setBaseStroke(stroke9);
        boolean boolean11 = xYAreaRenderer1.getBaseItemLabelsVisible();
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot14 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis13);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer16 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer16.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator19 = null;
        xYAreaRenderer16.setLegendItemURLGenerator(xYSeriesLabelGenerator19);
        xYAreaRenderer16.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean27 = xYAreaRenderer16.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot14.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer16);
        combinedDomainXYPlot14.clearDomainMarkers();
        java.awt.Font font31 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint32 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer35 = null;
        org.jfree.chart.text.TextBlock textBlock36 = org.jfree.chart.text.TextUtilities.createTextBlock("", font31, paint32, (float) (-1L), (int) (short) -1, textMeasurer35);
        combinedDomainXYPlot14.setDomainCrosshairPaint(paint32);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder38 = combinedDomainXYPlot14.getSeriesRenderingOrder();
        java.awt.Paint paint39 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot14.setRangeTickBandPaint(paint39);
        combinedDomainXYPlot14.setGap(0.0d);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder43 = combinedDomainXYPlot14.getDatasetRenderingOrder();
        org.jfree.data.time.Year year46 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year48 = new org.jfree.data.time.Year((int) (short) 0);
        long long49 = year48.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis50 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year46, (org.jfree.data.time.RegularTimePeriod) year48);
        org.jfree.chart.entity.EntityCollection entityCollection52 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo53 = new org.jfree.chart.ChartRenderingInfo(entityCollection52);
        java.awt.Paint paint54 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean55 = chartRenderingInfo53.equals((java.lang.Object) paint54);
        java.awt.geom.Rectangle2D rectangle2D56 = chartRenderingInfo53.getChartArea();
        org.jfree.chart.title.TextTitle textTitle58 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity59 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D56, (org.jfree.chart.title.Title) textTitle58);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor60 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D61 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D56, rectangleAnchor60);
        org.jfree.chart.plot.CategoryPlot categoryPlot62 = new org.jfree.chart.plot.CategoryPlot();
        java.awt.Color color63 = org.jfree.chart.ChartColor.VERY_DARK_MAGENTA;
        categoryPlot62.setRangeZeroBaselinePaint((java.awt.Paint) color63);
        org.jfree.chart.util.RectangleEdge rectangleEdge66 = categoryPlot62.getRangeAxisEdge((int) ' ');
        double double67 = periodAxis50.java2DToValue(0.0d, rectangle2D56, rectangleEdge66);
        org.jfree.chart.plot.PiePlot piePlot68 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup69 = piePlot68.getDatasetGroup();
        int int70 = piePlot68.getBackgroundImageAlignment();
        boolean boolean71 = piePlot68.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D72 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo73 = null;
        piePlot68.createAndAddEntity(rectangle2D72, plotRenderingInfo73, "hi!", "LGPL");
        piePlot68.setStartAngle((double) 1);
        org.jfree.data.xy.XYDataItem xYDataItem81 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        java.awt.Color color84 = java.awt.Color.getColor("hi!", (int) (short) 100);
        boolean boolean85 = xYDataItem81.equals((java.lang.Object) "hi!");
        java.awt.Color color86 = java.awt.Color.MAGENTA;
        piePlot68.setSectionPaint((java.lang.Comparable) "hi!", (java.awt.Paint) color86);
        java.awt.Graphics2D graphics2D88 = null;
        org.jfree.chart.entity.EntityCollection entityCollection89 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo90 = new org.jfree.chart.ChartRenderingInfo(entityCollection89);
        java.awt.Paint paint91 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean92 = chartRenderingInfo90.equals((java.lang.Object) paint91);
        java.awt.geom.Rectangle2D rectangle2D93 = chartRenderingInfo90.getChartArea();
        piePlot68.drawBackgroundImage(graphics2D88, rectangle2D93);
        // The following exception was thrown during execution in test generation
        try {
            xYAreaRenderer1.fillRangeGridBand(graphics2D12, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot14, (org.jfree.chart.axis.ValueAxis) periodAxis50, rectangle2D93, (double) 0L, (double) 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(paint4);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(font31);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(textBlock36);
        org.junit.Assert.assertNotNull(seriesRenderingOrder38);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNotNull(datasetRenderingOrder43);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-62167363200000L) + "'", long49 == (-62167363200000L));
        org.junit.Assert.assertNotNull(paint54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(rectangle2D56);
        org.junit.Assert.assertNotNull(rectangleAnchor60);
        org.junit.Assert.assertNotNull(point2D61);
        org.junit.Assert.assertNotNull(color63);
        org.junit.Assert.assertNotNull(rectangleEdge66);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNull(datasetGroup69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 15 + "'", int70 == 15);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(color84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(color86);
        org.junit.Assert.assertNotNull(paint91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(rectangle2D93);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test200");
        org.jfree.chart.ui.ProjectInfo projectInfo0 = org.jfree.chart.JFreeChart.INFO;
        org.jfree.chart.ui.Library[] libraryArray1 = projectInfo0.getOptionalLibraries();
        org.jfree.chart.axis.SegmentedTimeline segmentedTimeline2 = org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline();
        boolean boolean5 = segmentedTimeline2.containsDomainRange((long) 1, (long) (byte) 10);
        long long7 = segmentedTimeline2.toTimelineValue((long) '#');
        java.util.List list8 = segmentedTimeline2.getExceptionSegments();
        projectInfo0.setContributors(list8);
        projectInfo0.setLicenceText("ClassContext");
        java.lang.String str12 = projectInfo0.getName();
        org.junit.Assert.assertNotNull(projectInfo0);
        org.junit.Assert.assertNotNull(libraryArray1);
        org.junit.Assert.assertNotNull(segmentedTimeline2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1577894400035L + "'", long7 == 1577894400035L);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "JFreeChart" + "'", str12, "JFreeChart");
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test201");
        org.jfree.chart.plot.RingPlot ringPlot0 = new org.jfree.chart.plot.RingPlot();
        ringPlot0.setSectionDepth(0.08d);
        java.awt.Graphics2D graphics2D3 = null;
        org.jfree.chart.axis.ValueAxis valueAxis5 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot6 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis5);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer8 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer8.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator11 = null;
        xYAreaRenderer8.setLegendItemURLGenerator(xYSeriesLabelGenerator11);
        xYAreaRenderer8.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean19 = xYAreaRenderer8.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot6.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer8);
        org.jfree.chart.axis.ValueAxis valueAxis21 = null;
        int int22 = combinedDomainXYPlot6.getRangeAxisIndex(valueAxis21);
        boolean boolean23 = combinedDomainXYPlot6.isRangeCrosshairVisible();
        boolean boolean24 = combinedDomainXYPlot6.isDomainCrosshairVisible();
        java.util.TimeZone timeZone25 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection26 = new org.jfree.data.time.TimeSeriesCollection(timeZone25);
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot27.clearAnnotations();
        timeSeriesCollection26.removeChangeListener((org.jfree.data.general.DatasetChangeListener) categoryPlot27);
        org.jfree.data.general.DatasetGroup datasetGroup30 = timeSeriesCollection26.getGroup();
        org.jfree.chart.renderer.xy.XYItemRenderer xYItemRenderer31 = combinedDomainXYPlot6.getRendererForDataset((org.jfree.data.xy.XYDataset) timeSeriesCollection26);
        java.awt.Stroke stroke32 = combinedDomainXYPlot6.getDomainGridlineStroke();
        java.awt.geom.GeneralPath generalPath33 = null;
        org.jfree.data.time.Year year36 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year38 = new org.jfree.data.time.Year((int) (short) 0);
        long long39 = year38.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis40 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year36, (org.jfree.data.time.RegularTimePeriod) year38);
        float float41 = periodAxis40.getMinorTickMarkInsideLength();
        java.awt.Graphics2D graphics2D42 = null;
        org.jfree.chart.axis.AxisState axisState43 = new org.jfree.chart.axis.AxisState();
        double double44 = axisState43.getMax();
        java.util.List list45 = axisState43.getTicks();
        org.jfree.chart.entity.EntityCollection entityCollection46 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo47 = new org.jfree.chart.ChartRenderingInfo(entityCollection46);
        java.awt.Paint paint48 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean49 = chartRenderingInfo47.equals((java.lang.Object) paint48);
        java.awt.geom.Rectangle2D rectangle2D50 = chartRenderingInfo47.getChartArea();
        org.jfree.chart.plot.CategoryPlot categoryPlot51 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer53 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection54 = categoryPlot51.getDomainMarkers((int) 'a', layer53);
        org.jfree.data.category.CategoryDataset categoryDataset56 = null;
        categoryPlot51.setDataset(4, categoryDataset56);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier58 = categoryPlot51.getDrawingSupplier();
        categoryPlot51.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace60 = null;
        categoryPlot51.setFixedDomainAxisSpace(axisSpace60);
        categoryPlot51.setCrosshairDatasetIndex((int) (short) 100);
        categoryPlot51.setBackgroundAlpha((float) 8);
        org.jfree.chart.util.RectangleEdge rectangleEdge66 = categoryPlot51.getDomainAxisEdge();
        java.util.List list67 = periodAxis40.refreshTicks(graphics2D42, axisState43, rectangle2D50, rectangleEdge66);
        org.jfree.chart.RenderingSource renderingSource68 = null;
        combinedDomainXYPlot6.select(generalPath33, rectangle2D50, renderingSource68);
        org.jfree.chart.plot.PiePlotState piePlotState70 = null;
        // The following exception was thrown during execution in test generation
        try {
            ringPlot0.drawItem(graphics2D3, 0, rectangle2D50, piePlotState70, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(datasetGroup30);
        org.junit.Assert.assertNull(xYItemRenderer31);
        org.junit.Assert.assertNotNull(stroke32);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-62167363200000L) + "'", long39 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 0.0f + "'", float41 == 0.0f);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(paint48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(rectangle2D50);
        org.junit.Assert.assertNotNull(layer53);
        org.junit.Assert.assertNull(collection54);
        org.junit.Assert.assertNotNull(drawingSupplier58);
        org.junit.Assert.assertNotNull(rectangleEdge66);
        org.junit.Assert.assertNotNull(list67);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test202");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean20 = xYAreaRenderer11.isSeriesVisible((-16777216));
        java.awt.Shape shape22 = xYAreaRenderer11.getLegendShape(0);
        java.awt.Shape shape24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        xYAreaRenderer11.setSeriesShape((int) (byte) 100, shape24, false);
        java.awt.Paint paint28 = xYAreaRenderer11.getSeriesItemLabelPaint(5);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator30 = null;
        xYAreaRenderer11.setBaseURLGenerator(xYURLGenerator30);
        java.awt.Color color32 = org.jfree.chart.ChartColor.LIGHT_GREEN;
        xYAreaRenderer11.setBaseFillPaint((java.awt.Paint) color32);
        boolean boolean35 = xYAreaRenderer11.isSeriesVisible((int) (short) 0);
        boolean boolean36 = xYAreaRenderer11.getUseFillPaint();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer38 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean40 = xYAreaRenderer38.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint42 = xYAreaRenderer38.getSeriesPaint(0);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator43 = xYAreaRenderer38.getLegendItemLabelGenerator();
        boolean boolean44 = xYAreaRenderer38.getPlotArea();
        org.jfree.chart.plot.CategoryPlot categoryPlot46 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer48 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection49 = categoryPlot46.getDomainMarkers((int) 'a', layer48);
        categoryPlot46.setAnchorValue((double) 0.0f, false);
        boolean boolean53 = categoryPlot46.isDomainPannable();
        java.awt.Stroke stroke54 = categoryPlot46.getRangeZeroBaselineStroke();
        xYAreaRenderer38.setSeriesStroke(2958465, stroke54, true);
        xYAreaRenderer11.setBaseOutlineStroke(stroke54, false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(shape22);
        org.junit.Assert.assertNotNull(shape24);
        org.junit.Assert.assertNull(paint28);
        org.junit.Assert.assertNotNull(color32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(paint42);
        org.junit.Assert.assertNotNull(xYSeriesLabelGenerator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(layer48);
        org.junit.Assert.assertNull(collection49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(stroke54);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test203");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot19 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        org.jfree.chart.axis.NumberAxis numberAxis22 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis22.pan((double) 1);
        numberAxis22.setTickLabelsVisible(false);
        combinedDomainXYPlot19.setRangeAxis(255, (org.jfree.chart.axis.ValueAxis) numberAxis22);
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.setDomainAxis((-9999), (org.jfree.chart.axis.ValueAxis) numberAxis22, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test204");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        int int17 = pieSectionEntity16.getSectionIndex();
        org.jfree.data.general.PieDataset pieDataset18 = pieSectionEntity16.getDataset();
        java.lang.String str19 = pieSectionEntity16.toString();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(pieDataset18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PieSection: 32, 1(149.0)" + "'", str19, "PieSection: 32, 1(149.0)");
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test205");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        combinedDomainXYPlot1.setDomainMinorGridlinesVisible(false);
        org.jfree.chart.axis.AxisLocation axisLocation4 = org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT;
        java.text.DateFormat dateFormat6 = null;
        java.text.DateFormat dateFormat7 = null;
        org.jfree.chart.labels.StandardXYToolTipGenerator standardXYToolTipGenerator8 = new org.jfree.chart.labels.StandardXYToolTipGenerator("LGPL", dateFormat6, dateFormat7);
        java.text.NumberFormat numberFormat9 = standardXYToolTipGenerator8.getYFormat();
        java.text.NumberFormat numberFormat10 = standardXYToolTipGenerator8.getXFormat();
        boolean boolean11 = axisLocation4.equals((java.lang.Object) standardXYToolTipGenerator8);
        combinedDomainXYPlot1.setRangeAxisLocation(axisLocation4);
        java.lang.String str13 = axisLocation4.toString();
        org.junit.Assert.assertNotNull(axisLocation4);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AxisLocation.TOP_OR_LEFT" + "'", str13, "AxisLocation.TOP_OR_LEFT");
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test206");
        java.util.TimeZone timeZone0 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection1 = new org.jfree.data.time.TimeSeriesCollection(timeZone0);
        org.jfree.chart.plot.CategoryPlot categoryPlot2 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot2.clearAnnotations();
        timeSeriesCollection1.removeChangeListener((org.jfree.data.general.DatasetChangeListener) categoryPlot2);
        org.jfree.data.Range range6 = timeSeriesCollection1.getDomainBounds(false);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = timeSeriesCollection1.getItemCount((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The 'series' argument is out of bounds (-1).");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(range6);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test207");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        java.awt.Paint paint1 = combinedDomainXYPlot0.getRangeGridlinePaint();
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        org.jfree.chart.title.TextTitle textTitle9 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity10 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.title.Title) textTitle9);
        combinedDomainXYPlot0.drawQuadrants(graphics2D2, rectangle2D7);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.entity.EntityCollection entityCollection13 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo14 = new org.jfree.chart.ChartRenderingInfo(entityCollection13);
        java.awt.Paint paint15 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean16 = chartRenderingInfo14.equals((java.lang.Object) paint15);
        java.awt.geom.Rectangle2D rectangle2D17 = chartRenderingInfo14.getChartArea();
        org.jfree.chart.title.TextTitle textTitle19 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity20 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D17, (org.jfree.chart.title.Title) textTitle19);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor21 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D22 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D17, rectangleAnchor21);
        org.jfree.data.general.PieDataset pieDataset23 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity29 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D17, pieDataset23, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.AxisSpace axisSpace30 = combinedDomainXYPlot0.calculateAxisSpace(graphics2D12, rectangle2D17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(rectangle2D17);
        org.junit.Assert.assertNotNull(rectangleAnchor21);
        org.junit.Assert.assertNotNull(point2D22);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test208");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        combinedDomainXYPlot0.setDomainZeroBaselineVisible(false);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test209");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.Marker marker26 = null;
        org.jfree.chart.util.Layer layer27 = org.jfree.chart.util.Layer.BACKGROUND;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = combinedDomainXYPlot1.removeRangeMarker(9, marker26, layer27, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'marker' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(layer27);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test210");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D2 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        barRenderer3D2.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        barRenderer3D2.setBaseSeriesVisibleInLegend(true);
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot7 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        java.awt.Paint paint8 = combinedDomainXYPlot7.getRangeGridlinePaint();
        barRenderer3D2.setBaseOutlinePaint(paint8, false);
        org.junit.Assert.assertNotNull(paint8);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test211");
        org.jfree.chart.util.LogFormat logFormat5 = new org.jfree.chart.util.LogFormat((double) 7, "RectangleEdge.RIGHT", "", false);
        java.lang.StringBuffer stringBuffer7 = null;
        java.text.FieldPosition fieldPosition8 = null;
        java.lang.StringBuffer stringBuffer9 = logFormat5.format((long) (short) 0, stringBuffer7, fieldPosition8);
        java.text.ParsePosition parsePosition11 = null;
        java.lang.Number number12 = logFormat5.parse("{0}: ({1}, {2})", parsePosition11);
        java.text.DateFormat dateFormat13 = null;
        org.jfree.chart.labels.StandardXYToolTipGenerator standardXYToolTipGenerator14 = new org.jfree.chart.labels.StandardXYToolTipGenerator("JFreeChart", (java.text.NumberFormat) logFormat5, dateFormat13);
        java.util.TimeZone timeZone15 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection16 = new org.jfree.data.time.TimeSeriesCollection(timeZone15);
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot17.clearAnnotations();
        timeSeriesCollection16.removeChangeListener((org.jfree.data.general.DatasetChangeListener) categoryPlot17);
        org.jfree.data.general.DatasetGroup datasetGroup20 = timeSeriesCollection16.getGroup();
        java.text.NumberFormat numberFormat21 = java.text.NumberFormat.getNumberInstance();
        int int22 = numberFormat21.getMinimumFractionDigits();
        java.math.RoundingMode roundingMode23 = numberFormat21.getRoundingMode();
        boolean boolean24 = numberFormat21.isGroupingUsed();
        boolean boolean25 = timeSeriesCollection16.equals((java.lang.Object) boolean24);
        int int26 = timeSeriesCollection16.getSeriesCount();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = standardXYToolTipGenerator14.generateToolTip((org.jfree.data.xy.XYDataset) timeSeriesCollection16, (int) '4', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The 'series' argument is out of bounds (52).");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(stringBuffer9);
// flaky:         org.junit.Assert.assertEquals(stringBuffer9.toString(), "\u221e");
        org.junit.Assert.assertNull(number12);
        org.junit.Assert.assertNotNull(datasetGroup20);
        org.junit.Assert.assertNotNull(numberFormat21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + roundingMode23 + "' != '" + java.math.RoundingMode.HALF_EVEN + "'", roundingMode23.equals(java.math.RoundingMode.HALF_EVEN));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test212");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        combinedRangeXYPlot0.setGap((double) (-16777216));
        org.jfree.chart.entity.EntityCollection entityCollection6 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo7 = new org.jfree.chart.ChartRenderingInfo(entityCollection6);
        java.awt.Paint paint8 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean9 = chartRenderingInfo7.equals((java.lang.Object) paint8);
        java.awt.geom.Rectangle2D rectangle2D10 = chartRenderingInfo7.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = chartRenderingInfo7.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo12 = plotRenderingInfo11.getOwner();
        combinedRangeXYPlot0.handleClick((-9999), 5, plotRenderingInfo11);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo15 = plotRenderingInfo11.getSubplotInfo(15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 15, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(rectangle2D10);
        org.junit.Assert.assertNotNull(plotRenderingInfo11);
        org.junit.Assert.assertNotNull(chartRenderingInfo12);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test213");
        org.jfree.data.xy.OHLCDataset oHLCDataset3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart5 = org.jfree.chart.ChartFactory.createCandlestickChart("", "", "", oHLCDataset3, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@4f6124c0 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test214");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        org.jfree.chart.LegendItemCollection legendItemCollection1 = combinedRangeXYPlot0.getLegendItems();
        combinedRangeXYPlot0.setRangePannable(false);
        org.jfree.chart.renderer.xy.XYStepRenderer xYStepRenderer4 = new org.jfree.chart.renderer.xy.XYStepRenderer();
        java.lang.Boolean boolean6 = xYStepRenderer4.getSeriesLinesVisible(0);
        xYStepRenderer4.setUseOutlinePaint(true);
        combinedRangeXYPlot0.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYStepRenderer4);
        org.jfree.chart.plot.Marker marker10 = null;
        boolean boolean11 = combinedRangeXYPlot0.removeDomainMarker(marker10);
        org.junit.Assert.assertNotNull(legendItemCollection1);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test215");
        java.awt.Color color4 = org.jfree.chart.ChartColor.VERY_DARK_RED;
        org.jfree.chart.block.BlockBorder blockBorder5 = new org.jfree.chart.block.BlockBorder(0.025d, (double) 2, (double) 9, (double) 1L, (java.awt.Paint) color4);
        org.jfree.chart.block.BorderArrangement borderArrangement6 = new org.jfree.chart.block.BorderArrangement();
        java.util.TimeZone timeZone7 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection8 = new org.jfree.data.time.TimeSeriesCollection(timeZone7);
        org.jfree.chart.title.LegendItemBlockContainer legendItemBlockContainer10 = new org.jfree.chart.title.LegendItemBlockContainer((org.jfree.chart.block.Arrangement) borderArrangement6, (org.jfree.data.general.Dataset) timeSeriesCollection8, (java.lang.Comparable) (byte) 10);
        java.lang.Object obj11 = legendItemBlockContainer10.clone();
        org.jfree.data.general.Dataset dataset12 = legendItemBlockContainer10.getDataset();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer14 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer14.clearSeriesStrokes(false);
        boolean boolean17 = xYAreaRenderer14.getPlotLines();
        org.jfree.chart.title.LegendTitle legendTitle18 = new org.jfree.chart.title.LegendTitle((org.jfree.chart.LegendItemSource) xYAreaRenderer14);
        org.jfree.chart.util.RectangleEdge rectangleEdge19 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str20 = rectangleEdge19.toString();
        legendTitle18.setLegendItemGraphicEdge(rectangleEdge19);
        org.jfree.chart.util.RectangleInsets rectangleInsets22 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double23 = rectangleInsets22.getLeft();
        double double25 = rectangleInsets22.calculateLeftOutset((double) 0L);
        legendTitle18.setLegendItemGraphicPadding(rectangleInsets22);
        legendItemBlockContainer10.add((org.jfree.chart.block.Block) legendTitle18);
        boolean boolean28 = blockBorder5.equals((java.lang.Object) legendItemBlockContainer10);
        java.awt.Graphics2D graphics2D29 = null;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer31 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer31.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator34 = null;
        xYAreaRenderer31.setLegendItemURLGenerator(xYSeriesLabelGenerator34);
        xYAreaRenderer31.setSeriesVisibleInLegend((int) (byte) 10, (java.lang.Boolean) false);
        xYAreaRenderer31.setBaseItemLabelsVisible(true);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator42 = null;
        xYAreaRenderer31.setSeriesURLGenerator((int) (short) 100, xYURLGenerator42, false);
        java.awt.Paint paint48 = xYAreaRenderer31.getItemFillPaint((int) (short) 10, (int) 'a', true);
        java.awt.Graphics2D graphics2D49 = null;
        org.jfree.chart.axis.ValueAxis valueAxis50 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot51 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis50);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer53 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer53.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator56 = null;
        xYAreaRenderer53.setLegendItemURLGenerator(xYSeriesLabelGenerator56);
        xYAreaRenderer53.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean64 = xYAreaRenderer53.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot51.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer53);
        boolean boolean66 = combinedDomainXYPlot51.canSelectByPoint();
        org.jfree.chart.axis.NumberAxis numberAxis68 = new org.jfree.chart.axis.NumberAxis("");
        int int69 = numberAxis68.getMinorTickCount();
        numberAxis68.setMinorTickMarksVisible(true);
        org.jfree.chart.entity.EntityCollection entityCollection72 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo73 = new org.jfree.chart.ChartRenderingInfo(entityCollection72);
        java.awt.Paint paint74 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean75 = chartRenderingInfo73.equals((java.lang.Object) paint74);
        java.awt.geom.Rectangle2D rectangle2D76 = chartRenderingInfo73.getChartArea();
        org.jfree.chart.title.TextTitle textTitle78 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity79 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D76, (org.jfree.chart.title.Title) textTitle78);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor80 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D81 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D76, rectangleAnchor80);
        java.awt.Paint paint83 = org.jfree.chart.axis.Axis.DEFAULT_AXIS_LABEL_PAINT;
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot84 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke85 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot84.setRangeCrosshairStroke(stroke85);
        xYAreaRenderer31.drawDomainLine(graphics2D49, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot51, (org.jfree.chart.axis.ValueAxis) numberAxis68, rectangle2D76, (double) 60000L, paint83, stroke85);
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder88 = org.jfree.chart.plot.DatasetRenderingOrder.FORWARD;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = legendItemBlockContainer10.draw(graphics2D29, rectangle2D76, (java.lang.Object) datasetRenderingOrder88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(color4);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(dataset12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(rectangleEdge19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "RectangleEdge.RIGHT" + "'", str20, "RectangleEdge.RIGHT");
        org.junit.Assert.assertNotNull(rectangleInsets22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(paint48);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(paint74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(rectangle2D76);
        org.junit.Assert.assertNotNull(rectangleAnchor80);
        org.junit.Assert.assertNotNull(point2D81);
        org.junit.Assert.assertNotNull(paint83);
        org.junit.Assert.assertNotNull(stroke85);
        org.junit.Assert.assertNotNull(datasetRenderingOrder88);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test216");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        boolean boolean18 = combinedDomainXYPlot1.isRangeCrosshairVisible();
        boolean boolean19 = combinedDomainXYPlot1.isDomainCrosshairVisible();
        java.util.TimeZone timeZone20 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection21 = new org.jfree.data.time.TimeSeriesCollection(timeZone20);
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot22.clearAnnotations();
        timeSeriesCollection21.removeChangeListener((org.jfree.data.general.DatasetChangeListener) categoryPlot22);
        org.jfree.data.general.DatasetGroup datasetGroup25 = timeSeriesCollection21.getGroup();
        org.jfree.chart.renderer.xy.XYItemRenderer xYItemRenderer26 = combinedDomainXYPlot1.getRendererForDataset((org.jfree.data.xy.XYDataset) timeSeriesCollection21);
        int int27 = combinedDomainXYPlot1.getRangeAxisCount();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(datasetGroup25);
        org.junit.Assert.assertNull(xYItemRenderer26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test217");
        org.jfree.chart.axis.NumberTickUnit numberTickUnit1 = new org.jfree.chart.axis.NumberTickUnit(90.0d);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test218");
        org.jfree.data.general.PieDataset pieDataset1 = null;
        java.util.Locale locale4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart5 = org.jfree.chart.ChartFactory.createPieChart("12/31/69", pieDataset1, false, false, locale4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test219");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        boolean boolean5 = xYAreaRenderer1.getBaseItemLabelsVisible();
        java.awt.Paint paint7 = org.jfree.chart.plot.WaferMapPlot.DEFAULT_CROSSHAIR_PAINT;
        xYAreaRenderer1.setSeriesFillPaint(7, paint7);
        java.awt.Shape shape10 = org.jfree.chart.util.ShapeUtilities.createDiamond((-1.0f));
        xYAreaRenderer1.setBaseShape(shape10);
        java.lang.Boolean boolean13 = xYAreaRenderer1.getSeriesVisible(255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test220");
        org.jfree.chart.util.RectangleInsets rectangleInsets0 = org.jfree.chart.axis.Axis.DEFAULT_AXIS_LABEL_INSETS;
        org.junit.Assert.assertNotNull(rectangleInsets0);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test221");
        org.jfree.chart.plot.PolarPlot polarPlot0 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Font font1 = polarPlot0.getAngleLabelFont();
        org.jfree.chart.axis.ValueAxis valueAxis2 = polarPlot0.getAxis();
        org.jfree.chart.axis.ValueAxis valueAxis3 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot4 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.entity.EntityCollection entityCollection6 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo7 = new org.jfree.chart.ChartRenderingInfo(entityCollection6);
        java.awt.Paint paint8 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean9 = chartRenderingInfo7.equals((java.lang.Object) paint8);
        java.awt.geom.Rectangle2D rectangle2D10 = chartRenderingInfo7.getChartArea();
        java.util.List list11 = null;
        combinedDomainXYPlot4.drawDomainGridlines(graphics2D5, rectangle2D10, list11);
        org.jfree.chart.axis.NumberAxis numberAxis14 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity17 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D10, (org.jfree.chart.axis.Axis) numberAxis14, "", "DatasetRenderingOrder.FORWARD");
        numberAxis14.setMinorTickMarkInsideLength((float) 60000L);
        org.jfree.data.Range range20 = polarPlot0.getDataRange((org.jfree.chart.axis.ValueAxis) numberAxis14);
        java.lang.Object obj21 = numberAxis14.clone();
        org.junit.Assert.assertNotNull(font1);
        org.junit.Assert.assertNull(valueAxis2);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(rectangle2D10);
        org.junit.Assert.assertNull(range20);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test222");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape5 = barRenderer3D0.getBaseShape();
        barRenderer3D0.setBaseSeriesVisible(false);
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = new org.jfree.chart.plot.CategoryPlot();
        int int10 = categoryPlot9.getDatasetCount();
        categoryPlot9.setAnchorValue((double) 10.0f);
        java.awt.Graphics2D graphics2D13 = null;
        org.jfree.chart.entity.EntityCollection entityCollection14 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo15 = new org.jfree.chart.ChartRenderingInfo(entityCollection14);
        java.awt.Paint paint16 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean17 = chartRenderingInfo15.equals((java.lang.Object) paint16);
        java.awt.geom.Rectangle2D rectangle2D18 = chartRenderingInfo15.getChartArea();
        org.jfree.chart.title.TextTitle textTitle20 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity21 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D18, (org.jfree.chart.title.Title) textTitle20);
        org.jfree.chart.axis.AxisSpace axisSpace22 = categoryPlot9.calculateAxisSpace(graphics2D13, rectangle2D18);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer24 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer24.clearSeriesStrokes(false);
        boolean boolean27 = xYAreaRenderer24.getPlotLines();
        org.jfree.chart.title.LegendTitle legendTitle28 = new org.jfree.chart.title.LegendTitle((org.jfree.chart.LegendItemSource) xYAreaRenderer24);
        org.jfree.chart.util.RectangleEdge rectangleEdge29 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str30 = rectangleEdge29.toString();
        legendTitle28.setLegendItemGraphicEdge(rectangleEdge29);
        org.jfree.chart.title.TextTitle textTitle33 = new org.jfree.chart.title.TextTitle("");
        boolean boolean34 = textTitle33.getExpandToFitSpace();
        textTitle33.setText("");
        java.lang.String str37 = textTitle33.getID();
        java.awt.Font font38 = textTitle33.getFont();
        java.awt.Graphics2D graphics2D39 = null;
        org.jfree.chart.entity.EntityCollection entityCollection40 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo41 = new org.jfree.chart.ChartRenderingInfo(entityCollection40);
        java.awt.Paint paint42 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean43 = chartRenderingInfo41.equals((java.lang.Object) paint42);
        java.awt.geom.Rectangle2D rectangle2D44 = chartRenderingInfo41.getChartArea();
        textTitle33.draw(graphics2D39, rectangle2D44);
        legendTitle28.setBounds(rectangle2D44);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer49 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        java.lang.Boolean boolean51 = xYAreaRenderer49.getSeriesVisibleInLegend((int) (short) 0);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D53 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font57 = barRenderer3D53.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator59 = null;
        barRenderer3D53.setSeriesToolTipGenerator(15, categoryToolTipGenerator59, true);
        org.jfree.chart.util.LengthAdjustmentType lengthAdjustmentType62 = org.jfree.chart.util.LengthAdjustmentType.EXPAND;
        boolean boolean63 = barRenderer3D53.equals((java.lang.Object) lengthAdjustmentType62);
        java.awt.Paint paint64 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT;
        barRenderer3D53.setBaseFillPaint(paint64, false);
        xYAreaRenderer49.setLegendTextPaint((int) (byte) 1, paint64);
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot68 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        org.jfree.chart.plot.PiePlot piePlot69 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup70 = piePlot69.getDatasetGroup();
        int int71 = piePlot69.getBackgroundImageAlignment();
        boolean boolean72 = piePlot69.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D73 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo74 = null;
        piePlot69.createAndAddEntity(rectangle2D73, plotRenderingInfo74, "hi!", "LGPL");
        java.awt.Paint paint78 = piePlot69.getLabelPaint();
        java.awt.Stroke stroke79 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        piePlot69.setOutlineStroke(stroke79);
        combinedDomainXYPlot68.setDomainMinorGridlineStroke(stroke79);
        // The following exception was thrown during execution in test generation
        try {
            barRenderer3D0.drawDomainLine(graphics2D8, categoryPlot9, rectangle2D44, (double) 1577894400001L, paint64, stroke79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(rectangle2D18);
        org.junit.Assert.assertNotNull(axisSpace22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(rectangleEdge29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "RectangleEdge.RIGHT" + "'", str30, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(font38);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(rectangle2D44);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(font57);
        org.junit.Assert.assertNotNull(lengthAdjustmentType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(paint64);
        org.junit.Assert.assertNull(datasetGroup70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 15 + "'", int71 == 15);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(paint78);
        org.junit.Assert.assertNotNull(stroke79);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test223");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        combinedDomainXYPlot1.setDomainAxis(valueAxis18);
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot21 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis20);
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.entity.EntityCollection entityCollection23 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo24 = new org.jfree.chart.ChartRenderingInfo(entityCollection23);
        java.awt.Paint paint25 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean26 = chartRenderingInfo24.equals((java.lang.Object) paint25);
        java.awt.geom.Rectangle2D rectangle2D27 = chartRenderingInfo24.getChartArea();
        java.util.List list28 = null;
        combinedDomainXYPlot21.drawDomainGridlines(graphics2D22, rectangle2D27, list28);
        org.jfree.chart.axis.NumberAxis numberAxis31 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity34 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D27, (org.jfree.chart.axis.Axis) numberAxis31, "", "DatasetRenderingOrder.FORWARD");
        combinedDomainXYPlot1.setRangeAxis((org.jfree.chart.axis.ValueAxis) numberAxis31);
        numberAxis31.setTickMarksVisible(false);
        java.awt.Shape shape38 = null;
        // The following exception was thrown during execution in test generation
        try {
            numberAxis31.setRightArrow(shape38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'arrow' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangle2D27);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test224");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Color color2 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot1.setRangeMinorGridlinePaint((java.awt.Paint) color2);
        boolean boolean4 = combinedDomainXYPlot1.isDomainPannable();
        java.lang.String str5 = combinedDomainXYPlot1.getPlotType();
        org.junit.Assert.assertNotNull(color2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Combined_Domain_XYPlot" + "'", str5, "Combined_Domain_XYPlot");
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test225");
        org.jfree.data.xy.TableXYDataset tableXYDataset3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer6 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection7 = categoryPlot4.getDomainMarkers((int) 'a', layer6);
        java.awt.Paint paint8 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        categoryPlot4.setOutlinePaint(paint8);
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot();
        int int11 = categoryPlot10.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation12 = categoryPlot10.getOrientation();
        categoryPlot4.setOrientation(plotOrientation12);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart17 = org.jfree.chart.ChartFactory.createStackedXYAreaChart("NO_CHANGE", "RectangleEdge.RIGHT", "12/31/69", tableXYDataset3, plotOrientation12, true, false, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@5ec5ca4 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(layer6);
        org.junit.Assert.assertNull(collection7);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(plotOrientation12);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test226");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        numberAxis11.centerRange(10.0d);
        org.jfree.chart.axis.TickUnits tickUnits17 = new org.jfree.chart.axis.TickUnits();
        numberAxis11.setStandardTickUnits((org.jfree.chart.axis.TickUnitSource) tickUnits17);
        org.jfree.chart.axis.TickUnit tickUnit19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.TickUnit tickUnit20 = tickUnits17.getCeilingTickUnit(tickUnit19);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test227");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator4 = null;
        xYAreaRenderer1.setLegendItemURLGenerator(xYSeriesLabelGenerator4);
        xYAreaRenderer1.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean10 = xYAreaRenderer1.isSeriesVisible((-16777216));
        java.awt.Shape shape11 = xYAreaRenderer1.getBaseShape();
        java.awt.Shape shape14 = org.jfree.chart.util.ShapeUtilities.createTranslatedShape(shape11, 0.0d, (double) '#');
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot15 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.lang.Object obj16 = combinedRangeXYPlot15.clone();
        double double17 = combinedRangeXYPlot15.getGap();
        org.jfree.chart.renderer.xy.XYItemRenderer xYItemRenderer19 = combinedRangeXYPlot15.getRenderer(4);
        combinedRangeXYPlot15.clearRangeMarkers((int) 'a');
        org.jfree.chart.entity.PlotEntity plotEntity24 = new org.jfree.chart.entity.PlotEntity(shape11, (org.jfree.chart.plot.Plot) combinedRangeXYPlot15, "Last", "null");
        boolean boolean25 = combinedRangeXYPlot15.isRangeZeroBaselineVisible();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(shape11);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 5.0d + "'", double17 == 5.0d);
        org.junit.Assert.assertNull(xYItemRenderer19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test228");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean20 = xYAreaRenderer11.isSeriesVisible((-16777216));
        java.awt.Shape shape22 = xYAreaRenderer11.getLegendShape(0);
        java.awt.Shape shape24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        xYAreaRenderer11.setSeriesShape((int) (byte) 100, shape24, false);
        java.awt.Paint paint28 = xYAreaRenderer11.getSeriesItemLabelPaint(5);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer30 = xYAreaRenderer11.getGradientTransformer();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(shape22);
        org.junit.Assert.assertNotNull(shape24);
        org.junit.Assert.assertNull(paint28);
        org.junit.Assert.assertNotNull(gradientPaintTransformer30);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test229");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        combinedDomainXYPlot1.clearDomainMarkers();
        int int27 = combinedDomainXYPlot1.getRendererCount();
        org.jfree.chart.renderer.xy.XYItemRenderer xYItemRenderer29 = combinedDomainXYPlot1.getRenderer((-1));
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot32 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis31);
        java.awt.Graphics2D graphics2D33 = null;
        org.jfree.chart.entity.EntityCollection entityCollection34 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo35 = new org.jfree.chart.ChartRenderingInfo(entityCollection34);
        java.awt.Paint paint36 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean37 = chartRenderingInfo35.equals((java.lang.Object) paint36);
        java.awt.geom.Rectangle2D rectangle2D38 = chartRenderingInfo35.getChartArea();
        java.util.List list39 = null;
        combinedDomainXYPlot32.drawDomainGridlines(graphics2D33, rectangle2D38, list39);
        org.jfree.chart.axis.NumberAxis numberAxis42 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity45 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D38, (org.jfree.chart.axis.Axis) numberAxis42, "", "DatasetRenderingOrder.FORWARD");
        java.lang.Object obj46 = numberAxis42.clone();
        combinedDomainXYPlot1.setRangeAxis(0, (org.jfree.chart.axis.ValueAxis) numberAxis42);
        combinedDomainXYPlot1.setDomainCrosshairLockedOnData(false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(xYItemRenderer29);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(rectangle2D38);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test230");
        org.jfree.chart.plot.CrosshairState crosshairState1 = new org.jfree.chart.plot.CrosshairState(false);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test231");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        org.jfree.chart.axis.AxisLocation axisLocation18 = combinedDomainXYPlot1.getDomainAxisLocation();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(axisLocation18);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test232");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer2 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer2.clearSeriesStrokes(false);
        boolean boolean5 = xYAreaRenderer2.getPlotLines();
        java.awt.Font font7 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint8 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer11 = null;
        org.jfree.chart.text.TextBlock textBlock12 = org.jfree.chart.text.TextUtilities.createTextBlock("", font7, paint8, (float) (-1L), (int) (short) -1, textMeasurer11);
        xYAreaRenderer2.setBaseItemLabelPaint(paint8, true);
        java.awt.Stroke stroke16 = xYAreaRenderer2.getSeriesOutlineStroke((int) ' ');
        xYAreaRenderer2.setSeriesCreateEntities((int) (short) 10, (java.lang.Boolean) false);
        boolean boolean20 = combinedRangeXYPlot0.equals((java.lang.Object) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(textBlock12);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test233");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.axis.NumberAxis numberAxis15 = new org.jfree.chart.axis.NumberAxis();
        org.jfree.data.Range range18 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range21 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range22 = org.jfree.data.Range.combine(range18, range21);
        numberAxis15.setRangeWithMargins(range21, true, false);
        numberAxis11.setRangeWithMargins(range21, true, true);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNotNull(range22);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test234");
        org.jfree.chart.plot.PolarPlot polarPlot0 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Font font1 = polarPlot0.getAngleLabelFont();
        org.jfree.chart.axis.ValueAxis valueAxis2 = polarPlot0.getAxis();
        org.jfree.chart.entity.EntityCollection entityCollection4 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo5 = new org.jfree.chart.ChartRenderingInfo(entityCollection4);
        java.awt.Paint paint6 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean7 = chartRenderingInfo5.equals((java.lang.Object) paint6);
        java.awt.geom.Rectangle2D rectangle2D8 = chartRenderingInfo5.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo9 = chartRenderingInfo5.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo10 = plotRenderingInfo9.getOwner();
        java.awt.geom.Point2D point2D11 = null;
        polarPlot0.zoomDomainAxes((double) (byte) 1, plotRenderingInfo9, point2D11, false);
        java.awt.Stroke stroke14 = polarPlot0.getRadiusGridlineStroke();
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot17 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis16);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer19 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer19.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator22 = null;
        xYAreaRenderer19.setLegendItemURLGenerator(xYSeriesLabelGenerator22);
        xYAreaRenderer19.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean30 = xYAreaRenderer19.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot17.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer19);
        combinedDomainXYPlot17.clearDomainMarkers();
        java.awt.Font font34 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint35 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer38 = null;
        org.jfree.chart.text.TextBlock textBlock39 = org.jfree.chart.text.TextUtilities.createTextBlock("", font34, paint35, (float) (-1L), (int) (short) -1, textMeasurer38);
        combinedDomainXYPlot17.setDomainCrosshairPaint(paint35);
        org.jfree.chart.entity.EntityCollection entityCollection43 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo44 = new org.jfree.chart.ChartRenderingInfo(entityCollection43);
        java.awt.Paint paint45 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean46 = chartRenderingInfo44.equals((java.lang.Object) paint45);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo47 = chartRenderingInfo44.getPlotInfo();
        combinedDomainXYPlot17.handleClick(255, 2, plotRenderingInfo47);
        org.jfree.chart.axis.ValueAxis valueAxis49 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot50 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis49);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer52 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer52.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator55 = null;
        xYAreaRenderer52.setLegendItemURLGenerator(xYSeriesLabelGenerator55);
        xYAreaRenderer52.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean63 = xYAreaRenderer52.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot50.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer52);
        org.jfree.chart.axis.ValueAxis valueAxis65 = null;
        int int66 = combinedDomainXYPlot50.getRangeAxisIndex(valueAxis65);
        boolean boolean67 = combinedDomainXYPlot50.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets68 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double69 = rectangleInsets68.getLeft();
        double double71 = rectangleInsets68.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot50.setAxisOffset(rectangleInsets68);
        combinedDomainXYPlot50.setDomainGridlinesVisible(false);
        java.awt.Paint paint75 = combinedDomainXYPlot50.getNoDataMessagePaint();
        boolean boolean76 = combinedDomainXYPlot50.canSelectByPoint();
        java.awt.Color color81 = org.jfree.chart.ChartColor.VERY_DARK_RED;
        org.jfree.chart.block.BlockBorder blockBorder82 = new org.jfree.chart.block.BlockBorder(0.025d, (double) 2, (double) 9, (double) 1L, (java.awt.Paint) color81);
        combinedDomainXYPlot50.setRangeZeroBaselinePaint((java.awt.Paint) color81);
        org.jfree.chart.entity.EntityCollection entityCollection85 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo86 = new org.jfree.chart.ChartRenderingInfo(entityCollection85);
        java.awt.Paint paint87 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean88 = chartRenderingInfo86.equals((java.lang.Object) paint87);
        java.awt.geom.Rectangle2D rectangle2D89 = chartRenderingInfo86.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo90 = chartRenderingInfo86.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo91 = plotRenderingInfo90.getOwner();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo92 = new org.jfree.chart.plot.PlotRenderingInfo(chartRenderingInfo91);
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot93 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke94 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot93.setRangeCrosshairStroke(stroke94);
        java.awt.geom.Point2D point2D96 = combinedRangeXYPlot93.getQuadrantOrigin();
        combinedDomainXYPlot50.zoomRangeAxes(0.0d, plotRenderingInfo92, point2D96);
        // The following exception was thrown during execution in test generation
        try {
            polarPlot0.zoomRangeAxes((double) (byte) 0, plotRenderingInfo47, point2D96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(font1);
        org.junit.Assert.assertNull(valueAxis2);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(rectangle2D8);
        org.junit.Assert.assertNotNull(plotRenderingInfo9);
        org.junit.Assert.assertNotNull(chartRenderingInfo10);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(font34);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNotNull(textBlock39);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(plotRenderingInfo47);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(rectangleInsets68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertNotNull(paint75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(color81);
        org.junit.Assert.assertNotNull(paint87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(rectangle2D89);
        org.junit.Assert.assertNotNull(plotRenderingInfo90);
        org.junit.Assert.assertNotNull(chartRenderingInfo91);
        org.junit.Assert.assertNotNull(stroke94);
        org.junit.Assert.assertNotNull(point2D96);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test235");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.PiePlot piePlot25 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup26 = piePlot25.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener27 = null;
        piePlot25.addChangeListener(plotChangeListener27);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent29 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot25);
        combinedDomainXYPlot1.plotChanged(plotChangeEvent29);
        java.awt.Paint paint31 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        combinedDomainXYPlot1.setDomainGridlinePaint(paint31);
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer35 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection36 = categoryPlot33.getDomainMarkers((int) 'a', layer35);
        org.jfree.data.category.CategoryDataset categoryDataset38 = null;
        categoryPlot33.setDataset(4, categoryDataset38);
        org.jfree.chart.axis.AxisLocation axisLocation40 = org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT;
        categoryPlot33.setRangeAxisLocation(axisLocation40, false);
        org.jfree.chart.axis.AxisLocation axisLocation44 = categoryPlot33.getRangeAxisLocation((-1));
        combinedDomainXYPlot1.setRangeAxisLocation(axisLocation44, true);
        int int47 = combinedDomainXYPlot1.getRangeAxisCount();
        java.awt.Paint paint48 = combinedDomainXYPlot1.getDomainZeroBaselinePaint();
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart49 = new org.jfree.chart.JFreeChart((org.jfree.chart.plot.Plot) combinedDomainXYPlot1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@60ddfa59 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNull(datasetGroup26);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(layer35);
        org.junit.Assert.assertNull(collection36);
        org.junit.Assert.assertNotNull(axisLocation40);
        org.junit.Assert.assertNotNull(axisLocation44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(paint48);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test236");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        boolean boolean16 = combinedDomainXYPlot1.canSelectByPoint();
        org.jfree.chart.axis.AxisLocation axisLocation17 = org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT;
        combinedDomainXYPlot1.setRangeAxisLocation(axisLocation17, true);
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot();
        int int21 = categoryPlot20.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation22 = categoryPlot20.getOrientation();
        java.awt.Paint paint23 = categoryPlot20.getDomainCrosshairPaint();
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint23);
        java.io.ObjectOutputStream objectOutputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.util.SerialUtilities.writePaint(paint23, objectOutputStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'stream' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(axisLocation17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(plotOrientation22);
        org.junit.Assert.assertNotNull(paint23);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test237");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean3 = xYAreaRenderer1.isSeriesItemLabelsVisible((int) (byte) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition4 = xYAreaRenderer1.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator5 = null;
        xYAreaRenderer1.setBaseItemLabelGenerator(xYItemLabelGenerator5);
        java.awt.Graphics2D graphics2D7 = null;
        java.awt.geom.Rectangle2D rectangle2D8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot10 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis9);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer12 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer12.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator15 = null;
        xYAreaRenderer12.setLegendItemURLGenerator(xYSeriesLabelGenerator15);
        xYAreaRenderer12.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean23 = xYAreaRenderer12.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot10.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer12);
        combinedDomainXYPlot10.clearDomainMarkers();
        java.awt.Font font27 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint28 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer31 = null;
        org.jfree.chart.text.TextBlock textBlock32 = org.jfree.chart.text.TextUtilities.createTextBlock("", font27, paint28, (float) (-1L), (int) (short) -1, textMeasurer31);
        combinedDomainXYPlot10.setDomainCrosshairPaint(paint28);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder34 = combinedDomainXYPlot10.getSeriesRenderingOrder();
        combinedDomainXYPlot10.clearDomainMarkers();
        org.jfree.chart.block.BorderArrangement borderArrangement36 = new org.jfree.chart.block.BorderArrangement();
        java.util.TimeZone timeZone37 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection38 = new org.jfree.data.time.TimeSeriesCollection(timeZone37);
        org.jfree.chart.title.LegendItemBlockContainer legendItemBlockContainer40 = new org.jfree.chart.title.LegendItemBlockContainer((org.jfree.chart.block.Arrangement) borderArrangement36, (org.jfree.data.general.Dataset) timeSeriesCollection38, (java.lang.Comparable) (byte) 10);
        org.jfree.data.xy.XYDatasetSelectionState xYDatasetSelectionState41 = timeSeriesCollection38.getSelectionState();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo42 = null;
        org.jfree.chart.renderer.xy.XYItemRendererState xYItemRendererState43 = xYAreaRenderer1.initialise(graphics2D7, rectangle2D8, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot10, (org.jfree.data.xy.XYDataset) timeSeriesCollection38, plotRenderingInfo42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number46 = timeSeriesCollection38.getEndX((-16777116), (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition4);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(textBlock32);
        org.junit.Assert.assertNotNull(seriesRenderingOrder34);
        org.junit.Assert.assertNotNull(xYDatasetSelectionState41);
        org.junit.Assert.assertNotNull(xYItemRendererState43);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test238");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = null;
        xYAreaRenderer3.setSeriesPositiveItemLabelPosition(0, itemLabelPosition17, false);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D20 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font24 = barRenderer3D20.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape25 = barRenderer3D20.getBaseShape();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer28 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer28.clearSeriesStrokes(false);
        boolean boolean31 = xYAreaRenderer28.getPlotLines();
        boolean boolean32 = xYAreaRenderer28.getBaseItemLabelsVisible();
        java.awt.Paint paint34 = org.jfree.chart.plot.WaferMapPlot.DEFAULT_CROSSHAIR_PAINT;
        xYAreaRenderer28.setSeriesFillPaint(7, paint34);
        barRenderer3D20.setSeriesFillPaint(10, paint34);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = barRenderer3D20.getURLGenerator(15, 4, true);
        java.awt.Graphics2D graphics2D41 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot42 = new org.jfree.chart.plot.CategoryPlot();
        int int43 = categoryPlot42.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation44 = categoryPlot42.getOrientation();
        java.awt.Paint paint45 = categoryPlot42.getDomainCrosshairPaint();
        org.jfree.chart.axis.NumberAxis numberAxis47 = new org.jfree.chart.axis.NumberAxis("");
        double double48 = numberAxis47.getAutoRangeMinimumSize();
        numberAxis47.setLowerBound((double) (byte) -1);
        org.jfree.chart.plot.PiePlot piePlot51 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup52 = piePlot51.getDatasetGroup();
        int int53 = piePlot51.getBackgroundImageAlignment();
        boolean boolean54 = piePlot51.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D55 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo56 = null;
        piePlot51.createAndAddEntity(rectangle2D55, plotRenderingInfo56, "hi!", "LGPL");
        piePlot51.setStartAngle((double) 1);
        org.jfree.data.xy.XYDataItem xYDataItem64 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        java.awt.Color color67 = java.awt.Color.getColor("hi!", (int) (short) 100);
        boolean boolean68 = xYDataItem64.equals((java.lang.Object) "hi!");
        java.awt.Color color69 = java.awt.Color.MAGENTA;
        piePlot51.setSectionPaint((java.lang.Comparable) "hi!", (java.awt.Paint) color69);
        java.awt.Graphics2D graphics2D71 = null;
        org.jfree.chart.entity.EntityCollection entityCollection72 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo73 = new org.jfree.chart.ChartRenderingInfo(entityCollection72);
        java.awt.Paint paint74 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean75 = chartRenderingInfo73.equals((java.lang.Object) paint74);
        java.awt.geom.Rectangle2D rectangle2D76 = chartRenderingInfo73.getChartArea();
        piePlot51.drawBackgroundImage(graphics2D71, rectangle2D76);
        java.awt.Color color79 = java.awt.Color.black;
        java.awt.Stroke stroke80 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        barRenderer3D20.drawRangeLine(graphics2D41, categoryPlot42, (org.jfree.chart.axis.ValueAxis) numberAxis47, rectangle2D76, (double) (-62167363200000L), (java.awt.Paint) color79, stroke80);
        xYAreaRenderer3.setBaseItemLabelPaint((java.awt.Paint) color79);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font24);
        org.junit.Assert.assertNotNull(shape25);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNull(categoryURLGenerator40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(plotOrientation44);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0E-8d + "'", double48 == 1.0E-8d);
        org.junit.Assert.assertNull(datasetGroup52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 15 + "'", int53 == 15);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(color67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(color69);
        org.junit.Assert.assertNotNull(paint74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(rectangle2D76);
        org.junit.Assert.assertNotNull(color79);
        org.junit.Assert.assertNotNull(stroke80);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test239");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape5 = barRenderer3D0.getBaseShape();
        barRenderer3D0.setBaseSeriesVisible(false);
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot9 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean22 = xYAreaRenderer11.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot9.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        int int25 = combinedDomainXYPlot9.getRangeAxisIndex(valueAxis24);
        boolean boolean26 = combinedDomainXYPlot9.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets27 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double28 = rectangleInsets27.getLeft();
        double double30 = rectangleInsets27.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot9.setAxisOffset(rectangleInsets27);
        combinedDomainXYPlot9.setDomainGridlinesVisible(false);
        java.awt.Paint paint34 = combinedDomainXYPlot9.getNoDataMessagePaint();
        barRenderer3D0.setBaseItemLabelPaint(paint34, false);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot38 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot38.clearAnnotations();
        org.jfree.data.time.Year year42 = new org.jfree.data.time.Year((int) (short) 0);
        long long43 = year42.getFirstMillisecond();
        org.jfree.data.time.Year year45 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis46 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year42, (org.jfree.data.time.RegularTimePeriod) year45);
        org.jfree.data.time.Year year49 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year51 = new org.jfree.data.time.Year((int) (short) 0);
        long long52 = year51.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis53 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year49, (org.jfree.data.time.RegularTimePeriod) year51);
        periodAxis46.setLast((org.jfree.data.time.RegularTimePeriod) year51);
        java.awt.Stroke stroke55 = periodAxis46.getMinorTickMarkStroke();
        java.lang.Class class56 = periodAxis46.getMajorTickTimePeriodClass();
        org.jfree.chart.entity.EntityCollection entityCollection57 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo58 = new org.jfree.chart.ChartRenderingInfo(entityCollection57);
        java.awt.Paint paint59 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean60 = chartRenderingInfo58.equals((java.lang.Object) paint59);
        java.awt.geom.Rectangle2D rectangle2D61 = chartRenderingInfo58.getChartArea();
        org.jfree.chart.title.TextTitle textTitle63 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity64 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D61, (org.jfree.chart.title.Title) textTitle63);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor65 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D66 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D61, rectangleAnchor65);
        java.awt.Color color71 = java.awt.Color.getHSBColor((float) 2, (float) 15, (float) 0);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D72 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font76 = barRenderer3D72.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape77 = barRenderer3D72.getBaseShape();
        java.awt.Paint paint78 = barRenderer3D72.getShadowPaint();
        java.awt.Stroke stroke82 = barRenderer3D72.getItemOutlineStroke((int) (byte) 1, (int) '#', false);
        barRenderer3D0.drawRangeLine(graphics2D37, categoryPlot38, (org.jfree.chart.axis.ValueAxis) periodAxis46, rectangle2D61, (double) 10L, (java.awt.Paint) color71, stroke82);
        org.jfree.chart.LegendItemCollection legendItemCollection84 = categoryPlot38.getFixedLegendItems();
        org.jfree.chart.axis.CategoryAnchor categoryAnchor85 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryPlot38.setDomainGridlinePosition(categoryAnchor85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangleInsets27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-62167363200000L) + "'", long43 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-62167363200000L) + "'", long52 == (-62167363200000L));
        org.junit.Assert.assertNotNull(stroke55);
        org.junit.Assert.assertNotNull(class56);
        org.junit.Assert.assertNotNull(paint59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(rectangle2D61);
        org.junit.Assert.assertNotNull(rectangleAnchor65);
        org.junit.Assert.assertNotNull(point2D66);
        org.junit.Assert.assertNotNull(color71);
        org.junit.Assert.assertNotNull(font76);
        org.junit.Assert.assertNotNull(shape77);
        org.junit.Assert.assertNotNull(paint78);
        org.junit.Assert.assertNotNull(stroke82);
        org.junit.Assert.assertNull(legendItemCollection84);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test240");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        combinedRangeXYPlot0.setGap((double) (-16777216));
        combinedRangeXYPlot0.setRangeCrosshairVisible(false);
        org.jfree.chart.plot.ValueMarker valueMarker8 = new org.jfree.chart.plot.ValueMarker(0.0d);
        org.jfree.chart.util.Layer layer9 = org.jfree.chart.util.Layer.BACKGROUND;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer12 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection13 = categoryPlot10.getDomainMarkers((int) 'a', layer12);
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        categoryPlot10.setDataset(4, categoryDataset15);
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot();
        int int18 = categoryPlot17.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation19 = categoryPlot17.getOrientation();
        categoryPlot10.setOrientation(plotOrientation19);
        boolean boolean21 = categoryPlot10.isDomainPannable();
        categoryPlot10.setRangeCrosshairValue((double) 10);
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot24 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        org.jfree.chart.LegendItemCollection legendItemCollection25 = combinedRangeXYPlot24.getLegendItems();
        categoryPlot10.setFixedLegendItems(legendItemCollection25);
        boolean boolean27 = layer9.equals((java.lang.Object) legendItemCollection25);
        // The following exception was thrown during execution in test generation
        try {
            combinedRangeXYPlot0.addDomainMarker(7, (org.jfree.chart.plot.Marker) valueMarker8, layer9);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.plot.CombinedRangeXYPlot@694e31dd is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(layer9);
        org.junit.Assert.assertNotNull(layer12);
        org.junit.Assert.assertNull(collection13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(plotOrientation19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(legendItemCollection25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test241");
        org.jfree.chart.block.BorderArrangement borderArrangement0 = new org.jfree.chart.block.BorderArrangement();
        java.util.TimeZone timeZone1 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection2 = new org.jfree.data.time.TimeSeriesCollection(timeZone1);
        org.jfree.chart.title.LegendItemBlockContainer legendItemBlockContainer4 = new org.jfree.chart.title.LegendItemBlockContainer((org.jfree.chart.block.Arrangement) borderArrangement0, (org.jfree.data.general.Dataset) timeSeriesCollection2, (java.lang.Comparable) (byte) 10);
        java.lang.Comparable comparable5 = null;
        int int6 = timeSeriesCollection2.indexOf(comparable5);
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot8 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis7);
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.entity.EntityCollection entityCollection10 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo11 = new org.jfree.chart.ChartRenderingInfo(entityCollection10);
        java.awt.Paint paint12 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean13 = chartRenderingInfo11.equals((java.lang.Object) paint12);
        java.awt.geom.Rectangle2D rectangle2D14 = chartRenderingInfo11.getChartArea();
        java.util.List list15 = null;
        combinedDomainXYPlot8.drawDomainGridlines(graphics2D9, rectangle2D14, list15);
        org.jfree.chart.axis.NumberAxis numberAxis18 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity21 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D14, (org.jfree.chart.axis.Axis) numberAxis18, "", "DatasetRenderingOrder.FORWARD");
        numberAxis18.centerRange(10.0d);
        org.jfree.chart.axis.NumberAxis numberAxis25 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis25.pan((double) 1);
        numberAxis25.setTickLabelsVisible(false);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer31 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean33 = xYAreaRenderer31.isSeriesItemLabelsVisible((int) (byte) 1);
        org.jfree.chart.plot.XYPlot xYPlot34 = new org.jfree.chart.plot.XYPlot((org.jfree.data.xy.XYDataset) timeSeriesCollection2, (org.jfree.chart.axis.ValueAxis) numberAxis18, (org.jfree.chart.axis.ValueAxis) numberAxis25, (org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer31);
        java.lang.String str35 = numberAxis25.getLabelToolTip();
        double double36 = numberAxis25.getUpperMargin();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(rectangle2D14);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.05d + "'", double36 == 0.05d);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test242");
        org.jfree.chart.resources.JFreeChartResources jFreeChartResources0 = new org.jfree.chart.resources.JFreeChartResources();
        java.lang.Object[][] objArray1 = jFreeChartResources0.getContents();
        boolean boolean3 = jFreeChartResources0.containsKey("PlotOrientation.VERTICAL");
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test243");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.axis.ValueAxis valueAxis26 = combinedDomainXYPlot1.getRangeAxis(255);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNull(valueAxis26);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test244");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        org.jfree.chart.LegendItemCollection legendItemCollection1 = combinedRangeXYPlot0.getLegendItems();
        combinedRangeXYPlot0.setRangePannable(false);
        org.jfree.chart.renderer.xy.XYStepRenderer xYStepRenderer4 = new org.jfree.chart.renderer.xy.XYStepRenderer();
        java.lang.Boolean boolean6 = xYStepRenderer4.getSeriesLinesVisible(0);
        xYStepRenderer4.setUseOutlinePaint(true);
        combinedRangeXYPlot0.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYStepRenderer4);
        combinedRangeXYPlot0.setOutlineVisible(true);
        org.junit.Assert.assertNotNull(legendItemCollection1);
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test245");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        combinedDomainXYPlot1.setDomainAxis(valueAxis18);
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot21 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis20);
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.entity.EntityCollection entityCollection23 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo24 = new org.jfree.chart.ChartRenderingInfo(entityCollection23);
        java.awt.Paint paint25 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean26 = chartRenderingInfo24.equals((java.lang.Object) paint25);
        java.awt.geom.Rectangle2D rectangle2D27 = chartRenderingInfo24.getChartArea();
        java.util.List list28 = null;
        combinedDomainXYPlot21.drawDomainGridlines(graphics2D22, rectangle2D27, list28);
        org.jfree.chart.axis.NumberAxis numberAxis31 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity34 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D27, (org.jfree.chart.axis.Axis) numberAxis31, "", "DatasetRenderingOrder.FORWARD");
        combinedDomainXYPlot1.setRangeAxis((org.jfree.chart.axis.ValueAxis) numberAxis31);
        double double36 = numberAxis31.getLowerMargin();
        numberAxis31.setUpperBound((double) (-16777116));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangle2D27);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.05d + "'", double36 == 0.05d);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test246");
        org.jfree.chart.axis.NumberAxis numberAxis1 = new org.jfree.chart.axis.NumberAxis("RectangleAnchor.TOP_LEFT");
        numberAxis1.setAutoTickUnitSelection(true, true);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test247");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        org.jfree.chart.LegendItemCollection legendItemCollection1 = combinedRangeXYPlot0.getLegendItems();
        combinedRangeXYPlot0.setRangeGridlinesVisible(true);
        org.jfree.data.xy.XYDataset xYDataset5 = combinedRangeXYPlot0.getDataset(255);
        org.jfree.chart.util.RectangleInsets rectangleInsets6 = combinedRangeXYPlot0.getAxisOffset();
        java.awt.Stroke stroke7 = combinedRangeXYPlot0.getRangeZeroBaselineStroke();
        org.junit.Assert.assertNotNull(legendItemCollection1);
        org.junit.Assert.assertNull(xYDataset5);
        org.junit.Assert.assertNotNull(rectangleInsets6);
        org.junit.Assert.assertNotNull(stroke7);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test248");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        org.jfree.chart.LegendItemCollection legendItemCollection1 = combinedRangeXYPlot0.getLegendItems();
        combinedRangeXYPlot0.setRangeGridlinesVisible(true);
        org.jfree.chart.plot.PolarPlot polarPlot5 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Font font6 = polarPlot5.getAngleLabelFont();
        org.jfree.chart.axis.ValueAxis valueAxis7 = polarPlot5.getAxis();
        org.jfree.chart.entity.EntityCollection entityCollection9 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo10 = new org.jfree.chart.ChartRenderingInfo(entityCollection9);
        java.awt.Paint paint11 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean12 = chartRenderingInfo10.equals((java.lang.Object) paint11);
        java.awt.geom.Rectangle2D rectangle2D13 = chartRenderingInfo10.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo14 = chartRenderingInfo10.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo15 = plotRenderingInfo14.getOwner();
        java.awt.geom.Point2D point2D16 = null;
        polarPlot5.zoomDomainAxes((double) (byte) 1, plotRenderingInfo14, point2D16, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot19.clearAnnotations();
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent21 = null;
        categoryPlot19.rendererChanged(rendererChangeEvent21);
        org.jfree.chart.entity.EntityCollection entityCollection24 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo25 = new org.jfree.chart.ChartRenderingInfo(entityCollection24);
        java.awt.Paint paint26 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean27 = chartRenderingInfo25.equals((java.lang.Object) paint26);
        java.awt.geom.Rectangle2D rectangle2D28 = chartRenderingInfo25.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo29 = chartRenderingInfo25.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo30 = plotRenderingInfo29.getOwner();
        java.awt.geom.Point2D point2D31 = null;
        categoryPlot19.zoomRangeAxes(1.0E-8d, plotRenderingInfo29, point2D31, true);
        plotRenderingInfo14.addSubplotInfo(plotRenderingInfo29);
        java.awt.geom.Point2D point2D35 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedRangeXYPlot0.zoomDomainAxes(15.0d, plotRenderingInfo29, point2D35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'source' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(legendItemCollection1);
        org.junit.Assert.assertNotNull(font6);
        org.junit.Assert.assertNull(valueAxis7);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(rectangle2D13);
        org.junit.Assert.assertNotNull(plotRenderingInfo14);
        org.junit.Assert.assertNotNull(chartRenderingInfo15);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(rectangle2D28);
        org.junit.Assert.assertNotNull(plotRenderingInfo29);
        org.junit.Assert.assertNotNull(chartRenderingInfo30);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test249");
        org.jfree.data.xy.OHLCDataset oHLCDataset3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart5 = org.jfree.chart.ChartFactory.createCandlestickChart("JFreeChart", "ChartChangeEventType.DATASET_UPDATED", "Combined_Domain_XYPlot", oHLCDataset3, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@1f77580a is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test250");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Paint paint46 = legendGraphic45.getOutlinePaint();
        legendGraphic45.setShapeOutlineVisible(false);
        boolean boolean49 = legendGraphic45.isShapeOutlineVisible();
        java.awt.Stroke stroke50 = legendGraphic45.getLineStroke();
        java.awt.geom.Rectangle2D rectangle2D51 = legendGraphic45.getBounds();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertNotNull(rectangle2D51);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test251");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = new org.jfree.chart.plot.CategoryPlot();
        int int8 = categoryPlot7.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation9 = categoryPlot7.getOrientation();
        categoryPlot0.setOrientation(plotOrientation9);
        boolean boolean11 = categoryPlot0.isDomainPannable();
        categoryPlot0.setRangeCrosshairValue((double) 10);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.entity.EntityCollection entityCollection15 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo16 = new org.jfree.chart.ChartRenderingInfo(entityCollection15);
        java.awt.Paint paint17 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean18 = chartRenderingInfo16.equals((java.lang.Object) paint17);
        java.awt.geom.Rectangle2D rectangle2D19 = chartRenderingInfo16.getChartArea();
        org.jfree.chart.title.TextTitle textTitle21 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity22 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D19, (org.jfree.chart.title.Title) textTitle21);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor23 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D24 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D19, rectangleAnchor23);
        org.jfree.data.general.PieDataset pieDataset25 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity31 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D19, pieDataset25, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.AxisSpace axisSpace32 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis34 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot35 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis34);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer37 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer37.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator40 = null;
        xYAreaRenderer37.setLegendItemURLGenerator(xYSeriesLabelGenerator40);
        xYAreaRenderer37.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean48 = xYAreaRenderer37.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot35.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer37);
        org.jfree.chart.axis.ValueAxis valueAxis50 = null;
        int int51 = combinedDomainXYPlot35.getRangeAxisIndex(valueAxis50);
        org.jfree.chart.axis.ValueAxis valueAxis52 = null;
        combinedDomainXYPlot35.setDomainAxis(valueAxis52);
        org.jfree.chart.util.RectangleEdge rectangleEdge55 = combinedDomainXYPlot35.getDomainAxisEdge(0);
        axisSpace32.add((double) 10L, rectangleEdge55);
        org.jfree.chart.axis.AxisSpace axisSpace57 = categoryPlot0.calculateDomainAxisSpace(graphics2D14, rectangle2D19, axisSpace32);
        categoryPlot0.clearAnnotations();
        org.jfree.chart.plot.PiePlot piePlot59 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup60 = piePlot59.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener61 = null;
        piePlot59.addChangeListener(plotChangeListener61);
        java.awt.Paint paint63 = org.jfree.chart.plot.WaferMapPlot.DEFAULT_CROSSHAIR_PAINT;
        piePlot59.setLabelLinkPaint(paint63);
        categoryPlot0.setDomainCrosshairPaint(paint63);
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(plotOrientation9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(rectangle2D19);
        org.junit.Assert.assertNotNull(rectangleAnchor23);
        org.junit.Assert.assertNotNull(point2D24);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge55);
        org.junit.Assert.assertNotNull(axisSpace57);
        org.junit.Assert.assertNull(datasetGroup60);
        org.junit.Assert.assertNotNull(paint63);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test252");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Paint paint46 = legendGraphic45.getOutlinePaint();
        java.awt.Paint paint47 = legendGraphic45.getLinePaint();
        java.awt.Shape shape48 = legendGraphic45.getShape();
        java.awt.Shape shape52 = org.jfree.chart.util.ShapeUtilities.rotateShape(shape48, 0.025d, (float) (-2208960000000L), (float) (-42827342400000L));
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertNull(paint47);
        org.junit.Assert.assertNotNull(shape48);
        org.junit.Assert.assertNotNull(shape52);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test253");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Paint paint1 = combinedRangeXYPlot0.getDomainMinorGridlinePaint();
        org.jfree.chart.axis.ValueAxis valueAxis2 = combinedRangeXYPlot0.getRangeAxis();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(valueAxis2);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test254");
        org.jfree.chart.axis.LogAxis logAxis1 = new org.jfree.chart.axis.LogAxis("item");
        java.awt.geom.Rectangle2D rectangle2D3 = null;
        org.jfree.chart.axis.ValueAxis valueAxis4 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot5 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis4);
        java.awt.Color color6 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot5.setRangeMinorGridlinePaint((java.awt.Paint) color6);
        org.jfree.chart.util.RectangleEdge rectangleEdge8 = combinedDomainXYPlot5.getDomainAxisEdge();
        // The following exception was thrown during execution in test generation
        try {
            double double9 = logAxis1.java2DToValue(Double.POSITIVE_INFINITY, rectangle2D3, rectangleEdge8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(color6);
        org.junit.Assert.assertNotNull(rectangleEdge8);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test255");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        org.jfree.chart.title.LegendTitle legendTitle5 = new org.jfree.chart.title.LegendTitle((org.jfree.chart.LegendItemSource) xYAreaRenderer1);
        org.jfree.chart.axis.ValueAxis valueAxis6 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot7 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis6);
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.entity.EntityCollection entityCollection9 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo10 = new org.jfree.chart.ChartRenderingInfo(entityCollection9);
        java.awt.Paint paint11 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean12 = chartRenderingInfo10.equals((java.lang.Object) paint11);
        java.awt.geom.Rectangle2D rectangle2D13 = chartRenderingInfo10.getChartArea();
        java.util.List list14 = null;
        combinedDomainXYPlot7.drawDomainGridlines(graphics2D8, rectangle2D13, list14);
        org.jfree.chart.axis.NumberAxis numberAxis17 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity20 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D13, (org.jfree.chart.axis.Axis) numberAxis17, "", "DatasetRenderingOrder.FORWARD");
        numberAxis17.setMinorTickMarkInsideLength((float) 60000L);
        java.text.NumberFormat numberFormat23 = numberAxis17.getNumberFormatOverride();
        org.jfree.chart.util.RectangleInsets rectangleInsets24 = numberAxis17.getTickLabelInsets();
        legendTitle5.setItemLabelPadding(rectangleInsets24);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(rectangle2D13);
        org.junit.Assert.assertNull(numberFormat23);
        org.junit.Assert.assertNotNull(rectangleInsets24);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test256");
        org.jfree.chart.plot.PiePlot piePlot0 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup1 = piePlot0.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener2 = null;
        piePlot0.addChangeListener(plotChangeListener2);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent4 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot0);
        boolean boolean5 = piePlot0.getAutoPopulateSectionOutlineStroke();
        piePlot0.setCircular(false, false);
        org.jfree.chart.plot.Plot plot9 = piePlot0.getParent();
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        org.jfree.chart.plot.PiePlot piePlot11 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup12 = piePlot11.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener13 = null;
        piePlot11.addChangeListener(plotChangeListener13);
        java.awt.Color color17 = java.awt.Color.getColor("hi!", (int) (short) 100);
        piePlot11.setLabelOutlinePaint((java.awt.Paint) color17);
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer21 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection22 = categoryPlot19.getDomainMarkers((int) 'a', layer21);
        org.jfree.data.category.CategoryDataset categoryDataset24 = null;
        categoryPlot19.setDataset(4, categoryDataset24);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = new org.jfree.chart.plot.CategoryPlot();
        int int27 = categoryPlot26.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation28 = categoryPlot26.getOrientation();
        categoryPlot19.setOrientation(plotOrientation28);
        boolean boolean30 = categoryPlot19.isDomainPannable();
        categoryPlot19.setRangeCrosshairValue((double) 10);
        java.awt.Graphics2D graphics2D33 = null;
        org.jfree.chart.entity.EntityCollection entityCollection34 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo35 = new org.jfree.chart.ChartRenderingInfo(entityCollection34);
        java.awt.Paint paint36 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean37 = chartRenderingInfo35.equals((java.lang.Object) paint36);
        java.awt.geom.Rectangle2D rectangle2D38 = chartRenderingInfo35.getChartArea();
        org.jfree.chart.title.TextTitle textTitle40 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity41 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D38, (org.jfree.chart.title.Title) textTitle40);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor42 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D43 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D38, rectangleAnchor42);
        org.jfree.data.general.PieDataset pieDataset44 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity50 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D38, pieDataset44, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.AxisSpace axisSpace51 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis53 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot54 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis53);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer56 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer56.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator59 = null;
        xYAreaRenderer56.setLegendItemURLGenerator(xYSeriesLabelGenerator59);
        xYAreaRenderer56.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean67 = xYAreaRenderer56.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot54.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer56);
        org.jfree.chart.axis.ValueAxis valueAxis69 = null;
        int int70 = combinedDomainXYPlot54.getRangeAxisIndex(valueAxis69);
        org.jfree.chart.axis.ValueAxis valueAxis71 = null;
        combinedDomainXYPlot54.setDomainAxis(valueAxis71);
        org.jfree.chart.util.RectangleEdge rectangleEdge74 = combinedDomainXYPlot54.getDomainAxisEdge(0);
        axisSpace51.add((double) 10L, rectangleEdge74);
        org.jfree.chart.axis.AxisSpace axisSpace76 = categoryPlot19.calculateDomainAxisSpace(graphics2D33, rectangle2D38, axisSpace51);
        piePlot11.setLegendItemShape((java.awt.Shape) rectangle2D38);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.geom.Rectangle2D rectangle2D81 = piePlot0.getArcBounds(rectangle2D10, rectangle2D38, (double) 100, 0.2d, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(datasetGroup1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(plot9);
        org.junit.Assert.assertNull(datasetGroup12);
        org.junit.Assert.assertNotNull(color17);
        org.junit.Assert.assertNotNull(layer21);
        org.junit.Assert.assertNull(collection22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(plotOrientation28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(rectangle2D38);
        org.junit.Assert.assertNotNull(rectangleAnchor42);
        org.junit.Assert.assertNotNull(point2D43);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge74);
        org.junit.Assert.assertNotNull(axisSpace76);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test257");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        java.awt.Stroke stroke18 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        combinedDomainXYPlot1.setRangeCrosshairStroke(stroke18);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer21 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        org.jfree.chart.labels.StandardXYToolTipGenerator standardXYToolTipGenerator23 = org.jfree.chart.labels.StandardXYToolTipGenerator.getTimeSeriesInstance();
        java.text.NumberFormat numberFormat24 = standardXYToolTipGenerator23.getXFormat();
        java.lang.Object obj25 = standardXYToolTipGenerator23.clone();
        xYAreaRenderer21.setSeriesToolTipGenerator(1, (org.jfree.chart.labels.XYToolTipGenerator) standardXYToolTipGenerator23, false);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer21);
        boolean boolean29 = xYAreaRenderer21.getAutoPopulateSeriesOutlineStroke();
        boolean boolean30 = xYAreaRenderer21.getBaseItemLabelsVisible();
        xYAreaRenderer21.setSeriesVisibleInLegend(6, (java.lang.Boolean) false, true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(standardXYToolTipGenerator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test258");
        org.jfree.chart.plot.PiePlot piePlot0 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup1 = piePlot0.getDatasetGroup();
        int int2 = piePlot0.getBackgroundImageAlignment();
        boolean boolean3 = piePlot0.getAutoPopulateSectionOutlineStroke();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer6 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer6.clearSeriesStrokes(false);
        boolean boolean9 = xYAreaRenderer6.getPlotLines();
        boolean boolean10 = xYAreaRenderer6.getBaseItemLabelsVisible();
        java.awt.Paint paint12 = org.jfree.chart.plot.WaferMapPlot.DEFAULT_CROSSHAIR_PAINT;
        xYAreaRenderer6.setSeriesFillPaint(7, paint12);
        piePlot0.setSectionPaint((java.lang.Comparable) (byte) 10, paint12);
        piePlot0.setMinimumArcAngleToDraw((double) 3600000L);
        piePlot0.setLabelGap((double) 4);
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot23 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis22);
        java.awt.Graphics2D graphics2D24 = null;
        org.jfree.chart.entity.EntityCollection entityCollection25 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo26 = new org.jfree.chart.ChartRenderingInfo(entityCollection25);
        java.awt.Paint paint27 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean28 = chartRenderingInfo26.equals((java.lang.Object) paint27);
        java.awt.geom.Rectangle2D rectangle2D29 = chartRenderingInfo26.getChartArea();
        java.util.List list30 = null;
        combinedDomainXYPlot23.drawDomainGridlines(graphics2D24, rectangle2D29, list30);
        combinedDomainXYPlot23.clearSelection();
        org.jfree.chart.util.RectangleEdge rectangleEdge34 = combinedDomainXYPlot23.getRangeAxisEdge(15);
        double double35 = piePlot0.getRectX((double) (-256), (double) 2147483647, (double) 2958465, rectangleEdge34);
        org.junit.Assert.assertNull(datasetGroup1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 15 + "'", int2 == 15);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(rectangle2D29);
        org.junit.Assert.assertNotNull(rectangleEdge34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2958209.0d + "'", double35 == 2958209.0d);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test259");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Paint paint46 = legendGraphic45.getOutlinePaint();
        legendGraphic45.setShapeOutlineVisible(false);
        boolean boolean49 = legendGraphic45.isShapeOutlineVisible();
        boolean boolean50 = legendGraphic45.isShapeOutlineVisible();
        legendGraphic45.setShapeFilled(true);
        boolean boolean53 = legendGraphic45.isShapeVisible();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test260");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Paint paint46 = legendGraphic45.getOutlinePaint();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer48 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer48.clearSeriesStrokes(false);
        boolean boolean51 = xYAreaRenderer48.getPlotLines();
        boolean boolean52 = xYAreaRenderer48.getBaseItemLabelsVisible();
        java.awt.Paint paint53 = xYAreaRenderer48.getBasePaint();
        java.awt.Font font54 = xYAreaRenderer48.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator55 = null;
        xYAreaRenderer48.setBaseItemLabelGenerator(xYItemLabelGenerator55);
        xYAreaRenderer48.setUseFillPaint(true);
        java.awt.Stroke stroke62 = xYAreaRenderer48.getItemStroke((int) (byte) 1, (int) ' ', false);
        legendGraphic45.setLineStroke(stroke62);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(paint53);
        org.junit.Assert.assertNotNull(font54);
        org.junit.Assert.assertNotNull(stroke62);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test261");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        org.jfree.chart.LegendItemCollection legendItemCollection1 = combinedRangeXYPlot0.getLegendItems();
        combinedRangeXYPlot0.setRangePannable(false);
        org.jfree.chart.renderer.xy.XYStepRenderer xYStepRenderer4 = new org.jfree.chart.renderer.xy.XYStepRenderer();
        java.lang.Boolean boolean6 = xYStepRenderer4.getSeriesLinesVisible(0);
        xYStepRenderer4.setUseOutlinePaint(true);
        combinedRangeXYPlot0.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYStepRenderer4);
        xYStepRenderer4.setSeriesLinesVisible(0, true);
        xYStepRenderer4.setSeriesLinesVisible(2958465, true);
        org.junit.Assert.assertNotNull(legendItemCollection1);
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test262");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer27 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer27.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator30 = null;
        xYAreaRenderer27.setLegendItemURLGenerator(xYSeriesLabelGenerator30);
        xYAreaRenderer27.setSeriesVisibleInLegend((int) (byte) 10, (java.lang.Boolean) false);
        xYAreaRenderer27.setBaseItemLabelsVisible(true);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator38 = null;
        xYAreaRenderer27.setSeriesURLGenerator((int) (short) 100, xYURLGenerator38, false);
        java.awt.Paint paint44 = xYAreaRenderer27.getItemFillPaint((int) (short) 10, (int) 'a', true);
        boolean boolean45 = seriesRenderingOrder25.equals((java.lang.Object) xYAreaRenderer27);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer46 = xYAreaRenderer27.getGradientTransformer();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(gradientPaintTransformer46);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test263");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        int int1 = categoryPlot0.getDatasetCount();
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot3 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis2);
        java.awt.Color color4 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot3.setRangeMinorGridlinePaint((java.awt.Paint) color4);
        boolean boolean6 = combinedDomainXYPlot3.isDomainPannable();
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent7 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) combinedDomainXYPlot3);
        categoryPlot0.notifyListeners(plotChangeEvent7);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType9 = org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED;
        plotChangeEvent7.setType(chartChangeEventType9);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(color4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(chartChangeEventType9);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test264");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke1 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot0.setRangeCrosshairStroke(stroke1);
        org.jfree.data.xy.XYSeries xYSeries6 = new org.jfree.data.xy.XYSeries((java.lang.Comparable) 0.2d, true, false);
        xYSeries6.setDescription("DateTickMarkPosition.MIDDLE");
        org.jfree.data.xy.XYDataItem xYDataItem11 = xYSeries6.addOrUpdate((java.lang.Number) (-1L), (java.lang.Number) (-1));
        boolean boolean12 = combinedRangeXYPlot0.equals((java.lang.Object) xYDataItem11);
        combinedRangeXYPlot0.configureRangeAxes();
        org.junit.Assert.assertNotNull(stroke1);
        org.junit.Assert.assertNull(xYDataItem11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test265");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Paint paint46 = legendGraphic45.getFillPaint();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNotNull(paint46);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test266");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = new org.jfree.chart.plot.CategoryPlot();
        int int8 = categoryPlot7.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation9 = categoryPlot7.getOrientation();
        categoryPlot0.setOrientation(plotOrientation9);
        boolean boolean11 = categoryPlot0.isDomainPannable();
        categoryPlot0.setRangeCrosshairValue((double) 10);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.entity.EntityCollection entityCollection15 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo16 = new org.jfree.chart.ChartRenderingInfo(entityCollection15);
        java.awt.Paint paint17 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean18 = chartRenderingInfo16.equals((java.lang.Object) paint17);
        java.awt.geom.Rectangle2D rectangle2D19 = chartRenderingInfo16.getChartArea();
        org.jfree.chart.title.TextTitle textTitle21 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity22 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D19, (org.jfree.chart.title.Title) textTitle21);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor23 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D24 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D19, rectangleAnchor23);
        org.jfree.data.general.PieDataset pieDataset25 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity31 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D19, pieDataset25, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.AxisSpace axisSpace32 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis34 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot35 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis34);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer37 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer37.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator40 = null;
        xYAreaRenderer37.setLegendItemURLGenerator(xYSeriesLabelGenerator40);
        xYAreaRenderer37.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean48 = xYAreaRenderer37.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot35.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer37);
        org.jfree.chart.axis.ValueAxis valueAxis50 = null;
        int int51 = combinedDomainXYPlot35.getRangeAxisIndex(valueAxis50);
        org.jfree.chart.axis.ValueAxis valueAxis52 = null;
        combinedDomainXYPlot35.setDomainAxis(valueAxis52);
        org.jfree.chart.util.RectangleEdge rectangleEdge55 = combinedDomainXYPlot35.getDomainAxisEdge(0);
        axisSpace32.add((double) 10L, rectangleEdge55);
        org.jfree.chart.axis.AxisSpace axisSpace57 = categoryPlot0.calculateDomainAxisSpace(graphics2D14, rectangle2D19, axisSpace32);
        java.awt.Paint paint58 = categoryPlot0.getRangeCrosshairPaint();
        java.util.List list59 = categoryPlot0.getCategories();
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(plotOrientation9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(rectangle2D19);
        org.junit.Assert.assertNotNull(rectangleAnchor23);
        org.junit.Assert.assertNotNull(point2D24);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge55);
        org.junit.Assert.assertNotNull(axisSpace57);
        org.junit.Assert.assertNotNull(paint58);
        org.junit.Assert.assertNull(list59);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test267");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        numberAxis11.centerRange(10.0d);
        org.jfree.chart.axis.TickUnits tickUnits17 = new org.jfree.chart.axis.TickUnits();
        numberAxis11.setStandardTickUnits((org.jfree.chart.axis.TickUnitSource) tickUnits17);
        org.jfree.chart.plot.PiePlot piePlot19 = new org.jfree.chart.plot.PiePlot();
        java.awt.Color color22 = java.awt.Color.getColor("hi!", (int) (short) 100);
        java.awt.Color color25 = java.awt.Color.getColor("hi!", (int) (short) 100);
        java.awt.Paint[] paintArray26 = new java.awt.Paint[] { color22, color25 };
        java.awt.Color color29 = java.awt.Color.getColor("hi!", (int) (short) 100);
        java.awt.Color color32 = java.awt.Color.getColor("hi!", (int) (short) 100);
        java.awt.color.ColorSpace colorSpace33 = color32.getColorSpace();
        java.awt.Color color34 = org.jfree.chart.ChartColor.VERY_DARK_MAGENTA;
        java.awt.Color color35 = java.awt.Color.RED;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        java.awt.Color color37 = java.awt.Color.RED;
        java.awt.Paint[] paintArray38 = new java.awt.Paint[] { color29, color32, color34, color35, paint36, color37 };
        java.awt.Paint paint39 = org.jfree.chart.plot.WaferMapPlot.DEFAULT_CROSSHAIR_PAINT;
        java.awt.Color color40 = org.jfree.chart.ChartColor.VERY_DARK_MAGENTA;
        java.awt.Color color41 = java.awt.Color.RED;
        java.awt.Paint[] paintArray42 = new java.awt.Paint[] { paint39, color40, color41 };
        java.awt.Stroke[] strokeArray43 = new java.awt.Stroke[] {};
        java.awt.Stroke stroke44 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        java.awt.Stroke stroke45 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        java.awt.Stroke stroke46 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        java.awt.Stroke stroke47 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        java.awt.Stroke stroke48 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        java.awt.Stroke stroke49 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        java.awt.Stroke[] strokeArray50 = new java.awt.Stroke[] { stroke44, stroke45, stroke46, stroke47, stroke48, stroke49 };
        java.awt.Shape[] shapeArray51 = new java.awt.Shape[] {};
        org.jfree.chart.plot.DefaultDrawingSupplier defaultDrawingSupplier52 = new org.jfree.chart.plot.DefaultDrawingSupplier(paintArray26, paintArray38, paintArray42, strokeArray43, strokeArray50, shapeArray51);
        java.lang.Object obj53 = defaultDrawingSupplier52.clone();
        piePlot19.setDrawingSupplier((org.jfree.chart.plot.DrawingSupplier) defaultDrawingSupplier52, false);
        java.awt.Paint paint56 = defaultDrawingSupplier52.getNextPaint();
        boolean boolean57 = tickUnits17.equals((java.lang.Object) paint56);
        org.jfree.data.DefaultKeyedValues defaultKeyedValues58 = new org.jfree.data.DefaultKeyedValues();
        org.jfree.data.time.Year year60 = new org.jfree.data.time.Year((int) (short) 0);
        long long61 = year60.getFirstMillisecond();
        org.jfree.data.time.RegularTimePeriod regularTimePeriod62 = year60.previous();
        defaultKeyedValues58.addValue((java.lang.Comparable) regularTimePeriod62, 1.0d);
        boolean boolean65 = tickUnits17.equals((java.lang.Object) regularTimePeriod62);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNotNull(color22);
        org.junit.Assert.assertNotNull(color25);
        org.junit.Assert.assertNotNull(paintArray26);
        org.junit.Assert.assertNotNull(color29);
        org.junit.Assert.assertNotNull(color32);
        org.junit.Assert.assertNotNull(colorSpace33);
        org.junit.Assert.assertNotNull(color34);
        org.junit.Assert.assertNotNull(color35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(color37);
        org.junit.Assert.assertNotNull(paintArray38);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNotNull(color40);
        org.junit.Assert.assertNotNull(color41);
        org.junit.Assert.assertNotNull(paintArray42);
        org.junit.Assert.assertNotNull(strokeArray43);
        org.junit.Assert.assertNotNull(stroke44);
        org.junit.Assert.assertNotNull(stroke45);
        org.junit.Assert.assertNotNull(stroke46);
        org.junit.Assert.assertNotNull(stroke47);
        org.junit.Assert.assertNotNull(stroke48);
        org.junit.Assert.assertNotNull(stroke49);
        org.junit.Assert.assertNotNull(strokeArray50);
        org.junit.Assert.assertNotNull(shapeArray51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(paint56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-62167363200000L) + "'", long61 == (-62167363200000L));
        org.junit.Assert.assertNotNull(regularTimePeriod62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test268");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Color color2 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot1.setRangeMinorGridlinePaint((java.awt.Paint) color2);
        combinedDomainXYPlot1.clearSelection();
        combinedDomainXYPlot1.setRangeCrosshairValue((double) 60000L);
        org.junit.Assert.assertNotNull(color2);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test269");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Paint paint46 = legendGraphic45.getOutlinePaint();
        java.awt.Paint paint47 = legendGraphic45.getLinePaint();
        java.awt.Stroke stroke48 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        legendGraphic45.setLineStroke(stroke48);
        boolean boolean50 = legendGraphic45.isShapeOutlineVisible();
        java.awt.Graphics2D graphics2D51 = null;
        org.jfree.chart.entity.EntityCollection entityCollection52 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo53 = new org.jfree.chart.ChartRenderingInfo(entityCollection52);
        java.awt.Paint paint54 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean55 = chartRenderingInfo53.equals((java.lang.Object) paint54);
        java.awt.geom.Rectangle2D rectangle2D56 = chartRenderingInfo53.getChartArea();
        org.jfree.data.time.Year year59 = new org.jfree.data.time.Year((int) (short) 0);
        long long60 = year59.getFirstMillisecond();
        org.jfree.data.time.Year year62 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis63 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year59, (org.jfree.data.time.RegularTimePeriod) year62);
        int int64 = year62.getYear();
        org.jfree.data.xy.XYSeries xYSeries65 = new org.jfree.data.xy.XYSeries((java.lang.Comparable) year62);
        org.jfree.data.xy.XYSeries xYSeries68 = xYSeries65.createCopy((int) (short) 0, (int) ' ');
        java.lang.Object obj69 = xYSeries65.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = legendGraphic45.draw(graphics2D51, rectangle2D56, obj69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertNull(paint47);
        org.junit.Assert.assertNotNull(stroke48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(paint54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(rectangle2D56);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-62167363200000L) + "'", long60 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(xYSeries68);
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test270");
        org.jfree.chart.plot.PolarPlot polarPlot0 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Paint paint1 = polarPlot0.getAngleLabelPaint();
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection5 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo6 = new org.jfree.chart.ChartRenderingInfo(entityCollection5);
        java.awt.Paint paint7 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean8 = chartRenderingInfo6.equals((java.lang.Object) paint7);
        java.awt.geom.Rectangle2D rectangle2D9 = chartRenderingInfo6.getChartArea();
        org.jfree.chart.title.TextTitle textTitle11 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity12 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D9, (org.jfree.chart.title.Title) textTitle11);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor13 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D14 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D9, rectangleAnchor13);
        org.jfree.data.general.PieDataset pieDataset15 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity21 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D9, pieDataset15, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot23 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis22);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer25 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer25.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator28 = null;
        xYAreaRenderer25.setLegendItemURLGenerator(xYSeriesLabelGenerator28);
        xYAreaRenderer25.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean36 = xYAreaRenderer25.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot23.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer25);
        combinedDomainXYPlot23.clearDomainMarkers();
        java.awt.Font font40 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint41 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer44 = null;
        org.jfree.chart.text.TextBlock textBlock45 = org.jfree.chart.text.TextUtilities.createTextBlock("", font40, paint41, (float) (-1L), (int) (short) -1, textMeasurer44);
        combinedDomainXYPlot23.setDomainCrosshairPaint(paint41);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder47 = combinedDomainXYPlot23.getSeriesRenderingOrder();
        java.awt.Paint paint48 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot23.setRangeTickBandPaint(paint48);
        org.jfree.chart.title.LegendGraphic legendGraphic50 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D9, paint48);
        java.awt.geom.Point2D point2D51 = org.jfree.chart.util.ShapeUtilities.getPointInRectangle((double) 10L, (double) 1577894400035L, rectangle2D9);
        org.jfree.chart.plot.CategoryPlot categoryPlot52 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot52.clearAnnotations();
        java.util.List list54 = categoryPlot52.getAnnotations();
        org.jfree.chart.plot.PolarPlot polarPlot57 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Font font58 = polarPlot57.getAngleLabelFont();
        org.jfree.chart.axis.ValueAxis valueAxis59 = polarPlot57.getAxis();
        org.jfree.chart.entity.EntityCollection entityCollection61 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo62 = new org.jfree.chart.ChartRenderingInfo(entityCollection61);
        java.awt.Paint paint63 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean64 = chartRenderingInfo62.equals((java.lang.Object) paint63);
        java.awt.geom.Rectangle2D rectangle2D65 = chartRenderingInfo62.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo66 = chartRenderingInfo62.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo67 = plotRenderingInfo66.getOwner();
        java.awt.geom.Point2D point2D68 = null;
        polarPlot57.zoomDomainAxes((double) (byte) 1, plotRenderingInfo66, point2D68, false);
        categoryPlot52.handleClick(2958465, (int) (byte) 10, plotRenderingInfo66);
        // The following exception was thrown during execution in test generation
        try {
            polarPlot0.render(graphics2D2, rectangle2D9, plotRenderingInfo66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(rectangle2D9);
        org.junit.Assert.assertNotNull(rectangleAnchor13);
        org.junit.Assert.assertNotNull(point2D14);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(font40);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNotNull(textBlock45);
        org.junit.Assert.assertNotNull(seriesRenderingOrder47);
        org.junit.Assert.assertNotNull(paint48);
        org.junit.Assert.assertNotNull(point2D51);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(font58);
        org.junit.Assert.assertNull(valueAxis59);
        org.junit.Assert.assertNotNull(paint63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(rectangle2D65);
        org.junit.Assert.assertNotNull(plotRenderingInfo66);
        org.junit.Assert.assertNotNull(chartRenderingInfo67);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test271");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.event.AxisChangeEvent axisChangeEvent2 = null;
        combinedDomainXYPlot1.axisChanged(axisChangeEvent2);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot();
        int int5 = categoryPlot4.getDatasetCount();
        categoryPlot4.setAnchorValue((double) 10.0f);
        categoryPlot4.setDomainCrosshairColumnKey((java.lang.Comparable) "TitleEntity: tooltip = LGPL", true);
        org.jfree.chart.axis.AxisSpace axisSpace11 = new org.jfree.chart.axis.AxisSpace();
        categoryPlot4.setFixedDomainAxisSpace(axisSpace11);
        org.jfree.data.general.SeriesException seriesException14 = new org.jfree.data.general.SeriesException("ClassContext");
        boolean boolean15 = axisSpace11.equals((java.lang.Object) seriesException14);
        combinedDomainXYPlot1.setFixedDomainAxisSpace(axisSpace11);
        org.jfree.data.xy.XYDataset xYDataset18 = combinedDomainXYPlot1.getDataset(2147483647);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(xYDataset18);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test272");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        combinedRangeXYPlot0.setGap((double) (-16777216));
        org.jfree.chart.util.RectangleEdge rectangleEdge4 = combinedRangeXYPlot0.getRangeAxisEdge();
        org.jfree.chart.axis.ValueAxis valueAxis5 = combinedRangeXYPlot0.getRangeAxis();
        combinedRangeXYPlot0.setDomainCrosshairValue(15.0d, true);
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(rectangleEdge4);
        org.junit.Assert.assertNotNull(valueAxis5);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test273");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        boolean boolean16 = combinedDomainXYPlot1.canSelectByPoint();
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer19 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection20 = categoryPlot17.getDomainMarkers((int) 'a', layer19);
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        categoryPlot17.setDataset(4, categoryDataset22);
        org.jfree.chart.axis.AxisSpace axisSpace24 = categoryPlot17.getFixedDomainAxisSpace();
        java.awt.Graphics2D graphics2D25 = null;
        java.awt.geom.Rectangle2D rectangle2D26 = null;
        org.jfree.chart.util.Layer layer28 = org.jfree.chart.util.Layer.BACKGROUND;
        categoryPlot17.drawRangeMarkers(graphics2D25, rectangle2D26, 0, layer28);
        java.awt.Color color32 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer34 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean36 = xYAreaRenderer34.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint37 = xYAreaRenderer34.getBaseLegendTextPaint();
        java.awt.Stroke stroke39 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer34.setSeriesOutlineStroke(0, stroke39, false);
        java.awt.Color color44 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer46 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean48 = xYAreaRenderer46.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint49 = xYAreaRenderer46.getBaseLegendTextPaint();
        java.awt.Stroke stroke51 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer46.setSeriesOutlineStroke(0, stroke51, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker55 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color32, stroke39, (java.awt.Paint) color44, stroke51, (float) (byte) 1);
        org.jfree.chart.text.TextAnchor textAnchor56 = intervalMarker55.getLabelTextAnchor();
        org.jfree.chart.util.Layer layer57 = org.jfree.chart.util.Layer.BACKGROUND;
        boolean boolean58 = categoryPlot17.removeDomainMarker((org.jfree.chart.plot.Marker) intervalMarker55, layer57);
        org.jfree.chart.plot.CategoryPlot categoryPlot59 = new org.jfree.chart.plot.CategoryPlot();
        int int60 = categoryPlot59.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge64 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str65 = rectangleEdge64.toString();
        double double66 = categoryPlot59.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge64);
        boolean boolean67 = categoryPlot59.isRangeZoomable();
        org.jfree.chart.util.Layer layer68 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection69 = categoryPlot59.getRangeMarkers(layer68);
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.addDomainMarker((org.jfree.chart.plot.Marker) intervalMarker55, layer68);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.plot.CombinedDomainXYPlot@5f4e6692 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(layer19);
        org.junit.Assert.assertNull(collection20);
        org.junit.Assert.assertNull(axisSpace24);
        org.junit.Assert.assertNotNull(layer28);
        org.junit.Assert.assertNotNull(color32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(paint37);
        org.junit.Assert.assertNotNull(stroke39);
        org.junit.Assert.assertNotNull(color44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(paint49);
        org.junit.Assert.assertNotNull(stroke51);
        org.junit.Assert.assertNotNull(textAnchor56);
        org.junit.Assert.assertNotNull(layer57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "RectangleEdge.RIGHT" + "'", str65, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 149.0d + "'", double66 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(layer68);
        org.junit.Assert.assertNull(collection69);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test274");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        org.jfree.chart.title.LegendTitle legendTitle5 = new org.jfree.chart.title.LegendTitle((org.jfree.chart.LegendItemSource) xYAreaRenderer1);
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str7 = rectangleEdge6.toString();
        legendTitle5.setLegendItemGraphicEdge(rectangleEdge6);
        org.jfree.chart.title.TextTitle textTitle10 = new org.jfree.chart.title.TextTitle("");
        boolean boolean11 = textTitle10.getExpandToFitSpace();
        textTitle10.setText("");
        java.lang.String str14 = textTitle10.getID();
        java.awt.Font font15 = textTitle10.getFont();
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.entity.EntityCollection entityCollection17 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo18 = new org.jfree.chart.ChartRenderingInfo(entityCollection17);
        java.awt.Paint paint19 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean20 = chartRenderingInfo18.equals((java.lang.Object) paint19);
        java.awt.geom.Rectangle2D rectangle2D21 = chartRenderingInfo18.getChartArea();
        textTitle10.draw(graphics2D16, rectangle2D21);
        legendTitle5.setBounds(rectangle2D21);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor24 = legendTitle5.getLegendItemGraphicAnchor();
        legendTitle5.visible = false;
        java.awt.Graphics2D graphics2D27 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot28 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer30 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection31 = categoryPlot28.getDomainMarkers((int) 'a', layer30);
        org.jfree.data.category.CategoryDataset categoryDataset33 = null;
        categoryPlot28.setDataset(4, categoryDataset33);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier35 = categoryPlot28.getDrawingSupplier();
        categoryPlot28.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace37 = null;
        categoryPlot28.setFixedDomainAxisSpace(axisSpace37);
        org.jfree.chart.axis.CategoryAxis3D categoryAxis3D40 = new org.jfree.chart.axis.CategoryAxis3D("hi!");
        categoryPlot28.setDomainAxis((org.jfree.chart.axis.CategoryAxis) categoryAxis3D40);
        categoryAxis3D40.configure();
        org.jfree.chart.axis.ValueAxis valueAxis48 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot49 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis48);
        java.awt.Graphics2D graphics2D50 = null;
        org.jfree.chart.entity.EntityCollection entityCollection51 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo52 = new org.jfree.chart.ChartRenderingInfo(entityCollection51);
        java.awt.Paint paint53 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean54 = chartRenderingInfo52.equals((java.lang.Object) paint53);
        java.awt.geom.Rectangle2D rectangle2D55 = chartRenderingInfo52.getChartArea();
        java.util.List list56 = null;
        combinedDomainXYPlot49.drawDomainGridlines(graphics2D50, rectangle2D55, list56);
        org.jfree.chart.axis.NumberAxis numberAxis59 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity62 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D55, (org.jfree.chart.axis.Axis) numberAxis59, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.plot.CategoryPlot categoryPlot63 = new org.jfree.chart.plot.CategoryPlot();
        int int64 = categoryPlot63.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge68 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str69 = rectangleEdge68.toString();
        double double70 = categoryPlot63.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge68);
        boolean boolean71 = categoryPlot63.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis73 = categoryPlot63.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge74 = categoryPlot63.getDomainAxisEdge();
        double double75 = categoryAxis3D40.getCategorySeriesMiddle(11, (int) ' ', (int) (byte) 0, (int) (short) 100, 0.0d, rectangle2D55, rectangleEdge74);
        org.jfree.chart.block.BorderArrangement borderArrangement76 = new org.jfree.chart.block.BorderArrangement();
        org.jfree.chart.block.BlockContainer blockContainer77 = new org.jfree.chart.block.BlockContainer((org.jfree.chart.block.Arrangement) borderArrangement76);
        blockContainer77.clear();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer80 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer80.clearSeriesStrokes(false);
        boolean boolean83 = xYAreaRenderer80.getPlotLines();
        boolean boolean84 = xYAreaRenderer80.getBaseItemLabelsVisible();
        java.awt.Paint paint85 = xYAreaRenderer80.getBasePaint();
        boolean boolean86 = blockContainer77.equals((java.lang.Object) paint85);
        org.jfree.chart.util.RectangleInsets rectangleInsets87 = blockContainer77.getMargin();
        java.lang.Object obj88 = blockContainer77.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = legendTitle5.draw(graphics2D27, rectangle2D55, (java.lang.Object) blockContainer77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RectangleEdge.RIGHT" + "'", str7, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(font15);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(rectangle2D21);
        org.junit.Assert.assertNotNull(rectangleAnchor24);
        org.junit.Assert.assertNotNull(layer30);
        org.junit.Assert.assertNull(collection31);
        org.junit.Assert.assertNotNull(drawingSupplier35);
        org.junit.Assert.assertNotNull(paint53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(rectangle2D55);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "RectangleEdge.RIGHT" + "'", str69, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 149.0d + "'", double70 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(categoryAxis73);
        org.junit.Assert.assertNotNull(rectangleEdge74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(paint85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(rectangleInsets87);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test275");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        java.awt.Paint paint4 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        categoryPlot0.setOutlinePaint(paint4);
        categoryPlot0.setRangeCrosshairValue((double) 15);
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot8 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        java.awt.Paint paint9 = combinedDomainXYPlot8.getRangeGridlinePaint();
        org.jfree.chart.plot.PolarPlot polarPlot10 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Font font11 = polarPlot10.getAngleLabelFont();
        org.jfree.chart.axis.ValueAxis valueAxis12 = polarPlot10.getAxis();
        org.jfree.chart.entity.EntityCollection entityCollection14 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo15 = new org.jfree.chart.ChartRenderingInfo(entityCollection14);
        java.awt.Paint paint16 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean17 = chartRenderingInfo15.equals((java.lang.Object) paint16);
        java.awt.geom.Rectangle2D rectangle2D18 = chartRenderingInfo15.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo19 = chartRenderingInfo15.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo20 = plotRenderingInfo19.getOwner();
        java.awt.geom.Point2D point2D21 = null;
        polarPlot10.zoomDomainAxes((double) (byte) 1, plotRenderingInfo19, point2D21, false);
        java.awt.Stroke stroke24 = polarPlot10.getRadiusGridlineStroke();
        combinedDomainXYPlot8.setRangeZeroBaselineStroke(stroke24);
        categoryPlot0.setRangeZeroBaselineStroke(stroke24);
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(font11);
        org.junit.Assert.assertNull(valueAxis12);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(rectangle2D18);
        org.junit.Assert.assertNotNull(plotRenderingInfo19);
        org.junit.Assert.assertNotNull(chartRenderingInfo20);
        org.junit.Assert.assertNotNull(stroke24);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test276");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        numberAxis11.setMinorTickMarkInsideLength((float) 60000L);
        java.text.NumberFormat numberFormat17 = numberAxis11.getNumberFormatOverride();
        org.jfree.chart.plot.Plot plot18 = null;
        numberAxis11.setPlot(plot18);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNull(numberFormat17);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test277");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.lang.Object obj2 = combinedDomainXYPlot1.clone();
        org.jfree.chart.renderer.xy.XYItemRenderer xYItemRenderer3 = null;
        combinedDomainXYPlot1.setRenderer(xYItemRenderer3);
        org.junit.Assert.assertNotNull(obj2);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test278");
        org.jfree.data.xy.XYSeries xYSeries3 = new org.jfree.data.xy.XYSeries((java.lang.Comparable) 0.2d, true, false);
        boolean boolean4 = xYSeries3.getAllowDuplicateXValues();
        int int6 = xYSeries3.indexOf((java.lang.Number) (short) -1);
        java.lang.String str7 = xYSeries3.getDescription();
        boolean boolean8 = xYSeries3.isEmpty();
        int int9 = xYSeries3.getItemCount();
        int int10 = xYSeries3.getItemCount();
        org.jfree.data.xy.XYSeriesCollection xYSeriesCollection11 = new org.jfree.data.xy.XYSeriesCollection(xYSeries3);
        org.jfree.data.Range range13 = xYSeriesCollection11.getDomainBounds(true);
        double double15 = xYSeriesCollection11.getDomainUpperBound(true);
        xYSeriesCollection11.setIntervalWidth(4.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(range13);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test279");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        boolean boolean46 = legendGraphic45.isLineVisible();
        java.awt.Graphics2D graphics2D47 = null;
        org.jfree.chart.axis.ValueAxis valueAxis48 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot49 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis48);
        java.awt.Graphics2D graphics2D50 = null;
        org.jfree.chart.entity.EntityCollection entityCollection51 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo52 = new org.jfree.chart.ChartRenderingInfo(entityCollection51);
        java.awt.Paint paint53 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean54 = chartRenderingInfo52.equals((java.lang.Object) paint53);
        java.awt.geom.Rectangle2D rectangle2D55 = chartRenderingInfo52.getChartArea();
        java.util.List list56 = null;
        combinedDomainXYPlot49.drawDomainGridlines(graphics2D50, rectangle2D55, list56);
        org.jfree.chart.axis.NumberAxis numberAxis59 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity62 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D55, (org.jfree.chart.axis.Axis) numberAxis59, "", "DatasetRenderingOrder.FORWARD");
        // The following exception was thrown during execution in test generation
        try {
            legendGraphic45.draw(graphics2D47, rectangle2D55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(paint53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(rectangle2D55);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test280");
        org.jfree.chart.plot.PolarPlot polarPlot0 = new org.jfree.chart.plot.PolarPlot();
        org.jfree.chart.axis.ValueAxis valueAxis1 = null;
        polarPlot0.setAxis(valueAxis1);
        int int3 = polarPlot0.getSeriesCount();
        org.jfree.chart.renderer.PolarItemRenderer polarItemRenderer4 = polarPlot0.getRenderer();
        org.jfree.chart.entity.EntityCollection entityCollection6 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo7 = new org.jfree.chart.ChartRenderingInfo(entityCollection6);
        java.awt.Paint paint8 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean9 = chartRenderingInfo7.equals((java.lang.Object) paint8);
        java.awt.geom.Rectangle2D rectangle2D10 = chartRenderingInfo7.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = chartRenderingInfo7.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo12 = plotRenderingInfo11.getOwner();
        org.jfree.chart.renderer.xy.XYItemRendererState xYItemRendererState13 = new org.jfree.chart.renderer.xy.XYItemRendererState(plotRenderingInfo11);
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot14 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke15 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot14.setRangeCrosshairStroke(stroke15);
        java.awt.geom.Point2D point2D17 = combinedRangeXYPlot14.getQuadrantOrigin();
        // The following exception was thrown during execution in test generation
        try {
            polarPlot0.zoomRangeAxes((double) (-256), plotRenderingInfo11, point2D17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(polarItemRenderer4);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(rectangle2D10);
        org.junit.Assert.assertNotNull(plotRenderingInfo11);
        org.junit.Assert.assertNotNull(chartRenderingInfo12);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(point2D17);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test281");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        combinedRangeXYPlot0.setGap((double) (-16777216));
        org.jfree.chart.util.RectangleEdge rectangleEdge4 = combinedRangeXYPlot0.getRangeAxisEdge();
        org.jfree.chart.axis.ValueAxis valueAxis5 = combinedRangeXYPlot0.getRangeAxis();
        // The following exception was thrown during execution in test generation
        try {
            valueAxis5.zoomRange(2958209.0d, (double) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Range(double, double): require lower (3106119.45) <= upper (1.05).");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(rectangleEdge4);
        org.junit.Assert.assertNotNull(valueAxis5);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test282");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = new org.jfree.chart.plot.CategoryPlot();
        int int8 = categoryPlot7.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation9 = categoryPlot7.getOrientation();
        categoryPlot0.setOrientation(plotOrientation9);
        boolean boolean11 = categoryPlot0.isDomainPannable();
        categoryPlot0.setRangeCrosshairValue((double) 10);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot15 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list16 = combinedRangeXYPlot15.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.PiePlot piePlot42 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup43 = piePlot42.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener44 = null;
        piePlot42.addChangeListener(plotChangeListener44);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent46 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot42);
        combinedDomainXYPlot18.plotChanged(plotChangeEvent46);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType48 = plotChangeEvent46.getType();
        combinedRangeXYPlot15.plotChanged(plotChangeEvent46);
        org.jfree.chart.plot.IntervalMarker intervalMarker52 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        boolean boolean53 = combinedRangeXYPlot15.removeRangeMarker((org.jfree.chart.plot.Marker) intervalMarker52);
        org.jfree.chart.entity.EntityCollection entityCollection56 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo57 = new org.jfree.chart.ChartRenderingInfo(entityCollection56);
        java.awt.Paint paint58 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean59 = chartRenderingInfo57.equals((java.lang.Object) paint58);
        java.awt.geom.Rectangle2D rectangle2D60 = chartRenderingInfo57.getChartArea();
        org.jfree.chart.title.TextTitle textTitle62 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity63 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D60, (org.jfree.chart.title.Title) textTitle62);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor64 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D65 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D60, rectangleAnchor64);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor66 = null;
        java.awt.geom.Point2D point2D67 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D60, rectangleAnchor66);
        org.jfree.chart.RenderingSource renderingSource68 = null;
        combinedRangeXYPlot15.select(0.0d, (double) (-16777216), rectangle2D60, renderingSource68);
        categoryPlot0.drawDomainGridlines(graphics2D14, rectangle2D60);
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(plotOrientation9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(list16);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNull(datasetGroup43);
        org.junit.Assert.assertNotNull(chartChangeEventType48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(paint58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(rectangle2D60);
        org.junit.Assert.assertNotNull(rectangleAnchor64);
        org.junit.Assert.assertNotNull(point2D65);
        org.junit.Assert.assertNotNull(point2D67);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test283");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.AxisSpace axisSpace10 = combinedDomainXYPlot1.getFixedRangeAxisSpace();
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer13 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection14 = categoryPlot11.getDomainMarkers((int) 'a', layer13);
        java.awt.Paint paint15 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        categoryPlot11.setOutlinePaint(paint15);
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot();
        int int18 = categoryPlot17.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation19 = categoryPlot17.getOrientation();
        categoryPlot11.setOrientation(plotOrientation19);
        combinedDomainXYPlot1.setOrientation(plotOrientation19);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D22 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font26 = barRenderer3D22.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = null;
        barRenderer3D22.setSeriesToolTipGenerator(15, categoryToolTipGenerator28, true);
        org.jfree.chart.util.LengthAdjustmentType lengthAdjustmentType31 = org.jfree.chart.util.LengthAdjustmentType.EXPAND;
        boolean boolean32 = barRenderer3D22.equals((java.lang.Object) lengthAdjustmentType31);
        java.awt.Paint paint33 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_PAINT;
        barRenderer3D22.setBaseFillPaint(paint33, false);
        combinedDomainXYPlot1.setDomainMinorGridlinePaint(paint33);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNull(axisSpace10);
        org.junit.Assert.assertNotNull(layer13);
        org.junit.Assert.assertNull(collection14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(plotOrientation19);
        org.junit.Assert.assertNotNull(font26);
        org.junit.Assert.assertNotNull(lengthAdjustmentType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(paint33);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test284");
        org.jfree.chart.renderer.xy.XYStepAreaRenderer xYStepAreaRenderer0 = new org.jfree.chart.renderer.xy.XYStepAreaRenderer();
        xYStepAreaRenderer0.setPlotArea(true);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test285");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.PiePlot piePlot25 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup26 = piePlot25.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener27 = null;
        piePlot25.addChangeListener(plotChangeListener27);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent29 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot25);
        combinedDomainXYPlot1.plotChanged(plotChangeEvent29);
        java.awt.Paint paint31 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        combinedDomainXYPlot1.setDomainGridlinePaint(paint31);
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer35 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection36 = categoryPlot33.getDomainMarkers((int) 'a', layer35);
        org.jfree.data.category.CategoryDataset categoryDataset38 = null;
        categoryPlot33.setDataset(4, categoryDataset38);
        org.jfree.chart.axis.AxisLocation axisLocation40 = org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT;
        categoryPlot33.setRangeAxisLocation(axisLocation40, false);
        org.jfree.chart.axis.AxisLocation axisLocation44 = categoryPlot33.getRangeAxisLocation((-1));
        combinedDomainXYPlot1.setRangeAxisLocation(axisLocation44, true);
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot47 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke48 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot47.setRangeCrosshairStroke(stroke48);
        combinedDomainXYPlot1.setDomainMinorGridlineStroke(stroke48);
        combinedDomainXYPlot1.setRangeCrosshairLockedOnData(false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNull(datasetGroup26);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(layer35);
        org.junit.Assert.assertNull(collection36);
        org.junit.Assert.assertNotNull(axisLocation40);
        org.junit.Assert.assertNotNull(axisLocation44);
        org.junit.Assert.assertNotNull(stroke48);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test286");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        java.awt.Color color5 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer7 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean9 = xYAreaRenderer7.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint10 = xYAreaRenderer7.getBaseLegendTextPaint();
        java.awt.Stroke stroke12 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer7.setSeriesOutlineStroke(0, stroke12, false);
        java.awt.Color color17 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer19 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean21 = xYAreaRenderer19.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint22 = xYAreaRenderer19.getBaseLegendTextPaint();
        java.awt.Stroke stroke24 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer19.setSeriesOutlineStroke(0, stroke24, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker28 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color5, stroke12, (java.awt.Paint) color17, stroke24, (float) (byte) 1);
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer31 = org.jfree.chart.util.Layer.BACKGROUND;
        java.util.Collection collection32 = categoryPlot29.getRangeMarkers(7, layer31);
        java.lang.Object obj33 = null;
        boolean boolean34 = layer31.equals(obj33);
        boolean boolean36 = combinedRangeXYPlot0.removeRangeMarker(255, (org.jfree.chart.plot.Marker) intervalMarker28, layer31, false);
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(color5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(paint10);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNotNull(color17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNotNull(layer31);
        org.junit.Assert.assertNull(collection32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test287");
        org.jfree.data.xy.DefaultXYDataset defaultXYDataset3 = new org.jfree.data.xy.DefaultXYDataset();
        org.jfree.data.xy.XYDatasetSelectionState xYDatasetSelectionState4 = defaultXYDataset3.getSelectionState();
        int int5 = defaultXYDataset3.getSeriesCount();
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer8 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection9 = categoryPlot6.getDomainMarkers((int) 'a', layer8);
        java.awt.Paint paint10 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        categoryPlot6.setOutlinePaint(paint10);
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = new org.jfree.chart.plot.CategoryPlot();
        int int13 = categoryPlot12.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation14 = categoryPlot12.getOrientation();
        categoryPlot6.setOrientation(plotOrientation14);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart19 = org.jfree.chart.ChartFactory.createXYStepChart("JFreeChart version EXPAND.\n(C)opyright 2000-2008, by Object Refinery Limited and Contributors.\n\nFor terms of use, see the licence below.\n\nFURTHER INFORMATION:http://www.jfree.org/jfreechart/index.html\nCONTRIBUTORS:\nOTHER LIBRARIES USED BY JFreeChart:JFreeChart EXPAND (http://www.jfree.org/jfreechart/index.html).JFreeChart EXPAND (http://www.jfree.org/jfreechart/index.html).JFreeChart EXPAND (http://www.jfree.org/jfreechart/index.html).JFreeChart EXPAND (http://www.jfree.org/jfreechart/index.html).JFreeChart EXPAND (http://www.jfree.org/jfreechart/index.html).JFreeChart EXPAND (http://www.jfree.org/jfreechart/index.html).JFreeChart EXPAND (http://www.jfree.org/jfreechart/index.html).\nJFreeChart LICENCE TERMS:\nClassContext", "[Dec 31, 1969 4:00:00 PM --> Dec 31, 1969 4:00:00 PM]", "", (org.jfree.data.xy.XYDataset) defaultXYDataset3, plotOrientation14, true, true, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@5d39fbfc is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xYDatasetSelectionState4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(layer8);
        org.junit.Assert.assertNull(collection9);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(plotOrientation14);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test288");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        combinedDomainXYPlot1.clearDomainAxes();
        combinedDomainXYPlot1.setGap(5.0d);
        combinedDomainXYPlot1.setDomainCrosshairValue((double) 1, false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test289");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        combinedDomainXYPlot1.setDomainGridlinesVisible(false);
        combinedDomainXYPlot1.setRangeGridlinesVisible(false);
        combinedDomainXYPlot1.setDomainCrosshairValue(0.025d, true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test290");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer5 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer5.clearSeriesStrokes(false);
        boolean boolean8 = xYAreaRenderer5.getPlotLines();
        org.jfree.chart.title.LegendTitle legendTitle9 = new org.jfree.chart.title.LegendTitle((org.jfree.chart.LegendItemSource) xYAreaRenderer5);
        org.jfree.chart.util.RectangleEdge rectangleEdge10 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str11 = rectangleEdge10.toString();
        legendTitle9.setLegendItemGraphicEdge(rectangleEdge10);
        org.jfree.chart.title.TextTitle textTitle14 = new org.jfree.chart.title.TextTitle("");
        boolean boolean15 = textTitle14.getExpandToFitSpace();
        textTitle14.setText("");
        java.lang.String str18 = textTitle14.getID();
        java.awt.Font font19 = textTitle14.getFont();
        java.awt.Graphics2D graphics2D20 = null;
        org.jfree.chart.entity.EntityCollection entityCollection21 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo22 = new org.jfree.chart.ChartRenderingInfo(entityCollection21);
        java.awt.Paint paint23 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean24 = chartRenderingInfo22.equals((java.lang.Object) paint23);
        java.awt.geom.Rectangle2D rectangle2D25 = chartRenderingInfo22.getChartArea();
        textTitle14.draw(graphics2D20, rectangle2D25);
        legendTitle9.setBounds(rectangle2D25);
        java.awt.Paint paint28 = org.jfree.chart.text.TextFragment.DEFAULT_PAINT;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot29 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        org.jfree.chart.plot.PiePlot piePlot30 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup31 = piePlot30.getDatasetGroup();
        int int32 = piePlot30.getBackgroundImageAlignment();
        boolean boolean33 = piePlot30.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D34 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo35 = null;
        piePlot30.createAndAddEntity(rectangle2D34, plotRenderingInfo35, "hi!", "LGPL");
        java.awt.Paint paint39 = piePlot30.getLabelPaint();
        java.awt.Stroke stroke40 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        piePlot30.setOutlineStroke(stroke40);
        combinedDomainXYPlot29.setDomainMinorGridlineStroke(stroke40);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D45 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator46 = barRenderer3D45.getBaseToolTipGenerator();
        java.awt.Paint paint47 = barRenderer3D45.getBaseItemLabelPaint();
        org.jfree.chart.LegendItem legendItem48 = new org.jfree.chart.LegendItem("PlotOrientation.VERTICAL", "[Dec 31, 1969 4:00:00 PM --> Dec 31, 1969 4:00:00 PM]", "WMAP_Plot", "hi!", (java.awt.Shape) rectangle2D25, paint28, stroke40, paint47);
        boolean boolean49 = legendItem48.isShapeOutlineVisible();
        java.lang.String str50 = legendItem48.getToolTipText();
        legendItem48.setSeriesIndex((int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(rectangleEdge10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RectangleEdge.RIGHT" + "'", str11, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(font19);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(rectangle2D25);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNull(datasetGroup31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 15 + "'", int32 == 15);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertNull(categoryToolTipGenerator46);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "WMAP_Plot" + "'", str50, "WMAP_Plot");
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test291");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Stroke stroke46 = legendGraphic45.getOutlineStroke();
        java.awt.Paint paint47 = legendGraphic45.getLinePaint();
        java.awt.Paint paint48 = legendGraphic45.getLinePaint();
        java.awt.Graphics2D graphics2D49 = null;
        org.jfree.data.Range range51 = null;
        org.jfree.chart.block.RectangleConstraint rectangleConstraint52 = new org.jfree.chart.block.RectangleConstraint(0.0d, range51);
        org.jfree.data.Range range55 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range58 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range59 = org.jfree.data.Range.combine(range55, range58);
        org.jfree.data.Range range60 = org.jfree.chart.axis.ValueAxis.DEFAULT_RANGE;
        org.jfree.data.Range range61 = org.jfree.data.Range.combine(range55, range60);
        org.jfree.chart.block.RectangleConstraint rectangleConstraint62 = rectangleConstraint52.toRangeWidth(range55);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.util.Size2D size2D63 = legendGraphic45.arrange(graphics2D49, rectangleConstraint62);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: Not yet implemented.");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(stroke46);
        org.junit.Assert.assertNull(paint47);
        org.junit.Assert.assertNull(paint48);
        org.junit.Assert.assertNotNull(range59);
        org.junit.Assert.assertNotNull(range60);
        org.junit.Assert.assertNotNull(range61);
        org.junit.Assert.assertNotNull(rectangleConstraint62);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test292");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        java.awt.Stroke stroke18 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        combinedDomainXYPlot1.setRangeCrosshairStroke(stroke18);
        java.awt.Paint paint20 = combinedDomainXYPlot1.getRangeGridlinePaint();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(paint20);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test293");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        double double1 = combinedRangeXYPlot0.getGap();
        org.jfree.data.xy.XYDataset xYDataset3 = combinedRangeXYPlot0.getDataset(2147483647);
        java.util.TimeZone timeZone4 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection5 = new org.jfree.data.time.TimeSeriesCollection(timeZone4);
        java.text.DateFormat dateFormat7 = null;
        java.text.DateFormat dateFormat8 = null;
        org.jfree.chart.labels.StandardXYToolTipGenerator standardXYToolTipGenerator9 = new org.jfree.chart.labels.StandardXYToolTipGenerator("[10.0, 0.0]", dateFormat7, dateFormat8);
        boolean boolean10 = timeSeriesCollection5.equals((java.lang.Object) "[10.0, 0.0]");
        int int11 = combinedRangeXYPlot0.indexOf((org.jfree.data.xy.XYDataset) timeSeriesCollection5);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 5.0d + "'", double1 == 5.0d);
        org.junit.Assert.assertNull(xYDataset3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test294");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        boolean boolean5 = xYAreaRenderer1.getBaseItemLabelsVisible();
        java.awt.Paint paint6 = xYAreaRenderer1.getBasePaint();
        java.awt.Font font7 = xYAreaRenderer1.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator8 = null;
        xYAreaRenderer1.setBaseItemLabelGenerator(xYItemLabelGenerator8);
        xYAreaRenderer1.setUseFillPaint(true);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot14 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis13);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer16 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer16.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator19 = null;
        xYAreaRenderer16.setLegendItemURLGenerator(xYSeriesLabelGenerator19);
        xYAreaRenderer16.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean27 = xYAreaRenderer16.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot14.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer16);
        combinedDomainXYPlot14.clearDomainMarkers();
        boolean boolean30 = combinedDomainXYPlot14.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.NumberAxis numberAxis32 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis32.pan((double) 1);
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot36 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis35);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.entity.EntityCollection entityCollection38 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo39 = new org.jfree.chart.ChartRenderingInfo(entityCollection38);
        java.awt.Paint paint40 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean41 = chartRenderingInfo39.equals((java.lang.Object) paint40);
        java.awt.geom.Rectangle2D rectangle2D42 = chartRenderingInfo39.getChartArea();
        java.util.List list43 = null;
        combinedDomainXYPlot36.drawDomainGridlines(graphics2D37, rectangle2D42, list43);
        org.jfree.chart.axis.NumberAxis numberAxis46 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity49 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D42, (org.jfree.chart.axis.Axis) numberAxis46, "", "DatasetRenderingOrder.FORWARD");
        xYAreaRenderer1.drawDomainGridLine(graphics2D12, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot14, (org.jfree.chart.axis.ValueAxis) numberAxis32, rectangle2D42, (double) 11);
        numberAxis32.setLabelToolTip("{0}: ({1}, {2})");
        numberAxis32.setRange(0.0d, (double) 1L);
        double double57 = numberAxis32.getLowerMargin();
        org.jfree.chart.plot.Plot plot58 = numberAxis32.getPlot();
        numberAxis32.setFixedDimension(0.08d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(rectangle2D42);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.05d + "'", double57 == 0.05d);
        org.junit.Assert.assertNull(plot58);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test295");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        org.jfree.chart.title.LegendTitle legendTitle5 = new org.jfree.chart.title.LegendTitle((org.jfree.chart.LegendItemSource) xYAreaRenderer1);
        org.jfree.chart.util.RectangleEdge rectangleEdge6 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str7 = rectangleEdge6.toString();
        legendTitle5.setLegendItemGraphicEdge(rectangleEdge6);
        org.jfree.chart.util.RectangleInsets rectangleInsets9 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double10 = rectangleInsets9.getLeft();
        double double12 = rectangleInsets9.calculateLeftOutset((double) 0L);
        legendTitle5.setLegendItemGraphicPadding(rectangleInsets9);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer15 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer15.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator18 = null;
        xYAreaRenderer15.setLegendItemURLGenerator(xYSeriesLabelGenerator18);
        java.lang.Object obj20 = xYAreaRenderer15.clone();
        java.lang.Object obj21 = xYAreaRenderer15.clone();
        java.awt.Color color25 = java.awt.Color.getHSBColor((float) (-1), (float) (-16777216), (float) 8);
        xYAreaRenderer15.setBasePaint((java.awt.Paint) color25);
        boolean boolean27 = legendTitle5.equals((java.lang.Object) xYAreaRenderer15);
        java.awt.Shape shape30 = org.jfree.chart.util.ShapeUtilities.createUpTriangle((float) (byte) 0);
        org.jfree.chart.title.TextTitle textTitle32 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity35 = new org.jfree.chart.entity.TitleEntity(shape30, (org.jfree.chart.title.Title) textTitle32, "LGPL", "ThreadContext");
        xYAreaRenderer15.setSeriesShape(128, shape30);
        org.jfree.chart.plot.PolarPlot polarPlot38 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Font font39 = polarPlot38.getAngleLabelFont();
        org.jfree.chart.plot.PiePlot piePlot41 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup42 = piePlot41.getDatasetGroup();
        int int43 = piePlot41.getBackgroundImageAlignment();
        boolean boolean44 = piePlot41.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D45 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo46 = null;
        piePlot41.createAndAddEntity(rectangle2D45, plotRenderingInfo46, "hi!", "LGPL");
        piePlot41.setStartAngle((double) 1);
        org.jfree.data.xy.XYDataItem xYDataItem54 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        java.awt.Color color57 = java.awt.Color.getColor("hi!", (int) (short) 100);
        boolean boolean58 = xYDataItem54.equals((java.lang.Object) "hi!");
        java.awt.Color color59 = java.awt.Color.MAGENTA;
        piePlot41.setSectionPaint((java.lang.Comparable) "hi!", (java.awt.Paint) color59);
        org.jfree.chart.LegendItem legendItem61 = new org.jfree.chart.LegendItem("http://www.jfree.org/jfreechart/index.html", (java.awt.Paint) color59);
        java.awt.Paint paint62 = legendItem61.getLinePaint();
        org.jfree.chart.block.LabelBlock labelBlock63 = new org.jfree.chart.block.LabelBlock("[10.0, 0.0]", font39, paint62);
        xYAreaRenderer15.setBasePaint(paint62);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(rectangleEdge6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RectangleEdge.RIGHT" + "'", str7, "RectangleEdge.RIGHT");
        org.junit.Assert.assertNotNull(rectangleInsets9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(color25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shape30);
        org.junit.Assert.assertNotNull(font39);
        org.junit.Assert.assertNull(datasetGroup42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 15 + "'", int43 == 15);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(color57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(color59);
        org.junit.Assert.assertNotNull(paint62);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test296");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Color color2 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot1.setRangeMinorGridlinePaint((java.awt.Paint) color2);
        boolean boolean4 = combinedDomainXYPlot1.canSelectByRegion();
        int int5 = combinedDomainXYPlot1.getDatasetCount();
        boolean boolean6 = combinedDomainXYPlot1.isRangeZeroBaselineVisible();
        org.junit.Assert.assertNotNull(color2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test297");
        org.jfree.data.xy.XYDataset xYDataset0 = null;
        org.jfree.chart.axis.ValueAxis valueAxis1 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot2 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis1);
        java.awt.Graphics2D graphics2D3 = null;
        org.jfree.chart.entity.EntityCollection entityCollection4 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo5 = new org.jfree.chart.ChartRenderingInfo(entityCollection4);
        java.awt.Paint paint6 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean7 = chartRenderingInfo5.equals((java.lang.Object) paint6);
        java.awt.geom.Rectangle2D rectangle2D8 = chartRenderingInfo5.getChartArea();
        java.util.List list9 = null;
        combinedDomainXYPlot2.drawDomainGridlines(graphics2D3, rectangle2D8, list9);
        org.jfree.chart.axis.NumberAxis numberAxis12 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity15 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D8, (org.jfree.chart.axis.Axis) numberAxis12, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.renderer.PolarItemRenderer polarItemRenderer16 = null;
        org.jfree.chart.plot.PolarPlot polarPlot17 = new org.jfree.chart.plot.PolarPlot(xYDataset0, (org.jfree.chart.axis.ValueAxis) numberAxis12, polarItemRenderer16);
        polarPlot17.setAngleLabelsVisible(false);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(rectangle2D8);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test298");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier7 = categoryPlot0.getDrawingSupplier();
        categoryPlot0.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace9 = null;
        categoryPlot0.setFixedDomainAxisSpace(axisSpace9);
        org.jfree.chart.axis.CategoryAxis3D categoryAxis3D12 = new org.jfree.chart.axis.CategoryAxis3D("hi!");
        categoryPlot0.setDomainAxis((org.jfree.chart.axis.CategoryAxis) categoryAxis3D12);
        categoryAxis3D12.configure();
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot21 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis20);
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.entity.EntityCollection entityCollection23 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo24 = new org.jfree.chart.ChartRenderingInfo(entityCollection23);
        java.awt.Paint paint25 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean26 = chartRenderingInfo24.equals((java.lang.Object) paint25);
        java.awt.geom.Rectangle2D rectangle2D27 = chartRenderingInfo24.getChartArea();
        java.util.List list28 = null;
        combinedDomainXYPlot21.drawDomainGridlines(graphics2D22, rectangle2D27, list28);
        org.jfree.chart.axis.NumberAxis numberAxis31 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity34 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D27, (org.jfree.chart.axis.Axis) numberAxis31, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = new org.jfree.chart.plot.CategoryPlot();
        int int36 = categoryPlot35.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge40 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str41 = rectangleEdge40.toString();
        double double42 = categoryPlot35.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge40);
        boolean boolean43 = categoryPlot35.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis45 = categoryPlot35.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge46 = categoryPlot35.getDomainAxisEdge();
        double double47 = categoryAxis3D12.getCategorySeriesMiddle(11, (int) ' ', (int) (byte) 0, (int) (short) 100, 0.0d, rectangle2D27, rectangleEdge46);
        java.awt.Font font48 = categoryAxis3D12.getTickLabelFont();
        java.awt.Graphics2D graphics2D49 = null;
        org.jfree.chart.axis.AxisState axisState50 = new org.jfree.chart.axis.AxisState();
        double double51 = axisState50.getMax();
        axisState50.cursorUp((double) (short) 100);
        java.util.List list54 = axisState50.getTicks();
        java.awt.geom.Rectangle2D rectangle2D55 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot56 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer58 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection59 = categoryPlot56.getDomainMarkers((int) 'a', layer58);
        org.jfree.data.category.CategoryDataset categoryDataset61 = null;
        categoryPlot56.setDataset(4, categoryDataset61);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier63 = categoryPlot56.getDrawingSupplier();
        categoryPlot56.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace65 = null;
        categoryPlot56.setFixedDomainAxisSpace(axisSpace65);
        categoryPlot56.setCrosshairDatasetIndex((int) (short) 100);
        categoryPlot56.setBackgroundAlpha((float) 8);
        org.jfree.chart.util.RectangleEdge rectangleEdge71 = categoryPlot56.getDomainAxisEdge();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List list72 = categoryAxis3D12.refreshTicks(graphics2D49, axisState50, rectangle2D55, rectangleEdge71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertNotNull(drawingSupplier7);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangle2D27);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "RectangleEdge.RIGHT" + "'", str41, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 149.0d + "'", double42 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(categoryAxis45);
        org.junit.Assert.assertNotNull(rectangleEdge46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(font48);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(layer58);
        org.junit.Assert.assertNull(collection59);
        org.junit.Assert.assertNotNull(drawingSupplier63);
        org.junit.Assert.assertNotNull(rectangleEdge71);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test299");
        org.jfree.chart.axis.DateTickUnitType dateTickUnitType1 = org.jfree.chart.axis.DateTickUnitType.HOUR;
        org.jfree.chart.axis.DateTickUnit dateTickUnit3 = new org.jfree.chart.axis.DateTickUnit(dateTickUnitType1, 100);
        java.lang.String str5 = dateTickUnit3.valueToString((double) (short) 1);
        org.jfree.chart.title.TextTitle textTitle7 = new org.jfree.chart.title.TextTitle("");
        boolean boolean8 = textTitle7.getExpandToFitSpace();
        boolean boolean9 = dateTickUnit3.equals((java.lang.Object) boolean8);
        org.jfree.data.time.DateRange dateRange10 = new org.jfree.data.time.DateRange();
        java.util.Date date11 = dateRange10.getUpperDate();
        org.jfree.data.time.Month month12 = new org.jfree.data.time.Month(date11);
        java.util.Date date13 = dateTickUnit3.rollDate(date11);
        int int15 = dateTickUnit3.compareTo((java.lang.Object) (-16777216));
        org.jfree.data.time.Year year17 = new org.jfree.data.time.Year((int) (short) 0);
        long long18 = year17.getFirstMillisecond();
        org.jfree.data.time.RegularTimePeriod regularTimePeriod19 = year17.previous();
        java.util.Date date20 = year17.getStart();
        java.util.TimeZone timeZone21 = org.jfree.chart.axis.SegmentedTimeline.DEFAULT_TIME_ZONE;
        org.jfree.chart.axis.SegmentedTimeline.DEFAULT_TIME_ZONE = timeZone21;
        org.jfree.chart.axis.TickUnitSource tickUnitSource23 = org.jfree.chart.axis.DateAxis.createStandardDateTickUnits(timeZone21);
        org.jfree.chart.axis.SegmentedTimeline.NO_DST_TIME_ZONE = timeZone21;
        java.util.Date date25 = dateTickUnit3.addToDate(date20, timeZone21);
        org.jfree.chart.axis.DateAxis dateAxis26 = new org.jfree.chart.axis.DateAxis("AxisEntity: tooltip = ", timeZone21);
        org.jfree.chart.axis.DateTickUnitType dateTickUnitType27 = org.jfree.chart.axis.DateTickUnitType.HOUR;
        org.jfree.chart.axis.DateTickUnit dateTickUnit29 = new org.jfree.chart.axis.DateTickUnit(dateTickUnitType27, 100);
        java.lang.String str31 = dateTickUnit29.valueToString((double) (short) 1);
        org.jfree.chart.title.TextTitle textTitle33 = new org.jfree.chart.title.TextTitle("");
        boolean boolean34 = textTitle33.getExpandToFitSpace();
        boolean boolean35 = dateTickUnit29.equals((java.lang.Object) boolean34);
        org.jfree.data.time.DateRange dateRange36 = new org.jfree.data.time.DateRange();
        java.util.Date date37 = dateRange36.getUpperDate();
        org.jfree.data.time.Month month38 = new org.jfree.data.time.Month(date37);
        java.util.Date date39 = dateTickUnit29.rollDate(date37);
        int int41 = dateTickUnit29.compareTo((java.lang.Object) (-16777216));
        int int42 = dateTickUnit29.getRollMultiple();
        dateAxis26.setTickUnit(dateTickUnit29, true, true);
        java.util.TimeZone timeZone46 = dateAxis26.getTimeZone();
        java.awt.Paint paint47 = org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT;
        dateAxis26.setTickMarkPaint(paint47);
        org.junit.Assert.assertNotNull(dateTickUnitType1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "12/31/69" + "'", str5, "12/31/69");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(date11);
        org.junit.Assert.assertEquals(date11.toString(), "Wed Dec 31 16:00:00 PST 1969");
        org.junit.Assert.assertNotNull(date13);
        org.junit.Assert.assertEquals(date13.toString(), "Sun Jan 04 20:00:00 PST 1970");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-62167363200000L) + "'", long18 == (-62167363200000L));
        org.junit.Assert.assertNotNull(regularTimePeriod19);
        org.junit.Assert.assertNotNull(date20);
        org.junit.Assert.assertEquals(date20.toString(), "Thu Jan 01 00:00:00 PST 1");
        org.junit.Assert.assertNotNull(timeZone21);
        org.junit.Assert.assertEquals(timeZone21.getDisplayName(), "Pacific Standard Time");
        org.junit.Assert.assertNotNull(tickUnitSource23);
        org.junit.Assert.assertNotNull(date25);
        org.junit.Assert.assertEquals(date25.toString(), "Mon Jan 05 04:00:00 PST 1");
        org.junit.Assert.assertNotNull(dateTickUnitType27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "12/31/69" + "'", str31, "12/31/69");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(date37);
        org.junit.Assert.assertEquals(date37.toString(), "Wed Dec 31 16:00:00 PST 1969");
        org.junit.Assert.assertNotNull(date39);
        org.junit.Assert.assertEquals(date39.toString(), "Sun Jan 04 20:00:00 PST 1970");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertNotNull(timeZone46);
        org.junit.Assert.assertEquals(timeZone46.getDisplayName(), "Pacific Standard Time");
        org.junit.Assert.assertNotNull(paint47);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test300");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        java.awt.Shape shape18 = org.jfree.chart.util.ShapeUtilities.rotateShape((java.awt.Shape) rectangle2D7, (double) (byte) -1, (float) (short) 0, (float) 0L);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNotNull(shape18);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test301");
        org.jfree.chart.axis.LogAxis logAxis1 = new org.jfree.chart.axis.LogAxis("item");
        java.text.NumberFormat numberFormat2 = java.text.NumberFormat.getNumberInstance();
        int int3 = numberFormat2.getMinimumFractionDigits();
        logAxis1.setNumberFormatOverride(numberFormat2);
        int int5 = numberFormat2.getMaximumFractionDigits();
        org.junit.Assert.assertNotNull(numberFormat2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test302");
        org.jfree.chart.util.StrokeList strokeList0 = new org.jfree.chart.util.StrokeList();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer2 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer2.clearSeriesStrokes(false);
        boolean boolean5 = xYAreaRenderer2.getPlotLines();
        boolean boolean6 = xYAreaRenderer2.getBaseItemLabelsVisible();
        java.awt.Paint paint7 = xYAreaRenderer2.getBasePaint();
        java.awt.Font font8 = xYAreaRenderer2.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator9 = null;
        xYAreaRenderer2.setBaseItemLabelGenerator(xYItemLabelGenerator9);
        xYAreaRenderer2.setUseFillPaint(true);
        java.awt.Graphics2D graphics2D13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot15 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis14);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer17 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer17.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator20 = null;
        xYAreaRenderer17.setLegendItemURLGenerator(xYSeriesLabelGenerator20);
        xYAreaRenderer17.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean28 = xYAreaRenderer17.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot15.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer17);
        combinedDomainXYPlot15.clearDomainMarkers();
        boolean boolean31 = combinedDomainXYPlot15.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.NumberAxis numberAxis33 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis33.pan((double) 1);
        org.jfree.chart.axis.ValueAxis valueAxis36 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot37 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis36);
        java.awt.Graphics2D graphics2D38 = null;
        org.jfree.chart.entity.EntityCollection entityCollection39 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo40 = new org.jfree.chart.ChartRenderingInfo(entityCollection39);
        java.awt.Paint paint41 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean42 = chartRenderingInfo40.equals((java.lang.Object) paint41);
        java.awt.geom.Rectangle2D rectangle2D43 = chartRenderingInfo40.getChartArea();
        java.util.List list44 = null;
        combinedDomainXYPlot37.drawDomainGridlines(graphics2D38, rectangle2D43, list44);
        org.jfree.chart.axis.NumberAxis numberAxis47 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity50 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D43, (org.jfree.chart.axis.Axis) numberAxis47, "", "DatasetRenderingOrder.FORWARD");
        xYAreaRenderer2.drawDomainGridLine(graphics2D13, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot15, (org.jfree.chart.axis.ValueAxis) numberAxis33, rectangle2D43, (double) 11);
        numberAxis33.setLabelToolTip("{0}: ({1}, {2})");
        org.jfree.chart.text.TextLine textLine56 = new org.jfree.chart.text.TextLine("hi!");
        org.jfree.chart.text.TextFragment textFragment57 = textLine56.getLastTextFragment();
        java.awt.Font font58 = textFragment57.getFont();
        numberAxis33.setLabelFont(font58);
        boolean boolean60 = strokeList0.equals((java.lang.Object) numberAxis33);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(font8);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(rectangle2D43);
        org.junit.Assert.assertNotNull(textFragment57);
        org.junit.Assert.assertNotNull(font58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test303");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean3 = xYAreaRenderer1.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint4 = xYAreaRenderer1.getBaseLegendTextPaint();
        java.awt.Stroke stroke6 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer1.setSeriesOutlineStroke(0, stroke6, false);
        java.awt.Font font10 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        xYAreaRenderer1.setSeriesItemLabelFont(0, font10);
        xYAreaRenderer1.setBaseItemLabelsVisible(true, true);
        xYAreaRenderer1.setSeriesVisible((int) (short) 0, (java.lang.Boolean) true, false);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean22 = xYAreaRenderer20.isSeriesItemLabelsVisible((int) (byte) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = xYAreaRenderer20.getBasePositiveItemLabelPosition();
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator25 = null;
        xYAreaRenderer20.setSeriesURLGenerator((int) '4', xYURLGenerator25, true);
        boolean boolean29 = xYAreaRenderer20.isSeriesVisibleInLegend(0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer31 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean33 = xYAreaRenderer31.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint35 = xYAreaRenderer31.getSeriesPaint(0);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator36 = xYAreaRenderer31.getLegendItemLabelGenerator();
        xYAreaRenderer20.setLegendItemLabelGenerator(xYSeriesLabelGenerator36);
        xYAreaRenderer1.setLegendItemURLGenerator(xYSeriesLabelGenerator36);
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator39 = null;
        xYAreaRenderer1.setBaseItemLabelGenerator(xYItemLabelGenerator39);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(paint4);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(paint35);
        org.junit.Assert.assertNotNull(xYSeriesLabelGenerator36);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test304");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        numberAxis11.centerRange(10.0d);
        numberAxis11.setRangeWithMargins(1.0E-8d, (double) (short) 1);
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer22 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection23 = categoryPlot20.getDomainMarkers((int) 'a', layer22);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        categoryPlot20.setDataset(4, categoryDataset25);
        org.jfree.chart.axis.AxisLocation axisLocation27 = org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT;
        categoryPlot20.setRangeAxisLocation(axisLocation27, false);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo31 = null;
        java.awt.geom.Point2D point2D32 = null;
        categoryPlot20.zoomRangeAxes((double) (-16777216), plotRenderingInfo31, point2D32, false);
        org.jfree.chart.LegendItemCollection legendItemCollection35 = categoryPlot20.getLegendItems();
        org.jfree.chart.plot.DatasetRenderingOrder datasetRenderingOrder36 = org.jfree.chart.plot.DatasetRenderingOrder.FORWARD;
        categoryPlot20.setDatasetRenderingOrder(datasetRenderingOrder36);
        boolean boolean38 = numberAxis11.equals((java.lang.Object) datasetRenderingOrder36);
        java.lang.String str39 = datasetRenderingOrder36.toString();
        java.lang.String str40 = datasetRenderingOrder36.toString();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNotNull(layer22);
        org.junit.Assert.assertNull(collection23);
        org.junit.Assert.assertNotNull(axisLocation27);
        org.junit.Assert.assertNotNull(legendItemCollection35);
        org.junit.Assert.assertNotNull(datasetRenderingOrder36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "DatasetRenderingOrder.FORWARD" + "'", str39, "DatasetRenderingOrder.FORWARD");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "DatasetRenderingOrder.FORWARD" + "'", str40, "DatasetRenderingOrder.FORWARD");
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test305");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        boolean boolean5 = xYAreaRenderer1.getBaseItemLabelsVisible();
        java.awt.Paint paint6 = xYAreaRenderer1.getBasePaint();
        java.awt.Font font7 = xYAreaRenderer1.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator8 = null;
        xYAreaRenderer1.setBaseItemLabelGenerator(xYItemLabelGenerator8);
        xYAreaRenderer1.setUseFillPaint(true);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot14 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis13);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer16 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer16.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator19 = null;
        xYAreaRenderer16.setLegendItemURLGenerator(xYSeriesLabelGenerator19);
        xYAreaRenderer16.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean27 = xYAreaRenderer16.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot14.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer16);
        combinedDomainXYPlot14.clearDomainMarkers();
        boolean boolean30 = combinedDomainXYPlot14.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.NumberAxis numberAxis32 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis32.pan((double) 1);
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot36 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis35);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.entity.EntityCollection entityCollection38 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo39 = new org.jfree.chart.ChartRenderingInfo(entityCollection38);
        java.awt.Paint paint40 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean41 = chartRenderingInfo39.equals((java.lang.Object) paint40);
        java.awt.geom.Rectangle2D rectangle2D42 = chartRenderingInfo39.getChartArea();
        java.util.List list43 = null;
        combinedDomainXYPlot36.drawDomainGridlines(graphics2D37, rectangle2D42, list43);
        org.jfree.chart.axis.NumberAxis numberAxis46 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity49 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D42, (org.jfree.chart.axis.Axis) numberAxis46, "", "DatasetRenderingOrder.FORWARD");
        xYAreaRenderer1.drawDomainGridLine(graphics2D12, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot14, (org.jfree.chart.axis.ValueAxis) numberAxis32, rectangle2D42, (double) 11);
        numberAxis32.setLabelToolTip("{0}: ({1}, {2})");
        numberAxis32.setRange(0.0d, (double) 1L);
        double double57 = numberAxis32.getLowerMargin();
        org.jfree.chart.plot.Plot plot58 = numberAxis32.getPlot();
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot59 = new org.jfree.chart.plot.CombinedDomainXYPlot((org.jfree.chart.axis.ValueAxis) numberAxis32);
        org.jfree.chart.plot.PolarPlot polarPlot61 = new org.jfree.chart.plot.PolarPlot();
        org.jfree.chart.axis.ValueAxis valueAxis62 = null;
        polarPlot61.setAxis(valueAxis62);
        int int64 = polarPlot61.getSeriesCount();
        boolean boolean65 = polarPlot61.isAngleLabelsVisible();
        org.jfree.chart.axis.NumberAxis numberAxis66 = new org.jfree.chart.axis.NumberAxis();
        polarPlot61.setAxis((org.jfree.chart.axis.ValueAxis) numberAxis66);
        combinedDomainXYPlot59.setDomainAxis(2, (org.jfree.chart.axis.ValueAxis) numberAxis66, true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(rectangle2D42);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.05d + "'", double57 == 0.05d);
        org.junit.Assert.assertNull(plot58);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test306");
        java.awt.Font font0 = org.jfree.chart.JFreeChart.DEFAULT_TITLE_FONT;
        org.junit.Assert.assertNotNull(font0);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test307");
        org.jfree.data.time.TimeSeries timeSeries1 = new org.jfree.data.time.TimeSeries((java.lang.Comparable) 5);
        org.jfree.chart.title.TextTitle textTitle3 = new org.jfree.chart.title.TextTitle("");
        boolean boolean4 = textTitle3.getExpandToFitSpace();
        textTitle3.setText("");
        java.lang.String str7 = textTitle3.getID();
        java.awt.Font font8 = textTitle3.getFont();
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.entity.EntityCollection entityCollection10 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo11 = new org.jfree.chart.ChartRenderingInfo(entityCollection10);
        java.awt.Paint paint12 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean13 = chartRenderingInfo11.equals((java.lang.Object) paint12);
        java.awt.geom.Rectangle2D rectangle2D14 = chartRenderingInfo11.getChartArea();
        textTitle3.draw(graphics2D9, rectangle2D14);
        textTitle3.setMaximumLinesToDisplay(8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer19 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer19.clearSeriesStrokes(false);
        boolean boolean22 = xYAreaRenderer19.getPlotLines();
        java.lang.Boolean boolean24 = xYAreaRenderer19.getSeriesCreateEntities(0);
        java.lang.Boolean boolean26 = xYAreaRenderer19.getSeriesVisible((int) '#');
        org.jfree.chart.plot.CategoryPlot categoryPlot28 = new org.jfree.chart.plot.CategoryPlot();
        java.awt.Color color29 = org.jfree.chart.ChartColor.VERY_DARK_MAGENTA;
        categoryPlot28.setRangeZeroBaselinePaint((java.awt.Paint) color29);
        java.awt.Paint paint31 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        categoryPlot28.setRangeGridlinePaint(paint31);
        xYAreaRenderer19.setLegendTextPaint(7, paint31);
        org.jfree.chart.block.BlockBorder blockBorder34 = new org.jfree.chart.block.BlockBorder(paint31);
        textTitle3.setFrame((org.jfree.chart.block.BlockFrame) blockBorder34);
        boolean boolean36 = timeSeries1.equals((java.lang.Object) textTitle3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(font8);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(rectangle2D14);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(color29);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test308");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        double double1 = barRenderer3D0.getXOffset();
        double double2 = barRenderer3D0.getMaximumBarWidth();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        barRenderer3D0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = barRenderer3D0.getBaseURLGenerator();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 12.0d + "'", double1 == 12.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 1.0d + "'", double2 == 1.0d);
        org.junit.Assert.assertNull(categoryURLGenerator5);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test309");
        org.jfree.chart.util.PaintList paintList0 = new org.jfree.chart.util.PaintList();
        org.jfree.chart.axis.ValueAxis valueAxis1 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot2 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis1);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer4 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer4.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator7 = null;
        xYAreaRenderer4.setLegendItemURLGenerator(xYSeriesLabelGenerator7);
        xYAreaRenderer4.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean15 = xYAreaRenderer4.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot2.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer4);
        combinedDomainXYPlot2.clearDomainMarkers();
        java.awt.Font font19 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint20 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer23 = null;
        org.jfree.chart.text.TextBlock textBlock24 = org.jfree.chart.text.TextUtilities.createTextBlock("", font19, paint20, (float) (-1L), (int) (short) -1, textMeasurer23);
        combinedDomainXYPlot2.setDomainCrosshairPaint(paint20);
        boolean boolean26 = paintList0.equals((java.lang.Object) paint20);
        java.awt.Paint paint28 = paintList0.getPaint((int) '4');
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(font19);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(textBlock24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(paint28);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test310");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator4 = null;
        xYAreaRenderer1.setLegendItemURLGenerator(xYSeriesLabelGenerator4);
        xYAreaRenderer1.setSeriesVisibleInLegend((int) (byte) 10, (java.lang.Boolean) false);
        xYAreaRenderer1.setBaseItemLabelsVisible(true);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator12 = null;
        xYAreaRenderer1.setSeriesURLGenerator((int) (short) 100, xYURLGenerator12, false);
        org.jfree.chart.plot.PolarPlot polarPlot15 = new org.jfree.chart.plot.PolarPlot();
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        polarPlot15.setAxis(valueAxis16);
        int int18 = polarPlot15.getSeriesCount();
        org.jfree.chart.renderer.PolarItemRenderer polarItemRenderer19 = polarPlot15.getRenderer();
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer22 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection23 = categoryPlot20.getDomainMarkers((int) 'a', layer22);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        categoryPlot20.setDataset(4, categoryDataset25);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier27 = categoryPlot20.getDrawingSupplier();
        categoryPlot20.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace29 = null;
        categoryPlot20.setFixedDomainAxisSpace(axisSpace29);
        org.jfree.chart.axis.CategoryAxis3D categoryAxis3D32 = new org.jfree.chart.axis.CategoryAxis3D("hi!");
        categoryPlot20.setDomainAxis((org.jfree.chart.axis.CategoryAxis) categoryAxis3D32);
        categoryAxis3D32.configure();
        org.jfree.chart.axis.ValueAxis valueAxis40 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot41 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis40);
        java.awt.Graphics2D graphics2D42 = null;
        org.jfree.chart.entity.EntityCollection entityCollection43 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo44 = new org.jfree.chart.ChartRenderingInfo(entityCollection43);
        java.awt.Paint paint45 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean46 = chartRenderingInfo44.equals((java.lang.Object) paint45);
        java.awt.geom.Rectangle2D rectangle2D47 = chartRenderingInfo44.getChartArea();
        java.util.List list48 = null;
        combinedDomainXYPlot41.drawDomainGridlines(graphics2D42, rectangle2D47, list48);
        org.jfree.chart.axis.NumberAxis numberAxis51 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity54 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D47, (org.jfree.chart.axis.Axis) numberAxis51, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.plot.CategoryPlot categoryPlot55 = new org.jfree.chart.plot.CategoryPlot();
        int int56 = categoryPlot55.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge60 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str61 = rectangleEdge60.toString();
        double double62 = categoryPlot55.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge60);
        boolean boolean63 = categoryPlot55.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis65 = categoryPlot55.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge66 = categoryPlot55.getDomainAxisEdge();
        double double67 = categoryAxis3D32.getCategorySeriesMiddle(11, (int) ' ', (int) (byte) 0, (int) (short) 100, 0.0d, rectangle2D47, rectangleEdge66);
        java.awt.Font font68 = categoryAxis3D32.getTickLabelFont();
        polarPlot15.setAngleLabelFont(font68);
        boolean boolean70 = xYAreaRenderer1.equals((java.lang.Object) font68);
        java.awt.Shape shape71 = xYAreaRenderer1.getLegendArea();
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(polarItemRenderer19);
        org.junit.Assert.assertNotNull(layer22);
        org.junit.Assert.assertNull(collection23);
        org.junit.Assert.assertNotNull(drawingSupplier27);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(rectangle2D47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "RectangleEdge.RIGHT" + "'", str61, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 149.0d + "'", double62 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(categoryAxis65);
        org.junit.Assert.assertNotNull(rectangleEdge66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(font68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(shape71);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test311");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        boolean boolean18 = combinedDomainXYPlot1.isRangeCrosshairVisible();
        boolean boolean19 = combinedDomainXYPlot1.isDomainMinorGridlinesVisible();
        java.awt.Paint paint20 = combinedDomainXYPlot1.getRangeZeroBaselinePaint();
        org.jfree.chart.axis.AxisSpace axisSpace21 = new org.jfree.chart.axis.AxisSpace();
        axisSpace21.setTop(0.0d);
        double double24 = axisSpace21.getBottom();
        combinedDomainXYPlot1.setFixedRangeAxisSpaceForSubplots(axisSpace21);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test312");
        org.jfree.chart.plot.PolarPlot polarPlot0 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Font font1 = polarPlot0.getAngleLabelFont();
        org.jfree.chart.axis.ValueAxis valueAxis2 = polarPlot0.getAxis();
        org.jfree.chart.axis.ValueAxis valueAxis3 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot4 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.entity.EntityCollection entityCollection6 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo7 = new org.jfree.chart.ChartRenderingInfo(entityCollection6);
        java.awt.Paint paint8 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean9 = chartRenderingInfo7.equals((java.lang.Object) paint8);
        java.awt.geom.Rectangle2D rectangle2D10 = chartRenderingInfo7.getChartArea();
        java.util.List list11 = null;
        combinedDomainXYPlot4.drawDomainGridlines(graphics2D5, rectangle2D10, list11);
        org.jfree.chart.axis.NumberAxis numberAxis14 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity17 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D10, (org.jfree.chart.axis.Axis) numberAxis14, "", "DatasetRenderingOrder.FORWARD");
        numberAxis14.setMinorTickMarkInsideLength((float) 60000L);
        org.jfree.data.Range range20 = polarPlot0.getDataRange((org.jfree.chart.axis.ValueAxis) numberAxis14);
        org.jfree.data.time.DateRange dateRange21 = new org.jfree.data.time.DateRange();
        long long22 = dateRange21.getUpperMillis();
        org.jfree.data.Range range25 = org.jfree.data.Range.shift((org.jfree.data.Range) dateRange21, (double) (-1), true);
        numberAxis14.setRangeWithMargins(range25, true, true);
        numberAxis14.pan((double) (-9999));
        org.junit.Assert.assertNotNull(font1);
        org.junit.Assert.assertNull(valueAxis2);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(rectangle2D10);
        org.junit.Assert.assertNull(range20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(range25);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test313");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D2 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator3 = barRenderer3D2.getBaseToolTipGenerator();
        java.awt.Paint paint4 = barRenderer3D2.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = new org.jfree.chart.plot.CategoryPlot();
        int int7 = categoryPlot6.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge11 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str12 = rectangleEdge11.toString();
        double double13 = categoryPlot6.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge11);
        boolean boolean14 = categoryPlot6.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = categoryPlot6.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge17 = categoryPlot6.getDomainAxisEdge();
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot19 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis18);
        java.awt.Graphics2D graphics2D20 = null;
        org.jfree.chart.entity.EntityCollection entityCollection21 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo22 = new org.jfree.chart.ChartRenderingInfo(entityCollection21);
        java.awt.Paint paint23 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean24 = chartRenderingInfo22.equals((java.lang.Object) paint23);
        java.awt.geom.Rectangle2D rectangle2D25 = chartRenderingInfo22.getChartArea();
        java.util.List list26 = null;
        combinedDomainXYPlot19.drawDomainGridlines(graphics2D20, rectangle2D25, list26);
        org.jfree.chart.axis.NumberAxis numberAxis29 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity32 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D25, (org.jfree.chart.axis.Axis) numberAxis29, "", "DatasetRenderingOrder.FORWARD");
        numberAxis29.centerRange(10.0d);
        org.jfree.data.Range range35 = categoryPlot6.getDataRange((org.jfree.chart.axis.ValueAxis) numberAxis29);
        categoryPlot6.clearRangeMarkers();
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot37 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list38 = combinedRangeXYPlot37.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis39 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot40 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis39);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer42 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer42.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator45 = null;
        xYAreaRenderer42.setLegendItemURLGenerator(xYSeriesLabelGenerator45);
        xYAreaRenderer42.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean53 = xYAreaRenderer42.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot40.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer42);
        combinedDomainXYPlot40.clearDomainMarkers();
        java.awt.Font font57 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint58 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer61 = null;
        org.jfree.chart.text.TextBlock textBlock62 = org.jfree.chart.text.TextUtilities.createTextBlock("", font57, paint58, (float) (-1L), (int) (short) -1, textMeasurer61);
        combinedDomainXYPlot40.setDomainCrosshairPaint(paint58);
        org.jfree.chart.plot.PiePlot piePlot64 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup65 = piePlot64.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener66 = null;
        piePlot64.addChangeListener(plotChangeListener66);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent68 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot64);
        combinedDomainXYPlot40.plotChanged(plotChangeEvent68);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType70 = plotChangeEvent68.getType();
        combinedRangeXYPlot37.plotChanged(plotChangeEvent68);
        org.jfree.chart.plot.IntervalMarker intervalMarker74 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        boolean boolean75 = combinedRangeXYPlot37.removeRangeMarker((org.jfree.chart.plot.Marker) intervalMarker74);
        org.jfree.chart.entity.EntityCollection entityCollection78 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo79 = new org.jfree.chart.ChartRenderingInfo(entityCollection78);
        java.awt.Paint paint80 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean81 = chartRenderingInfo79.equals((java.lang.Object) paint80);
        java.awt.geom.Rectangle2D rectangle2D82 = chartRenderingInfo79.getChartArea();
        org.jfree.chart.title.TextTitle textTitle84 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity85 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D82, (org.jfree.chart.title.Title) textTitle84);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor86 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D87 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D82, rectangleAnchor86);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor88 = null;
        java.awt.geom.Point2D point2D89 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D82, rectangleAnchor88);
        org.jfree.chart.RenderingSource renderingSource90 = null;
        combinedRangeXYPlot37.select(0.0d, (double) (-16777216), rectangle2D82, renderingSource90);
        // The following exception was thrown during execution in test generation
        try {
            barRenderer3D2.drawBackground(graphics2D5, categoryPlot6, rectangle2D82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(categoryToolTipGenerator3);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "RectangleEdge.RIGHT" + "'", str12, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 149.0d + "'", double13 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(categoryAxis16);
        org.junit.Assert.assertNotNull(rectangleEdge17);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(rectangle2D25);
        org.junit.Assert.assertNull(range35);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(font57);
        org.junit.Assert.assertNotNull(paint58);
        org.junit.Assert.assertNotNull(textBlock62);
        org.junit.Assert.assertNull(datasetGroup65);
        org.junit.Assert.assertNotNull(chartChangeEventType70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(paint80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(rectangle2D82);
        org.junit.Assert.assertNotNull(rectangleAnchor86);
        org.junit.Assert.assertNotNull(point2D87);
        org.junit.Assert.assertNotNull(point2D89);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test314");
        org.jfree.chart.plot.PolarPlot polarPlot0 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Paint paint1 = polarPlot0.getAngleLabelPaint();
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo7 = chartRenderingInfo4.getPlotInfo();
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot8 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke9 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot8.setRangeCrosshairStroke(stroke9);
        java.awt.geom.Point2D point2D11 = combinedRangeXYPlot8.getQuadrantOrigin();
        // The following exception was thrown during execution in test generation
        try {
            polarPlot0.zoomRangeAxes((double) 0L, plotRenderingInfo7, point2D11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(plotRenderingInfo7);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(point2D11);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test315");
        double[] doubleArray5 = new double[] {};
        double[] doubleArray6 = new double[] {};
        double[] doubleArray7 = new double[] {};
        double[] doubleArray8 = new double[] {};
        double[] doubleArray9 = new double[] {};
        double[][] doubleArray10 = new double[][] { doubleArray5, doubleArray6, doubleArray7, doubleArray8, doubleArray9 };
        org.jfree.data.category.CategoryDataset categoryDataset11 = org.jfree.data.general.DatasetUtilities.createCategoryDataset("ClassContext", "{0}", doubleArray10);
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer14 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection15 = categoryPlot12.getDomainMarkers((int) 'a', layer14);
        java.awt.Paint paint16 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        categoryPlot12.setOutlinePaint(paint16);
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = new org.jfree.chart.plot.CategoryPlot();
        int int19 = categoryPlot18.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation20 = categoryPlot18.getOrientation();
        categoryPlot12.setOrientation(plotOrientation20);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart25 = org.jfree.chart.ChartFactory.createAreaChart("http://www.jfree.org/jfreechart/index.html", "PlotOrientation.VERTICAL", "Combined_Domain_XYPlot", categoryDataset11, plotOrientation20, true, true, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@44cc9ba9 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(categoryDataset11);
        org.junit.Assert.assertNotNull(layer14);
        org.junit.Assert.assertNull(collection15);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(plotOrientation20);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test316");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot3 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis2);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer5 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer5.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator8 = null;
        xYAreaRenderer5.setLegendItemURLGenerator(xYSeriesLabelGenerator8);
        xYAreaRenderer5.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean16 = xYAreaRenderer5.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot3.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer5);
        combinedDomainXYPlot3.clearDomainMarkers();
        java.awt.Font font20 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint21 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer24 = null;
        org.jfree.chart.text.TextBlock textBlock25 = org.jfree.chart.text.TextUtilities.createTextBlock("", font20, paint21, (float) (-1L), (int) (short) -1, textMeasurer24);
        combinedDomainXYPlot3.setDomainCrosshairPaint(paint21);
        org.jfree.chart.plot.PiePlot piePlot27 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup28 = piePlot27.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener29 = null;
        piePlot27.addChangeListener(plotChangeListener29);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent31 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot27);
        combinedDomainXYPlot3.plotChanged(plotChangeEvent31);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType33 = plotChangeEvent31.getType();
        combinedRangeXYPlot0.plotChanged(plotChangeEvent31);
        org.jfree.chart.plot.IntervalMarker intervalMarker37 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        boolean boolean38 = combinedRangeXYPlot0.removeRangeMarker((org.jfree.chart.plot.Marker) intervalMarker37);
        combinedRangeXYPlot0.configureRangeAxes();
        org.jfree.chart.util.RectangleInsets rectangleInsets40 = combinedRangeXYPlot0.getAxisOffset();
        org.jfree.chart.axis.AxisSpace axisSpace41 = new org.jfree.chart.axis.AxisSpace();
        combinedRangeXYPlot0.setFixedDomainAxisSpace(axisSpace41, false);
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(textBlock25);
        org.junit.Assert.assertNull(datasetGroup28);
        org.junit.Assert.assertNotNull(chartChangeEventType33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(rectangleInsets40);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test317");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier7 = categoryPlot0.getDrawingSupplier();
        categoryPlot0.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace9 = null;
        categoryPlot0.setFixedDomainAxisSpace(axisSpace9);
        categoryPlot0.setCrosshairDatasetIndex((int) (short) 100);
        java.awt.Color color13 = java.awt.Color.blue;
        int int14 = color13.getBlue();
        categoryPlot0.setRangeMinorGridlinePaint((java.awt.Paint) color13);
        boolean boolean16 = categoryPlot0.isRangeGridlinesVisible();
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot17 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list18 = combinedRangeXYPlot17.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot20 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis19);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer22 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer22.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator25 = null;
        xYAreaRenderer22.setLegendItemURLGenerator(xYSeriesLabelGenerator25);
        xYAreaRenderer22.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean33 = xYAreaRenderer22.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot20.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer22);
        combinedDomainXYPlot20.clearDomainMarkers();
        java.awt.Font font37 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint38 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer41 = null;
        org.jfree.chart.text.TextBlock textBlock42 = org.jfree.chart.text.TextUtilities.createTextBlock("", font37, paint38, (float) (-1L), (int) (short) -1, textMeasurer41);
        combinedDomainXYPlot20.setDomainCrosshairPaint(paint38);
        org.jfree.chart.plot.PiePlot piePlot44 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup45 = piePlot44.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener46 = null;
        piePlot44.addChangeListener(plotChangeListener46);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent48 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot44);
        combinedDomainXYPlot20.plotChanged(plotChangeEvent48);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType50 = plotChangeEvent48.getType();
        combinedRangeXYPlot17.plotChanged(plotChangeEvent48);
        org.jfree.chart.plot.IntervalMarker intervalMarker54 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        boolean boolean55 = combinedRangeXYPlot17.removeRangeMarker((org.jfree.chart.plot.Marker) intervalMarker54);
        combinedRangeXYPlot17.configureRangeAxes();
        org.jfree.chart.util.RectangleInsets rectangleInsets57 = combinedRangeXYPlot17.getAxisOffset();
        double double59 = rectangleInsets57.calculateBottomInset((double) 1577894400035L);
        categoryPlot0.setInsets(rectangleInsets57);
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertNotNull(drawingSupplier7);
        org.junit.Assert.assertNotNull(color13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 255 + "'", int14 == 255);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(font37);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNotNull(textBlock42);
        org.junit.Assert.assertNull(datasetGroup45);
        org.junit.Assert.assertNotNull(chartChangeEventType50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(rectangleInsets57);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 4.0d + "'", double59 == 4.0d);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test318");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        java.awt.Paint paint26 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot1.setRangeTickBandPaint(paint26);
        java.lang.Object obj28 = combinedDomainXYPlot1.clone();
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot29 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list30 = combinedRangeXYPlot29.getSubplots();
        combinedRangeXYPlot29.setGap((double) (-16777216));
        org.jfree.chart.util.RectangleEdge rectangleEdge33 = combinedRangeXYPlot29.getRangeAxisEdge();
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.removeChangeListener((org.jfree.chart.event.PlotChangeListener) combinedRangeXYPlot29);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.plot.CombinedRangeXYPlot@78e6c249 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(rectangleEdge33);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test319");
        java.util.TimeZone timeZone0 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection1 = new org.jfree.data.time.TimeSeriesCollection(timeZone0);
        org.jfree.chart.plot.CategoryPlot categoryPlot2 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot2.clearAnnotations();
        timeSeriesCollection1.removeChangeListener((org.jfree.data.general.DatasetChangeListener) categoryPlot2);
        org.jfree.chart.axis.ValueAxis valueAxis5 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot6 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis5);
        java.awt.Color color7 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot6.setRangeMinorGridlinePaint((java.awt.Paint) color7);
        boolean boolean9 = combinedDomainXYPlot6.canSelectByRegion();
        int int10 = combinedDomainXYPlot6.getDatasetCount();
        org.jfree.chart.LegendItemCollection legendItemCollection11 = combinedDomainXYPlot6.getLegendItems();
        categoryPlot2.setFixedLegendItems(legendItemCollection11);
        org.junit.Assert.assertNotNull(color7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(legendItemCollection11);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test320");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        org.jfree.chart.plot.PiePlot piePlot1 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup2 = piePlot1.getDatasetGroup();
        int int3 = piePlot1.getBackgroundImageAlignment();
        boolean boolean4 = piePlot1.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D5 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo6 = null;
        piePlot1.createAndAddEntity(rectangle2D5, plotRenderingInfo6, "hi!", "LGPL");
        java.awt.Paint paint10 = piePlot1.getLabelPaint();
        java.awt.Stroke stroke11 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        piePlot1.setOutlineStroke(stroke11);
        combinedDomainXYPlot0.setDomainMinorGridlineStroke(stroke11);
        int int14 = combinedDomainXYPlot0.getDatasetCount();
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot16 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis15);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer18 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer18.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator21 = null;
        xYAreaRenderer18.setLegendItemURLGenerator(xYSeriesLabelGenerator21);
        xYAreaRenderer18.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean29 = xYAreaRenderer18.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot16.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer18);
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        int int32 = combinedDomainXYPlot16.getRangeAxisIndex(valueAxis31);
        java.awt.Stroke stroke33 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        combinedDomainXYPlot16.setRangeCrosshairStroke(stroke33);
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot0.addChangeListener((org.jfree.chart.event.PlotChangeListener) combinedDomainXYPlot16);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.plot.CombinedDomainXYPlot@6678d530 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(datasetGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 15 + "'", int3 == 15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(stroke33);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test321");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        org.jfree.chart.LegendItemCollection legendItemCollection1 = combinedRangeXYPlot0.getLegendItems();
        combinedRangeXYPlot0.setRangeGridlinesVisible(true);
        combinedRangeXYPlot0.setRangeCrosshairLockedOnData(true);
        java.awt.Stroke stroke6 = org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE;
        combinedRangeXYPlot0.setRangeMinorGridlineStroke(stroke6);
        org.junit.Assert.assertNotNull(legendItemCollection1);
        org.junit.Assert.assertNotNull(stroke6);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test322");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape5 = barRenderer3D0.getBaseShape();
        barRenderer3D0.setBaseSeriesVisible(false);
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot9 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean22 = xYAreaRenderer11.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot9.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        int int25 = combinedDomainXYPlot9.getRangeAxisIndex(valueAxis24);
        boolean boolean26 = combinedDomainXYPlot9.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets27 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double28 = rectangleInsets27.getLeft();
        double double30 = rectangleInsets27.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot9.setAxisOffset(rectangleInsets27);
        combinedDomainXYPlot9.setDomainGridlinesVisible(false);
        java.awt.Paint paint34 = combinedDomainXYPlot9.getNoDataMessagePaint();
        barRenderer3D0.setBaseItemLabelPaint(paint34, false);
        barRenderer3D0.setBaseItemLabelsVisible(false);
        org.jfree.chart.LegendItem legendItem41 = barRenderer3D0.getLegendItem(0, (-16777116));
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangleInsets27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNull(legendItem41);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test323");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        boolean boolean5 = xYAreaRenderer1.getBaseItemLabelsVisible();
        java.awt.Paint paint6 = xYAreaRenderer1.getBasePaint();
        java.awt.Font font7 = xYAreaRenderer1.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator8 = null;
        xYAreaRenderer1.setBaseItemLabelGenerator(xYItemLabelGenerator8);
        xYAreaRenderer1.setUseFillPaint(true);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot14 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis13);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer16 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer16.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator19 = null;
        xYAreaRenderer16.setLegendItemURLGenerator(xYSeriesLabelGenerator19);
        xYAreaRenderer16.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean27 = xYAreaRenderer16.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot14.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer16);
        combinedDomainXYPlot14.clearDomainMarkers();
        boolean boolean30 = combinedDomainXYPlot14.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.NumberAxis numberAxis32 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis32.pan((double) 1);
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot36 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis35);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.entity.EntityCollection entityCollection38 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo39 = new org.jfree.chart.ChartRenderingInfo(entityCollection38);
        java.awt.Paint paint40 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean41 = chartRenderingInfo39.equals((java.lang.Object) paint40);
        java.awt.geom.Rectangle2D rectangle2D42 = chartRenderingInfo39.getChartArea();
        java.util.List list43 = null;
        combinedDomainXYPlot36.drawDomainGridlines(graphics2D37, rectangle2D42, list43);
        org.jfree.chart.axis.NumberAxis numberAxis46 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity49 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D42, (org.jfree.chart.axis.Axis) numberAxis46, "", "DatasetRenderingOrder.FORWARD");
        xYAreaRenderer1.drawDomainGridLine(graphics2D12, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot14, (org.jfree.chart.axis.ValueAxis) numberAxis32, rectangle2D42, (double) 11);
        numberAxis32.setLabelToolTip("{0}: ({1}, {2})");
        numberAxis32.setRange(0.0d, (double) 1L);
        double double57 = numberAxis32.getLowerMargin();
        org.jfree.chart.plot.Plot plot58 = numberAxis32.getPlot();
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot59 = new org.jfree.chart.plot.CombinedDomainXYPlot((org.jfree.chart.axis.ValueAxis) numberAxis32);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo62 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot59.handleClick(128, 3, plotRenderingInfo62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(rectangle2D42);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.05d + "'", double57 == 0.05d);
        org.junit.Assert.assertNull(plot58);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test324");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Paint paint46 = legendGraphic45.getOutlinePaint();
        legendGraphic45.setShapeOutlineVisible(false);
        boolean boolean49 = legendGraphic45.isShapeOutlineVisible();
        java.awt.Stroke stroke50 = legendGraphic45.getLineStroke();
        boolean boolean51 = legendGraphic45.isShapeFilled();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test325");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape5 = barRenderer3D0.getBaseShape();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer8 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer8.clearSeriesStrokes(false);
        boolean boolean11 = xYAreaRenderer8.getPlotLines();
        boolean boolean12 = xYAreaRenderer8.getBaseItemLabelsVisible();
        java.awt.Paint paint14 = org.jfree.chart.plot.WaferMapPlot.DEFAULT_CROSSHAIR_PAINT;
        xYAreaRenderer8.setSeriesFillPaint(7, paint14);
        barRenderer3D0.setSeriesFillPaint(10, paint14);
        org.jfree.data.category.CategoryDataset categoryDataset17 = null;
        org.jfree.data.Range range18 = barRenderer3D0.findRangeBounds(categoryDataset17);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = barRenderer3D0.getBaseURLGenerator();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = barRenderer3D0.getBasePositiveItemLabelPosition();
        java.awt.Stroke stroke21 = barRenderer3D0.getBaseOutlineStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = barRenderer3D0.getBasePositiveItemLabelPosition();
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(range18);
        org.junit.Assert.assertNull(categoryURLGenerator19);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test326");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        java.awt.Paint paint26 = combinedDomainXYPlot1.getRangeGridlinePaint();
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D29 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator30 = barRenderer3D29.getBaseToolTipGenerator();
        java.awt.Stroke stroke31 = barRenderer3D29.getBaseStroke();
        java.awt.Color color33 = java.awt.Color.magenta;
        barRenderer3D29.setSeriesPaint((int) (short) 1, (java.awt.Paint) color33, true);
        java.awt.Stroke stroke39 = barRenderer3D29.getItemStroke(9, (int) (short) 0, false);
        combinedDomainXYPlot1.setDomainCrosshairStroke(stroke39);
        combinedDomainXYPlot1.mapDatasetToDomainAxis(9, (int) (short) 10);
        boolean boolean44 = combinedDomainXYPlot1.isDomainCrosshairLockedOnData();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNull(categoryToolTipGenerator30);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNotNull(color33);
        org.junit.Assert.assertNotNull(stroke39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test327");
        org.jfree.chart.util.VerticalAlignment verticalAlignment0 = org.jfree.chart.util.VerticalAlignment.TOP;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        java.awt.Paint paint2 = combinedDomainXYPlot1.getRangeGridlinePaint();
        org.jfree.chart.plot.PolarPlot polarPlot3 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Font font4 = polarPlot3.getAngleLabelFont();
        org.jfree.chart.axis.ValueAxis valueAxis5 = polarPlot3.getAxis();
        org.jfree.chart.entity.EntityCollection entityCollection7 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo8 = new org.jfree.chart.ChartRenderingInfo(entityCollection7);
        java.awt.Paint paint9 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean10 = chartRenderingInfo8.equals((java.lang.Object) paint9);
        java.awt.geom.Rectangle2D rectangle2D11 = chartRenderingInfo8.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = chartRenderingInfo8.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo13 = plotRenderingInfo12.getOwner();
        java.awt.geom.Point2D point2D14 = null;
        polarPlot3.zoomDomainAxes((double) (byte) 1, plotRenderingInfo12, point2D14, false);
        java.awt.Stroke stroke17 = polarPlot3.getRadiusGridlineStroke();
        combinedDomainXYPlot1.setRangeZeroBaselineStroke(stroke17);
        org.jfree.chart.axis.ValueAxis valueAxis19 = combinedDomainXYPlot1.getDomainAxis();
        java.awt.Paint paint20 = valueAxis19.getLabelPaint();
        boolean boolean21 = verticalAlignment0.equals((java.lang.Object) valueAxis19);
        org.junit.Assert.assertNotNull(verticalAlignment0);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNull(valueAxis5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(rectangle2D11);
        org.junit.Assert.assertNotNull(plotRenderingInfo12);
        org.junit.Assert.assertNotNull(chartRenderingInfo13);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNotNull(valueAxis19);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test328");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier7 = categoryPlot0.getDrawingSupplier();
        categoryPlot0.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace9 = null;
        categoryPlot0.setFixedDomainAxisSpace(axisSpace9);
        org.jfree.chart.axis.CategoryAxis3D categoryAxis3D12 = new org.jfree.chart.axis.CategoryAxis3D("hi!");
        categoryPlot0.setDomainAxis((org.jfree.chart.axis.CategoryAxis) categoryAxis3D12);
        categoryAxis3D12.configure();
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot21 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis20);
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.entity.EntityCollection entityCollection23 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo24 = new org.jfree.chart.ChartRenderingInfo(entityCollection23);
        java.awt.Paint paint25 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean26 = chartRenderingInfo24.equals((java.lang.Object) paint25);
        java.awt.geom.Rectangle2D rectangle2D27 = chartRenderingInfo24.getChartArea();
        java.util.List list28 = null;
        combinedDomainXYPlot21.drawDomainGridlines(graphics2D22, rectangle2D27, list28);
        org.jfree.chart.axis.NumberAxis numberAxis31 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity34 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D27, (org.jfree.chart.axis.Axis) numberAxis31, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = new org.jfree.chart.plot.CategoryPlot();
        int int36 = categoryPlot35.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge40 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str41 = rectangleEdge40.toString();
        double double42 = categoryPlot35.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge40);
        boolean boolean43 = categoryPlot35.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis45 = categoryPlot35.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge46 = categoryPlot35.getDomainAxisEdge();
        double double47 = categoryAxis3D12.getCategorySeriesMiddle(11, (int) ' ', (int) (byte) 0, (int) (short) 100, 0.0d, rectangle2D27, rectangleEdge46);
        categoryAxis3D12.setFixedDimension(0.0d);
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertNotNull(drawingSupplier7);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangle2D27);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "RectangleEdge.RIGHT" + "'", str41, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 149.0d + "'", double42 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(categoryAxis45);
        org.junit.Assert.assertNotNull(rectangleEdge46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test329");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        boolean boolean18 = combinedDomainXYPlot1.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets19 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double20 = rectangleInsets19.getLeft();
        double double22 = rectangleInsets19.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot1.setAxisOffset(rectangleInsets19);
        combinedDomainXYPlot1.setDomainGridlinesVisible(false);
        java.awt.Paint paint26 = combinedDomainXYPlot1.getNoDataMessagePaint();
        boolean boolean27 = combinedDomainXYPlot1.canSelectByPoint();
        java.awt.Color color32 = org.jfree.chart.ChartColor.VERY_DARK_RED;
        org.jfree.chart.block.BlockBorder blockBorder33 = new org.jfree.chart.block.BlockBorder(0.025d, (double) 2, (double) 9, (double) 1L, (java.awt.Paint) color32);
        combinedDomainXYPlot1.setRangeZeroBaselinePaint((java.awt.Paint) color32);
        boolean boolean35 = combinedDomainXYPlot1.isRangeMinorGridlinesVisible();
        combinedDomainXYPlot1.clearDomainAxes();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(rectangleInsets19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(color32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test330");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D2 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator3 = barRenderer3D2.getBaseToolTipGenerator();
        java.awt.Stroke stroke4 = barRenderer3D2.getBaseStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = barRenderer3D2.getBaseItemLabelGenerator();
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot7 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        double double8 = combinedRangeXYPlot7.getGap();
        java.awt.Paint paint9 = combinedRangeXYPlot7.getRangeGridlinePaint();
        barRenderer3D2.setSeriesItemLabelPaint(128, paint9);
        org.junit.Assert.assertNull(categoryToolTipGenerator3);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 5.0d + "'", double8 == 5.0d);
        org.junit.Assert.assertNotNull(paint9);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test331");
        org.jfree.chart.labels.StandardPieSectionLabelGenerator standardPieSectionLabelGenerator0 = new org.jfree.chart.labels.StandardPieSectionLabelGenerator();
        org.jfree.data.general.PieDataset pieDataset1 = null;
        java.lang.String str3 = standardPieSectionLabelGenerator0.generateSectionLabel(pieDataset1, (java.lang.Comparable) 2.0d);
        java.text.AttributedString attributedString5 = null;
        standardPieSectionLabelGenerator0.setAttributedLabel((int) (short) 1, attributedString5);
        java.text.NumberFormat numberFormat7 = standardPieSectionLabelGenerator0.getPercentFormat();
        org.jfree.data.general.PieDataset pieDataset8 = null;
        java.lang.Comparable comparable9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedString attributedString10 = standardPieSectionLabelGenerator0.generateAttributedSectionLabel(pieDataset8, comparable9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(numberFormat7);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test332");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Color color2 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot1.setRangeMinorGridlinePaint((java.awt.Paint) color2);
        boolean boolean4 = combinedDomainXYPlot1.canSelectByRegion();
        org.jfree.chart.axis.AxisSpace axisSpace5 = null;
        combinedDomainXYPlot1.setFixedRangeAxisSpace(axisSpace5, false);
        java.awt.Stroke stroke8 = combinedDomainXYPlot1.getRangeCrosshairStroke();
        boolean boolean9 = combinedDomainXYPlot1.isRangeCrosshairLockedOnData();
        org.junit.Assert.assertNotNull(color2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test333");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Paint paint46 = legendGraphic45.getOutlinePaint();
        legendGraphic45.setShapeOutlineVisible(false);
        boolean boolean49 = legendGraphic45.isShapeOutlineVisible();
        boolean boolean50 = legendGraphic45.isShapeOutlineVisible();
        legendGraphic45.setShapeFilled(true);
        org.jfree.chart.plot.CategoryPlot categoryPlot53 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer55 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection56 = categoryPlot53.getDomainMarkers((int) 'a', layer55);
        org.jfree.data.category.CategoryDataset categoryDataset58 = null;
        categoryPlot53.setDataset(4, categoryDataset58);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier60 = categoryPlot53.getDrawingSupplier();
        categoryPlot53.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace62 = null;
        categoryPlot53.setFixedDomainAxisSpace(axisSpace62);
        org.jfree.chart.axis.CategoryAxis3D categoryAxis3D65 = new org.jfree.chart.axis.CategoryAxis3D("hi!");
        categoryPlot53.setDomainAxis((org.jfree.chart.axis.CategoryAxis) categoryAxis3D65);
        java.awt.Stroke stroke67 = categoryPlot53.getRangeGridlineStroke();
        legendGraphic45.setLineStroke(stroke67);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(layer55);
        org.junit.Assert.assertNull(collection56);
        org.junit.Assert.assertNotNull(drawingSupplier60);
        org.junit.Assert.assertNotNull(stroke67);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test334");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        org.jfree.chart.plot.PiePlot piePlot1 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup2 = piePlot1.getDatasetGroup();
        int int3 = piePlot1.getBackgroundImageAlignment();
        boolean boolean4 = piePlot1.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D5 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo6 = null;
        piePlot1.createAndAddEntity(rectangle2D5, plotRenderingInfo6, "hi!", "LGPL");
        java.awt.Paint paint10 = piePlot1.getLabelPaint();
        java.awt.Stroke stroke11 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        piePlot1.setOutlineStroke(stroke11);
        combinedDomainXYPlot0.setDomainMinorGridlineStroke(stroke11);
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot14 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list15 = combinedRangeXYPlot14.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot17 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis16);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer19 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer19.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator22 = null;
        xYAreaRenderer19.setLegendItemURLGenerator(xYSeriesLabelGenerator22);
        xYAreaRenderer19.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean30 = xYAreaRenderer19.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot17.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer19);
        combinedDomainXYPlot17.clearDomainMarkers();
        java.awt.Font font34 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint35 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer38 = null;
        org.jfree.chart.text.TextBlock textBlock39 = org.jfree.chart.text.TextUtilities.createTextBlock("", font34, paint35, (float) (-1L), (int) (short) -1, textMeasurer38);
        combinedDomainXYPlot17.setDomainCrosshairPaint(paint35);
        org.jfree.chart.plot.PiePlot piePlot41 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup42 = piePlot41.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener43 = null;
        piePlot41.addChangeListener(plotChangeListener43);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent45 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot41);
        combinedDomainXYPlot17.plotChanged(plotChangeEvent45);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType47 = plotChangeEvent45.getType();
        combinedRangeXYPlot14.plotChanged(plotChangeEvent45);
        combinedDomainXYPlot0.plotChanged(plotChangeEvent45);
        org.junit.Assert.assertNull(datasetGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 15 + "'", int3 == 15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(font34);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNotNull(textBlock39);
        org.junit.Assert.assertNull(datasetGroup42);
        org.junit.Assert.assertNotNull(chartChangeEventType47);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test335");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D2 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.axis.ValueAxis valueAxis3 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot4 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis3);
        java.awt.Color color5 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot4.setRangeMinorGridlinePaint((java.awt.Paint) color5);
        boolean boolean7 = combinedDomainXYPlot4.canSelectByRegion();
        barRenderer3D2.addChangeListener((org.jfree.chart.event.RendererChangeListener) combinedDomainXYPlot4);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = barRenderer3D2.getLegendItemURLGenerator();
        java.awt.Paint paint11 = barRenderer3D2.getSeriesItemLabelPaint((int) ' ');
        boolean boolean12 = barRenderer3D2.getAutoPopulateSeriesStroke();
        org.junit.Assert.assertNotNull(color5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test336");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        combinedRangeXYPlot0.setGap((double) (-16777216));
        combinedRangeXYPlot0.setRangeCrosshairVisible(false);
        java.awt.Stroke stroke6 = combinedRangeXYPlot0.getRangeMinorGridlineStroke();
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(stroke6);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test337");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        org.jfree.chart.LegendItemCollection legendItemCollection1 = combinedRangeXYPlot0.getLegendItems();
        combinedRangeXYPlot0.setRangePannable(false);
        org.jfree.chart.renderer.xy.XYStepRenderer xYStepRenderer4 = new org.jfree.chart.renderer.xy.XYStepRenderer();
        java.lang.Boolean boolean6 = xYStepRenderer4.getSeriesLinesVisible(0);
        xYStepRenderer4.setUseOutlinePaint(true);
        combinedRangeXYPlot0.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYStepRenderer4);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D10 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font14 = barRenderer3D10.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        xYStepRenderer4.setBaseItemLabelFont(font14);
        org.junit.Assert.assertNotNull(legendItemCollection1);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(font14);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test338");
        org.jfree.chart.plot.RingPlot ringPlot0 = new org.jfree.chart.plot.RingPlot();
        java.awt.Shape shape1 = ringPlot0.getLegendItemShape();
        org.jfree.data.general.PieDataset pieDataset2 = ringPlot0.getDataset();
        java.awt.Graphics2D graphics2D3 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot5 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        org.jfree.chart.axis.NumberAxis numberAxis8 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis8.pan((double) 1);
        numberAxis8.setTickLabelsVisible(false);
        combinedDomainXYPlot5.setRangeAxis(255, (org.jfree.chart.axis.ValueAxis) numberAxis8);
        java.awt.geom.GeneralPath generalPath14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot();
        int int16 = categoryPlot15.getDatasetCount();
        categoryPlot15.setAnchorValue((double) 10.0f);
        java.awt.Graphics2D graphics2D19 = null;
        org.jfree.chart.entity.EntityCollection entityCollection20 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo21 = new org.jfree.chart.ChartRenderingInfo(entityCollection20);
        java.awt.Paint paint22 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean23 = chartRenderingInfo21.equals((java.lang.Object) paint22);
        java.awt.geom.Rectangle2D rectangle2D24 = chartRenderingInfo21.getChartArea();
        org.jfree.chart.title.TextTitle textTitle26 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity27 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D24, (org.jfree.chart.title.Title) textTitle26);
        org.jfree.chart.axis.AxisSpace axisSpace28 = categoryPlot15.calculateAxisSpace(graphics2D19, rectangle2D24);
        org.jfree.chart.RenderingSource renderingSource29 = null;
        combinedDomainXYPlot5.select(generalPath14, rectangle2D24, renderingSource29);
        org.jfree.chart.plot.PiePlotState piePlotState31 = null;
        // The following exception was thrown during execution in test generation
        try {
            ringPlot0.drawItem(graphics2D3, (int) (byte) 0, rectangle2D24, piePlotState31, 500);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape1);
        org.junit.Assert.assertNull(pieDataset2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(rectangle2D24);
        org.junit.Assert.assertNotNull(axisSpace28);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test339");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        combinedDomainXYPlot1.setDomainAxis(valueAxis18);
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot21 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis20);
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.entity.EntityCollection entityCollection23 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo24 = new org.jfree.chart.ChartRenderingInfo(entityCollection23);
        java.awt.Paint paint25 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean26 = chartRenderingInfo24.equals((java.lang.Object) paint25);
        java.awt.geom.Rectangle2D rectangle2D27 = chartRenderingInfo24.getChartArea();
        java.util.List list28 = null;
        combinedDomainXYPlot21.drawDomainGridlines(graphics2D22, rectangle2D27, list28);
        org.jfree.chart.axis.NumberAxis numberAxis31 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity34 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D27, (org.jfree.chart.axis.Axis) numberAxis31, "", "DatasetRenderingOrder.FORWARD");
        combinedDomainXYPlot1.setRangeAxis((org.jfree.chart.axis.ValueAxis) numberAxis31);
        combinedDomainXYPlot1.clearDomainMarkers();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer39 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer39.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator42 = null;
        xYAreaRenderer39.setLegendItemURLGenerator(xYSeriesLabelGenerator42);
        xYAreaRenderer39.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean48 = xYAreaRenderer39.isSeriesVisible((-16777216));
        java.awt.Shape shape50 = xYAreaRenderer39.getLegendShape(0);
        java.awt.Shape shape52 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        xYAreaRenderer39.setSeriesShape((int) (byte) 100, shape52, false);
        org.jfree.chart.plot.PolarPlot polarPlot55 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Paint paint56 = polarPlot55.getAngleLabelPaint();
        java.awt.Stroke stroke57 = polarPlot55.getAngleGridlineStroke();
        xYAreaRenderer39.setBaseOutlineStroke(stroke57);
        combinedDomainXYPlot1.setRenderer(9, (org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer39, false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangle2D27);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(shape50);
        org.junit.Assert.assertNotNull(shape52);
        org.junit.Assert.assertNotNull(paint56);
        org.junit.Assert.assertNotNull(stroke57);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test340");
        org.jfree.data.time.Year year2 = new org.jfree.data.time.Year((int) (short) 0);
        long long3 = year2.getFirstMillisecond();
        org.jfree.data.time.Year year5 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis6 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year2, (org.jfree.data.time.RegularTimePeriod) year5);
        int int7 = year5.getYear();
        org.jfree.data.xy.XYSeries xYSeries8 = new org.jfree.data.xy.XYSeries((java.lang.Comparable) year5);
        org.jfree.data.xy.XYSeries xYSeries11 = xYSeries8.createCopy((int) (short) 0, (int) ' ');
        org.jfree.data.xy.XYSeriesCollection xYSeriesCollection12 = new org.jfree.data.xy.XYSeriesCollection(xYSeries11);
        double double14 = xYSeriesCollection12.getRangeLowerBound(true);
        org.jfree.data.xy.XYDatasetSelectionState xYDatasetSelectionState15 = xYSeriesCollection12.getSelectionState();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-62167363200000L) + "'", long3 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(xYSeries11);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(xYDatasetSelectionState15);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test341");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke1 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot0.setRangeCrosshairStroke(stroke1);
        org.jfree.chart.plot.PiePlot piePlot3 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup4 = piePlot3.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener5 = null;
        piePlot3.addChangeListener(plotChangeListener5);
        java.awt.Color color9 = java.awt.Color.getColor("hi!", (int) (short) 100);
        piePlot3.setLabelOutlinePaint((java.awt.Paint) color9);
        java.awt.Paint paint11 = piePlot3.getLabelLinkPaint();
        org.jfree.chart.util.RectangleInsets rectangleInsets12 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        piePlot3.setLabelPadding(rectangleInsets12);
        combinedRangeXYPlot0.setInsets(rectangleInsets12);
        org.jfree.chart.util.UnitType unitType15 = rectangleInsets12.getUnitType();
        java.lang.String str16 = unitType15.toString();
        org.junit.Assert.assertNotNull(stroke1);
        org.junit.Assert.assertNull(datasetGroup4);
        org.junit.Assert.assertNotNull(color9);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(rectangleInsets12);
        org.junit.Assert.assertNotNull(unitType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UnitType.ABSOLUTE" + "'", str16, "UnitType.ABSOLUTE");
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test342");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Paint paint46 = legendGraphic45.getOutlinePaint();
        java.awt.Paint paint47 = legendGraphic45.getLinePaint();
        java.awt.Stroke stroke48 = legendGraphic45.getOutlineStroke();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertNull(paint47);
        org.junit.Assert.assertNull(stroke48);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test343");
        org.jfree.chart.block.BorderArrangement borderArrangement0 = new org.jfree.chart.block.BorderArrangement();
        java.util.TimeZone timeZone1 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection2 = new org.jfree.data.time.TimeSeriesCollection(timeZone1);
        org.jfree.chart.title.LegendItemBlockContainer legendItemBlockContainer4 = new org.jfree.chart.title.LegendItemBlockContainer((org.jfree.chart.block.Arrangement) borderArrangement0, (org.jfree.data.general.Dataset) timeSeriesCollection2, (java.lang.Comparable) (byte) 10);
        java.lang.Comparable comparable5 = null;
        int int6 = timeSeriesCollection2.indexOf(comparable5);
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot8 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis7);
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.entity.EntityCollection entityCollection10 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo11 = new org.jfree.chart.ChartRenderingInfo(entityCollection10);
        java.awt.Paint paint12 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean13 = chartRenderingInfo11.equals((java.lang.Object) paint12);
        java.awt.geom.Rectangle2D rectangle2D14 = chartRenderingInfo11.getChartArea();
        java.util.List list15 = null;
        combinedDomainXYPlot8.drawDomainGridlines(graphics2D9, rectangle2D14, list15);
        org.jfree.chart.axis.NumberAxis numberAxis18 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity21 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D14, (org.jfree.chart.axis.Axis) numberAxis18, "", "DatasetRenderingOrder.FORWARD");
        numberAxis18.centerRange(10.0d);
        org.jfree.chart.axis.NumberAxis numberAxis25 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis25.pan((double) 1);
        numberAxis25.setTickLabelsVisible(false);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer31 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean33 = xYAreaRenderer31.isSeriesItemLabelsVisible((int) (byte) 1);
        org.jfree.chart.plot.XYPlot xYPlot34 = new org.jfree.chart.plot.XYPlot((org.jfree.data.xy.XYDataset) timeSeriesCollection2, (org.jfree.chart.axis.ValueAxis) numberAxis18, (org.jfree.chart.axis.ValueAxis) numberAxis25, (org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer31);
        java.awt.Color color35 = org.jfree.chart.ChartColor.DARK_MAGENTA;
        xYAreaRenderer31.setBaseFillPaint((java.awt.Paint) color35, false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(rectangle2D14);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(color35);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test344");
        org.jfree.chart.util.RectangleInsets rectangleInsets0 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        org.jfree.chart.title.TextTitle textTitle2 = new org.jfree.chart.title.TextTitle("");
        boolean boolean3 = textTitle2.getExpandToFitSpace();
        textTitle2.setText("");
        java.lang.String str6 = textTitle2.getID();
        java.awt.Font font7 = textTitle2.getFont();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer9 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer9.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator12 = null;
        xYAreaRenderer9.setLegendItemURLGenerator(xYSeriesLabelGenerator12);
        xYAreaRenderer9.setSeriesVisibleInLegend((int) (byte) 10, (java.lang.Boolean) false);
        xYAreaRenderer9.setBaseItemLabelsVisible(true);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator20 = null;
        xYAreaRenderer9.setSeriesURLGenerator((int) (short) 100, xYURLGenerator20, false);
        java.awt.Paint paint26 = xYAreaRenderer9.getItemFillPaint((int) (short) 10, (int) 'a', true);
        textTitle2.setBackgroundPaint(paint26);
        org.jfree.chart.block.BlockBorder blockBorder28 = new org.jfree.chart.block.BlockBorder(rectangleInsets0, paint26);
        org.junit.Assert.assertNotNull(rectangleInsets0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertNotNull(paint26);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test345");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D2 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.axis.ValueAxis valueAxis3 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot4 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis3);
        java.awt.Color color5 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot4.setRangeMinorGridlinePaint((java.awt.Paint) color5);
        boolean boolean7 = combinedDomainXYPlot4.canSelectByRegion();
        barRenderer3D2.addChangeListener((org.jfree.chart.event.RendererChangeListener) combinedDomainXYPlot4);
        org.jfree.chart.axis.AxisLocation axisLocation9 = combinedDomainXYPlot4.getDomainAxisLocation();
        org.junit.Assert.assertNotNull(color5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(axisLocation9);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test346");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        combinedRangeXYPlot0.setGap((double) (-16777216));
        org.jfree.chart.util.RectangleEdge rectangleEdge4 = combinedRangeXYPlot0.getRangeAxisEdge();
        combinedRangeXYPlot0.setGap((double) 2958465);
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(rectangleEdge4);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test347");
        org.jfree.chart.plot.PiePlot piePlot1 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup2 = piePlot1.getDatasetGroup();
        int int3 = piePlot1.getBackgroundImageAlignment();
        boolean boolean4 = piePlot1.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D5 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo6 = null;
        piePlot1.createAndAddEntity(rectangle2D5, plotRenderingInfo6, "hi!", "LGPL");
        piePlot1.setStartAngle((double) 1);
        org.jfree.data.xy.XYDataItem xYDataItem14 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        java.awt.Color color17 = java.awt.Color.getColor("hi!", (int) (short) 100);
        boolean boolean18 = xYDataItem14.equals((java.lang.Object) "hi!");
        java.awt.Color color19 = java.awt.Color.MAGENTA;
        piePlot1.setSectionPaint((java.lang.Comparable) "hi!", (java.awt.Paint) color19);
        org.jfree.chart.LegendItem legendItem21 = new org.jfree.chart.LegendItem("http://www.jfree.org/jfreechart/index.html", (java.awt.Paint) color19);
        java.awt.Color color22 = java.awt.Color.pink;
        boolean boolean23 = legendItem21.equals((java.lang.Object) color22);
        org.junit.Assert.assertNull(datasetGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 15 + "'", int3 == 15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(color17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(color19);
        org.junit.Assert.assertNotNull(color22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test348");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        boolean boolean46 = legendGraphic45.isLineVisible();
        legendGraphic45.setShapeFilled(true);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor49 = legendGraphic45.getShapeLocation();
        java.awt.Paint paint50 = legendGraphic45.getOutlinePaint();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(rectangleAnchor49);
        org.junit.Assert.assertNull(paint50);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test349");
        double[] doubleArray5 = new double[] {};
        double[] doubleArray6 = new double[] {};
        double[] doubleArray7 = new double[] {};
        double[] doubleArray8 = new double[] {};
        double[] doubleArray9 = new double[] {};
        double[][] doubleArray10 = new double[][] { doubleArray5, doubleArray6, doubleArray7, doubleArray8, doubleArray9 };
        org.jfree.data.category.CategoryDataset categoryDataset11 = org.jfree.data.general.DatasetUtilities.createCategoryDataset("ClassContext", "{0}", doubleArray10);
        java.lang.Number number12 = org.jfree.data.general.DatasetUtilities.findMaximumRangeValue(categoryDataset11);
        java.lang.Number number13 = org.jfree.data.general.DatasetUtilities.findMinimumRangeValue(categoryDataset11);
        org.jfree.data.Range range15 = org.jfree.data.general.DatasetUtilities.iterateCategoryRangeBounds(categoryDataset11, false);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot17 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis16);
        java.awt.Graphics2D graphics2D18 = null;
        org.jfree.chart.entity.EntityCollection entityCollection19 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo20 = new org.jfree.chart.ChartRenderingInfo(entityCollection19);
        java.awt.Paint paint21 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean22 = chartRenderingInfo20.equals((java.lang.Object) paint21);
        java.awt.geom.Rectangle2D rectangle2D23 = chartRenderingInfo20.getChartArea();
        java.util.List list24 = null;
        combinedDomainXYPlot17.drawDomainGridlines(graphics2D18, rectangle2D23, list24);
        org.jfree.chart.axis.AxisSpace axisSpace26 = combinedDomainXYPlot17.getFixedRangeAxisSpace();
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer29 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection30 = categoryPlot27.getDomainMarkers((int) 'a', layer29);
        java.awt.Paint paint31 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        categoryPlot27.setOutlinePaint(paint31);
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = new org.jfree.chart.plot.CategoryPlot();
        int int34 = categoryPlot33.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation35 = categoryPlot33.getOrientation();
        categoryPlot27.setOrientation(plotOrientation35);
        combinedDomainXYPlot17.setOrientation(plotOrientation35);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart41 = org.jfree.chart.ChartFactory.createLineChart("ChartChangeEventType.DATASET_UPDATED", "RectangleEdge.RIGHT", "SerialDate.weekInMonthToString(): invalid code.", categoryDataset11, plotOrientation35, false, false, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@16231558 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(categoryDataset11);
        org.junit.Assert.assertNull(number12);
        org.junit.Assert.assertNull(number13);
        org.junit.Assert.assertNull(range15);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(rectangle2D23);
        org.junit.Assert.assertNull(axisSpace26);
        org.junit.Assert.assertNotNull(layer29);
        org.junit.Assert.assertNull(collection30);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(plotOrientation35);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test350");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        combinedDomainXYPlot1.setDomainAxis(valueAxis18);
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot21 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis20);
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.entity.EntityCollection entityCollection23 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo24 = new org.jfree.chart.ChartRenderingInfo(entityCollection23);
        java.awt.Paint paint25 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean26 = chartRenderingInfo24.equals((java.lang.Object) paint25);
        java.awt.geom.Rectangle2D rectangle2D27 = chartRenderingInfo24.getChartArea();
        java.util.List list28 = null;
        combinedDomainXYPlot21.drawDomainGridlines(graphics2D22, rectangle2D27, list28);
        org.jfree.chart.axis.NumberAxis numberAxis31 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity34 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D27, (org.jfree.chart.axis.Axis) numberAxis31, "", "DatasetRenderingOrder.FORWARD");
        combinedDomainXYPlot1.setRangeAxis((org.jfree.chart.axis.ValueAxis) numberAxis31);
        combinedDomainXYPlot1.setDomainCrosshairValue((double) 12, false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangle2D27);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test351");
        org.jfree.chart.title.TextTitle textTitle1 = new org.jfree.chart.title.TextTitle("");
        boolean boolean2 = textTitle1.getExpandToFitSpace();
        textTitle1.setText("");
        java.lang.String str5 = textTitle1.getID();
        java.awt.Font font6 = textTitle1.getFont();
        java.awt.Graphics2D graphics2D7 = null;
        org.jfree.chart.entity.EntityCollection entityCollection8 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo9 = new org.jfree.chart.ChartRenderingInfo(entityCollection8);
        java.awt.Paint paint10 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean11 = chartRenderingInfo9.equals((java.lang.Object) paint10);
        java.awt.geom.Rectangle2D rectangle2D12 = chartRenderingInfo9.getChartArea();
        textTitle1.draw(graphics2D7, rectangle2D12);
        org.jfree.chart.axis.NumberAxis numberAxis15 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis15.pan((double) 1);
        numberAxis15.setTickLabelsVisible(false);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D24 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font28 = barRenderer3D24.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        org.jfree.chart.axis.MarkerAxisBand markerAxisBand29 = new org.jfree.chart.axis.MarkerAxisBand(numberAxis15, (double) (short) -1, (double) (short) 1, (double) (-16777216), (double) 1L, font28);
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot30 = new org.jfree.chart.plot.CombinedDomainXYPlot((org.jfree.chart.axis.ValueAxis) numberAxis15);
        org.jfree.chart.block.LabelBlock labelBlock33 = new org.jfree.chart.block.LabelBlock("RectangleEdge.RIGHT");
        java.lang.String str34 = labelBlock33.getToolTipText();
        java.awt.geom.Rectangle2D rectangle2D35 = labelBlock33.getBounds();
        org.jfree.chart.plot.CategoryPlot categoryPlot36 = new org.jfree.chart.plot.CategoryPlot();
        int int37 = categoryPlot36.getDatasetCount();
        categoryPlot36.setAnchorValue((double) 10.0f);
        org.jfree.chart.util.RectangleEdge rectangleEdge40 = categoryPlot36.getRangeAxisEdge();
        double double41 = numberAxis15.lengthToJava2D((double) 0L, rectangle2D35, rectangleEdge40);
        textTitle1.setPosition(rectangleEdge40);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(font6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(rectangle2D12);
        org.junit.Assert.assertNotNull(font28);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(rectangle2D35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test352");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.PiePlot piePlot25 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup26 = piePlot25.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener27 = null;
        piePlot25.addChangeListener(plotChangeListener27);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent29 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot25);
        combinedDomainXYPlot1.plotChanged(plotChangeEvent29);
        java.awt.Paint paint31 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        combinedDomainXYPlot1.setDomainGridlinePaint(paint31);
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer35 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection36 = categoryPlot33.getDomainMarkers((int) 'a', layer35);
        org.jfree.data.category.CategoryDataset categoryDataset38 = null;
        categoryPlot33.setDataset(4, categoryDataset38);
        org.jfree.chart.axis.AxisLocation axisLocation40 = org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT;
        categoryPlot33.setRangeAxisLocation(axisLocation40, false);
        org.jfree.chart.axis.AxisLocation axisLocation44 = categoryPlot33.getRangeAxisLocation((-1));
        combinedDomainXYPlot1.setRangeAxisLocation(axisLocation44, true);
        combinedDomainXYPlot1.setDomainMinorGridlinesVisible(true);
        double double49 = combinedDomainXYPlot1.getRangeCrosshairValue();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNull(datasetGroup26);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(layer35);
        org.junit.Assert.assertNull(collection36);
        org.junit.Assert.assertNotNull(axisLocation40);
        org.junit.Assert.assertNotNull(axisLocation44);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test353");
        org.jfree.chart.plot.PiePlot piePlot0 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup1 = piePlot0.getDatasetGroup();
        int int2 = piePlot0.getBackgroundImageAlignment();
        boolean boolean3 = piePlot0.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D4 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo5 = null;
        piePlot0.createAndAddEntity(rectangle2D4, plotRenderingInfo5, "hi!", "LGPL");
        java.awt.Paint paint9 = piePlot0.getLabelPaint();
        java.awt.Stroke stroke10 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        piePlot0.setOutlineStroke(stroke10);
        java.awt.Font font12 = piePlot0.getNoDataMessageFont();
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot13 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        org.jfree.chart.axis.NumberAxis numberAxis16 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis16.pan((double) 1);
        numberAxis16.setTickLabelsVisible(false);
        combinedDomainXYPlot13.setRangeAxis(255, (org.jfree.chart.axis.ValueAxis) numberAxis16);
        java.awt.geom.GeneralPath generalPath22 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot23 = new org.jfree.chart.plot.CategoryPlot();
        int int24 = categoryPlot23.getDatasetCount();
        categoryPlot23.setAnchorValue((double) 10.0f);
        java.awt.Graphics2D graphics2D27 = null;
        org.jfree.chart.entity.EntityCollection entityCollection28 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo29 = new org.jfree.chart.ChartRenderingInfo(entityCollection28);
        java.awt.Paint paint30 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean31 = chartRenderingInfo29.equals((java.lang.Object) paint30);
        java.awt.geom.Rectangle2D rectangle2D32 = chartRenderingInfo29.getChartArea();
        org.jfree.chart.title.TextTitle textTitle34 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity35 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D32, (org.jfree.chart.title.Title) textTitle34);
        org.jfree.chart.axis.AxisSpace axisSpace36 = categoryPlot23.calculateAxisSpace(graphics2D27, rectangle2D32);
        org.jfree.chart.RenderingSource renderingSource37 = null;
        combinedDomainXYPlot13.select(generalPath22, rectangle2D32, renderingSource37);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo39 = null;
        piePlot0.createAndAddEntity(rectangle2D32, plotRenderingInfo39, "EXPAND", "LegendItemEntity: seriesKey=null, dataset=null");
        org.junit.Assert.assertNull(datasetGroup1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 15 + "'", int2 == 15);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNotNull(font12);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(rectangle2D32);
        org.junit.Assert.assertNotNull(axisSpace36);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test354");
        org.jfree.data.xy.OHLCDataset oHLCDataset3 = null;
        org.jfree.chart.axis.Timeline timeline4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart6 = org.jfree.chart.ChartFactory.createHighLowChart("", "Category Plot", "RectangleAnchor.TOP_LEFT", oHLCDataset3, timeline4, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test355");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        java.awt.Graphics2D graphics2D1 = null;
        java.awt.geom.Rectangle2D rectangle2D2 = null;
        categoryPlot0.drawDomainGridlines(graphics2D1, rectangle2D2);
        org.jfree.data.category.CategoryDataset categoryDataset4 = null;
        int int5 = categoryPlot0.indexOf(categoryDataset4);
        categoryPlot0.clearRangeMarkers();
        org.jfree.chart.LegendItemCollection legendItemCollection7 = categoryPlot0.getLegendItems();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(legendItemCollection7);
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test356");
        org.jfree.chart.plot.PolarPlot polarPlot0 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Paint paint1 = polarPlot0.getAngleLabelPaint();
        org.jfree.chart.plot.PolarPlot polarPlot3 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Font font4 = polarPlot3.getAngleLabelFont();
        org.jfree.chart.axis.ValueAxis valueAxis5 = polarPlot3.getAxis();
        org.jfree.chart.entity.EntityCollection entityCollection7 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo8 = new org.jfree.chart.ChartRenderingInfo(entityCollection7);
        java.awt.Paint paint9 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean10 = chartRenderingInfo8.equals((java.lang.Object) paint9);
        java.awt.geom.Rectangle2D rectangle2D11 = chartRenderingInfo8.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = chartRenderingInfo8.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo13 = plotRenderingInfo12.getOwner();
        java.awt.geom.Point2D point2D14 = null;
        polarPlot3.zoomDomainAxes((double) (byte) 1, plotRenderingInfo12, point2D14, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot17.clearAnnotations();
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent19 = null;
        categoryPlot17.rendererChanged(rendererChangeEvent19);
        org.jfree.chart.entity.EntityCollection entityCollection22 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo23 = new org.jfree.chart.ChartRenderingInfo(entityCollection22);
        java.awt.Paint paint24 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean25 = chartRenderingInfo23.equals((java.lang.Object) paint24);
        java.awt.geom.Rectangle2D rectangle2D26 = chartRenderingInfo23.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo27 = chartRenderingInfo23.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo28 = plotRenderingInfo27.getOwner();
        java.awt.geom.Point2D point2D29 = null;
        categoryPlot17.zoomRangeAxes(1.0E-8d, plotRenderingInfo27, point2D29, true);
        plotRenderingInfo12.addSubplotInfo(plotRenderingInfo27);
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot33 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke34 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot33.setRangeCrosshairStroke(stroke34);
        java.awt.geom.Point2D point2D36 = combinedRangeXYPlot33.getQuadrantOrigin();
        polarPlot0.zoomDomainAxes((double) (-9999), plotRenderingInfo12, point2D36);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNull(valueAxis5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(rectangle2D11);
        org.junit.Assert.assertNotNull(plotRenderingInfo12);
        org.junit.Assert.assertNotNull(chartRenderingInfo13);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(rectangle2D26);
        org.junit.Assert.assertNotNull(plotRenderingInfo27);
        org.junit.Assert.assertNotNull(chartRenderingInfo28);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertNotNull(point2D36);
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test357");
        org.jfree.chart.title.TextTitle textTitle1 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot3 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis2);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer5 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer5.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator8 = null;
        xYAreaRenderer5.setLegendItemURLGenerator(xYSeriesLabelGenerator8);
        xYAreaRenderer5.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean16 = xYAreaRenderer5.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot3.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer5);
        boolean boolean18 = combinedDomainXYPlot3.canSelectByPoint();
        org.jfree.chart.axis.AxisLocation axisLocation19 = org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT;
        combinedDomainXYPlot3.setRangeAxisLocation(axisLocation19, true);
        boolean boolean22 = textTitle1.equals((java.lang.Object) combinedDomainXYPlot3);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType23 = org.jfree.chart.event.ChartChangeEventType.GENERAL;
        java.lang.String str24 = chartChangeEventType23.toString();
        boolean boolean25 = combinedDomainXYPlot3.equals((java.lang.Object) chartChangeEventType23);
        java.awt.Graphics2D graphics2D26 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot27.clearAnnotations();
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent29 = null;
        categoryPlot27.rendererChanged(rendererChangeEvent29);
        org.jfree.chart.entity.EntityCollection entityCollection32 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo33 = new org.jfree.chart.ChartRenderingInfo(entityCollection32);
        java.awt.Paint paint34 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean35 = chartRenderingInfo33.equals((java.lang.Object) paint34);
        java.awt.geom.Rectangle2D rectangle2D36 = chartRenderingInfo33.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo37 = chartRenderingInfo33.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo38 = plotRenderingInfo37.getOwner();
        java.awt.geom.Point2D point2D39 = null;
        categoryPlot27.zoomRangeAxes(1.0E-8d, plotRenderingInfo37, point2D39, true);
        java.awt.geom.Rectangle2D rectangle2D42 = plotRenderingInfo37.getDataArea();
        org.jfree.data.xy.DefaultXYDataset defaultXYDataset43 = new org.jfree.data.xy.DefaultXYDataset();
        int int45 = defaultXYDataset43.indexOf((java.lang.Comparable) (-1L));
        int int46 = defaultXYDataset43.getSeriesCount();
        org.jfree.data.DomainOrder domainOrder47 = defaultXYDataset43.getDomainOrder();
        org.jfree.chart.axis.SegmentedTimeline segmentedTimeline48 = org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline();
        long long50 = segmentedTimeline48.getTimeFromLong((long) (byte) 10);
        long long51 = segmentedTimeline48.getSegmentSize();
        org.jfree.chart.axis.SegmentedTimeline segmentedTimeline52 = org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline();
        boolean boolean55 = segmentedTimeline52.containsDomainRange((long) 1, (long) (byte) 10);
        long long57 = segmentedTimeline52.toTimelineValue((long) '#');
        java.util.List list58 = segmentedTimeline52.getExceptionSegments();
        segmentedTimeline48.setExceptionSegments(list58);
        org.jfree.data.Range range61 = org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds((org.jfree.data.xy.XYDataset) defaultXYDataset43, list58, false);
        combinedDomainXYPlot3.drawRangeGridlines(graphics2D26, rectangle2D42, list58);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(axisLocation19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(chartChangeEventType23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ChartChangeEventType.GENERAL" + "'", str24, "ChartChangeEventType.GENERAL");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(rectangle2D36);
        org.junit.Assert.assertNotNull(plotRenderingInfo37);
        org.junit.Assert.assertNotNull(chartRenderingInfo38);
        org.junit.Assert.assertNotNull(rectangle2D42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(domainOrder47);
        org.junit.Assert.assertNotNull(segmentedTimeline48);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 10L + "'", long50 == 10L);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 86400000L + "'", long51 == 86400000L);
        org.junit.Assert.assertNotNull(segmentedTimeline52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1577894400035L + "'", long57 == 1577894400035L);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNull(range61);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test358");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        java.awt.Stroke stroke18 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        combinedDomainXYPlot1.setRangeCrosshairStroke(stroke18);
        combinedDomainXYPlot1.setRangeZeroBaselineVisible(false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(stroke18);
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test359");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo8 = chartRenderingInfo4.getPlotInfo();
        combinedRangeXYPlot0.handleClick(11, (-9999), plotRenderingInfo8);
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = new org.jfree.chart.plot.CategoryPlot();
        java.awt.Color color14 = org.jfree.chart.ChartColor.VERY_DARK_MAGENTA;
        categoryPlot13.setRangeZeroBaselinePaint((java.awt.Paint) color14);
        org.jfree.chart.util.RectangleEdge rectangleEdge17 = categoryPlot13.getRangeAxisEdge((int) ' ');
        double double18 = combinedRangeXYPlot0.getRectX((double) 2.0f, 5.0d, 149.0d, rectangleEdge17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend((int) (byte) 10, (java.lang.Boolean) false);
        xYAreaRenderer20.setBaseItemLabelsVisible(true);
        combinedRangeXYPlot0.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNotNull(plotRenderingInfo8);
        org.junit.Assert.assertNotNull(color14);
        org.junit.Assert.assertNotNull(rectangleEdge17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 151.0d + "'", double18 == 151.0d);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test360");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Color color2 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot1.setRangeMinorGridlinePaint((java.awt.Paint) color2);
        org.jfree.chart.axis.NumberAxis numberAxis6 = new org.jfree.chart.axis.NumberAxis("");
        double double7 = numberAxis6.getAutoRangeMinimumSize();
        numberAxis6.setLowerBound((double) (byte) -1);
        java.lang.Object obj10 = numberAxis6.clone();
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.setDomainAxis((-9999), (org.jfree.chart.axis.ValueAxis) numberAxis6, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(color2);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0E-8d + "'", double7 == 1.0E-8d);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test361");
        org.jfree.chart.renderer.xy.XYStepAreaRenderer xYStepAreaRenderer0 = new org.jfree.chart.renderer.xy.XYStepAreaRenderer();
        java.lang.Boolean boolean2 = xYStepAreaRenderer0.getSeriesVisible((-1));
        xYStepAreaRenderer0.setRangeBase(1.0E-8d);
        boolean boolean6 = xYStepAreaRenderer0.equals((java.lang.Object) "LegendItemEntity: seriesKey=null, dataset=null");
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test362");
        org.jfree.chart.plot.PolarPlot polarPlot0 = new org.jfree.chart.plot.PolarPlot();
        org.jfree.chart.plot.PiePlot piePlot1 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup2 = piePlot1.getDatasetGroup();
        int int3 = piePlot1.getBackgroundImageAlignment();
        boolean boolean4 = piePlot1.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D5 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo6 = null;
        piePlot1.createAndAddEntity(rectangle2D5, plotRenderingInfo6, "hi!", "LGPL");
        piePlot1.setStartAngle((double) 1);
        org.jfree.data.xy.XYDataItem xYDataItem14 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        java.awt.Color color17 = java.awt.Color.getColor("hi!", (int) (short) 100);
        boolean boolean18 = xYDataItem14.equals((java.lang.Object) "hi!");
        java.awt.Color color19 = java.awt.Color.MAGENTA;
        piePlot1.setSectionPaint((java.lang.Comparable) "hi!", (java.awt.Paint) color19);
        polarPlot0.setAngleLabelPaint((java.awt.Paint) color19);
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot23 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer25 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection26 = categoryPlot23.getDomainMarkers((int) 'a', layer25);
        org.jfree.data.category.CategoryDataset categoryDataset28 = null;
        categoryPlot23.setDataset(4, categoryDataset28);
        org.jfree.chart.plot.CategoryPlot categoryPlot30 = new org.jfree.chart.plot.CategoryPlot();
        int int31 = categoryPlot30.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation32 = categoryPlot30.getOrientation();
        categoryPlot23.setOrientation(plotOrientation32);
        boolean boolean34 = categoryPlot23.isDomainPannable();
        categoryPlot23.setRangeCrosshairValue((double) 10);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.entity.EntityCollection entityCollection38 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo39 = new org.jfree.chart.ChartRenderingInfo(entityCollection38);
        java.awt.Paint paint40 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean41 = chartRenderingInfo39.equals((java.lang.Object) paint40);
        java.awt.geom.Rectangle2D rectangle2D42 = chartRenderingInfo39.getChartArea();
        org.jfree.chart.title.TextTitle textTitle44 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity45 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D42, (org.jfree.chart.title.Title) textTitle44);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor46 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D47 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D42, rectangleAnchor46);
        org.jfree.data.general.PieDataset pieDataset48 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity54 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D42, pieDataset48, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.AxisSpace axisSpace55 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis57 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot58 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis57);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer60 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer60.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator63 = null;
        xYAreaRenderer60.setLegendItemURLGenerator(xYSeriesLabelGenerator63);
        xYAreaRenderer60.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean71 = xYAreaRenderer60.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot58.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer60);
        org.jfree.chart.axis.ValueAxis valueAxis73 = null;
        int int74 = combinedDomainXYPlot58.getRangeAxisIndex(valueAxis73);
        org.jfree.chart.axis.ValueAxis valueAxis75 = null;
        combinedDomainXYPlot58.setDomainAxis(valueAxis75);
        org.jfree.chart.util.RectangleEdge rectangleEdge78 = combinedDomainXYPlot58.getDomainAxisEdge(0);
        axisSpace55.add((double) 10L, rectangleEdge78);
        org.jfree.chart.axis.AxisSpace axisSpace80 = categoryPlot23.calculateDomainAxisSpace(graphics2D37, rectangle2D42, axisSpace55);
        polarPlot0.drawCornerTextItems(graphics2D22, rectangle2D42);
        org.junit.Assert.assertNull(datasetGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 15 + "'", int3 == 15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(color17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(color19);
        org.junit.Assert.assertNotNull(layer25);
        org.junit.Assert.assertNull(collection26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(plotOrientation32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(rectangle2D42);
        org.junit.Assert.assertNotNull(rectangleAnchor46);
        org.junit.Assert.assertNotNull(point2D47);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge78);
        org.junit.Assert.assertNotNull(axisSpace80);
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test363");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        barRenderer3D0.setSeriesToolTipGenerator(15, categoryToolTipGenerator6, true);
        barRenderer3D0.setBaseCreateEntities(false, false);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D12 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font16 = barRenderer3D12.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape17 = barRenderer3D12.getBaseShape();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        boolean boolean23 = xYAreaRenderer20.getPlotLines();
        boolean boolean24 = xYAreaRenderer20.getBaseItemLabelsVisible();
        java.awt.Paint paint26 = org.jfree.chart.plot.WaferMapPlot.DEFAULT_CROSSHAIR_PAINT;
        xYAreaRenderer20.setSeriesFillPaint(7, paint26);
        barRenderer3D12.setSeriesFillPaint(10, paint26);
        org.jfree.data.category.CategoryDataset categoryDataset29 = null;
        org.jfree.data.Range range30 = barRenderer3D12.findRangeBounds(categoryDataset29);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = barRenderer3D12.getBaseItemLabelGenerator();
        barRenderer3D12.setDefaultEntityRadius(100);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D34 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font38 = barRenderer3D34.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator40 = null;
        barRenderer3D34.setSeriesToolTipGenerator(15, categoryToolTipGenerator40, true);
        java.awt.Paint paint44 = barRenderer3D34.getSeriesItemLabelPaint(11);
        org.jfree.chart.plot.CategoryPlot categoryPlot45 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer47 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection48 = categoryPlot45.getDomainMarkers((int) 'a', layer47);
        org.jfree.data.category.CategoryDataset categoryDataset50 = null;
        categoryPlot45.setDataset(4, categoryDataset50);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier52 = categoryPlot45.getDrawingSupplier();
        barRenderer3D34.setPlot(categoryPlot45);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator55 = null;
        barRenderer3D34.setSeriesURLGenerator(10, categoryURLGenerator55, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition58 = barRenderer3D34.getBasePositiveItemLabelPosition();
        barRenderer3D12.setBaseNegativeItemLabelPosition(itemLabelPosition58, false);
        barRenderer3D0.setBasePositiveItemLabelPosition(itemLabelPosition58);
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNull(range30);
        org.junit.Assert.assertNull(categoryItemLabelGenerator31);
        org.junit.Assert.assertNotNull(font38);
        org.junit.Assert.assertNull(paint44);
        org.junit.Assert.assertNotNull(layer47);
        org.junit.Assert.assertNull(collection48);
        org.junit.Assert.assertNotNull(drawingSupplier52);
        org.junit.Assert.assertNotNull(itemLabelPosition58);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test364");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Color color2 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot1.setRangeMinorGridlinePaint((java.awt.Paint) color2);
        boolean boolean4 = combinedDomainXYPlot1.canSelectByRegion();
        int int5 = combinedDomainXYPlot1.getDatasetCount();
        org.jfree.data.xy.XYDataset xYDataset7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot9 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis8);
        java.awt.Graphics2D graphics2D10 = null;
        org.jfree.chart.entity.EntityCollection entityCollection11 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo12 = new org.jfree.chart.ChartRenderingInfo(entityCollection11);
        java.awt.Paint paint13 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean14 = chartRenderingInfo12.equals((java.lang.Object) paint13);
        java.awt.geom.Rectangle2D rectangle2D15 = chartRenderingInfo12.getChartArea();
        java.util.List list16 = null;
        combinedDomainXYPlot9.drawDomainGridlines(graphics2D10, rectangle2D15, list16);
        org.jfree.chart.axis.NumberAxis numberAxis19 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity22 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D15, (org.jfree.chart.axis.Axis) numberAxis19, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.renderer.PolarItemRenderer polarItemRenderer23 = null;
        org.jfree.chart.plot.PolarPlot polarPlot24 = new org.jfree.chart.plot.PolarPlot(xYDataset7, (org.jfree.chart.axis.ValueAxis) numberAxis19, polarItemRenderer23);
        combinedDomainXYPlot1.setRangeAxis((int) (byte) 1, (org.jfree.chart.axis.ValueAxis) numberAxis19, false);
        org.junit.Assert.assertNotNull(color2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(rectangle2D15);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test365");
        org.jfree.chart.renderer.xy.XYBarRenderer xYBarRenderer1 = new org.jfree.chart.renderer.xy.XYBarRenderer((double) 255);
        org.jfree.chart.axis.NumberAxis numberAxis3 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.data.Range range5 = null;
        org.jfree.chart.block.RectangleConstraint rectangleConstraint6 = new org.jfree.chart.block.RectangleConstraint(0.0d, range5);
        org.jfree.data.Range range9 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range12 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range13 = org.jfree.data.Range.combine(range9, range12);
        org.jfree.data.Range range14 = org.jfree.chart.axis.ValueAxis.DEFAULT_RANGE;
        org.jfree.data.Range range15 = org.jfree.data.Range.combine(range9, range14);
        org.jfree.chart.block.RectangleConstraint rectangleConstraint16 = rectangleConstraint6.toRangeWidth(range9);
        numberAxis3.setRangeWithMargins(range9, false, true);
        boolean boolean20 = xYBarRenderer1.equals((java.lang.Object) false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = new org.jfree.chart.labels.ItemLabelPosition();
        xYBarRenderer1.setPositiveItemLabelPositionFallback(itemLabelPosition21);
        double double23 = xYBarRenderer1.getBase();
        org.jfree.data.time.Year year26 = new org.jfree.data.time.Year((int) (short) 0);
        long long27 = year26.getFirstMillisecond();
        org.jfree.data.time.Year year29 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis30 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year26, (org.jfree.data.time.RegularTimePeriod) year29);
        int int31 = year29.getYear();
        org.jfree.data.xy.XYSeries xYSeries32 = new org.jfree.data.xy.XYSeries((java.lang.Comparable) year29);
        org.jfree.data.xy.XYSeries xYSeries35 = xYSeries32.createCopy((int) (short) 0, (int) ' ');
        org.jfree.data.xy.XYSeriesCollection xYSeriesCollection36 = new org.jfree.data.xy.XYSeriesCollection(xYSeries35);
        org.jfree.data.Range range37 = xYBarRenderer1.findRangeBounds((org.jfree.data.xy.XYDataset) xYSeriesCollection36);
        org.junit.Assert.assertNotNull(range13);
        org.junit.Assert.assertNotNull(range14);
        org.junit.Assert.assertNotNull(range15);
        org.junit.Assert.assertNotNull(rectangleConstraint16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-62167363200000L) + "'", long27 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(xYSeries35);
        org.junit.Assert.assertNull(range37);
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test366");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        java.awt.Color color19 = java.awt.Color.lightGray;
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.setQuadrantPaint(100, (java.awt.Paint) color19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The index value (100) should be in the range 0 to 3.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(color19);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test367");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer18 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection19 = categoryPlot16.getDomainMarkers((int) 'a', layer18);
        org.jfree.data.category.CategoryDataset categoryDataset21 = null;
        categoryPlot16.setDataset(4, categoryDataset21);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier23 = categoryPlot16.getDrawingSupplier();
        categoryPlot16.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace25 = null;
        categoryPlot16.setFixedDomainAxisSpace(axisSpace25);
        org.jfree.chart.axis.CategoryAxis3D categoryAxis3D28 = new org.jfree.chart.axis.CategoryAxis3D("hi!");
        categoryPlot16.setDomainAxis((org.jfree.chart.axis.CategoryAxis) categoryAxis3D28);
        categoryAxis3D28.configure();
        org.jfree.chart.axis.ValueAxis valueAxis36 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot37 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis36);
        java.awt.Graphics2D graphics2D38 = null;
        org.jfree.chart.entity.EntityCollection entityCollection39 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo40 = new org.jfree.chart.ChartRenderingInfo(entityCollection39);
        java.awt.Paint paint41 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean42 = chartRenderingInfo40.equals((java.lang.Object) paint41);
        java.awt.geom.Rectangle2D rectangle2D43 = chartRenderingInfo40.getChartArea();
        java.util.List list44 = null;
        combinedDomainXYPlot37.drawDomainGridlines(graphics2D38, rectangle2D43, list44);
        org.jfree.chart.axis.NumberAxis numberAxis47 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity50 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D43, (org.jfree.chart.axis.Axis) numberAxis47, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.plot.CategoryPlot categoryPlot51 = new org.jfree.chart.plot.CategoryPlot();
        int int52 = categoryPlot51.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge56 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str57 = rectangleEdge56.toString();
        double double58 = categoryPlot51.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge56);
        boolean boolean59 = categoryPlot51.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis61 = categoryPlot51.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge62 = categoryPlot51.getDomainAxisEdge();
        double double63 = categoryAxis3D28.getCategorySeriesMiddle(11, (int) ' ', (int) (byte) 0, (int) (short) 100, 0.0d, rectangle2D43, rectangleEdge62);
        java.awt.Font font64 = categoryAxis3D28.getTickLabelFont();
        xYAreaRenderer3.setBaseItemLabelFont(font64, true);
        java.awt.Paint paint68 = xYAreaRenderer3.getSeriesPaint((int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(layer18);
        org.junit.Assert.assertNull(collection19);
        org.junit.Assert.assertNotNull(drawingSupplier23);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(rectangle2D43);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "RectangleEdge.RIGHT" + "'", str57, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 149.0d + "'", double58 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(categoryAxis61);
        org.junit.Assert.assertNotNull(rectangleEdge62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(font64);
        org.junit.Assert.assertNull(paint68);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test368");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        boolean boolean5 = xYAreaRenderer1.getBaseItemLabelsVisible();
        java.awt.Paint paint6 = xYAreaRenderer1.getBasePaint();
        java.awt.Font font7 = xYAreaRenderer1.getBaseItemLabelFont();
        org.jfree.chart.text.TextFragment textFragment11 = new org.jfree.chart.text.TextFragment("RectangleEdge.RIGHT");
        java.awt.Font font12 = textFragment11.getFont();
        org.jfree.chart.text.TextFragment textFragment13 = new org.jfree.chart.text.TextFragment("ERROR : Relative To String", font12);
        xYAreaRenderer1.setSeriesItemLabelFont((int) ' ', font12);
        java.awt.Font font15 = xYAreaRenderer1.getBaseItemLabelFont();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertNotNull(font12);
        org.junit.Assert.assertNotNull(font15);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test369");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.AxisLocation axisLocation17 = combinedDomainXYPlot1.getRangeAxisLocation(11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(axisLocation17);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test370");
        org.jfree.chart.util.Size2D size2D2 = new org.jfree.chart.util.Size2D((double) (short) 0, 4.0d);
        size2D2.width = Double.NaN;
        double double5 = size2D2.height;
        double double6 = size2D2.height;
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 4.0d + "'", double5 == 4.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 4.0d + "'", double6 == 4.0d);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test371");
        org.jfree.chart.plot.CrosshairState crosshairState0 = new org.jfree.chart.plot.CrosshairState();
        crosshairState0.setAnchorY((double) '4');
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer8 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer8.clearSeriesStrokes(false);
        boolean boolean11 = xYAreaRenderer8.getPlotLines();
        org.jfree.chart.title.LegendTitle legendTitle12 = new org.jfree.chart.title.LegendTitle((org.jfree.chart.LegendItemSource) xYAreaRenderer8);
        org.jfree.chart.util.RectangleEdge rectangleEdge13 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str14 = rectangleEdge13.toString();
        legendTitle12.setLegendItemGraphicEdge(rectangleEdge13);
        org.jfree.chart.title.TextTitle textTitle17 = new org.jfree.chart.title.TextTitle("");
        boolean boolean18 = textTitle17.getExpandToFitSpace();
        textTitle17.setText("");
        java.lang.String str21 = textTitle17.getID();
        java.awt.Font font22 = textTitle17.getFont();
        java.awt.Graphics2D graphics2D23 = null;
        org.jfree.chart.entity.EntityCollection entityCollection24 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo25 = new org.jfree.chart.ChartRenderingInfo(entityCollection24);
        java.awt.Paint paint26 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean27 = chartRenderingInfo25.equals((java.lang.Object) paint26);
        java.awt.geom.Rectangle2D rectangle2D28 = chartRenderingInfo25.getChartArea();
        textTitle17.draw(graphics2D23, rectangle2D28);
        legendTitle12.setBounds(rectangle2D28);
        java.awt.Paint paint31 = org.jfree.chart.text.TextFragment.DEFAULT_PAINT;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot32 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        org.jfree.chart.plot.PiePlot piePlot33 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup34 = piePlot33.getDatasetGroup();
        int int35 = piePlot33.getBackgroundImageAlignment();
        boolean boolean36 = piePlot33.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D37 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo38 = null;
        piePlot33.createAndAddEntity(rectangle2D37, plotRenderingInfo38, "hi!", "LGPL");
        java.awt.Paint paint42 = piePlot33.getLabelPaint();
        java.awt.Stroke stroke43 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        piePlot33.setOutlineStroke(stroke43);
        combinedDomainXYPlot32.setDomainMinorGridlineStroke(stroke43);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D48 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator49 = barRenderer3D48.getBaseToolTipGenerator();
        java.awt.Paint paint50 = barRenderer3D48.getBaseItemLabelPaint();
        org.jfree.chart.LegendItem legendItem51 = new org.jfree.chart.LegendItem("PlotOrientation.VERTICAL", "[Dec 31, 1969 4:00:00 PM --> Dec 31, 1969 4:00:00 PM]", "WMAP_Plot", "hi!", (java.awt.Shape) rectangle2D28, paint31, stroke43, paint50);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor52 = org.jfree.chart.util.RectangleAnchor.LEFT;
        java.awt.geom.Point2D point2D53 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D28, rectangleAnchor52);
        crosshairState0.setAnchor(point2D53);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(rectangleEdge13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RectangleEdge.RIGHT" + "'", str14, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(font22);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(rectangle2D28);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNull(datasetGroup34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 15 + "'", int35 == 15);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNotNull(stroke43);
        org.junit.Assert.assertNull(categoryToolTipGenerator49);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNotNull(rectangleAnchor52);
        org.junit.Assert.assertNotNull(point2D53);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test372");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier7 = categoryPlot0.getDrawingSupplier();
        categoryPlot0.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace9 = null;
        categoryPlot0.setFixedDomainAxisSpace(axisSpace9);
        org.jfree.chart.axis.CategoryAxis3D categoryAxis3D12 = new org.jfree.chart.axis.CategoryAxis3D("hi!");
        categoryPlot0.setDomainAxis((org.jfree.chart.axis.CategoryAxis) categoryAxis3D12);
        categoryAxis3D12.configure();
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot21 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis20);
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.entity.EntityCollection entityCollection23 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo24 = new org.jfree.chart.ChartRenderingInfo(entityCollection23);
        java.awt.Paint paint25 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean26 = chartRenderingInfo24.equals((java.lang.Object) paint25);
        java.awt.geom.Rectangle2D rectangle2D27 = chartRenderingInfo24.getChartArea();
        java.util.List list28 = null;
        combinedDomainXYPlot21.drawDomainGridlines(graphics2D22, rectangle2D27, list28);
        org.jfree.chart.axis.NumberAxis numberAxis31 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity34 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D27, (org.jfree.chart.axis.Axis) numberAxis31, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = new org.jfree.chart.plot.CategoryPlot();
        int int36 = categoryPlot35.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge40 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str41 = rectangleEdge40.toString();
        double double42 = categoryPlot35.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge40);
        boolean boolean43 = categoryPlot35.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis45 = categoryPlot35.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge46 = categoryPlot35.getDomainAxisEdge();
        double double47 = categoryAxis3D12.getCategorySeriesMiddle(11, (int) ' ', (int) (byte) 0, (int) (short) 100, 0.0d, rectangle2D27, rectangleEdge46);
        java.awt.Font font48 = categoryAxis3D12.getTickLabelFont();
        java.lang.Comparable comparable49 = null;
        // The following exception was thrown during execution in test generation
        try {
            categoryAxis3D12.removeCategoryLabelToolTip(comparable49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'category' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertNotNull(drawingSupplier7);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangle2D27);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "RectangleEdge.RIGHT" + "'", str41, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 149.0d + "'", double42 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(categoryAxis45);
        org.junit.Assert.assertNotNull(rectangleEdge46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(font48);
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test373");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        combinedDomainXYPlot1.setDomainMinorGridlinesVisible(false);
        org.jfree.chart.axis.AxisLocation axisLocation4 = org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT;
        java.text.DateFormat dateFormat6 = null;
        java.text.DateFormat dateFormat7 = null;
        org.jfree.chart.labels.StandardXYToolTipGenerator standardXYToolTipGenerator8 = new org.jfree.chart.labels.StandardXYToolTipGenerator("LGPL", dateFormat6, dateFormat7);
        java.text.NumberFormat numberFormat9 = standardXYToolTipGenerator8.getYFormat();
        java.text.NumberFormat numberFormat10 = standardXYToolTipGenerator8.getXFormat();
        boolean boolean11 = axisLocation4.equals((java.lang.Object) standardXYToolTipGenerator8);
        combinedDomainXYPlot1.setRangeAxisLocation(axisLocation4);
        combinedDomainXYPlot1.setRangePannable(false);
        org.junit.Assert.assertNotNull(axisLocation4);
        org.junit.Assert.assertNotNull(numberFormat9);
        org.junit.Assert.assertNotNull(numberFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test374");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        org.jfree.chart.axis.ValueAxis valueAxis19 = combinedDomainXYPlot1.getRangeAxis((int) (short) -1);
        boolean boolean20 = combinedDomainXYPlot1.canSelectByRegion();
        java.awt.geom.GeneralPath generalPath21 = null;
        org.jfree.chart.entity.EntityCollection entityCollection24 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo25 = new org.jfree.chart.ChartRenderingInfo(entityCollection24);
        java.awt.Paint paint26 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean27 = chartRenderingInfo25.equals((java.lang.Object) paint26);
        java.awt.geom.Rectangle2D rectangle2D28 = chartRenderingInfo25.getChartArea();
        org.jfree.chart.title.TextTitle textTitle30 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity31 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D28, (org.jfree.chart.title.Title) textTitle30);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor32 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D33 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D28, rectangleAnchor32);
        org.jfree.data.general.PieDataset pieDataset34 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity40 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D28, pieDataset34, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis41 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot42 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis41);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer44 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer44.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator47 = null;
        xYAreaRenderer44.setLegendItemURLGenerator(xYSeriesLabelGenerator47);
        xYAreaRenderer44.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean55 = xYAreaRenderer44.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot42.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer44);
        combinedDomainXYPlot42.clearDomainMarkers();
        java.awt.Font font59 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint60 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer63 = null;
        org.jfree.chart.text.TextBlock textBlock64 = org.jfree.chart.text.TextUtilities.createTextBlock("", font59, paint60, (float) (-1L), (int) (short) -1, textMeasurer63);
        combinedDomainXYPlot42.setDomainCrosshairPaint(paint60);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder66 = combinedDomainXYPlot42.getSeriesRenderingOrder();
        java.awt.Paint paint67 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot42.setRangeTickBandPaint(paint67);
        org.jfree.chart.title.LegendGraphic legendGraphic69 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D28, paint67);
        java.awt.geom.Point2D point2D70 = org.jfree.chart.util.ShapeUtilities.getPointInRectangle((double) 10L, (double) 1577894400035L, rectangle2D28);
        org.jfree.chart.RenderingSource renderingSource71 = null;
        combinedDomainXYPlot1.select(generalPath21, rectangle2D28, renderingSource71);
        org.jfree.data.general.PieDataset pieDataset73 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity79 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D28, pieDataset73, (int) '4', 0, (java.lang.Comparable) "RectangleConstraintType.RANGE", "AxisEntity: tooltip = ", "MAJOR");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(valueAxis19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(rectangle2D28);
        org.junit.Assert.assertNotNull(rectangleAnchor32);
        org.junit.Assert.assertNotNull(point2D33);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(font59);
        org.junit.Assert.assertNotNull(paint60);
        org.junit.Assert.assertNotNull(textBlock64);
        org.junit.Assert.assertNotNull(seriesRenderingOrder66);
        org.junit.Assert.assertNotNull(paint67);
        org.junit.Assert.assertNotNull(point2D70);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test375");
        org.jfree.data.time.TimePeriodAnchor timePeriodAnchor0 = org.jfree.data.time.TimePeriodAnchor.MIDDLE;
        java.lang.String str1 = timePeriodAnchor0.toString();
        org.junit.Assert.assertNotNull(timePeriodAnchor0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TimePeriodAnchor.MIDDLE" + "'", str1, "TimePeriodAnchor.MIDDLE");
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test376");
        org.jfree.chart.block.BorderArrangement borderArrangement0 = new org.jfree.chart.block.BorderArrangement();
        java.util.TimeZone timeZone1 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection2 = new org.jfree.data.time.TimeSeriesCollection(timeZone1);
        org.jfree.chart.title.LegendItemBlockContainer legendItemBlockContainer4 = new org.jfree.chart.title.LegendItemBlockContainer((org.jfree.chart.block.Arrangement) borderArrangement0, (org.jfree.data.general.Dataset) timeSeriesCollection2, (java.lang.Comparable) (byte) 10);
        java.lang.Comparable comparable5 = null;
        int int6 = timeSeriesCollection2.indexOf(comparable5);
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot8 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis7);
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.entity.EntityCollection entityCollection10 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo11 = new org.jfree.chart.ChartRenderingInfo(entityCollection10);
        java.awt.Paint paint12 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean13 = chartRenderingInfo11.equals((java.lang.Object) paint12);
        java.awt.geom.Rectangle2D rectangle2D14 = chartRenderingInfo11.getChartArea();
        java.util.List list15 = null;
        combinedDomainXYPlot8.drawDomainGridlines(graphics2D9, rectangle2D14, list15);
        org.jfree.chart.axis.NumberAxis numberAxis18 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity21 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D14, (org.jfree.chart.axis.Axis) numberAxis18, "", "DatasetRenderingOrder.FORWARD");
        numberAxis18.centerRange(10.0d);
        org.jfree.chart.axis.NumberAxis numberAxis25 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis25.pan((double) 1);
        numberAxis25.setTickLabelsVisible(false);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer31 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean33 = xYAreaRenderer31.isSeriesItemLabelsVisible((int) (byte) 1);
        org.jfree.chart.plot.XYPlot xYPlot34 = new org.jfree.chart.plot.XYPlot((org.jfree.data.xy.XYDataset) timeSeriesCollection2, (org.jfree.chart.axis.ValueAxis) numberAxis18, (org.jfree.chart.axis.ValueAxis) numberAxis25, (org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer31);
        java.lang.String str35 = numberAxis25.getLabelToolTip();
        org.jfree.chart.axis.NumberTickUnit numberTickUnit36 = numberAxis25.getTickUnit();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(rectangle2D14);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(numberTickUnit36);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test377");
        org.jfree.chart.resources.JFreeChartResources jFreeChartResources0 = new org.jfree.chart.resources.JFreeChartResources();
        org.jfree.chart.plot.PiePlot.localizationResources = jFreeChartResources0;
        java.lang.Object obj3 = jFreeChartResources0.handleGetObject("ThreadContext");
        java.lang.Object[][] objArray4 = jFreeChartResources0.getContents();
        org.jfree.chart.plot.XYPlot.localizationResources = jFreeChartResources0;
        java.util.Set<java.lang.String> strSet6 = jFreeChartResources0.keySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test378");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Color color2 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot1.setRangeMinorGridlinePaint((java.awt.Paint) color2);
        boolean boolean4 = combinedDomainXYPlot1.isDomainPannable();
        org.jfree.chart.axis.AxisLocation axisLocation6 = combinedDomainXYPlot1.getDomainAxisLocation(3);
        org.junit.Assert.assertNotNull(color2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(axisLocation6);
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test379");
        org.jfree.chart.axis.LogAxis logAxis1 = new org.jfree.chart.axis.LogAxis("item");
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer6 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection7 = categoryPlot4.getDomainMarkers((int) 'a', layer6);
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        categoryPlot4.setDataset(4, categoryDataset9);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier11 = categoryPlot4.getDrawingSupplier();
        categoryPlot4.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace13 = null;
        categoryPlot4.setFixedDomainAxisSpace(axisSpace13);
        org.jfree.chart.axis.CategoryAxis3D categoryAxis3D16 = new org.jfree.chart.axis.CategoryAxis3D("hi!");
        categoryPlot4.setDomainAxis((org.jfree.chart.axis.CategoryAxis) categoryAxis3D16);
        org.jfree.chart.axis.CategoryLabelPositions categoryLabelPositions18 = categoryAxis3D16.getCategoryLabelPositions();
        java.awt.Font font20 = null;
        categoryAxis3D16.setTickLabelFont((java.lang.Comparable) 0.2d, font20);
        categoryAxis3D16.setUpperMargin((double) (byte) -1);
        org.jfree.chart.plot.PiePlot piePlot24 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup25 = piePlot24.getDatasetGroup();
        int int26 = piePlot24.getBackgroundImageAlignment();
        boolean boolean27 = piePlot24.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D28 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo29 = null;
        piePlot24.createAndAddEntity(rectangle2D28, plotRenderingInfo29, "hi!", "LGPL");
        java.awt.Paint paint33 = piePlot24.getLabelPaint();
        java.awt.Stroke stroke34 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        piePlot24.setOutlineStroke(stroke34);
        java.awt.Paint paint36 = piePlot24.getLabelOutlinePaint();
        boolean boolean37 = piePlot24.getIgnoreZeroValues();
        org.jfree.chart.util.RectangleInsets rectangleInsets38 = piePlot24.getSimpleLabelOffset();
        categoryAxis3D16.setTickLabelInsets(rectangleInsets38);
        org.jfree.chart.entity.EntityCollection entityCollection40 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo41 = new org.jfree.chart.ChartRenderingInfo(entityCollection40);
        java.awt.Paint paint42 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean43 = chartRenderingInfo41.equals((java.lang.Object) paint42);
        java.awt.geom.Rectangle2D rectangle2D44 = chartRenderingInfo41.getChartArea();
        org.jfree.chart.title.TextTitle textTitle46 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity47 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D44, (org.jfree.chart.title.Title) textTitle46);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor48 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D49 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D44, rectangleAnchor48);
        org.jfree.data.general.PieDataset pieDataset50 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity56 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D44, pieDataset50, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        java.awt.geom.Rectangle2D rectangle2D57 = rectangleInsets38.createOutsetRectangle(rectangle2D44);
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot58 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        org.jfree.chart.axis.NumberAxis numberAxis61 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis61.pan((double) 1);
        numberAxis61.setTickLabelsVisible(false);
        combinedDomainXYPlot58.setRangeAxis(255, (org.jfree.chart.axis.ValueAxis) numberAxis61);
        java.awt.geom.GeneralPath generalPath67 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot68 = new org.jfree.chart.plot.CategoryPlot();
        int int69 = categoryPlot68.getDatasetCount();
        categoryPlot68.setAnchorValue((double) 10.0f);
        java.awt.Graphics2D graphics2D72 = null;
        org.jfree.chart.entity.EntityCollection entityCollection73 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo74 = new org.jfree.chart.ChartRenderingInfo(entityCollection73);
        java.awt.Paint paint75 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean76 = chartRenderingInfo74.equals((java.lang.Object) paint75);
        java.awt.geom.Rectangle2D rectangle2D77 = chartRenderingInfo74.getChartArea();
        org.jfree.chart.title.TextTitle textTitle79 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity80 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D77, (org.jfree.chart.title.Title) textTitle79);
        org.jfree.chart.axis.AxisSpace axisSpace81 = categoryPlot68.calculateAxisSpace(graphics2D72, rectangle2D77);
        org.jfree.chart.RenderingSource renderingSource82 = null;
        combinedDomainXYPlot58.select(generalPath67, rectangle2D77, renderingSource82);
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot84 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        double double85 = combinedRangeXYPlot84.getGap();
        org.jfree.chart.LegendItemCollection legendItemCollection86 = combinedRangeXYPlot84.getLegendItems();
        boolean boolean87 = combinedRangeXYPlot84.isRangeZeroBaselineVisible();
        org.jfree.chart.util.RectangleEdge rectangleEdge88 = combinedRangeXYPlot84.getRangeAxisEdge();
        org.jfree.chart.entity.EntityCollection entityCollection89 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo90 = new org.jfree.chart.ChartRenderingInfo(entityCollection89);
        java.awt.Paint paint91 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean92 = chartRenderingInfo90.equals((java.lang.Object) paint91);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo93 = new org.jfree.chart.plot.PlotRenderingInfo(chartRenderingInfo90);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.AxisState axisState94 = logAxis1.draw(graphics2D2, (double) (-241), rectangle2D57, rectangle2D77, rectangleEdge88, plotRenderingInfo93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(layer6);
        org.junit.Assert.assertNull(collection7);
        org.junit.Assert.assertNotNull(drawingSupplier11);
        org.junit.Assert.assertNotNull(categoryLabelPositions18);
        org.junit.Assert.assertNull(datasetGroup25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 15 + "'", int26 == 15);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(rectangleInsets38);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(rectangle2D44);
        org.junit.Assert.assertNotNull(rectangleAnchor48);
        org.junit.Assert.assertNotNull(point2D49);
        org.junit.Assert.assertNotNull(rectangle2D57);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(paint75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(rectangle2D77);
        org.junit.Assert.assertNotNull(axisSpace81);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 5.0d + "'", double85 == 5.0d);
        org.junit.Assert.assertNotNull(legendItemCollection86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(rectangleEdge88);
        org.junit.Assert.assertNotNull(paint91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test380");
        org.jfree.chart.plot.PolarPlot polarPlot0 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Font font1 = polarPlot0.getAngleLabelFont();
        org.jfree.chart.axis.ValueAxis valueAxis2 = polarPlot0.getAxis();
        org.jfree.chart.axis.ValueAxis valueAxis3 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot4 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.entity.EntityCollection entityCollection6 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo7 = new org.jfree.chart.ChartRenderingInfo(entityCollection6);
        java.awt.Paint paint8 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean9 = chartRenderingInfo7.equals((java.lang.Object) paint8);
        java.awt.geom.Rectangle2D rectangle2D10 = chartRenderingInfo7.getChartArea();
        java.util.List list11 = null;
        combinedDomainXYPlot4.drawDomainGridlines(graphics2D5, rectangle2D10, list11);
        org.jfree.chart.axis.NumberAxis numberAxis14 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity17 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D10, (org.jfree.chart.axis.Axis) numberAxis14, "", "DatasetRenderingOrder.FORWARD");
        numberAxis14.setMinorTickMarkInsideLength((float) 60000L);
        org.jfree.data.Range range20 = polarPlot0.getDataRange((org.jfree.chart.axis.ValueAxis) numberAxis14);
        polarPlot0.setAngleLabelsVisible(false);
        org.junit.Assert.assertNotNull(font1);
        org.junit.Assert.assertNull(valueAxis2);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(rectangle2D10);
        org.junit.Assert.assertNull(range20);
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test381");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Paint paint46 = legendGraphic45.getOutlinePaint();
        legendGraphic45.setShapeOutlineVisible(false);
        boolean boolean49 = legendGraphic45.isShapeOutlineVisible();
        java.awt.Stroke stroke50 = legendGraphic45.getLineStroke();
        java.lang.Object obj51 = null;
        boolean boolean52 = legendGraphic45.equals(obj51);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test382");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot3 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis2);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer5 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer5.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator8 = null;
        xYAreaRenderer5.setLegendItemURLGenerator(xYSeriesLabelGenerator8);
        xYAreaRenderer5.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean16 = xYAreaRenderer5.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot3.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer5);
        combinedDomainXYPlot3.clearDomainMarkers();
        java.awt.Font font20 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint21 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer24 = null;
        org.jfree.chart.text.TextBlock textBlock25 = org.jfree.chart.text.TextUtilities.createTextBlock("", font20, paint21, (float) (-1L), (int) (short) -1, textMeasurer24);
        combinedDomainXYPlot3.setDomainCrosshairPaint(paint21);
        org.jfree.chart.plot.PiePlot piePlot27 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup28 = piePlot27.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener29 = null;
        piePlot27.addChangeListener(plotChangeListener29);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent31 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot27);
        combinedDomainXYPlot3.plotChanged(plotChangeEvent31);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType33 = plotChangeEvent31.getType();
        combinedRangeXYPlot0.plotChanged(plotChangeEvent31);
        org.jfree.chart.plot.IntervalMarker intervalMarker37 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        boolean boolean38 = combinedRangeXYPlot0.removeRangeMarker((org.jfree.chart.plot.Marker) intervalMarker37);
        org.jfree.chart.plot.CategoryPlot categoryPlot39 = new org.jfree.chart.plot.CategoryPlot();
        int int40 = categoryPlot39.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge44 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str45 = rectangleEdge44.toString();
        double double46 = categoryPlot39.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge44);
        boolean boolean47 = categoryPlot39.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis49 = categoryPlot39.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge50 = categoryPlot39.getDomainAxisEdge();
        org.jfree.chart.axis.ValueAxis valueAxis51 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot52 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis51);
        java.awt.Graphics2D graphics2D53 = null;
        org.jfree.chart.entity.EntityCollection entityCollection54 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo55 = new org.jfree.chart.ChartRenderingInfo(entityCollection54);
        java.awt.Paint paint56 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean57 = chartRenderingInfo55.equals((java.lang.Object) paint56);
        java.awt.geom.Rectangle2D rectangle2D58 = chartRenderingInfo55.getChartArea();
        java.util.List list59 = null;
        combinedDomainXYPlot52.drawDomainGridlines(graphics2D53, rectangle2D58, list59);
        org.jfree.chart.axis.NumberAxis numberAxis62 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity65 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D58, (org.jfree.chart.axis.Axis) numberAxis62, "", "DatasetRenderingOrder.FORWARD");
        numberAxis62.centerRange(10.0d);
        org.jfree.data.Range range68 = categoryPlot39.getDataRange((org.jfree.chart.axis.ValueAxis) numberAxis62);
        org.jfree.data.Range range69 = combinedRangeXYPlot0.getDataRange((org.jfree.chart.axis.ValueAxis) numberAxis62);
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(textBlock25);
        org.junit.Assert.assertNull(datasetGroup28);
        org.junit.Assert.assertNotNull(chartChangeEventType33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "RectangleEdge.RIGHT" + "'", str45, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 149.0d + "'", double46 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(categoryAxis49);
        org.junit.Assert.assertNotNull(rectangleEdge50);
        org.junit.Assert.assertNotNull(paint56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(rectangle2D58);
        org.junit.Assert.assertNull(range68);
        org.junit.Assert.assertNull(range69);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test383");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.axis.AxisSpace axisSpace7 = categoryPlot0.getFixedDomainAxisSpace();
        java.awt.Graphics2D graphics2D8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        org.jfree.chart.util.Layer layer11 = org.jfree.chart.util.Layer.BACKGROUND;
        categoryPlot0.drawRangeMarkers(graphics2D8, rectangle2D9, 0, layer11);
        java.awt.Color color15 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer17 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean19 = xYAreaRenderer17.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint20 = xYAreaRenderer17.getBaseLegendTextPaint();
        java.awt.Stroke stroke22 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer17.setSeriesOutlineStroke(0, stroke22, false);
        java.awt.Color color27 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer29 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean31 = xYAreaRenderer29.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint32 = xYAreaRenderer29.getBaseLegendTextPaint();
        java.awt.Stroke stroke34 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer29.setSeriesOutlineStroke(0, stroke34, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker38 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color15, stroke22, (java.awt.Paint) color27, stroke34, (float) (byte) 1);
        org.jfree.chart.text.TextAnchor textAnchor39 = intervalMarker38.getLabelTextAnchor();
        org.jfree.chart.util.Layer layer40 = org.jfree.chart.util.Layer.BACKGROUND;
        boolean boolean41 = categoryPlot0.removeDomainMarker((org.jfree.chart.plot.Marker) intervalMarker38, layer40);
        java.lang.Object obj42 = categoryPlot0.clone();
        java.awt.Paint paint43 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        categoryPlot0.setRangeGridlinePaint(paint43);
        org.jfree.chart.axis.AxisSpace axisSpace45 = new org.jfree.chart.axis.AxisSpace();
        categoryPlot0.setFixedRangeAxisSpace(axisSpace45);
        int int47 = categoryPlot0.getWeight();
        java.awt.Paint paint48 = categoryPlot0.getRangeGridlinePaint();
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertNull(axisSpace7);
        org.junit.Assert.assertNotNull(layer11);
        org.junit.Assert.assertNotNull(color15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(paint20);
        org.junit.Assert.assertNotNull(stroke22);
        org.junit.Assert.assertNotNull(color27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(paint32);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertNotNull(textAnchor39);
        org.junit.Assert.assertNotNull(layer40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(paint48);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test384");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        combinedDomainXYPlot1.clearDomainMarkers();
        int int27 = combinedDomainXYPlot1.getRendererCount();
        org.jfree.chart.renderer.xy.XYItemRenderer xYItemRenderer29 = combinedDomainXYPlot1.getRenderer((-1));
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot32 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis31);
        java.awt.Graphics2D graphics2D33 = null;
        org.jfree.chart.entity.EntityCollection entityCollection34 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo35 = new org.jfree.chart.ChartRenderingInfo(entityCollection34);
        java.awt.Paint paint36 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean37 = chartRenderingInfo35.equals((java.lang.Object) paint36);
        java.awt.geom.Rectangle2D rectangle2D38 = chartRenderingInfo35.getChartArea();
        java.util.List list39 = null;
        combinedDomainXYPlot32.drawDomainGridlines(graphics2D33, rectangle2D38, list39);
        org.jfree.chart.axis.NumberAxis numberAxis42 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity45 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D38, (org.jfree.chart.axis.Axis) numberAxis42, "", "DatasetRenderingOrder.FORWARD");
        java.lang.Object obj46 = numberAxis42.clone();
        combinedDomainXYPlot1.setRangeAxis(0, (org.jfree.chart.axis.ValueAxis) numberAxis42);
        java.util.List list49 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedDomainXYPlot1.mapDatasetToRangeAxes(4, list49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(xYItemRenderer29);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(rectangle2D38);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test385");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        java.awt.Paint paint26 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot1.setRangeTickBandPaint(paint26);
        combinedDomainXYPlot1.setGap(0.0d);
        org.jfree.chart.plot.CategoryPlot categoryPlot30 = new org.jfree.chart.plot.CategoryPlot();
        int int31 = categoryPlot30.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation32 = categoryPlot30.getOrientation();
        org.jfree.chart.axis.ValueAxis valueAxis33 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot34 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis33);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer36 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer36.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator39 = null;
        xYAreaRenderer36.setLegendItemURLGenerator(xYSeriesLabelGenerator39);
        xYAreaRenderer36.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean47 = xYAreaRenderer36.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot34.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer36);
        org.jfree.chart.axis.ValueAxis valueAxis49 = null;
        int int50 = combinedDomainXYPlot34.getRangeAxisIndex(valueAxis49);
        boolean boolean51 = combinedDomainXYPlot34.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets52 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double53 = rectangleInsets52.getLeft();
        double double55 = rectangleInsets52.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot34.setAxisOffset(rectangleInsets52);
        combinedDomainXYPlot34.setDomainGridlinesVisible(false);
        boolean boolean59 = combinedDomainXYPlot34.isDomainMinorGridlinesVisible();
        boolean boolean60 = plotOrientation32.equals((java.lang.Object) combinedDomainXYPlot34);
        org.jfree.chart.axis.AxisLocation axisLocation62 = org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT;
        combinedDomainXYPlot34.setDomainAxisLocation(9, axisLocation62);
        combinedDomainXYPlot1.setDomainAxisLocation(axisLocation62, true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(plotOrientation32);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(rectangleInsets52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1.0d + "'", double55 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(axisLocation62);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test386");
        org.jfree.chart.plot.PiePlot piePlot0 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup1 = piePlot0.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener2 = null;
        piePlot0.addChangeListener(plotChangeListener2);
        java.awt.Paint paint4 = org.jfree.chart.plot.WaferMapPlot.DEFAULT_CROSSHAIR_PAINT;
        piePlot0.setLabelLinkPaint(paint4);
        org.jfree.chart.block.FlowArrangement flowArrangement6 = new org.jfree.chart.block.FlowArrangement();
        org.jfree.chart.block.BorderArrangement borderArrangement7 = new org.jfree.chart.block.BorderArrangement();
        java.util.TimeZone timeZone8 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection9 = new org.jfree.data.time.TimeSeriesCollection(timeZone8);
        org.jfree.chart.title.LegendItemBlockContainer legendItemBlockContainer11 = new org.jfree.chart.title.LegendItemBlockContainer((org.jfree.chart.block.Arrangement) borderArrangement7, (org.jfree.data.general.Dataset) timeSeriesCollection9, (java.lang.Comparable) (byte) 10);
        org.jfree.chart.title.LegendTitle legendTitle12 = new org.jfree.chart.title.LegendTitle((org.jfree.chart.LegendItemSource) piePlot0, (org.jfree.chart.block.Arrangement) flowArrangement6, (org.jfree.chart.block.Arrangement) borderArrangement7);
        org.jfree.chart.entity.EntityCollection entityCollection13 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo14 = new org.jfree.chart.ChartRenderingInfo(entityCollection13);
        java.awt.Paint paint15 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean16 = chartRenderingInfo14.equals((java.lang.Object) paint15);
        java.awt.geom.Rectangle2D rectangle2D17 = chartRenderingInfo14.getChartArea();
        org.jfree.chart.title.TextTitle textTitle19 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity20 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D17, (org.jfree.chart.title.Title) textTitle19);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor21 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D22 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D17, rectangleAnchor21);
        org.jfree.data.general.PieDataset pieDataset23 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity29 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D17, pieDataset23, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis30 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot31 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis30);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer33 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer33.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator36 = null;
        xYAreaRenderer33.setLegendItemURLGenerator(xYSeriesLabelGenerator36);
        xYAreaRenderer33.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean44 = xYAreaRenderer33.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot31.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer33);
        combinedDomainXYPlot31.clearDomainMarkers();
        java.awt.Font font48 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint49 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer52 = null;
        org.jfree.chart.text.TextBlock textBlock53 = org.jfree.chart.text.TextUtilities.createTextBlock("", font48, paint49, (float) (-1L), (int) (short) -1, textMeasurer52);
        combinedDomainXYPlot31.setDomainCrosshairPaint(paint49);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder55 = combinedDomainXYPlot31.getSeriesRenderingOrder();
        java.awt.Paint paint56 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot31.setRangeTickBandPaint(paint56);
        org.jfree.chart.title.LegendGraphic legendGraphic58 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D17, paint56);
        org.jfree.chart.plot.CategoryPlot categoryPlot59 = new org.jfree.chart.plot.CategoryPlot();
        int int60 = categoryPlot59.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge64 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str65 = rectangleEdge64.toString();
        double double66 = categoryPlot59.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge64);
        boolean boolean67 = categoryPlot59.isRangeZoomable();
        org.jfree.chart.util.Layer layer68 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection69 = categoryPlot59.getRangeMarkers(layer68);
        flowArrangement6.add((org.jfree.chart.block.Block) legendGraphic58, (java.lang.Object) layer68);
        org.jfree.chart.block.BorderArrangement borderArrangement71 = new org.jfree.chart.block.BorderArrangement();
        java.util.TimeZone timeZone72 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection73 = new org.jfree.data.time.TimeSeriesCollection(timeZone72);
        org.jfree.chart.title.LegendItemBlockContainer legendItemBlockContainer75 = new org.jfree.chart.title.LegendItemBlockContainer((org.jfree.chart.block.Arrangement) borderArrangement71, (org.jfree.data.general.Dataset) timeSeriesCollection73, (java.lang.Comparable) (byte) 10);
        java.awt.Graphics2D graphics2D76 = null;
        org.jfree.data.Range range78 = null;
        org.jfree.chart.block.RectangleConstraint rectangleConstraint79 = new org.jfree.chart.block.RectangleConstraint(0.0d, range78);
        org.jfree.data.Range range82 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range85 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range86 = org.jfree.data.Range.combine(range82, range85);
        org.jfree.data.Range range87 = org.jfree.chart.axis.ValueAxis.DEFAULT_RANGE;
        org.jfree.data.Range range88 = org.jfree.data.Range.combine(range82, range87);
        org.jfree.chart.block.RectangleConstraint rectangleConstraint89 = rectangleConstraint79.toRangeWidth(range82);
        org.jfree.chart.block.LengthConstraintType lengthConstraintType90 = rectangleConstraint79.getWidthConstraintType();
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.util.Size2D size2D91 = flowArrangement6.arrange((org.jfree.chart.block.BlockContainer) legendItemBlockContainer75, graphics2D76, rectangleConstraint79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(datasetGroup1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(rectangle2D17);
        org.junit.Assert.assertNotNull(rectangleAnchor21);
        org.junit.Assert.assertNotNull(point2D22);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(font48);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNotNull(textBlock53);
        org.junit.Assert.assertNotNull(seriesRenderingOrder55);
        org.junit.Assert.assertNotNull(paint56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "RectangleEdge.RIGHT" + "'", str65, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 149.0d + "'", double66 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(layer68);
        org.junit.Assert.assertNull(collection69);
        org.junit.Assert.assertNotNull(range86);
        org.junit.Assert.assertNotNull(range87);
        org.junit.Assert.assertNotNull(range88);
        org.junit.Assert.assertNotNull(rectangleConstraint89);
        org.junit.Assert.assertNotNull(lengthConstraintType90);
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test387");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot3 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis2);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer5 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer5.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator8 = null;
        xYAreaRenderer5.setLegendItemURLGenerator(xYSeriesLabelGenerator8);
        xYAreaRenderer5.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean16 = xYAreaRenderer5.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot3.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer5);
        combinedDomainXYPlot3.clearDomainMarkers();
        java.awt.Font font20 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint21 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer24 = null;
        org.jfree.chart.text.TextBlock textBlock25 = org.jfree.chart.text.TextUtilities.createTextBlock("", font20, paint21, (float) (-1L), (int) (short) -1, textMeasurer24);
        combinedDomainXYPlot3.setDomainCrosshairPaint(paint21);
        org.jfree.chart.plot.PiePlot piePlot27 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup28 = piePlot27.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener29 = null;
        piePlot27.addChangeListener(plotChangeListener29);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent31 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot27);
        combinedDomainXYPlot3.plotChanged(plotChangeEvent31);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType33 = plotChangeEvent31.getType();
        combinedRangeXYPlot0.plotChanged(plotChangeEvent31);
        org.jfree.chart.plot.IntervalMarker intervalMarker37 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        boolean boolean38 = combinedRangeXYPlot0.removeRangeMarker((org.jfree.chart.plot.Marker) intervalMarker37);
        combinedRangeXYPlot0.configureRangeAxes();
        org.jfree.chart.axis.AxisLocation axisLocation41 = combinedRangeXYPlot0.getRangeAxisLocation((int) (byte) -1);
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(textBlock25);
        org.junit.Assert.assertNull(datasetGroup28);
        org.junit.Assert.assertNotNull(chartChangeEventType33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(axisLocation41);
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test388");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D2 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator3 = barRenderer3D2.getBaseToolTipGenerator();
        boolean boolean6 = barRenderer3D2.getItemVisible(0, 8);
        java.awt.Stroke stroke8 = barRenderer3D2.getSeriesOutlineStroke((int) (byte) 100);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = barRenderer3D2.getLegendItemURLGenerator();
        org.jfree.chart.plot.PiePlot piePlot11 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup12 = piePlot11.getDatasetGroup();
        int int13 = piePlot11.getBackgroundImageAlignment();
        boolean boolean14 = piePlot11.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D15 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo16 = null;
        piePlot11.createAndAddEntity(rectangle2D15, plotRenderingInfo16, "hi!", "LGPL");
        piePlot11.setStartAngle((double) 1);
        org.jfree.data.xy.XYDataItem xYDataItem24 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        java.awt.Color color27 = java.awt.Color.getColor("hi!", (int) (short) 100);
        boolean boolean28 = xYDataItem24.equals((java.lang.Object) "hi!");
        java.awt.Color color29 = java.awt.Color.MAGENTA;
        piePlot11.setSectionPaint((java.lang.Comparable) "hi!", (java.awt.Paint) color29);
        org.jfree.chart.LegendItem legendItem31 = new org.jfree.chart.LegendItem("http://www.jfree.org/jfreechart/index.html", (java.awt.Paint) color29);
        java.awt.Paint paint32 = legendItem31.getLinePaint();
        java.awt.Stroke stroke33 = legendItem31.getOutlineStroke();
        java.awt.Stroke stroke34 = legendItem31.getLineStroke();
        java.awt.Shape shape35 = legendItem31.getShape();
        barRenderer3D2.setBaseShape(shape35);
        org.junit.Assert.assertNull(categoryToolTipGenerator3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNull(datasetGroup12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 15 + "'", int13 == 15);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(color27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(color29);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertNotNull(shape35);
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test389");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean20 = xYAreaRenderer11.isSeriesVisible((-16777216));
        java.awt.Shape shape22 = xYAreaRenderer11.getLegendShape(0);
        java.awt.Shape shape24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        xYAreaRenderer11.setSeriesShape((int) (byte) 100, shape24, false);
        java.awt.Paint paint28 = xYAreaRenderer11.getSeriesItemLabelPaint(5);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator30 = null;
        xYAreaRenderer11.setBaseURLGenerator(xYURLGenerator30);
        java.awt.Color color32 = org.jfree.chart.ChartColor.LIGHT_GREEN;
        xYAreaRenderer11.setBaseFillPaint((java.awt.Paint) color32);
        org.jfree.chart.block.BorderArrangement borderArrangement35 = new org.jfree.chart.block.BorderArrangement();
        org.jfree.chart.block.BlockContainer blockContainer36 = new org.jfree.chart.block.BlockContainer((org.jfree.chart.block.Arrangement) borderArrangement35);
        blockContainer36.clear();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer39 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer39.clearSeriesStrokes(false);
        boolean boolean42 = xYAreaRenderer39.getPlotLines();
        boolean boolean43 = xYAreaRenderer39.getBaseItemLabelsVisible();
        java.awt.Paint paint44 = xYAreaRenderer39.getBasePaint();
        boolean boolean45 = blockContainer36.equals((java.lang.Object) paint44);
        xYAreaRenderer11.setSeriesFillPaint((int) 'a', paint44);
        java.awt.Paint paint50 = xYAreaRenderer11.getItemOutlinePaint(8, 0, true);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(shape22);
        org.junit.Assert.assertNotNull(shape24);
        org.junit.Assert.assertNull(paint28);
        org.junit.Assert.assertNotNull(color32);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(paint50);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test390");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        int int1 = categoryPlot0.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge5 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str6 = rectangleEdge5.toString();
        double double7 = categoryPlot0.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge5);
        boolean boolean8 = categoryPlot0.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = categoryPlot0.getDomainAxis(10);
        java.lang.Comparable comparable11 = categoryPlot0.getDomainCrosshairColumnKey();
        categoryPlot0.configureRangeAxes();
        org.jfree.data.xy.XYDataset xYDataset13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot15 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis14);
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.entity.EntityCollection entityCollection17 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo18 = new org.jfree.chart.ChartRenderingInfo(entityCollection17);
        java.awt.Paint paint19 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean20 = chartRenderingInfo18.equals((java.lang.Object) paint19);
        java.awt.geom.Rectangle2D rectangle2D21 = chartRenderingInfo18.getChartArea();
        java.util.List list22 = null;
        combinedDomainXYPlot15.drawDomainGridlines(graphics2D16, rectangle2D21, list22);
        org.jfree.chart.axis.NumberAxis numberAxis25 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity28 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D21, (org.jfree.chart.axis.Axis) numberAxis25, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.renderer.PolarItemRenderer polarItemRenderer29 = null;
        org.jfree.chart.plot.PolarPlot polarPlot30 = new org.jfree.chart.plot.PolarPlot(xYDataset13, (org.jfree.chart.axis.ValueAxis) numberAxis25, polarItemRenderer29);
        numberAxis25.setTickMarksVisible(false);
        categoryPlot0.setRangeAxis((org.jfree.chart.axis.ValueAxis) numberAxis25);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "RectangleEdge.RIGHT" + "'", str6, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 149.0d + "'", double7 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(categoryAxis10);
        org.junit.Assert.assertNull(comparable11);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(rectangle2D21);
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test391");
        java.awt.Shape shape0 = null;
        org.jfree.chart.plot.RingPlot ringPlot1 = new org.jfree.chart.plot.RingPlot();
        java.awt.Shape shape2 = ringPlot1.getLegendItemShape();
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.entity.PlotEntity plotEntity4 = new org.jfree.chart.entity.PlotEntity(shape0, (org.jfree.chart.plot.Plot) ringPlot1, "ERROR : Relative To String");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'area' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape2);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test392");
        org.jfree.chart.plot.IntervalMarker intervalMarker2 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        java.awt.Color color3 = org.jfree.chart.ChartColor.VERY_DARK_RED;
        intervalMarker2.setPaint((java.awt.Paint) color3);
        java.awt.Stroke stroke5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot6 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list7 = combinedRangeXYPlot6.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot9 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean22 = xYAreaRenderer11.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot9.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        combinedDomainXYPlot9.clearDomainMarkers();
        java.awt.Font font26 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint27 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer30 = null;
        org.jfree.chart.text.TextBlock textBlock31 = org.jfree.chart.text.TextUtilities.createTextBlock("", font26, paint27, (float) (-1L), (int) (short) -1, textMeasurer30);
        combinedDomainXYPlot9.setDomainCrosshairPaint(paint27);
        org.jfree.chart.plot.PiePlot piePlot33 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup34 = piePlot33.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener35 = null;
        piePlot33.addChangeListener(plotChangeListener35);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent37 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot33);
        combinedDomainXYPlot9.plotChanged(plotChangeEvent37);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType39 = plotChangeEvent37.getType();
        combinedRangeXYPlot6.plotChanged(plotChangeEvent37);
        org.jfree.chart.plot.IntervalMarker intervalMarker43 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        boolean boolean44 = combinedRangeXYPlot6.removeRangeMarker((org.jfree.chart.plot.Marker) intervalMarker43);
        combinedRangeXYPlot6.configureRangeAxes();
        org.jfree.chart.util.RectangleInsets rectangleInsets46 = combinedRangeXYPlot6.getAxisOffset();
        double double48 = rectangleInsets46.calculateBottomInset((double) 1577894400035L);
        org.jfree.chart.block.LineBorder lineBorder49 = new org.jfree.chart.block.LineBorder((java.awt.Paint) color3, stroke5, rectangleInsets46);
        java.awt.Paint paint50 = lineBorder49.getPaint();
        java.awt.Stroke stroke51 = lineBorder49.getStroke();
        org.jfree.chart.util.RectangleInsets rectangleInsets52 = lineBorder49.getInsets();
        org.jfree.chart.axis.DateTickUnitType dateTickUnitType53 = org.jfree.chart.axis.DateTickUnitType.HOUR;
        org.jfree.chart.axis.DateTickUnit dateTickUnit55 = new org.jfree.chart.axis.DateTickUnit(dateTickUnitType53, 100);
        boolean boolean56 = lineBorder49.equals((java.lang.Object) 100);
        org.junit.Assert.assertNotNull(color3);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(font26);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(textBlock31);
        org.junit.Assert.assertNull(datasetGroup34);
        org.junit.Assert.assertNotNull(chartChangeEventType39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(rectangleInsets46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4.0d + "'", double48 == 4.0d);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNotNull(stroke51);
        org.junit.Assert.assertNotNull(rectangleInsets52);
        org.junit.Assert.assertNotNull(dateTickUnitType53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test393");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Paint paint46 = legendGraphic45.getOutlinePaint();
        legendGraphic45.setShapeOutlineVisible(false);
        boolean boolean49 = legendGraphic45.isShapeOutlineVisible();
        java.awt.Stroke stroke50 = legendGraphic45.getLineStroke();
        java.awt.Graphics2D graphics2D51 = null;
        org.jfree.chart.axis.CategoryAxis3D categoryAxis3D53 = new org.jfree.chart.axis.CategoryAxis3D("hi!");
        categoryAxis3D53.setLabelURL("EXPAND");
        categoryAxis3D53.configure();
        org.jfree.chart.axis.CategoryLabelPositions categoryLabelPositions57 = categoryAxis3D53.getCategoryLabelPositions();
        org.jfree.data.time.Year year62 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year64 = new org.jfree.data.time.Year((int) (short) 0);
        long long65 = year64.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis66 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year62, (org.jfree.data.time.RegularTimePeriod) year64);
        org.jfree.chart.entity.EntityCollection entityCollection68 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo69 = new org.jfree.chart.ChartRenderingInfo(entityCollection68);
        java.awt.Paint paint70 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean71 = chartRenderingInfo69.equals((java.lang.Object) paint70);
        java.awt.geom.Rectangle2D rectangle2D72 = chartRenderingInfo69.getChartArea();
        org.jfree.chart.title.TextTitle textTitle74 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity75 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D72, (org.jfree.chart.title.Title) textTitle74);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor76 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D77 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D72, rectangleAnchor76);
        org.jfree.chart.plot.CategoryPlot categoryPlot78 = new org.jfree.chart.plot.CategoryPlot();
        java.awt.Color color79 = org.jfree.chart.ChartColor.VERY_DARK_MAGENTA;
        categoryPlot78.setRangeZeroBaselinePaint((java.awt.Paint) color79);
        org.jfree.chart.util.RectangleEdge rectangleEdge82 = categoryPlot78.getRangeAxisEdge((int) ' ');
        double double83 = periodAxis66.java2DToValue(0.0d, rectangle2D72, rectangleEdge82);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer85 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer85.clearSeriesStrokes(false);
        boolean boolean88 = xYAreaRenderer85.getPlotLines();
        org.jfree.chart.title.LegendTitle legendTitle89 = new org.jfree.chart.title.LegendTitle((org.jfree.chart.LegendItemSource) xYAreaRenderer85);
        org.jfree.chart.util.RectangleEdge rectangleEdge90 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str91 = rectangleEdge90.toString();
        legendTitle89.setLegendItemGraphicEdge(rectangleEdge90);
        double double93 = categoryAxis3D53.getCategoryStart(0, 10, rectangle2D72, rectangleEdge90);
        // The following exception was thrown during execution in test generation
        try {
            legendGraphic45.draw(graphics2D51, rectangle2D72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertNotNull(categoryLabelPositions57);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-62167363200000L) + "'", long65 == (-62167363200000L));
        org.junit.Assert.assertNotNull(paint70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(rectangle2D72);
        org.junit.Assert.assertNotNull(rectangleAnchor76);
        org.junit.Assert.assertNotNull(point2D77);
        org.junit.Assert.assertNotNull(color79);
        org.junit.Assert.assertNotNull(rectangleEdge82);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(rectangleEdge90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "RectangleEdge.RIGHT" + "'", str91, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test394");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        boolean boolean5 = xYAreaRenderer1.getBaseItemLabelsVisible();
        java.awt.Paint paint6 = xYAreaRenderer1.getBasePaint();
        java.awt.Font font7 = xYAreaRenderer1.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator8 = null;
        xYAreaRenderer1.setBaseItemLabelGenerator(xYItemLabelGenerator8);
        xYAreaRenderer1.setUseFillPaint(true);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot14 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis13);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer16 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer16.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator19 = null;
        xYAreaRenderer16.setLegendItemURLGenerator(xYSeriesLabelGenerator19);
        xYAreaRenderer16.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean27 = xYAreaRenderer16.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot14.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer16);
        combinedDomainXYPlot14.clearDomainMarkers();
        boolean boolean30 = combinedDomainXYPlot14.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.NumberAxis numberAxis32 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis32.pan((double) 1);
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot36 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis35);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.entity.EntityCollection entityCollection38 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo39 = new org.jfree.chart.ChartRenderingInfo(entityCollection38);
        java.awt.Paint paint40 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean41 = chartRenderingInfo39.equals((java.lang.Object) paint40);
        java.awt.geom.Rectangle2D rectangle2D42 = chartRenderingInfo39.getChartArea();
        java.util.List list43 = null;
        combinedDomainXYPlot36.drawDomainGridlines(graphics2D37, rectangle2D42, list43);
        org.jfree.chart.axis.NumberAxis numberAxis46 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity49 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D42, (org.jfree.chart.axis.Axis) numberAxis46, "", "DatasetRenderingOrder.FORWARD");
        xYAreaRenderer1.drawDomainGridLine(graphics2D12, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot14, (org.jfree.chart.axis.ValueAxis) numberAxis32, rectangle2D42, (double) 11);
        numberAxis32.setLabelToolTip("{0}: ({1}, {2})");
        numberAxis32.setRange(0.0d, (double) 1L);
        double double57 = numberAxis32.getLowerMargin();
        org.jfree.chart.plot.Plot plot58 = numberAxis32.getPlot();
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot59 = new org.jfree.chart.plot.CombinedDomainXYPlot((org.jfree.chart.axis.ValueAxis) numberAxis32);
        boolean boolean60 = combinedDomainXYPlot59.isRangeZoomable();
        boolean boolean61 = combinedDomainXYPlot59.isDomainZoomable();
        org.jfree.chart.util.RectangleEdge rectangleEdge63 = combinedDomainXYPlot59.getRangeAxisEdge(1);
        org.jfree.chart.plot.PlotOrientation plotOrientation64 = combinedDomainXYPlot59.getOrientation();
        org.jfree.chart.renderer.xy.XYItemRenderer xYItemRenderer65 = combinedDomainXYPlot59.getRenderer();
        org.jfree.chart.axis.ValueAxis valueAxis66 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot67 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis66);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer69 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer69.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator72 = null;
        xYAreaRenderer69.setLegendItemURLGenerator(xYSeriesLabelGenerator72);
        xYAreaRenderer69.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean80 = xYAreaRenderer69.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot67.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer69);
        combinedDomainXYPlot67.clearDomainMarkers();
        java.awt.Font font84 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint85 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer88 = null;
        org.jfree.chart.text.TextBlock textBlock89 = org.jfree.chart.text.TextUtilities.createTextBlock("", font84, paint85, (float) (-1L), (int) (short) -1, textMeasurer88);
        combinedDomainXYPlot67.setDomainCrosshairPaint(paint85);
        org.jfree.chart.plot.PiePlot piePlot91 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup92 = piePlot91.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener93 = null;
        piePlot91.addChangeListener(plotChangeListener93);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent95 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot91);
        combinedDomainXYPlot67.plotChanged(plotChangeEvent95);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType97 = plotChangeEvent95.getType();
        combinedDomainXYPlot59.plotChanged(plotChangeEvent95);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(rectangle2D42);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.05d + "'", double57 == 0.05d);
        org.junit.Assert.assertNull(plot58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(rectangleEdge63);
        org.junit.Assert.assertNotNull(plotOrientation64);
        org.junit.Assert.assertNull(xYItemRenderer65);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(font84);
        org.junit.Assert.assertNotNull(paint85);
        org.junit.Assert.assertNotNull(textBlock89);
        org.junit.Assert.assertNull(datasetGroup92);
        org.junit.Assert.assertNotNull(chartChangeEventType97);
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test395");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        boolean boolean5 = xYAreaRenderer1.getBaseItemLabelsVisible();
        java.awt.Paint paint6 = xYAreaRenderer1.getBasePaint();
        java.awt.Font font7 = xYAreaRenderer1.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator8 = null;
        xYAreaRenderer1.setBaseItemLabelGenerator(xYItemLabelGenerator8);
        xYAreaRenderer1.setUseFillPaint(true);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot14 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis13);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer16 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer16.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator19 = null;
        xYAreaRenderer16.setLegendItemURLGenerator(xYSeriesLabelGenerator19);
        xYAreaRenderer16.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean27 = xYAreaRenderer16.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot14.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer16);
        combinedDomainXYPlot14.clearDomainMarkers();
        boolean boolean30 = combinedDomainXYPlot14.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.NumberAxis numberAxis32 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis32.pan((double) 1);
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot36 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis35);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.entity.EntityCollection entityCollection38 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo39 = new org.jfree.chart.ChartRenderingInfo(entityCollection38);
        java.awt.Paint paint40 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean41 = chartRenderingInfo39.equals((java.lang.Object) paint40);
        java.awt.geom.Rectangle2D rectangle2D42 = chartRenderingInfo39.getChartArea();
        java.util.List list43 = null;
        combinedDomainXYPlot36.drawDomainGridlines(graphics2D37, rectangle2D42, list43);
        org.jfree.chart.axis.NumberAxis numberAxis46 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity49 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D42, (org.jfree.chart.axis.Axis) numberAxis46, "", "DatasetRenderingOrder.FORWARD");
        xYAreaRenderer1.drawDomainGridLine(graphics2D12, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot14, (org.jfree.chart.axis.ValueAxis) numberAxis32, rectangle2D42, (double) 11);
        numberAxis32.setLabelToolTip("{0}: ({1}, {2})");
        numberAxis32.setRange(0.0d, (double) 1L);
        double double57 = numberAxis32.getLowerMargin();
        java.awt.Font font58 = numberAxis32.getTickLabelFont();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(rectangle2D42);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.05d + "'", double57 == 0.05d);
        org.junit.Assert.assertNotNull(font58);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test396");
        org.jfree.data.time.DateRange dateRange0 = new org.jfree.data.time.DateRange();
        java.util.Date date1 = dateRange0.getUpperDate();
        org.jfree.data.time.Month month2 = new org.jfree.data.time.Month(date1);
        org.jfree.chart.axis.SegmentedTimeline segmentedTimeline3 = org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline();
        long long5 = segmentedTimeline3.getTimeFromLong((long) (byte) 10);
        int int6 = segmentedTimeline3.getSegmentsExcluded();
        int int7 = segmentedTimeline3.getSegmentsExcluded();
        org.jfree.chart.axis.SegmentedTimeline segmentedTimeline8 = segmentedTimeline3.getBaseTimeline();
        boolean boolean9 = month2.equals((java.lang.Object) segmentedTimeline8);
        long long10 = month2.getFirstMillisecond();
        java.util.Date date11 = month2.getEnd();
        java.lang.String str12 = month2.toString();
        java.util.Calendar calendar13 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long14 = month2.getMiddleMillisecond(calendar13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(date1);
        org.junit.Assert.assertEquals(date1.toString(), "Wed Dec 31 16:00:00 PST 1969");
        org.junit.Assert.assertNotNull(segmentedTimeline3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNull(segmentedTimeline8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-2649600000L) + "'", long10 == (-2649600000L));
        org.junit.Assert.assertNotNull(date11);
        org.junit.Assert.assertEquals(date11.toString(), "Wed Dec 31 23:59:59 PST 1969");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "December 1969" + "'", str12, "December 1969");
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test397");
        org.jfree.chart.plot.PiePlot piePlot0 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup1 = piePlot0.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener2 = null;
        piePlot0.addChangeListener(plotChangeListener2);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent4 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot0);
        double double5 = piePlot0.getLabelLinkMargin();
        boolean boolean6 = piePlot0.getAutoPopulateSectionOutlineStroke();
        org.jfree.data.general.PieDataset pieDataset7 = piePlot0.getDataset();
        piePlot0.setPieIndex(11);
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot11 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis10);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer13 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer13.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator16 = null;
        xYAreaRenderer13.setLegendItemURLGenerator(xYSeriesLabelGenerator16);
        xYAreaRenderer13.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean24 = xYAreaRenderer13.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot11.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer13);
        org.jfree.chart.axis.ValueAxis valueAxis26 = null;
        int int27 = combinedDomainXYPlot11.getRangeAxisIndex(valueAxis26);
        boolean boolean28 = combinedDomainXYPlot11.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets29 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double30 = rectangleInsets29.getLeft();
        double double32 = rectangleInsets29.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot11.setAxisOffset(rectangleInsets29);
        combinedDomainXYPlot11.setDomainGridlinesVisible(false);
        java.awt.Paint paint36 = combinedDomainXYPlot11.getNoDataMessagePaint();
        boolean boolean37 = combinedDomainXYPlot11.canSelectByPoint();
        java.awt.Color color42 = org.jfree.chart.ChartColor.VERY_DARK_RED;
        org.jfree.chart.block.BlockBorder blockBorder43 = new org.jfree.chart.block.BlockBorder(0.025d, (double) 2, (double) 9, (double) 1L, (java.awt.Paint) color42);
        combinedDomainXYPlot11.setRangeZeroBaselinePaint((java.awt.Paint) color42);
        // The following exception was thrown during execution in test generation
        try {
            piePlot0.addChangeListener((org.jfree.chart.event.PlotChangeListener) combinedDomainXYPlot11);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.plot.CombinedDomainXYPlot@36ae61f5 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(datasetGroup1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.025d + "'", double5 == 0.025d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(pieDataset7);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(rectangleInsets29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(color42);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test398");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        java.awt.Stroke stroke6 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        xYAreaRenderer1.setSeriesStroke((int) (short) 1, stroke6, true);
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot11 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis10);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer13 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer13.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator16 = null;
        xYAreaRenderer13.setLegendItemURLGenerator(xYSeriesLabelGenerator16);
        xYAreaRenderer13.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean24 = xYAreaRenderer13.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot11.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer13);
        java.awt.Stroke stroke26 = combinedDomainXYPlot11.getDomainCrosshairStroke();
        xYAreaRenderer1.setSeriesOutlineStroke((int) (short) 100, stroke26, false);
        org.jfree.chart.labels.XYToolTipGenerator xYToolTipGenerator29 = xYAreaRenderer1.getBaseToolTipGenerator();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertNull(xYToolTipGenerator29);
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test399");
        org.jfree.chart.labels.StandardXYSeriesLabelGenerator standardXYSeriesLabelGenerator1 = new org.jfree.chart.labels.StandardXYSeriesLabelGenerator("ThreadContext");
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot3 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis2);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer5 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer5.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator8 = null;
        xYAreaRenderer5.setLegendItemURLGenerator(xYSeriesLabelGenerator8);
        xYAreaRenderer5.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean16 = xYAreaRenderer5.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot3.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer5);
        combinedDomainXYPlot3.clearDomainMarkers();
        java.awt.Font font20 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint21 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer24 = null;
        org.jfree.chart.text.TextBlock textBlock25 = org.jfree.chart.text.TextUtilities.createTextBlock("", font20, paint21, (float) (-1L), (int) (short) -1, textMeasurer24);
        combinedDomainXYPlot3.setDomainCrosshairPaint(paint21);
        org.jfree.chart.plot.PiePlot piePlot27 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup28 = piePlot27.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener29 = null;
        piePlot27.addChangeListener(plotChangeListener29);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent31 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot27);
        combinedDomainXYPlot3.plotChanged(plotChangeEvent31);
        java.awt.Stroke stroke33 = combinedDomainXYPlot3.getRangeCrosshairStroke();
        boolean boolean34 = standardXYSeriesLabelGenerator1.equals((java.lang.Object) combinedDomainXYPlot3);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(textBlock25);
        org.junit.Assert.assertNull(datasetGroup28);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test400");
        org.jfree.chart.plot.IntervalMarker intervalMarker2 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        java.awt.Color color3 = org.jfree.chart.ChartColor.VERY_DARK_RED;
        intervalMarker2.setPaint((java.awt.Paint) color3);
        java.awt.Stroke stroke5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot6 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list7 = combinedRangeXYPlot6.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot9 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean22 = xYAreaRenderer11.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot9.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        combinedDomainXYPlot9.clearDomainMarkers();
        java.awt.Font font26 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint27 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer30 = null;
        org.jfree.chart.text.TextBlock textBlock31 = org.jfree.chart.text.TextUtilities.createTextBlock("", font26, paint27, (float) (-1L), (int) (short) -1, textMeasurer30);
        combinedDomainXYPlot9.setDomainCrosshairPaint(paint27);
        org.jfree.chart.plot.PiePlot piePlot33 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup34 = piePlot33.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener35 = null;
        piePlot33.addChangeListener(plotChangeListener35);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent37 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot33);
        combinedDomainXYPlot9.plotChanged(plotChangeEvent37);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType39 = plotChangeEvent37.getType();
        combinedRangeXYPlot6.plotChanged(plotChangeEvent37);
        org.jfree.chart.plot.IntervalMarker intervalMarker43 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        boolean boolean44 = combinedRangeXYPlot6.removeRangeMarker((org.jfree.chart.plot.Marker) intervalMarker43);
        combinedRangeXYPlot6.configureRangeAxes();
        org.jfree.chart.util.RectangleInsets rectangleInsets46 = combinedRangeXYPlot6.getAxisOffset();
        double double48 = rectangleInsets46.calculateBottomInset((double) 1577894400035L);
        org.jfree.chart.block.LineBorder lineBorder49 = new org.jfree.chart.block.LineBorder((java.awt.Paint) color3, stroke5, rectangleInsets46);
        java.awt.Paint paint50 = lineBorder49.getPaint();
        java.awt.Stroke stroke51 = lineBorder49.getStroke();
        org.jfree.chart.util.RectangleInsets rectangleInsets52 = lineBorder49.getInsets();
        java.awt.Paint paint53 = lineBorder49.getPaint();
        org.junit.Assert.assertNotNull(color3);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(list7);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(font26);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(textBlock31);
        org.junit.Assert.assertNull(datasetGroup34);
        org.junit.Assert.assertNotNull(chartChangeEventType39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(rectangleInsets46);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 4.0d + "'", double48 == 4.0d);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNotNull(stroke51);
        org.junit.Assert.assertNotNull(rectangleInsets52);
        org.junit.Assert.assertNotNull(paint53);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test401");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        org.jfree.chart.plot.PiePlot piePlot1 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup2 = piePlot1.getDatasetGroup();
        int int3 = piePlot1.getBackgroundImageAlignment();
        boolean boolean4 = piePlot1.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D5 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo6 = null;
        piePlot1.createAndAddEntity(rectangle2D5, plotRenderingInfo6, "hi!", "LGPL");
        java.awt.Paint paint10 = piePlot1.getLabelPaint();
        java.awt.Stroke stroke11 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        piePlot1.setOutlineStroke(stroke11);
        combinedDomainXYPlot0.setDomainMinorGridlineStroke(stroke11);
        int int14 = combinedDomainXYPlot0.getDatasetCount();
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer17 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection18 = categoryPlot15.getDomainMarkers((int) 'a', layer17);
        org.jfree.data.category.CategoryDataset categoryDataset20 = null;
        categoryPlot15.setDataset(4, categoryDataset20);
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = new org.jfree.chart.plot.CategoryPlot();
        int int23 = categoryPlot22.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation24 = categoryPlot22.getOrientation();
        categoryPlot15.setOrientation(plotOrientation24);
        boolean boolean26 = categoryPlot15.isDomainPannable();
        categoryPlot15.setRangeCrosshairValue((double) 10);
        java.awt.Graphics2D graphics2D29 = null;
        org.jfree.chart.entity.EntityCollection entityCollection30 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo31 = new org.jfree.chart.ChartRenderingInfo(entityCollection30);
        java.awt.Paint paint32 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean33 = chartRenderingInfo31.equals((java.lang.Object) paint32);
        java.awt.geom.Rectangle2D rectangle2D34 = chartRenderingInfo31.getChartArea();
        org.jfree.chart.title.TextTitle textTitle36 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity37 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D34, (org.jfree.chart.title.Title) textTitle36);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor38 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D39 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D34, rectangleAnchor38);
        org.jfree.data.general.PieDataset pieDataset40 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity46 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D34, pieDataset40, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.AxisSpace axisSpace47 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis49 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot50 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis49);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer52 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer52.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator55 = null;
        xYAreaRenderer52.setLegendItemURLGenerator(xYSeriesLabelGenerator55);
        xYAreaRenderer52.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean63 = xYAreaRenderer52.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot50.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer52);
        org.jfree.chart.axis.ValueAxis valueAxis65 = null;
        int int66 = combinedDomainXYPlot50.getRangeAxisIndex(valueAxis65);
        org.jfree.chart.axis.ValueAxis valueAxis67 = null;
        combinedDomainXYPlot50.setDomainAxis(valueAxis67);
        org.jfree.chart.util.RectangleEdge rectangleEdge70 = combinedDomainXYPlot50.getDomainAxisEdge(0);
        axisSpace47.add((double) 10L, rectangleEdge70);
        org.jfree.chart.axis.AxisSpace axisSpace72 = categoryPlot15.calculateDomainAxisSpace(graphics2D29, rectangle2D34, axisSpace47);
        combinedDomainXYPlot0.setFixedDomainAxisSpace(axisSpace72, false);
        int int75 = combinedDomainXYPlot0.getDatasetCount();
        org.jfree.chart.axis.AxisSpace axisSpace76 = new org.jfree.chart.axis.AxisSpace();
        axisSpace76.setTop(0.0d);
        double double79 = axisSpace76.getBottom();
        combinedDomainXYPlot0.setFixedDomainAxisSpace(axisSpace76);
        org.junit.Assert.assertNull(datasetGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 15 + "'", int3 == 15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(layer17);
        org.junit.Assert.assertNull(collection18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(plotOrientation24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(rectangle2D34);
        org.junit.Assert.assertNotNull(rectangleAnchor38);
        org.junit.Assert.assertNotNull(point2D39);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge70);
        org.junit.Assert.assertNotNull(axisSpace72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test402");
        org.jfree.chart.block.BorderArrangement borderArrangement0 = new org.jfree.chart.block.BorderArrangement();
        org.jfree.chart.block.BlockContainer blockContainer1 = new org.jfree.chart.block.BlockContainer((org.jfree.chart.block.Arrangement) borderArrangement0);
        blockContainer1.clear();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer4 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer4.clearSeriesStrokes(false);
        boolean boolean7 = xYAreaRenderer4.getPlotLines();
        boolean boolean8 = xYAreaRenderer4.getBaseItemLabelsVisible();
        java.awt.Paint paint9 = xYAreaRenderer4.getBasePaint();
        boolean boolean10 = blockContainer1.equals((java.lang.Object) paint9);
        blockContainer1.setMargin((double) (-62104204800001L), (double) '4', (double) (byte) -1, (-9.0d));
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        java.awt.Graphics2D graphics2D19 = null;
        org.jfree.chart.entity.EntityCollection entityCollection20 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo21 = new org.jfree.chart.ChartRenderingInfo(entityCollection20);
        java.awt.Paint paint22 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean23 = chartRenderingInfo21.equals((java.lang.Object) paint22);
        java.awt.geom.Rectangle2D rectangle2D24 = chartRenderingInfo21.getChartArea();
        java.util.List list25 = null;
        combinedDomainXYPlot18.drawDomainGridlines(graphics2D19, rectangle2D24, list25);
        org.jfree.chart.axis.NumberAxis numberAxis28 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity31 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D24, (org.jfree.chart.axis.Axis) numberAxis28, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer33 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer33.clearSeriesStrokes(false);
        boolean boolean36 = xYAreaRenderer33.getPlotLines();
        boolean boolean37 = xYAreaRenderer33.getBaseItemLabelsVisible();
        java.awt.Paint paint39 = org.jfree.chart.plot.WaferMapPlot.DEFAULT_CROSSHAIR_PAINT;
        xYAreaRenderer33.setSeriesFillPaint(7, paint39);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer43 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean45 = xYAreaRenderer43.isSeriesItemLabelsVisible((int) (byte) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition46 = xYAreaRenderer43.getBasePositiveItemLabelPosition();
        xYAreaRenderer33.setSeriesNegativeItemLabelPosition(0, itemLabelPosition46);
        java.awt.Font font49 = xYAreaRenderer33.getSeriesItemLabelFont(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = blockContainer1.draw(graphics2D16, rectangle2D24, (java.lang.Object) font49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(rectangle2D24);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition46);
        org.junit.Assert.assertNull(font49);
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test403");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape5 = barRenderer3D0.getBaseShape();
        barRenderer3D0.setBaseSeriesVisible(false);
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot9 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean22 = xYAreaRenderer11.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot9.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        int int25 = combinedDomainXYPlot9.getRangeAxisIndex(valueAxis24);
        boolean boolean26 = combinedDomainXYPlot9.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets27 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double28 = rectangleInsets27.getLeft();
        double double30 = rectangleInsets27.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot9.setAxisOffset(rectangleInsets27);
        combinedDomainXYPlot9.setDomainGridlinesVisible(false);
        java.awt.Paint paint34 = combinedDomainXYPlot9.getNoDataMessagePaint();
        barRenderer3D0.setBaseItemLabelPaint(paint34, false);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot38 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot38.clearAnnotations();
        org.jfree.data.time.Year year42 = new org.jfree.data.time.Year((int) (short) 0);
        long long43 = year42.getFirstMillisecond();
        org.jfree.data.time.Year year45 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis46 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year42, (org.jfree.data.time.RegularTimePeriod) year45);
        org.jfree.data.time.Year year49 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year51 = new org.jfree.data.time.Year((int) (short) 0);
        long long52 = year51.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis53 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year49, (org.jfree.data.time.RegularTimePeriod) year51);
        periodAxis46.setLast((org.jfree.data.time.RegularTimePeriod) year51);
        java.awt.Stroke stroke55 = periodAxis46.getMinorTickMarkStroke();
        java.lang.Class class56 = periodAxis46.getMajorTickTimePeriodClass();
        org.jfree.chart.entity.EntityCollection entityCollection57 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo58 = new org.jfree.chart.ChartRenderingInfo(entityCollection57);
        java.awt.Paint paint59 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean60 = chartRenderingInfo58.equals((java.lang.Object) paint59);
        java.awt.geom.Rectangle2D rectangle2D61 = chartRenderingInfo58.getChartArea();
        org.jfree.chart.title.TextTitle textTitle63 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity64 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D61, (org.jfree.chart.title.Title) textTitle63);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor65 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D66 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D61, rectangleAnchor65);
        java.awt.Color color71 = java.awt.Color.getHSBColor((float) 2, (float) 15, (float) 0);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D72 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font76 = barRenderer3D72.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape77 = barRenderer3D72.getBaseShape();
        java.awt.Paint paint78 = barRenderer3D72.getShadowPaint();
        java.awt.Stroke stroke82 = barRenderer3D72.getItemOutlineStroke((int) (byte) 1, (int) '#', false);
        barRenderer3D0.drawRangeLine(graphics2D37, categoryPlot38, (org.jfree.chart.axis.ValueAxis) periodAxis46, rectangle2D61, (double) 10L, (java.awt.Paint) color71, stroke82);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D87 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator88 = null;
        barRenderer3D87.setLegendItemToolTipGenerator(categorySeriesLabelGenerator88);
        barRenderer3D87.setBaseSeriesVisibleInLegend(true);
        double double92 = barRenderer3D87.getUpperClip();
        categoryPlot38.setRenderer(9, (org.jfree.chart.renderer.category.CategoryItemRenderer) barRenderer3D87);
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangleInsets27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-62167363200000L) + "'", long43 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-62167363200000L) + "'", long52 == (-62167363200000L));
        org.junit.Assert.assertNotNull(stroke55);
        org.junit.Assert.assertNotNull(class56);
        org.junit.Assert.assertNotNull(paint59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(rectangle2D61);
        org.junit.Assert.assertNotNull(rectangleAnchor65);
        org.junit.Assert.assertNotNull(point2D66);
        org.junit.Assert.assertNotNull(color71);
        org.junit.Assert.assertNotNull(font76);
        org.junit.Assert.assertNotNull(shape77);
        org.junit.Assert.assertNotNull(paint78);
        org.junit.Assert.assertNotNull(stroke82);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test404");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        double double1 = combinedRangeXYPlot0.getGap();
        org.jfree.chart.LegendItemCollection legendItemCollection2 = combinedRangeXYPlot0.getLegendItems();
        boolean boolean3 = combinedRangeXYPlot0.isRangeZeroBaselineVisible();
        java.awt.Paint paint4 = combinedRangeXYPlot0.getDomainZeroBaselinePaint();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 5.0d + "'", double1 == 5.0d);
        org.junit.Assert.assertNotNull(legendItemCollection2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint4);
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test405");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator4 = null;
        xYAreaRenderer1.setLegendItemURLGenerator(xYSeriesLabelGenerator4);
        xYAreaRenderer1.setSeriesVisibleInLegend((int) (byte) 10, (java.lang.Boolean) false);
        xYAreaRenderer1.setBaseItemLabelsVisible(true);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator12 = null;
        xYAreaRenderer1.setSeriesURLGenerator((int) (short) 100, xYURLGenerator12, false);
        org.jfree.chart.plot.PolarPlot polarPlot15 = new org.jfree.chart.plot.PolarPlot();
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        polarPlot15.setAxis(valueAxis16);
        int int18 = polarPlot15.getSeriesCount();
        org.jfree.chart.renderer.PolarItemRenderer polarItemRenderer19 = polarPlot15.getRenderer();
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer22 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection23 = categoryPlot20.getDomainMarkers((int) 'a', layer22);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        categoryPlot20.setDataset(4, categoryDataset25);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier27 = categoryPlot20.getDrawingSupplier();
        categoryPlot20.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace29 = null;
        categoryPlot20.setFixedDomainAxisSpace(axisSpace29);
        org.jfree.chart.axis.CategoryAxis3D categoryAxis3D32 = new org.jfree.chart.axis.CategoryAxis3D("hi!");
        categoryPlot20.setDomainAxis((org.jfree.chart.axis.CategoryAxis) categoryAxis3D32);
        categoryAxis3D32.configure();
        org.jfree.chart.axis.ValueAxis valueAxis40 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot41 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis40);
        java.awt.Graphics2D graphics2D42 = null;
        org.jfree.chart.entity.EntityCollection entityCollection43 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo44 = new org.jfree.chart.ChartRenderingInfo(entityCollection43);
        java.awt.Paint paint45 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean46 = chartRenderingInfo44.equals((java.lang.Object) paint45);
        java.awt.geom.Rectangle2D rectangle2D47 = chartRenderingInfo44.getChartArea();
        java.util.List list48 = null;
        combinedDomainXYPlot41.drawDomainGridlines(graphics2D42, rectangle2D47, list48);
        org.jfree.chart.axis.NumberAxis numberAxis51 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity54 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D47, (org.jfree.chart.axis.Axis) numberAxis51, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.plot.CategoryPlot categoryPlot55 = new org.jfree.chart.plot.CategoryPlot();
        int int56 = categoryPlot55.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge60 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str61 = rectangleEdge60.toString();
        double double62 = categoryPlot55.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge60);
        boolean boolean63 = categoryPlot55.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis65 = categoryPlot55.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge66 = categoryPlot55.getDomainAxisEdge();
        double double67 = categoryAxis3D32.getCategorySeriesMiddle(11, (int) ' ', (int) (byte) 0, (int) (short) 100, 0.0d, rectangle2D47, rectangleEdge66);
        java.awt.Font font68 = categoryAxis3D32.getTickLabelFont();
        polarPlot15.setAngleLabelFont(font68);
        boolean boolean70 = xYAreaRenderer1.equals((java.lang.Object) font68);
        boolean boolean73 = xYAreaRenderer1.getItemVisible((-1), 4);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(polarItemRenderer19);
        org.junit.Assert.assertNotNull(layer22);
        org.junit.Assert.assertNull(collection23);
        org.junit.Assert.assertNotNull(drawingSupplier27);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(rectangle2D47);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "RectangleEdge.RIGHT" + "'", str61, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 149.0d + "'", double62 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(categoryAxis65);
        org.junit.Assert.assertNotNull(rectangleEdge66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNotNull(font68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test406");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        combinedRangeXYPlot0.setGap((double) (-16777216));
        org.jfree.chart.entity.EntityCollection entityCollection6 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo7 = new org.jfree.chart.ChartRenderingInfo(entityCollection6);
        java.awt.Paint paint8 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean9 = chartRenderingInfo7.equals((java.lang.Object) paint8);
        java.awt.geom.Rectangle2D rectangle2D10 = chartRenderingInfo7.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = chartRenderingInfo7.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo12 = plotRenderingInfo11.getOwner();
        combinedRangeXYPlot0.handleClick((-9999), 5, plotRenderingInfo11);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer15 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean17 = xYAreaRenderer15.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint18 = xYAreaRenderer15.getBaseLegendTextPaint();
        java.awt.Paint paint19 = xYAreaRenderer15.getBaseFillPaint();
        java.lang.Object obj20 = xYAreaRenderer15.clone();
        java.awt.Paint paint24 = xYAreaRenderer15.getItemLabelPaint((int) ' ', 0, false);
        combinedRangeXYPlot0.setDomainCrosshairPaint(paint24);
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(rectangle2D10);
        org.junit.Assert.assertNotNull(plotRenderingInfo11);
        org.junit.Assert.assertNotNull(chartRenderingInfo12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(paint18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(paint24);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test407");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        combinedDomainXYPlot1.clearDomainMarkers();
        int int27 = combinedDomainXYPlot1.getRendererCount();
        org.jfree.chart.renderer.xy.XYItemRenderer xYItemRenderer29 = combinedDomainXYPlot1.getRenderer((-1));
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot32 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis31);
        java.awt.Graphics2D graphics2D33 = null;
        org.jfree.chart.entity.EntityCollection entityCollection34 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo35 = new org.jfree.chart.ChartRenderingInfo(entityCollection34);
        java.awt.Paint paint36 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean37 = chartRenderingInfo35.equals((java.lang.Object) paint36);
        java.awt.geom.Rectangle2D rectangle2D38 = chartRenderingInfo35.getChartArea();
        java.util.List list39 = null;
        combinedDomainXYPlot32.drawDomainGridlines(graphics2D33, rectangle2D38, list39);
        org.jfree.chart.axis.NumberAxis numberAxis42 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity45 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D38, (org.jfree.chart.axis.Axis) numberAxis42, "", "DatasetRenderingOrder.FORWARD");
        java.lang.Object obj46 = numberAxis42.clone();
        combinedDomainXYPlot1.setRangeAxis(0, (org.jfree.chart.axis.ValueAxis) numberAxis42);
        org.jfree.chart.axis.NumberAxis numberAxis49 = new org.jfree.chart.axis.NumberAxis("");
        double double50 = numberAxis49.getAutoRangeMinimumSize();
        numberAxis49.setLowerBound((double) (byte) -1);
        int int53 = combinedDomainXYPlot1.getRangeAxisIndex((org.jfree.chart.axis.ValueAxis) numberAxis49);
        double double54 = combinedDomainXYPlot1.getGap();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(xYItemRenderer29);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(rectangle2D38);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 1.0E-8d + "'", double50 == 1.0E-8d);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 5.0d + "'", double54 == 5.0d);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test408");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.PiePlot piePlot25 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup26 = piePlot25.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener27 = null;
        piePlot25.addChangeListener(plotChangeListener27);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent29 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot25);
        combinedDomainXYPlot1.plotChanged(plotChangeEvent29);
        java.awt.Paint paint31 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        combinedDomainXYPlot1.setDomainGridlinePaint(paint31);
        java.awt.Paint paint33 = combinedDomainXYPlot1.getRangeGridlinePaint();
        double double34 = combinedDomainXYPlot1.getRangeCrosshairValue();
        org.jfree.data.xy.XYDataset xYDataset35 = combinedDomainXYPlot1.getDataset();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNull(datasetGroup26);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNull(xYDataset35);
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test409");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        numberAxis11.centerRange(10.0d);
        org.jfree.data.time.DateRange dateRange17 = new org.jfree.data.time.DateRange();
        java.util.Date date18 = dateRange17.getUpperDate();
        long long19 = dateRange17.getLowerMillis();
        org.jfree.data.Range range21 = null;
        org.jfree.chart.block.RectangleConstraint rectangleConstraint22 = new org.jfree.chart.block.RectangleConstraint(0.0d, range21);
        org.jfree.data.Range range25 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range28 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range29 = org.jfree.data.Range.combine(range25, range28);
        org.jfree.data.Range range30 = org.jfree.chart.axis.ValueAxis.DEFAULT_RANGE;
        org.jfree.data.Range range31 = org.jfree.data.Range.combine(range25, range30);
        org.jfree.chart.block.RectangleConstraint rectangleConstraint32 = rectangleConstraint22.toRangeWidth(range25);
        java.lang.Object obj33 = null;
        boolean boolean34 = range25.equals(obj33);
        org.jfree.data.Range range36 = org.jfree.data.Range.scale(range25, 0.05d);
        boolean boolean37 = dateRange17.intersects(range36);
        numberAxis11.setDefaultAutoRange((org.jfree.data.Range) dateRange17);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNotNull(date18);
        org.junit.Assert.assertEquals(date18.toString(), "Wed Dec 31 16:00:00 PST 1969");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(range29);
        org.junit.Assert.assertNotNull(range30);
        org.junit.Assert.assertNotNull(range31);
        org.junit.Assert.assertNotNull(rectangleConstraint32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(range36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test410");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        xYAreaRenderer1.setBaseSeriesVisible(false);
        java.awt.Paint paint7 = xYAreaRenderer1.getBaseLegendTextPaint();
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot8 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        int int9 = combinedDomainXYPlot8.getBackgroundImageAlignment();
        org.jfree.chart.entity.EntityCollection entityCollection10 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo11 = new org.jfree.chart.ChartRenderingInfo(entityCollection10);
        java.awt.Paint paint12 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean13 = chartRenderingInfo11.equals((java.lang.Object) paint12);
        java.awt.geom.Rectangle2D rectangle2D14 = chartRenderingInfo11.getChartArea();
        org.jfree.chart.title.TextTitle textTitle16 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity17 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D14, (org.jfree.chart.title.Title) textTitle16);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor18 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D19 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D14, rectangleAnchor18);
        combinedDomainXYPlot8.setQuadrantOrigin(point2D19);
        org.jfree.chart.axis.ValueAxis valueAxis21 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot22 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis21);
        java.awt.Stroke stroke23 = combinedDomainXYPlot22.getRangeZeroBaselineStroke();
        combinedDomainXYPlot8.setDomainGridlineStroke(stroke23);
        org.jfree.chart.plot.PlotOrientation plotOrientation25 = combinedDomainXYPlot8.getOrientation();
        xYAreaRenderer1.setPlot((org.jfree.chart.plot.XYPlot) combinedDomainXYPlot8);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(paint7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 15 + "'", int9 == 15);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(rectangle2D14);
        org.junit.Assert.assertNotNull(rectangleAnchor18);
        org.junit.Assert.assertNotNull(point2D19);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNotNull(plotOrientation25);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test411");
        java.util.TimeZone timeZone0 = org.jfree.chart.axis.SegmentedTimeline.DEFAULT_TIME_ZONE;
        java.lang.Class<?> wildcardClass1 = timeZone0.getClass();
        boolean boolean2 = org.jfree.chart.util.SerialUtilities.isSerializable((java.lang.Class) wildcardClass1);
        boolean boolean3 = org.jfree.chart.util.SerialUtilities.isSerializable((java.lang.Class) wildcardClass1);
        java.lang.Class class4 = org.jfree.data.time.RegularTimePeriod.downsize((java.lang.Class) wildcardClass1);
        org.junit.Assert.assertNotNull(timeZone0);
        org.junit.Assert.assertEquals(timeZone0.getDisplayName(), "Pacific Standard Time");
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(class4);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test412");
        org.jfree.chart.axis.DateTickUnitType dateTickUnitType1 = org.jfree.chart.axis.DateTickUnitType.HOUR;
        org.jfree.chart.axis.DateTickUnit dateTickUnit3 = new org.jfree.chart.axis.DateTickUnit(dateTickUnitType1, 100);
        java.lang.String str5 = dateTickUnit3.valueToString((double) (short) 1);
        org.jfree.chart.title.TextTitle textTitle7 = new org.jfree.chart.title.TextTitle("");
        boolean boolean8 = textTitle7.getExpandToFitSpace();
        boolean boolean9 = dateTickUnit3.equals((java.lang.Object) boolean8);
        org.jfree.data.time.DateRange dateRange10 = new org.jfree.data.time.DateRange();
        java.util.Date date11 = dateRange10.getUpperDate();
        org.jfree.data.time.Month month12 = new org.jfree.data.time.Month(date11);
        java.util.Date date13 = dateTickUnit3.rollDate(date11);
        int int15 = dateTickUnit3.compareTo((java.lang.Object) (-16777216));
        org.jfree.data.time.Year year17 = new org.jfree.data.time.Year((int) (short) 0);
        long long18 = year17.getFirstMillisecond();
        org.jfree.data.time.RegularTimePeriod regularTimePeriod19 = year17.previous();
        java.util.Date date20 = year17.getStart();
        java.util.TimeZone timeZone21 = org.jfree.chart.axis.SegmentedTimeline.DEFAULT_TIME_ZONE;
        org.jfree.chart.axis.SegmentedTimeline.DEFAULT_TIME_ZONE = timeZone21;
        org.jfree.chart.axis.TickUnitSource tickUnitSource23 = org.jfree.chart.axis.DateAxis.createStandardDateTickUnits(timeZone21);
        org.jfree.chart.axis.SegmentedTimeline.NO_DST_TIME_ZONE = timeZone21;
        java.util.Date date25 = dateTickUnit3.addToDate(date20, timeZone21);
        org.jfree.chart.axis.DateAxis dateAxis26 = new org.jfree.chart.axis.DateAxis("AxisEntity: tooltip = ", timeZone21);
        org.jfree.chart.axis.DateTickUnitType dateTickUnitType27 = org.jfree.chart.axis.DateTickUnitType.HOUR;
        org.jfree.chart.axis.DateTickUnit dateTickUnit29 = new org.jfree.chart.axis.DateTickUnit(dateTickUnitType27, 100);
        java.lang.String str31 = dateTickUnit29.valueToString((double) (short) 1);
        org.jfree.chart.title.TextTitle textTitle33 = new org.jfree.chart.title.TextTitle("");
        boolean boolean34 = textTitle33.getExpandToFitSpace();
        boolean boolean35 = dateTickUnit29.equals((java.lang.Object) boolean34);
        org.jfree.data.time.DateRange dateRange36 = new org.jfree.data.time.DateRange();
        java.util.Date date37 = dateRange36.getUpperDate();
        org.jfree.data.time.Month month38 = new org.jfree.data.time.Month(date37);
        java.util.Date date39 = dateTickUnit29.rollDate(date37);
        int int41 = dateTickUnit29.compareTo((java.lang.Object) (-16777216));
        int int42 = dateTickUnit29.getRollMultiple();
        dateAxis26.setTickUnit(dateTickUnit29, true, true);
        java.util.TimeZone timeZone46 = dateAxis26.getTimeZone();
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot47 = new org.jfree.chart.plot.CombinedDomainXYPlot((org.jfree.chart.axis.ValueAxis) dateAxis26);
        org.junit.Assert.assertNotNull(dateTickUnitType1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "12/31/69" + "'", str5, "12/31/69");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(date11);
        org.junit.Assert.assertEquals(date11.toString(), "Wed Dec 31 16:00:00 PST 1969");
        org.junit.Assert.assertNotNull(date13);
        org.junit.Assert.assertEquals(date13.toString(), "Sun Jan 04 20:00:00 PST 1970");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-62167363200000L) + "'", long18 == (-62167363200000L));
        org.junit.Assert.assertNotNull(regularTimePeriod19);
        org.junit.Assert.assertNotNull(date20);
        org.junit.Assert.assertEquals(date20.toString(), "Thu Jan 01 00:00:00 PST 1");
        org.junit.Assert.assertNotNull(timeZone21);
        org.junit.Assert.assertEquals(timeZone21.getDisplayName(), "Pacific Standard Time");
        org.junit.Assert.assertNotNull(tickUnitSource23);
        org.junit.Assert.assertNotNull(date25);
        org.junit.Assert.assertEquals(date25.toString(), "Mon Jan 05 04:00:00 PST 1");
        org.junit.Assert.assertNotNull(dateTickUnitType27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "12/31/69" + "'", str31, "12/31/69");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(date37);
        org.junit.Assert.assertEquals(date37.toString(), "Wed Dec 31 16:00:00 PST 1969");
        org.junit.Assert.assertNotNull(date39);
        org.junit.Assert.assertEquals(date39.toString(), "Sun Jan 04 20:00:00 PST 1970");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertNotNull(timeZone46);
        org.junit.Assert.assertEquals(timeZone46.getDisplayName(), "Pacific Standard Time");
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test413");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        boolean boolean17 = combinedDomainXYPlot1.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.AxisLocation axisLocation18 = combinedDomainXYPlot1.getDomainAxisLocation();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(axisLocation18);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test414");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        org.jfree.chart.plot.PiePlot piePlot1 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup2 = piePlot1.getDatasetGroup();
        int int3 = piePlot1.getBackgroundImageAlignment();
        boolean boolean4 = piePlot1.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D5 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo6 = null;
        piePlot1.createAndAddEntity(rectangle2D5, plotRenderingInfo6, "hi!", "LGPL");
        java.awt.Paint paint10 = piePlot1.getLabelPaint();
        java.awt.Stroke stroke11 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        piePlot1.setOutlineStroke(stroke11);
        combinedDomainXYPlot0.setDomainMinorGridlineStroke(stroke11);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer15 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer15.clearSeriesStrokes(false);
        boolean boolean18 = xYAreaRenderer15.getPlotLines();
        boolean boolean19 = xYAreaRenderer15.getBaseItemLabelsVisible();
        java.awt.Paint paint20 = xYAreaRenderer15.getBasePaint();
        java.awt.Font font21 = xYAreaRenderer15.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator22 = null;
        xYAreaRenderer15.setBaseItemLabelGenerator(xYItemLabelGenerator22);
        xYAreaRenderer15.setUseFillPaint(true);
        java.awt.Graphics2D graphics2D26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot28 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis27);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer30 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer30.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator33 = null;
        xYAreaRenderer30.setLegendItemURLGenerator(xYSeriesLabelGenerator33);
        xYAreaRenderer30.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean41 = xYAreaRenderer30.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot28.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer30);
        combinedDomainXYPlot28.clearDomainMarkers();
        boolean boolean44 = combinedDomainXYPlot28.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.NumberAxis numberAxis46 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis46.pan((double) 1);
        org.jfree.chart.axis.ValueAxis valueAxis49 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot50 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis49);
        java.awt.Graphics2D graphics2D51 = null;
        org.jfree.chart.entity.EntityCollection entityCollection52 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo53 = new org.jfree.chart.ChartRenderingInfo(entityCollection52);
        java.awt.Paint paint54 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean55 = chartRenderingInfo53.equals((java.lang.Object) paint54);
        java.awt.geom.Rectangle2D rectangle2D56 = chartRenderingInfo53.getChartArea();
        java.util.List list57 = null;
        combinedDomainXYPlot50.drawDomainGridlines(graphics2D51, rectangle2D56, list57);
        org.jfree.chart.axis.NumberAxis numberAxis60 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity63 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D56, (org.jfree.chart.axis.Axis) numberAxis60, "", "DatasetRenderingOrder.FORWARD");
        xYAreaRenderer15.drawDomainGridLine(graphics2D26, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot28, (org.jfree.chart.axis.ValueAxis) numberAxis46, rectangle2D56, (double) 11);
        numberAxis46.setLabelToolTip("{0}: ({1}, {2})");
        org.jfree.chart.text.TextLine textLine69 = new org.jfree.chart.text.TextLine("hi!");
        org.jfree.chart.text.TextFragment textFragment70 = textLine69.getLastTextFragment();
        java.awt.Font font71 = textFragment70.getFont();
        numberAxis46.setLabelFont(font71);
        org.jfree.data.Range range73 = combinedDomainXYPlot0.getDataRange((org.jfree.chart.axis.ValueAxis) numberAxis46);
        org.jfree.chart.plot.Marker marker75 = null;
        org.jfree.chart.util.Layer layer76 = null;
        boolean boolean77 = combinedDomainXYPlot0.removeDomainMarker((int) (byte) 1, marker75, layer76);
        org.junit.Assert.assertNull(datasetGroup2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 15 + "'", int3 == 15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(font21);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(paint54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(rectangle2D56);
        org.junit.Assert.assertNotNull(textFragment70);
        org.junit.Assert.assertNotNull(font71);
        org.junit.Assert.assertNull(range73);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test415");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        combinedDomainXYPlot1.setDomainGridlinesVisible(false);
        combinedDomainXYPlot1.setRangeGridlinesVisible(false);
        combinedDomainXYPlot1.clearSelection();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test416");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.awt.Paint paint46 = legendGraphic45.getOutlinePaint();
        legendGraphic45.setShapeOutlineVisible(false);
        boolean boolean49 = legendGraphic45.isShapeOutlineVisible();
        boolean boolean50 = legendGraphic45.isShapeOutlineVisible();
        legendGraphic45.setShapeFilled(true);
        org.jfree.chart.plot.PiePlot piePlot54 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup55 = piePlot54.getDatasetGroup();
        int int56 = piePlot54.getBackgroundImageAlignment();
        boolean boolean57 = piePlot54.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D58 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo59 = null;
        piePlot54.createAndAddEntity(rectangle2D58, plotRenderingInfo59, "hi!", "LGPL");
        piePlot54.setStartAngle((double) 1);
        org.jfree.data.xy.XYDataItem xYDataItem67 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        java.awt.Color color70 = java.awt.Color.getColor("hi!", (int) (short) 100);
        boolean boolean71 = xYDataItem67.equals((java.lang.Object) "hi!");
        java.awt.Color color72 = java.awt.Color.MAGENTA;
        piePlot54.setSectionPaint((java.lang.Comparable) "hi!", (java.awt.Paint) color72);
        org.jfree.chart.LegendItem legendItem74 = new org.jfree.chart.LegendItem("http://www.jfree.org/jfreechart/index.html", (java.awt.Paint) color72);
        java.awt.Paint paint75 = legendItem74.getLinePaint();
        java.awt.Font font76 = legendItem74.getLabelFont();
        java.lang.String str77 = legendItem74.getURLText();
        java.awt.Shape shape78 = legendItem74.getLine();
        boolean boolean79 = legendGraphic45.equals((java.lang.Object) legendItem74);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(datasetGroup55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 15 + "'", int56 == 15);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(color70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(color72);
        org.junit.Assert.assertNotNull(paint75);
        org.junit.Assert.assertNull(font76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(shape78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test417");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        java.awt.Stroke stroke18 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        combinedDomainXYPlot1.setRangeCrosshairStroke(stroke18);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer21 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        org.jfree.chart.labels.StandardXYToolTipGenerator standardXYToolTipGenerator23 = org.jfree.chart.labels.StandardXYToolTipGenerator.getTimeSeriesInstance();
        java.text.NumberFormat numberFormat24 = standardXYToolTipGenerator23.getXFormat();
        java.lang.Object obj25 = standardXYToolTipGenerator23.clone();
        xYAreaRenderer21.setSeriesToolTipGenerator(1, (org.jfree.chart.labels.XYToolTipGenerator) standardXYToolTipGenerator23, false);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer21);
        boolean boolean29 = xYAreaRenderer21.getAutoPopulateSeriesOutlineStroke();
        xYAreaRenderer21.setBaseItemLabelsVisible(true, true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(standardXYToolTipGenerator23);
        org.junit.Assert.assertNotNull(numberFormat24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test418");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        int int1 = combinedDomainXYPlot0.getBackgroundImageAlignment();
        org.jfree.chart.entity.EntityCollection entityCollection2 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo3 = new org.jfree.chart.ChartRenderingInfo(entityCollection2);
        java.awt.Paint paint4 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean5 = chartRenderingInfo3.equals((java.lang.Object) paint4);
        java.awt.geom.Rectangle2D rectangle2D6 = chartRenderingInfo3.getChartArea();
        org.jfree.chart.title.TextTitle textTitle8 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity9 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D6, (org.jfree.chart.title.Title) textTitle8);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor10 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D11 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D6, rectangleAnchor10);
        combinedDomainXYPlot0.setQuadrantOrigin(point2D11);
        java.io.ObjectOutputStream objectOutputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.util.SerialUtilities.writePoint2D(point2D11, objectOutputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'stream' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 15 + "'", int1 == 15);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(rectangle2D6);
        org.junit.Assert.assertNotNull(rectangleAnchor10);
        org.junit.Assert.assertNotNull(point2D11);
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test419");
        org.jfree.data.time.Year year2 = new org.jfree.data.time.Year((int) (short) 0);
        long long3 = year2.getFirstMillisecond();
        org.jfree.data.time.Year year5 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis6 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year2, (org.jfree.data.time.RegularTimePeriod) year5);
        java.lang.Object obj7 = periodAxis6.clone();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot9 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        org.jfree.chart.LegendItemCollection legendItemCollection10 = combinedRangeXYPlot9.getLegendItems();
        combinedRangeXYPlot9.setRangeGridlinesVisible(true);
        org.jfree.data.xy.XYDataset xYDataset14 = combinedRangeXYPlot9.getDataset(255);
        org.jfree.chart.util.RectangleInsets rectangleInsets15 = combinedRangeXYPlot9.getAxisOffset();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer17 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer17.clearSeriesStrokes(false);
        boolean boolean20 = xYAreaRenderer17.getPlotLines();
        java.awt.Font font22 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint23 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer26 = null;
        org.jfree.chart.text.TextBlock textBlock27 = org.jfree.chart.text.TextUtilities.createTextBlock("", font22, paint23, (float) (-1L), (int) (short) -1, textMeasurer26);
        xYAreaRenderer17.setBaseItemLabelPaint(paint23, true);
        java.awt.Stroke stroke31 = xYAreaRenderer17.getSeriesOutlineStroke((int) ' ');
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer33 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean35 = xYAreaRenderer33.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint37 = xYAreaRenderer33.getSeriesPaint(0);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator38 = xYAreaRenderer33.getLegendItemLabelGenerator();
        xYAreaRenderer17.setLegendItemLabelGenerator(xYSeriesLabelGenerator38);
        org.jfree.data.time.Year year43 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year45 = new org.jfree.data.time.Year((int) (short) 0);
        long long46 = year45.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis47 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year43, (org.jfree.data.time.RegularTimePeriod) year45);
        org.jfree.chart.entity.EntityCollection entityCollection49 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo50 = new org.jfree.chart.ChartRenderingInfo(entityCollection49);
        java.awt.Paint paint51 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean52 = chartRenderingInfo50.equals((java.lang.Object) paint51);
        java.awt.geom.Rectangle2D rectangle2D53 = chartRenderingInfo50.getChartArea();
        org.jfree.chart.title.TextTitle textTitle55 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity56 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D53, (org.jfree.chart.title.Title) textTitle55);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor57 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D58 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D53, rectangleAnchor57);
        org.jfree.chart.plot.CategoryPlot categoryPlot59 = new org.jfree.chart.plot.CategoryPlot();
        java.awt.Color color60 = org.jfree.chart.ChartColor.VERY_DARK_MAGENTA;
        categoryPlot59.setRangeZeroBaselinePaint((java.awt.Paint) color60);
        org.jfree.chart.util.RectangleEdge rectangleEdge63 = categoryPlot59.getRangeAxisEdge((int) ' ');
        double double64 = periodAxis47.java2DToValue(0.0d, rectangle2D53, rectangleEdge63);
        xYAreaRenderer17.setSeriesShape(0, (java.awt.Shape) rectangle2D53);
        org.jfree.chart.util.RectangleEdge rectangleEdge66 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot67 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer69 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection70 = categoryPlot67.getDomainMarkers((int) 'a', layer69);
        org.jfree.data.general.DatasetGroup datasetGroup71 = categoryPlot67.getDatasetGroup();
        org.jfree.chart.plot.CategoryPlot categoryPlot72 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer74 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection75 = categoryPlot72.getDomainMarkers((int) 'a', layer74);
        categoryPlot72.setAnchorValue((double) 0.0f, false);
        org.jfree.chart.axis.CategoryAxis categoryAxis80 = categoryPlot72.getDomainAxis(0);
        org.jfree.chart.axis.AxisSpace axisSpace81 = new org.jfree.chart.axis.AxisSpace();
        axisSpace81.setTop(0.0d);
        double double84 = axisSpace81.getBottom();
        org.jfree.chart.plot.CategoryPlot categoryPlot86 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot86.clearAnnotations();
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent88 = null;
        categoryPlot86.rendererChanged(rendererChangeEvent88);
        org.jfree.chart.util.RectangleInsets rectangleInsets90 = categoryPlot86.getAxisOffset();
        org.jfree.chart.util.RectangleEdge rectangleEdge92 = categoryPlot86.getRangeAxisEdge((int) (byte) -1);
        axisSpace81.ensureAtLeast(5.0d, rectangleEdge92);
        categoryPlot72.setFixedRangeAxisSpace(axisSpace81);
        categoryPlot67.setFixedDomainAxisSpace(axisSpace81);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.axis.AxisSpace axisSpace96 = periodAxis6.reserveSpace(graphics2D8, (org.jfree.chart.plot.Plot) combinedRangeXYPlot9, rectangle2D53, rectangleEdge66, axisSpace81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-62167363200000L) + "'", long3 == (-62167363200000L));
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(legendItemCollection10);
        org.junit.Assert.assertNull(xYDataset14);
        org.junit.Assert.assertNotNull(rectangleInsets15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(font22);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(textBlock27);
        org.junit.Assert.assertNull(stroke31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(paint37);
        org.junit.Assert.assertNotNull(xYSeriesLabelGenerator38);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-62167363200000L) + "'", long46 == (-62167363200000L));
        org.junit.Assert.assertNotNull(paint51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(rectangle2D53);
        org.junit.Assert.assertNotNull(rectangleAnchor57);
        org.junit.Assert.assertNotNull(point2D58);
        org.junit.Assert.assertNotNull(color60);
        org.junit.Assert.assertNotNull(rectangleEdge63);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertNotNull(layer69);
        org.junit.Assert.assertNull(collection70);
        org.junit.Assert.assertNull(datasetGroup71);
        org.junit.Assert.assertNotNull(layer74);
        org.junit.Assert.assertNull(collection75);
        org.junit.Assert.assertNull(categoryAxis80);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(rectangleInsets90);
        org.junit.Assert.assertNotNull(rectangleEdge92);
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test420");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        numberAxis11.centerRange(10.0d);
        numberAxis11.configure();
        numberAxis11.setMinorTickCount(2147483647);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test421");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        org.jfree.chart.LegendItemCollection legendItemCollection1 = combinedRangeXYPlot0.getLegendItems();
        combinedRangeXYPlot0.setRangePannable(false);
        org.jfree.chart.renderer.xy.XYStepRenderer xYStepRenderer4 = new org.jfree.chart.renderer.xy.XYStepRenderer();
        java.lang.Boolean boolean6 = xYStepRenderer4.getSeriesLinesVisible(0);
        xYStepRenderer4.setUseOutlinePaint(true);
        combinedRangeXYPlot0.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYStepRenderer4);
        xYStepRenderer4.setSeriesLinesVisible(0, true);
        xYStepRenderer4.setBaseLinesVisible(true);
        org.junit.Assert.assertNotNull(legendItemCollection1);
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test422");
        org.jfree.chart.util.LogFormat logFormat6 = new org.jfree.chart.util.LogFormat((double) 7, "RectangleEdge.RIGHT", "", false);
        java.lang.StringBuffer stringBuffer8 = null;
        java.text.FieldPosition fieldPosition9 = null;
        java.lang.StringBuffer stringBuffer10 = logFormat6.format((long) (short) 0, stringBuffer8, fieldPosition9);
        java.text.ParsePosition parsePosition12 = null;
        java.lang.Number number13 = logFormat6.parse("{0}: ({1}, {2})", parsePosition12);
        java.text.DateFormat dateFormat14 = null;
        org.jfree.chart.labels.StandardXYToolTipGenerator standardXYToolTipGenerator15 = new org.jfree.chart.labels.StandardXYToolTipGenerator("JFreeChart", (java.text.NumberFormat) logFormat6, dateFormat14);
        org.jfree.chart.axis.NumberTickUnit numberTickUnit17 = new org.jfree.chart.axis.NumberTickUnit((double) 1577894400035L, (java.text.NumberFormat) logFormat6, 0);
        java.lang.String str18 = numberTickUnit17.toString();
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot20 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis19);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer22 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer22.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator25 = null;
        xYAreaRenderer22.setLegendItemURLGenerator(xYSeriesLabelGenerator25);
        xYAreaRenderer22.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean33 = xYAreaRenderer22.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot20.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer22);
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        int int36 = combinedDomainXYPlot20.getRangeAxisIndex(valueAxis35);
        boolean boolean37 = combinedDomainXYPlot20.isRangeCrosshairVisible();
        boolean boolean38 = combinedDomainXYPlot20.isDomainCrosshairVisible();
        java.util.TimeZone timeZone39 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection40 = new org.jfree.data.time.TimeSeriesCollection(timeZone39);
        org.jfree.chart.plot.CategoryPlot categoryPlot41 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot41.clearAnnotations();
        timeSeriesCollection40.removeChangeListener((org.jfree.data.general.DatasetChangeListener) categoryPlot41);
        org.jfree.data.general.DatasetGroup datasetGroup44 = timeSeriesCollection40.getGroup();
        org.jfree.chart.renderer.xy.XYItemRenderer xYItemRenderer45 = combinedDomainXYPlot20.getRendererForDataset((org.jfree.data.xy.XYDataset) timeSeriesCollection40);
        java.awt.Stroke stroke46 = combinedDomainXYPlot20.getDomainGridlineStroke();
        java.awt.Paint paint47 = combinedDomainXYPlot20.getOutlinePaint();
        boolean boolean48 = numberTickUnit17.equals((java.lang.Object) combinedDomainXYPlot20);
        org.junit.Assert.assertNotNull(stringBuffer10);
// flaky:         org.junit.Assert.assertEquals(stringBuffer10.toString(), "\u221e");
        org.junit.Assert.assertNull(number13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[size=14.43]" + "'", str18, "[size=14.43]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(datasetGroup44);
        org.junit.Assert.assertNull(xYItemRenderer45);
        org.junit.Assert.assertNotNull(stroke46);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test423");
        org.jfree.chart.renderer.xy.XYBarRenderer xYBarRenderer1 = new org.jfree.chart.renderer.xy.XYBarRenderer(10.0d);
        xYBarRenderer1.setMargin(0.05d);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition4 = xYBarRenderer1.getNegativeItemLabelPositionFallback();
        org.jfree.chart.block.BorderArrangement borderArrangement6 = new org.jfree.chart.block.BorderArrangement();
        org.jfree.chart.block.BlockContainer blockContainer7 = new org.jfree.chart.block.BlockContainer((org.jfree.chart.block.Arrangement) borderArrangement6);
        blockContainer7.clear();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer10 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer10.clearSeriesStrokes(false);
        boolean boolean13 = xYAreaRenderer10.getPlotLines();
        boolean boolean14 = xYAreaRenderer10.getBaseItemLabelsVisible();
        java.awt.Paint paint15 = xYAreaRenderer10.getBasePaint();
        boolean boolean16 = blockContainer7.equals((java.lang.Object) paint15);
        org.jfree.chart.util.RectangleInsets rectangleInsets17 = blockContainer7.getMargin();
        org.jfree.chart.plot.PiePlot piePlot18 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup19 = piePlot18.getDatasetGroup();
        int int20 = piePlot18.getBackgroundImageAlignment();
        boolean boolean21 = piePlot18.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D22 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo23 = null;
        piePlot18.createAndAddEntity(rectangle2D22, plotRenderingInfo23, "hi!", "LGPL");
        piePlot18.setStartAngle((double) 1);
        org.jfree.data.xy.XYDataItem xYDataItem31 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        java.awt.Color color34 = java.awt.Color.getColor("hi!", (int) (short) 100);
        boolean boolean35 = xYDataItem31.equals((java.lang.Object) "hi!");
        java.awt.Color color36 = java.awt.Color.MAGENTA;
        piePlot18.setSectionPaint((java.lang.Comparable) "hi!", (java.awt.Paint) color36);
        java.awt.Graphics2D graphics2D38 = null;
        org.jfree.chart.entity.EntityCollection entityCollection39 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo40 = new org.jfree.chart.ChartRenderingInfo(entityCollection39);
        java.awt.Paint paint41 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean42 = chartRenderingInfo40.equals((java.lang.Object) paint41);
        java.awt.geom.Rectangle2D rectangle2D43 = chartRenderingInfo40.getChartArea();
        piePlot18.drawBackgroundImage(graphics2D38, rectangle2D43);
        java.awt.geom.Rectangle2D rectangle2D45 = rectangleInsets17.createInsetRectangle(rectangle2D43);
        xYBarRenderer1.setSeriesShape((int) (byte) 1, (java.awt.Shape) rectangle2D43, false);
        java.awt.Stroke stroke48 = org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE;
        xYBarRenderer1.setBaseStroke(stroke48, true);
        // The following exception was thrown during execution in test generation
        try {
            xYBarRenderer1.setSeriesItemLabelsVisible((-16777216), (java.lang.Boolean) true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(rectangleInsets17);
        org.junit.Assert.assertNull(datasetGroup19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 15 + "'", int20 == 15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(color34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(color36);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(rectangle2D43);
        org.junit.Assert.assertNotNull(rectangle2D45);
        org.junit.Assert.assertNotNull(stroke48);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test424");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        combinedDomainXYPlot1.clearDomainAxes();
        boolean boolean19 = combinedDomainXYPlot1.canSelectByRegion();
        boolean boolean20 = combinedDomainXYPlot1.isRangePannable();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test425");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        java.awt.Paint paint1 = combinedDomainXYPlot0.getRangeGridlinePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot2 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer4 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection5 = categoryPlot2.getDomainMarkers((int) 'a', layer4);
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        categoryPlot2.setDataset(4, categoryDataset7);
        org.jfree.chart.axis.AxisLocation axisLocation9 = org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT;
        categoryPlot2.setRangeAxisLocation(axisLocation9, false);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo13 = null;
        java.awt.geom.Point2D point2D14 = null;
        categoryPlot2.zoomRangeAxes((double) (-16777216), plotRenderingInfo13, point2D14, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot();
        int int18 = categoryPlot17.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge22 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str23 = rectangleEdge22.toString();
        double double24 = categoryPlot17.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge22);
        boolean boolean25 = categoryPlot17.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis27 = categoryPlot17.getDomainAxis(10);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D28 = new org.jfree.chart.renderer.category.BarRenderer3D();
        categoryPlot17.setRenderer((org.jfree.chart.renderer.category.CategoryItemRenderer) barRenderer3D28, false);
        categoryPlot2.setRenderer((org.jfree.chart.renderer.category.CategoryItemRenderer) barRenderer3D28);
        org.jfree.chart.axis.AxisSpace axisSpace32 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis34 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot35 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis34);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer37 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer37.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator40 = null;
        xYAreaRenderer37.setLegendItemURLGenerator(xYSeriesLabelGenerator40);
        xYAreaRenderer37.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean48 = xYAreaRenderer37.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot35.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer37);
        org.jfree.chart.axis.ValueAxis valueAxis50 = null;
        int int51 = combinedDomainXYPlot35.getRangeAxisIndex(valueAxis50);
        org.jfree.chart.axis.ValueAxis valueAxis52 = null;
        combinedDomainXYPlot35.setDomainAxis(valueAxis52);
        org.jfree.chart.util.RectangleEdge rectangleEdge55 = combinedDomainXYPlot35.getDomainAxisEdge(0);
        axisSpace32.add((double) 10L, rectangleEdge55);
        categoryPlot2.setFixedRangeAxisSpace(axisSpace32);
        axisSpace32.setLeft(15.0d);
        combinedDomainXYPlot0.setFixedRangeAxisSpace(axisSpace32);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(layer4);
        org.junit.Assert.assertNull(collection5);
        org.junit.Assert.assertNotNull(axisLocation9);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "RectangleEdge.RIGHT" + "'", str23, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 149.0d + "'", double24 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(categoryAxis27);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge55);
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test426");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator4 = null;
        xYAreaRenderer1.setLegendItemURLGenerator(xYSeriesLabelGenerator4);
        xYAreaRenderer1.setSeriesVisibleInLegend((int) (byte) 10, (java.lang.Boolean) false);
        xYAreaRenderer1.setBaseItemLabelsVisible(true);
        java.awt.Font font14 = xYAreaRenderer1.getItemLabelFont((int) (byte) 0, 0, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = xYAreaRenderer1.getNegativeItemLabelPosition(7, 15, true);
        org.junit.Assert.assertNotNull(font14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test427");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke1 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot0.setRangeCrosshairStroke(stroke1);
        org.jfree.data.xy.XYSeries xYSeries6 = new org.jfree.data.xy.XYSeries((java.lang.Comparable) 0.2d, true, false);
        xYSeries6.setDescription("DateTickMarkPosition.MIDDLE");
        org.jfree.data.xy.XYDataItem xYDataItem11 = xYSeries6.addOrUpdate((java.lang.Number) (-1L), (java.lang.Number) (-1));
        boolean boolean12 = combinedRangeXYPlot0.equals((java.lang.Object) xYDataItem11);
        java.awt.Paint paint13 = combinedRangeXYPlot0.getNoDataMessagePaint();
        org.junit.Assert.assertNotNull(stroke1);
        org.junit.Assert.assertNull(xYDataItem11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(paint13);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test428");
        java.text.NumberFormat numberFormat1 = java.text.NumberFormat.getNumberInstance();
        int int2 = numberFormat1.getMinimumFractionDigits();
        java.math.RoundingMode roundingMode3 = numberFormat1.getRoundingMode();
        java.text.DateFormat dateFormat4 = null;
        org.jfree.chart.labels.StandardXYToolTipGenerator standardXYToolTipGenerator5 = new org.jfree.chart.labels.StandardXYToolTipGenerator("http://www.jfree.org/jfreechart/index.html", numberFormat1, dateFormat4);
        org.jfree.chart.entity.EntityCollection entityCollection6 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo7 = new org.jfree.chart.ChartRenderingInfo(entityCollection6);
        java.awt.Paint paint8 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean9 = chartRenderingInfo7.equals((java.lang.Object) paint8);
        java.awt.geom.Rectangle2D rectangle2D10 = chartRenderingInfo7.getChartArea();
        org.jfree.chart.title.TextTitle textTitle12 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity13 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D10, (org.jfree.chart.title.Title) textTitle12);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor14 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D15 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D10, rectangleAnchor14);
        org.jfree.data.general.PieDataset pieDataset16 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity22 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D10, pieDataset16, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis23 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot24 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis23);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer26 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer26.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator29 = null;
        xYAreaRenderer26.setLegendItemURLGenerator(xYSeriesLabelGenerator29);
        xYAreaRenderer26.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean37 = xYAreaRenderer26.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot24.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer26);
        combinedDomainXYPlot24.clearDomainMarkers();
        java.awt.Font font41 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint42 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer45 = null;
        org.jfree.chart.text.TextBlock textBlock46 = org.jfree.chart.text.TextUtilities.createTextBlock("", font41, paint42, (float) (-1L), (int) (short) -1, textMeasurer45);
        combinedDomainXYPlot24.setDomainCrosshairPaint(paint42);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder48 = combinedDomainXYPlot24.getSeriesRenderingOrder();
        java.awt.Paint paint49 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot24.setRangeTickBandPaint(paint49);
        org.jfree.chart.title.LegendGraphic legendGraphic51 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D10, paint49);
        java.awt.Paint paint52 = legendGraphic51.getOutlinePaint();
        java.awt.Paint paint53 = legendGraphic51.getLinePaint();
        java.awt.Shape shape54 = legendGraphic51.getShape();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer55 = legendGraphic51.getFillPaintTransformer();
        // The following exception was thrown during execution in test generation
        try {
            java.text.AttributedCharacterIterator attributedCharacterIterator56 = numberFormat1.formatToCharacterIterator((java.lang.Object) gradientPaintTransformer55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot format given Object as a Number");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + roundingMode3 + "' != '" + java.math.RoundingMode.HALF_EVEN + "'", roundingMode3.equals(java.math.RoundingMode.HALF_EVEN));
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(rectangle2D10);
        org.junit.Assert.assertNotNull(rectangleAnchor14);
        org.junit.Assert.assertNotNull(point2D15);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(font41);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNotNull(textBlock46);
        org.junit.Assert.assertNotNull(seriesRenderingOrder48);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(paint52);
        org.junit.Assert.assertNull(paint53);
        org.junit.Assert.assertNotNull(shape54);
        org.junit.Assert.assertNotNull(gradientPaintTransformer55);
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test429");
        org.jfree.chart.title.TextTitle textTitle1 = new org.jfree.chart.title.TextTitle("");
        boolean boolean2 = textTitle1.getExpandToFitSpace();
        textTitle1.setText("");
        java.lang.String str5 = textTitle1.getID();
        java.awt.Font font6 = textTitle1.getFont();
        java.awt.Graphics2D graphics2D7 = null;
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D8 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font12 = barRenderer3D8.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape13 = barRenderer3D8.getBaseShape();
        barRenderer3D8.setBaseSeriesVisible(false);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot17 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis16);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer19 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer19.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator22 = null;
        xYAreaRenderer19.setLegendItemURLGenerator(xYSeriesLabelGenerator22);
        xYAreaRenderer19.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean30 = xYAreaRenderer19.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot17.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer19);
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        int int33 = combinedDomainXYPlot17.getRangeAxisIndex(valueAxis32);
        boolean boolean34 = combinedDomainXYPlot17.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets35 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double36 = rectangleInsets35.getLeft();
        double double38 = rectangleInsets35.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot17.setAxisOffset(rectangleInsets35);
        combinedDomainXYPlot17.setDomainGridlinesVisible(false);
        java.awt.Paint paint42 = combinedDomainXYPlot17.getNoDataMessagePaint();
        barRenderer3D8.setBaseItemLabelPaint(paint42, false);
        java.awt.Graphics2D graphics2D45 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot46 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot46.clearAnnotations();
        org.jfree.data.time.Year year50 = new org.jfree.data.time.Year((int) (short) 0);
        long long51 = year50.getFirstMillisecond();
        org.jfree.data.time.Year year53 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.chart.axis.PeriodAxis periodAxis54 = new org.jfree.chart.axis.PeriodAxis("RectangleEdge.RIGHT", (org.jfree.data.time.RegularTimePeriod) year50, (org.jfree.data.time.RegularTimePeriod) year53);
        org.jfree.data.time.Year year57 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year59 = new org.jfree.data.time.Year((int) (short) 0);
        long long60 = year59.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis61 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year57, (org.jfree.data.time.RegularTimePeriod) year59);
        periodAxis54.setLast((org.jfree.data.time.RegularTimePeriod) year59);
        java.awt.Stroke stroke63 = periodAxis54.getMinorTickMarkStroke();
        java.lang.Class class64 = periodAxis54.getMajorTickTimePeriodClass();
        org.jfree.chart.entity.EntityCollection entityCollection65 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo66 = new org.jfree.chart.ChartRenderingInfo(entityCollection65);
        java.awt.Paint paint67 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean68 = chartRenderingInfo66.equals((java.lang.Object) paint67);
        java.awt.geom.Rectangle2D rectangle2D69 = chartRenderingInfo66.getChartArea();
        org.jfree.chart.title.TextTitle textTitle71 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity72 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D69, (org.jfree.chart.title.Title) textTitle71);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor73 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D74 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D69, rectangleAnchor73);
        java.awt.Color color79 = java.awt.Color.getHSBColor((float) 2, (float) 15, (float) 0);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D80 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font84 = barRenderer3D80.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape85 = barRenderer3D80.getBaseShape();
        java.awt.Paint paint86 = barRenderer3D80.getShadowPaint();
        java.awt.Stroke stroke90 = barRenderer3D80.getItemOutlineStroke((int) (byte) 1, (int) '#', false);
        barRenderer3D8.drawRangeLine(graphics2D45, categoryPlot46, (org.jfree.chart.axis.ValueAxis) periodAxis54, rectangle2D69, (double) 10L, (java.awt.Paint) color79, stroke90);
        textTitle1.draw(graphics2D7, rectangle2D69);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(font6);
        org.junit.Assert.assertNotNull(font12);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(rectangleInsets35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-62167363200000L) + "'", long51 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-62167363200000L) + "'", long60 == (-62167363200000L));
        org.junit.Assert.assertNotNull(stroke63);
        org.junit.Assert.assertNotNull(class64);
        org.junit.Assert.assertNotNull(paint67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(rectangle2D69);
        org.junit.Assert.assertNotNull(rectangleAnchor73);
        org.junit.Assert.assertNotNull(point2D74);
        org.junit.Assert.assertNotNull(color79);
        org.junit.Assert.assertNotNull(font84);
        org.junit.Assert.assertNotNull(shape85);
        org.junit.Assert.assertNotNull(paint86);
        org.junit.Assert.assertNotNull(stroke90);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test430");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D0 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font4 = barRenderer3D0.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape5 = barRenderer3D0.getBaseShape();
        java.awt.Color color8 = java.awt.Color.cyan;
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer10 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean12 = xYAreaRenderer10.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint13 = xYAreaRenderer10.getBaseLegendTextPaint();
        java.awt.Stroke stroke15 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer10.setSeriesOutlineStroke(0, stroke15, false);
        java.awt.Color color20 = java.awt.Color.getColor("hi!", (int) (short) 100);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer22 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean24 = xYAreaRenderer22.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint25 = xYAreaRenderer22.getBaseLegendTextPaint();
        java.awt.Stroke stroke27 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer22.setSeriesOutlineStroke(0, stroke27, false);
        org.jfree.chart.plot.IntervalMarker intervalMarker31 = new org.jfree.chart.plot.IntervalMarker((double) 0, (double) (byte) 100, (java.awt.Paint) color8, stroke15, (java.awt.Paint) color20, stroke27, (float) (byte) 1);
        barRenderer3D0.setBaseOutlineStroke(stroke15);
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = new org.jfree.chart.plot.CategoryPlot();
        java.awt.Color color34 = org.jfree.chart.ChartColor.VERY_DARK_MAGENTA;
        categoryPlot33.setRangeZeroBaselinePaint((java.awt.Paint) color34);
        barRenderer3D0.setPlot(categoryPlot33);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition37 = barRenderer3D0.getPositiveItemLabelPositionFallback();
        double double38 = barRenderer3D0.getBase();
        java.awt.Paint paint40 = barRenderer3D0.lookupLegendTextPaint(0);
        java.awt.Paint paint42 = barRenderer3D0.getSeriesPaint((int) (byte) 100);
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot44 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        java.awt.Paint paint45 = combinedDomainXYPlot44.getRangeGridlinePaint();
        java.awt.Graphics2D graphics2D46 = null;
        org.jfree.chart.entity.EntityCollection entityCollection47 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo48 = new org.jfree.chart.ChartRenderingInfo(entityCollection47);
        java.awt.Paint paint49 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean50 = chartRenderingInfo48.equals((java.lang.Object) paint49);
        java.awt.geom.Rectangle2D rectangle2D51 = chartRenderingInfo48.getChartArea();
        org.jfree.chart.title.TextTitle textTitle53 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity54 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D51, (org.jfree.chart.title.Title) textTitle53);
        combinedDomainXYPlot44.drawQuadrants(graphics2D46, rectangle2D51);
        java.awt.Paint paint56 = combinedDomainXYPlot44.getRangeCrosshairPaint();
        barRenderer3D0.setSeriesPaint(0, paint56);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator61 = barRenderer3D0.getItemLabelGenerator((int) '4', (int) (byte) -1, true);
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertNotNull(color8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(paint13);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(color20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(paint25);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNotNull(color34);
        org.junit.Assert.assertNull(itemLabelPosition37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNull(paint40);
        org.junit.Assert.assertNull(paint42);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(rectangle2D51);
        org.junit.Assert.assertNotNull(paint56);
        org.junit.Assert.assertNull(categoryItemLabelGenerator61);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test431");
        org.jfree.chart.plot.CategoryPlot categoryPlot1 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer3 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection4 = categoryPlot1.getDomainMarkers((int) 'a', layer3);
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        categoryPlot1.setDataset(4, categoryDataset6);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier8 = categoryPlot1.getDrawingSupplier();
        categoryPlot1.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace10 = null;
        categoryPlot1.setFixedDomainAxisSpace(axisSpace10);
        org.jfree.chart.axis.CategoryAxis3D categoryAxis3D13 = new org.jfree.chart.axis.CategoryAxis3D("hi!");
        categoryPlot1.setDomainAxis((org.jfree.chart.axis.CategoryAxis) categoryAxis3D13);
        categoryAxis3D13.configure();
        org.jfree.chart.axis.ValueAxis valueAxis21 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot22 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis21);
        java.awt.Graphics2D graphics2D23 = null;
        org.jfree.chart.entity.EntityCollection entityCollection24 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo25 = new org.jfree.chart.ChartRenderingInfo(entityCollection24);
        java.awt.Paint paint26 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean27 = chartRenderingInfo25.equals((java.lang.Object) paint26);
        java.awt.geom.Rectangle2D rectangle2D28 = chartRenderingInfo25.getChartArea();
        java.util.List list29 = null;
        combinedDomainXYPlot22.drawDomainGridlines(graphics2D23, rectangle2D28, list29);
        org.jfree.chart.axis.NumberAxis numberAxis32 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity35 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D28, (org.jfree.chart.axis.Axis) numberAxis32, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.plot.CategoryPlot categoryPlot36 = new org.jfree.chart.plot.CategoryPlot();
        int int37 = categoryPlot36.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge41 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str42 = rectangleEdge41.toString();
        double double43 = categoryPlot36.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge41);
        boolean boolean44 = categoryPlot36.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis46 = categoryPlot36.getDomainAxis(10);
        org.jfree.chart.util.RectangleEdge rectangleEdge47 = categoryPlot36.getDomainAxisEdge();
        double double48 = categoryAxis3D13.getCategorySeriesMiddle(11, (int) ' ', (int) (byte) 0, (int) (short) 100, 0.0d, rectangle2D28, rectangleEdge47);
        java.awt.Font font49 = categoryAxis3D13.getTickLabelFont();
        java.awt.Color color50 = java.awt.Color.black;
        org.jfree.chart.text.TextFragment textFragment52 = new org.jfree.chart.text.TextFragment("ItemLabelAnchor.INSIDE10", font49, (java.awt.Paint) color50, (float) (byte) 100);
        org.junit.Assert.assertNotNull(layer3);
        org.junit.Assert.assertNull(collection4);
        org.junit.Assert.assertNotNull(drawingSupplier8);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(rectangle2D28);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "RectangleEdge.RIGHT" + "'", str42, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 149.0d + "'", double43 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(categoryAxis46);
        org.junit.Assert.assertNotNull(rectangleEdge47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(font49);
        org.junit.Assert.assertNotNull(color50);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test432");
        org.jfree.data.xy.XYZDataset xYZDataset3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer6 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection7 = categoryPlot4.getDomainMarkers((int) 'a', layer6);
        java.awt.Paint paint8 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        categoryPlot4.setOutlinePaint(paint8);
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = new org.jfree.chart.plot.CategoryPlot();
        int int11 = categoryPlot10.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation12 = categoryPlot10.getOrientation();
        categoryPlot4.setOrientation(plotOrientation12);
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart17 = org.jfree.chart.ChartFactory.createBubbleChart("ChartChangeEventType.GENERAL", "DomainOrder.NONE", "WMAP_Plot", xYZDataset3, plotOrientation12, false, true, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@584ed60e is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(layer6);
        org.junit.Assert.assertNull(collection7);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(plotOrientation12);
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test433");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.PiePlot piePlot25 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup26 = piePlot25.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener27 = null;
        piePlot25.addChangeListener(plotChangeListener27);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent29 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot25);
        combinedDomainXYPlot1.plotChanged(plotChangeEvent29);
        java.awt.Paint paint31 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        combinedDomainXYPlot1.setDomainGridlinePaint(paint31);
        java.awt.Paint paint33 = combinedDomainXYPlot1.getRangeGridlinePaint();
        double double34 = combinedDomainXYPlot1.getRangeCrosshairValue();
        org.jfree.chart.axis.ValueAxis valueAxis36 = combinedDomainXYPlot1.getRangeAxis((int) (short) -1);
        java.awt.geom.GeneralPath generalPath37 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot38 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer40 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection41 = categoryPlot38.getDomainMarkers((int) 'a', layer40);
        org.jfree.data.category.CategoryDataset categoryDataset43 = null;
        categoryPlot38.setDataset(4, categoryDataset43);
        org.jfree.chart.plot.CategoryPlot categoryPlot45 = new org.jfree.chart.plot.CategoryPlot();
        int int46 = categoryPlot45.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation47 = categoryPlot45.getOrientation();
        categoryPlot38.setOrientation(plotOrientation47);
        boolean boolean49 = categoryPlot38.isDomainPannable();
        categoryPlot38.setRangeCrosshairValue((double) 10);
        java.awt.Graphics2D graphics2D52 = null;
        org.jfree.chart.entity.EntityCollection entityCollection53 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo54 = new org.jfree.chart.ChartRenderingInfo(entityCollection53);
        java.awt.Paint paint55 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean56 = chartRenderingInfo54.equals((java.lang.Object) paint55);
        java.awt.geom.Rectangle2D rectangle2D57 = chartRenderingInfo54.getChartArea();
        org.jfree.chart.title.TextTitle textTitle59 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity60 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D57, (org.jfree.chart.title.Title) textTitle59);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor61 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D62 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D57, rectangleAnchor61);
        org.jfree.data.general.PieDataset pieDataset63 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity69 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D57, pieDataset63, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.AxisSpace axisSpace70 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis72 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot73 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis72);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer75 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer75.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator78 = null;
        xYAreaRenderer75.setLegendItemURLGenerator(xYSeriesLabelGenerator78);
        xYAreaRenderer75.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean86 = xYAreaRenderer75.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot73.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer75);
        org.jfree.chart.axis.ValueAxis valueAxis88 = null;
        int int89 = combinedDomainXYPlot73.getRangeAxisIndex(valueAxis88);
        org.jfree.chart.axis.ValueAxis valueAxis90 = null;
        combinedDomainXYPlot73.setDomainAxis(valueAxis90);
        org.jfree.chart.util.RectangleEdge rectangleEdge93 = combinedDomainXYPlot73.getDomainAxisEdge(0);
        axisSpace70.add((double) 10L, rectangleEdge93);
        org.jfree.chart.axis.AxisSpace axisSpace95 = categoryPlot38.calculateDomainAxisSpace(graphics2D52, rectangle2D57, axisSpace70);
        org.jfree.chart.RenderingSource renderingSource96 = null;
        combinedDomainXYPlot1.select(generalPath37, rectangle2D57, renderingSource96);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNull(datasetGroup26);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNull(valueAxis36);
        org.junit.Assert.assertNotNull(layer40);
        org.junit.Assert.assertNull(collection41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(plotOrientation47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(paint55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(rectangle2D57);
        org.junit.Assert.assertNotNull(rectangleAnchor61);
        org.junit.Assert.assertNotNull(point2D62);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge93);
        org.junit.Assert.assertNotNull(axisSpace95);
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test434");
        org.jfree.data.Range range1 = null;
        org.jfree.chart.block.RectangleConstraint rectangleConstraint2 = new org.jfree.chart.block.RectangleConstraint(0.0d, range1);
        org.jfree.data.Range range5 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range8 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range9 = org.jfree.data.Range.combine(range5, range8);
        org.jfree.data.Range range10 = org.jfree.chart.axis.ValueAxis.DEFAULT_RANGE;
        org.jfree.data.Range range11 = org.jfree.data.Range.combine(range5, range10);
        org.jfree.chart.block.RectangleConstraint rectangleConstraint12 = rectangleConstraint2.toRangeWidth(range5);
        org.jfree.data.Range range13 = org.jfree.chart.axis.ValueAxis.DEFAULT_RANGE;
        org.jfree.chart.block.RectangleConstraint rectangleConstraint14 = rectangleConstraint2.toRangeHeight(range13);
        org.jfree.chart.block.RectangleConstraint rectangleConstraint15 = rectangleConstraint14.toUnconstrainedHeight();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer17 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer17.clearSeriesStrokes(false);
        boolean boolean20 = xYAreaRenderer17.getPlotLines();
        boolean boolean21 = xYAreaRenderer17.getBaseItemLabelsVisible();
        java.awt.Paint paint22 = xYAreaRenderer17.getBasePaint();
        java.awt.Font font23 = xYAreaRenderer17.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator24 = null;
        xYAreaRenderer17.setBaseItemLabelGenerator(xYItemLabelGenerator24);
        xYAreaRenderer17.setUseFillPaint(true);
        java.awt.Graphics2D graphics2D28 = null;
        org.jfree.chart.axis.ValueAxis valueAxis29 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot30 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis29);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer32 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer32.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator35 = null;
        xYAreaRenderer32.setLegendItemURLGenerator(xYSeriesLabelGenerator35);
        xYAreaRenderer32.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean43 = xYAreaRenderer32.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot30.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer32);
        combinedDomainXYPlot30.clearDomainMarkers();
        boolean boolean46 = combinedDomainXYPlot30.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.NumberAxis numberAxis48 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis48.pan((double) 1);
        org.jfree.chart.axis.ValueAxis valueAxis51 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot52 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis51);
        java.awt.Graphics2D graphics2D53 = null;
        org.jfree.chart.entity.EntityCollection entityCollection54 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo55 = new org.jfree.chart.ChartRenderingInfo(entityCollection54);
        java.awt.Paint paint56 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean57 = chartRenderingInfo55.equals((java.lang.Object) paint56);
        java.awt.geom.Rectangle2D rectangle2D58 = chartRenderingInfo55.getChartArea();
        java.util.List list59 = null;
        combinedDomainXYPlot52.drawDomainGridlines(graphics2D53, rectangle2D58, list59);
        org.jfree.chart.axis.NumberAxis numberAxis62 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity65 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D58, (org.jfree.chart.axis.Axis) numberAxis62, "", "DatasetRenderingOrder.FORWARD");
        xYAreaRenderer17.drawDomainGridLine(graphics2D28, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot30, (org.jfree.chart.axis.ValueAxis) numberAxis48, rectangle2D58, (double) 11);
        numberAxis48.setLabelToolTip("{0}: ({1}, {2})");
        org.jfree.chart.util.LogFormat logFormat74 = new org.jfree.chart.util.LogFormat((double) 7, "RectangleEdge.RIGHT", "", false);
        java.lang.StringBuffer stringBuffer76 = null;
        java.text.FieldPosition fieldPosition77 = null;
        java.lang.StringBuffer stringBuffer78 = logFormat74.format((long) (short) 0, stringBuffer76, fieldPosition77);
        java.text.NumberFormat numberFormat79 = logFormat74.getExponentFormat();
        java.text.NumberFormat numberFormat82 = java.text.NumberFormat.getNumberInstance();
        java.text.DateFormat dateFormat83 = null;
        org.jfree.chart.labels.StandardXYToolTipGenerator standardXYToolTipGenerator84 = new org.jfree.chart.labels.StandardXYToolTipGenerator("LGPL", numberFormat82, dateFormat83);
        java.text.NumberFormat numberFormat85 = java.text.NumberFormat.getNumberInstance();
        int int86 = numberFormat85.getMinimumFractionDigits();
        boolean boolean87 = numberFormat85.isGroupingUsed();
        org.jfree.chart.labels.StandardPieToolTipGenerator standardPieToolTipGenerator88 = new org.jfree.chart.labels.StandardPieToolTipGenerator("NO_CHANGE", numberFormat82, numberFormat85);
        logFormat74.setExponentFormat(numberFormat82);
        numberAxis48.setNumberFormatOverride(numberFormat82);
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot91 = new org.jfree.chart.plot.CombinedDomainXYPlot((org.jfree.chart.axis.ValueAxis) numberAxis48);
        org.jfree.data.Range range92 = numberAxis48.getDefaultAutoRange();
        org.jfree.chart.block.RectangleConstraint rectangleConstraint93 = rectangleConstraint15.toRangeHeight(range92);
        org.jfree.chart.block.LengthConstraintType lengthConstraintType94 = rectangleConstraint15.getHeightConstraintType();
        org.junit.Assert.assertNotNull(range9);
        org.junit.Assert.assertNotNull(range10);
        org.junit.Assert.assertNotNull(range11);
        org.junit.Assert.assertNotNull(rectangleConstraint12);
        org.junit.Assert.assertNotNull(range13);
        org.junit.Assert.assertNotNull(rectangleConstraint14);
        org.junit.Assert.assertNotNull(rectangleConstraint15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNotNull(font23);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(paint56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(rectangle2D58);
        org.junit.Assert.assertNotNull(stringBuffer78);
// flaky:         org.junit.Assert.assertEquals(stringBuffer78.toString(), "\u221e");
        org.junit.Assert.assertNotNull(numberFormat79);
        org.junit.Assert.assertNotNull(numberFormat82);
        org.junit.Assert.assertNotNull(numberFormat85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(range92);
        org.junit.Assert.assertNotNull(rectangleConstraint93);
        org.junit.Assert.assertNotNull(lengthConstraintType94);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test435");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean20 = xYAreaRenderer11.isSeriesVisible((-16777216));
        java.awt.Shape shape22 = xYAreaRenderer11.getLegendShape(0);
        java.awt.Shape shape24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        xYAreaRenderer11.setSeriesShape((int) (byte) 100, shape24, false);
        java.awt.Paint paint28 = xYAreaRenderer11.getSeriesItemLabelPaint(5);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer11);
        org.jfree.chart.urls.XYURLGenerator xYURLGenerator30 = null;
        xYAreaRenderer11.setBaseURLGenerator(xYURLGenerator30);
        java.awt.Color color32 = org.jfree.chart.ChartColor.LIGHT_GREEN;
        xYAreaRenderer11.setBaseFillPaint((java.awt.Paint) color32);
        org.jfree.chart.entity.EntityCollection entityCollection35 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo36 = new org.jfree.chart.ChartRenderingInfo(entityCollection35);
        java.awt.Paint paint37 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean38 = chartRenderingInfo36.equals((java.lang.Object) paint37);
        java.awt.geom.Rectangle2D rectangle2D39 = chartRenderingInfo36.getChartArea();
        org.jfree.chart.title.TextTitle textTitle41 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity42 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D39, (org.jfree.chart.title.Title) textTitle41);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor43 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D44 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D39, rectangleAnchor43);
        org.jfree.data.general.PieDataset pieDataset45 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity51 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D39, pieDataset45, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis52 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot53 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis52);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer55 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer55.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator58 = null;
        xYAreaRenderer55.setLegendItemURLGenerator(xYSeriesLabelGenerator58);
        xYAreaRenderer55.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean66 = xYAreaRenderer55.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot53.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer55);
        combinedDomainXYPlot53.clearDomainMarkers();
        java.awt.Font font70 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint71 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer74 = null;
        org.jfree.chart.text.TextBlock textBlock75 = org.jfree.chart.text.TextUtilities.createTextBlock("", font70, paint71, (float) (-1L), (int) (short) -1, textMeasurer74);
        combinedDomainXYPlot53.setDomainCrosshairPaint(paint71);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder77 = combinedDomainXYPlot53.getSeriesRenderingOrder();
        java.awt.Paint paint78 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot53.setRangeTickBandPaint(paint78);
        org.jfree.chart.title.LegendGraphic legendGraphic80 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D39, paint78);
        org.jfree.chart.plot.PiePlot piePlot81 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup82 = piePlot81.getDatasetGroup();
        int int83 = piePlot81.getBackgroundImageAlignment();
        boolean boolean84 = piePlot81.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D85 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo86 = null;
        piePlot81.createAndAddEntity(rectangle2D85, plotRenderingInfo86, "hi!", "LGPL");
        java.awt.Paint paint90 = piePlot81.getLabelPaint();
        java.awt.Stroke stroke91 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        piePlot81.setOutlineStroke(stroke91);
        legendGraphic80.setOutlineStroke(stroke91);
        // The following exception was thrown during execution in test generation
        try {
            xYAreaRenderer11.setSeriesOutlineStroke((int) (byte) -1, stroke91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(shape22);
        org.junit.Assert.assertNotNull(shape24);
        org.junit.Assert.assertNull(paint28);
        org.junit.Assert.assertNotNull(color32);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(rectangle2D39);
        org.junit.Assert.assertNotNull(rectangleAnchor43);
        org.junit.Assert.assertNotNull(point2D44);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(font70);
        org.junit.Assert.assertNotNull(paint71);
        org.junit.Assert.assertNotNull(textBlock75);
        org.junit.Assert.assertNotNull(seriesRenderingOrder77);
        org.junit.Assert.assertNotNull(paint78);
        org.junit.Assert.assertNull(datasetGroup82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 15 + "'", int83 == 15);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(paint90);
        org.junit.Assert.assertNotNull(stroke91);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test436");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.PiePlot piePlot25 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup26 = piePlot25.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener27 = null;
        piePlot25.addChangeListener(plotChangeListener27);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent29 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot25);
        combinedDomainXYPlot1.plotChanged(plotChangeEvent29);
        combinedDomainXYPlot1.setRangeGridlinesVisible(true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNull(datasetGroup26);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test437");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder25 = combinedDomainXYPlot1.getSeriesRenderingOrder();
        combinedDomainXYPlot1.clearDomainMarkers();
        int int27 = combinedDomainXYPlot1.getRendererCount();
        org.jfree.chart.renderer.xy.XYItemRenderer xYItemRenderer29 = combinedDomainXYPlot1.getRenderer((-1));
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot32 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis31);
        java.awt.Graphics2D graphics2D33 = null;
        org.jfree.chart.entity.EntityCollection entityCollection34 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo35 = new org.jfree.chart.ChartRenderingInfo(entityCollection34);
        java.awt.Paint paint36 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean37 = chartRenderingInfo35.equals((java.lang.Object) paint36);
        java.awt.geom.Rectangle2D rectangle2D38 = chartRenderingInfo35.getChartArea();
        java.util.List list39 = null;
        combinedDomainXYPlot32.drawDomainGridlines(graphics2D33, rectangle2D38, list39);
        org.jfree.chart.axis.NumberAxis numberAxis42 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity45 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D38, (org.jfree.chart.axis.Axis) numberAxis42, "", "DatasetRenderingOrder.FORWARD");
        java.lang.Object obj46 = numberAxis42.clone();
        combinedDomainXYPlot1.setRangeAxis(0, (org.jfree.chart.axis.ValueAxis) numberAxis42);
        java.awt.Stroke stroke48 = combinedDomainXYPlot1.getRangeZeroBaselineStroke();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNotNull(seriesRenderingOrder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(xYItemRenderer29);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(rectangle2D38);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(stroke48);
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test438");
        org.jfree.chart.plot.CrosshairState crosshairState0 = new org.jfree.chart.plot.CrosshairState();
        double double1 = crosshairState0.getCrosshairY();
        double double2 = crosshairState0.getCrosshairX();
        crosshairState0.updateCrosshairY(Double.NaN);
        crosshairState0.updateCrosshairX((double) 3);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test439");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        org.jfree.chart.plot.PiePlot piePlot46 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup47 = piePlot46.getDatasetGroup();
        int int48 = piePlot46.getBackgroundImageAlignment();
        boolean boolean49 = piePlot46.getAutoPopulateSectionOutlineStroke();
        java.awt.geom.Rectangle2D rectangle2D50 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo51 = null;
        piePlot46.createAndAddEntity(rectangle2D50, plotRenderingInfo51, "hi!", "LGPL");
        java.awt.Paint paint55 = piePlot46.getLabelPaint();
        java.awt.Stroke stroke56 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        piePlot46.setOutlineStroke(stroke56);
        legendGraphic45.setOutlineStroke(stroke56);
        java.awt.Paint paint59 = legendGraphic45.getFillPaint();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(datasetGroup47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 15 + "'", int48 == 15);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(paint55);
        org.junit.Assert.assertNotNull(stroke56);
        org.junit.Assert.assertNotNull(paint59);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test440");
        org.jfree.data.xy.XYDataItem xYDataItem2 = new org.jfree.data.xy.XYDataItem((double) (byte) 10, (double) 0);
        double double3 = xYDataItem2.getXValue();
        double double4 = xYDataItem2.getXValue();
        xYDataItem2.setY((double) 2);
        double double7 = xYDataItem2.getXValue();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test441");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        boolean boolean17 = combinedDomainXYPlot1.isRangeZeroBaselineVisible();
        java.awt.Paint paint18 = combinedDomainXYPlot1.getRangeGridlinePaint();
        org.jfree.chart.renderer.xy.XYBarRenderer xYBarRenderer20 = new org.jfree.chart.renderer.xy.XYBarRenderer((double) 255);
        org.jfree.chart.axis.NumberAxis numberAxis22 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.data.Range range24 = null;
        org.jfree.chart.block.RectangleConstraint rectangleConstraint25 = new org.jfree.chart.block.RectangleConstraint(0.0d, range24);
        org.jfree.data.Range range28 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range31 = new org.jfree.data.Range((double) (-1L), 0.0d);
        org.jfree.data.Range range32 = org.jfree.data.Range.combine(range28, range31);
        org.jfree.data.Range range33 = org.jfree.chart.axis.ValueAxis.DEFAULT_RANGE;
        org.jfree.data.Range range34 = org.jfree.data.Range.combine(range28, range33);
        org.jfree.chart.block.RectangleConstraint rectangleConstraint35 = rectangleConstraint25.toRangeWidth(range28);
        numberAxis22.setRangeWithMargins(range28, false, true);
        boolean boolean39 = xYBarRenderer20.equals((java.lang.Object) false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = new org.jfree.chart.labels.ItemLabelPosition();
        xYBarRenderer20.setPositiveItemLabelPositionFallback(itemLabelPosition40);
        java.awt.Stroke stroke43 = xYBarRenderer20.lookupSeriesStroke(2147483647);
        combinedDomainXYPlot1.setDomainCrosshairStroke(stroke43);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(range32);
        org.junit.Assert.assertNotNull(range33);
        org.junit.Assert.assertNotNull(range34);
        org.junit.Assert.assertNotNull(rectangleConstraint35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(stroke43);
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test442");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.AxisSpace axisSpace10 = combinedDomainXYPlot1.getFixedRangeAxisSpace();
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer13 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection14 = categoryPlot11.getDomainMarkers((int) 'a', layer13);
        java.awt.Paint paint15 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        categoryPlot11.setOutlinePaint(paint15);
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = new org.jfree.chart.plot.CategoryPlot();
        int int18 = categoryPlot17.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation19 = categoryPlot17.getOrientation();
        categoryPlot11.setOrientation(plotOrientation19);
        combinedDomainXYPlot1.setOrientation(plotOrientation19);
        combinedDomainXYPlot1.clearDomainMarkers((int) (short) 1);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNull(axisSpace10);
        org.junit.Assert.assertNotNull(layer13);
        org.junit.Assert.assertNull(collection14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(plotOrientation19);
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test443");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean3 = xYAreaRenderer1.isSeriesItemLabelsVisible((int) (byte) 1);
        java.awt.Paint paint4 = xYAreaRenderer1.getBaseLegendTextPaint();
        java.awt.Stroke stroke6 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        xYAreaRenderer1.setSeriesOutlineStroke(0, stroke6, false);
        java.awt.Stroke stroke9 = org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE;
        xYAreaRenderer1.setBaseStroke(stroke9);
        boolean boolean11 = xYAreaRenderer1.getBaseItemLabelsVisible();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator12 = null;
        xYAreaRenderer1.setBaseItemLabelGenerator(xYItemLabelGenerator12);
        java.awt.Paint paint14 = xYAreaRenderer1.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D15 = null;
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot16 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list17 = combinedRangeXYPlot16.getSubplots();
        combinedRangeXYPlot16.setGap((double) (-16777216));
        combinedRangeXYPlot16.setRangeCrosshairVisible(false);
        org.jfree.chart.axis.NumberAxis3D numberAxis3D23 = new org.jfree.chart.axis.NumberAxis3D("RectangleAnchor.BOTTOM_RIGHT");
        int int24 = numberAxis3D23.getMinorTickCount();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer26 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer26.clearSeriesStrokes(false);
        boolean boolean29 = xYAreaRenderer26.getPlotLines();
        org.jfree.chart.title.LegendTitle legendTitle30 = new org.jfree.chart.title.LegendTitle((org.jfree.chart.LegendItemSource) xYAreaRenderer26);
        org.jfree.chart.util.RectangleEdge rectangleEdge31 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str32 = rectangleEdge31.toString();
        legendTitle30.setLegendItemGraphicEdge(rectangleEdge31);
        org.jfree.chart.title.TextTitle textTitle35 = new org.jfree.chart.title.TextTitle("");
        boolean boolean36 = textTitle35.getExpandToFitSpace();
        textTitle35.setText("");
        java.lang.String str39 = textTitle35.getID();
        java.awt.Font font40 = textTitle35.getFont();
        java.awt.Graphics2D graphics2D41 = null;
        org.jfree.chart.entity.EntityCollection entityCollection42 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo43 = new org.jfree.chart.ChartRenderingInfo(entityCollection42);
        java.awt.Paint paint44 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean45 = chartRenderingInfo43.equals((java.lang.Object) paint44);
        java.awt.geom.Rectangle2D rectangle2D46 = chartRenderingInfo43.getChartArea();
        textTitle35.draw(graphics2D41, rectangle2D46);
        legendTitle30.setBounds(rectangle2D46);
        xYAreaRenderer1.drawDomainGridLine(graphics2D15, (org.jfree.chart.plot.XYPlot) combinedRangeXYPlot16, (org.jfree.chart.axis.ValueAxis) numberAxis3D23, rectangle2D46, (double) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(paint4);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(list17);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(rectangleEdge31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "RectangleEdge.RIGHT" + "'", str32, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(font40);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(rectangle2D46);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test444");
        org.jfree.chart.plot.PolarPlot polarPlot0 = new org.jfree.chart.plot.PolarPlot();
        org.jfree.chart.axis.ValueAxis valueAxis1 = null;
        polarPlot0.setAxis(valueAxis1);
        int int3 = polarPlot0.getSeriesCount();
        java.lang.String str4 = polarPlot0.getPlotType();
        boolean boolean5 = polarPlot0.isRadiusGridlinesVisible();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo7 = null;
        org.jfree.chart.entity.EntityCollection entityCollection10 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo11 = new org.jfree.chart.ChartRenderingInfo(entityCollection10);
        java.awt.Paint paint12 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean13 = chartRenderingInfo11.equals((java.lang.Object) paint12);
        java.awt.geom.Rectangle2D rectangle2D14 = chartRenderingInfo11.getChartArea();
        org.jfree.chart.title.TextTitle textTitle16 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity17 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D14, (org.jfree.chart.title.Title) textTitle16);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor18 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D19 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D14, rectangleAnchor18);
        org.jfree.data.general.PieDataset pieDataset20 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity26 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D14, pieDataset20, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot28 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis27);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer30 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer30.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator33 = null;
        xYAreaRenderer30.setLegendItemURLGenerator(xYSeriesLabelGenerator33);
        xYAreaRenderer30.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean41 = xYAreaRenderer30.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot28.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer30);
        combinedDomainXYPlot28.clearDomainMarkers();
        java.awt.Font font45 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint46 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer49 = null;
        org.jfree.chart.text.TextBlock textBlock50 = org.jfree.chart.text.TextUtilities.createTextBlock("", font45, paint46, (float) (-1L), (int) (short) -1, textMeasurer49);
        combinedDomainXYPlot28.setDomainCrosshairPaint(paint46);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder52 = combinedDomainXYPlot28.getSeriesRenderingOrder();
        java.awt.Paint paint53 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot28.setRangeTickBandPaint(paint53);
        org.jfree.chart.title.LegendGraphic legendGraphic55 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D14, paint53);
        java.awt.geom.Point2D point2D56 = org.jfree.chart.util.ShapeUtilities.getPointInRectangle((double) 10L, (double) 1577894400035L, rectangle2D14);
        // The following exception was thrown during execution in test generation
        try {
            polarPlot0.zoomRangeAxes((double) 0L, plotRenderingInfo7, point2D56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Polar Plot" + "'", str4, "Polar Plot");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(rectangle2D14);
        org.junit.Assert.assertNotNull(rectangleAnchor18);
        org.junit.Assert.assertNotNull(point2D19);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(font45);
        org.junit.Assert.assertNotNull(paint46);
        org.junit.Assert.assertNotNull(textBlock50);
        org.junit.Assert.assertNotNull(seriesRenderingOrder52);
        org.junit.Assert.assertNotNull(paint53);
        org.junit.Assert.assertNotNull(point2D56);
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test445");
        org.jfree.chart.block.BorderArrangement borderArrangement0 = new org.jfree.chart.block.BorderArrangement();
        java.util.TimeZone timeZone1 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection2 = new org.jfree.data.time.TimeSeriesCollection(timeZone1);
        org.jfree.chart.title.LegendItemBlockContainer legendItemBlockContainer4 = new org.jfree.chart.title.LegendItemBlockContainer((org.jfree.chart.block.Arrangement) borderArrangement0, (org.jfree.data.general.Dataset) timeSeriesCollection2, (java.lang.Comparable) (byte) 10);
        java.lang.Comparable comparable5 = null;
        int int6 = timeSeriesCollection2.indexOf(comparable5);
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot8 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis7);
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.entity.EntityCollection entityCollection10 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo11 = new org.jfree.chart.ChartRenderingInfo(entityCollection10);
        java.awt.Paint paint12 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean13 = chartRenderingInfo11.equals((java.lang.Object) paint12);
        java.awt.geom.Rectangle2D rectangle2D14 = chartRenderingInfo11.getChartArea();
        java.util.List list15 = null;
        combinedDomainXYPlot8.drawDomainGridlines(graphics2D9, rectangle2D14, list15);
        org.jfree.chart.axis.NumberAxis numberAxis18 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity21 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D14, (org.jfree.chart.axis.Axis) numberAxis18, "", "DatasetRenderingOrder.FORWARD");
        numberAxis18.centerRange(10.0d);
        org.jfree.chart.axis.NumberAxis numberAxis25 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis25.pan((double) 1);
        numberAxis25.setTickLabelsVisible(false);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer31 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        boolean boolean33 = xYAreaRenderer31.isSeriesItemLabelsVisible((int) (byte) 1);
        org.jfree.chart.plot.XYPlot xYPlot34 = new org.jfree.chart.plot.XYPlot((org.jfree.data.xy.XYDataset) timeSeriesCollection2, (org.jfree.chart.axis.ValueAxis) numberAxis18, (org.jfree.chart.axis.ValueAxis) numberAxis25, (org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer31);
        org.jfree.chart.axis.SegmentedTimeline segmentedTimeline35 = org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline();
        boolean boolean38 = segmentedTimeline35.containsDomainRange((long) 1, (long) (byte) 10);
        long long40 = segmentedTimeline35.toTimelineValue((long) '#');
        java.util.List list41 = segmentedTimeline35.getExceptionSegments();
        org.jfree.data.Range range43 = timeSeriesCollection2.getDomainBounds(list41, true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(rectangle2D14);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(segmentedTimeline35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1577894400035L + "'", long40 == 1577894400035L);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNull(range43);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test446");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        org.jfree.chart.LegendItemCollection legendItemCollection1 = combinedRangeXYPlot0.getLegendItems();
        combinedRangeXYPlot0.setRangePannable(false);
        org.jfree.chart.renderer.xy.XYStepRenderer xYStepRenderer4 = new org.jfree.chart.renderer.xy.XYStepRenderer();
        java.lang.Boolean boolean6 = xYStepRenderer4.getSeriesLinesVisible(0);
        xYStepRenderer4.setUseOutlinePaint(true);
        combinedRangeXYPlot0.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYStepRenderer4);
        boolean boolean10 = xYStepRenderer4.getBaseShapesVisible();
        boolean boolean11 = xYStepRenderer4.getUseOutlinePaint();
        xYStepRenderer4.setBaseShapesVisible(false);
        org.junit.Assert.assertNotNull(legendItemCollection1);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test447");
        org.jfree.data.xy.DefaultXYDataset defaultXYDataset3 = new org.jfree.data.xy.DefaultXYDataset();
        org.jfree.data.xy.XYDatasetSelectionState xYDatasetSelectionState4 = defaultXYDataset3.getSelectionState();
        int int5 = defaultXYDataset3.getSeriesCount();
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer8 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection9 = categoryPlot6.getDomainMarkers((int) 'a', layer8);
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        categoryPlot6.setDataset(4, categoryDataset11);
        org.jfree.chart.axis.AxisSpace axisSpace13 = categoryPlot6.getFixedDomainAxisSpace();
        java.awt.Graphics2D graphics2D14 = null;
        java.awt.geom.Rectangle2D rectangle2D15 = null;
        org.jfree.chart.util.Layer layer17 = org.jfree.chart.util.Layer.BACKGROUND;
        categoryPlot6.drawRangeMarkers(graphics2D14, rectangle2D15, 0, layer17);
        double double19 = categoryPlot6.getRangeCrosshairValue();
        org.jfree.data.category.CategoryDataset categoryDataset21 = null;
        categoryPlot6.setDataset(11, categoryDataset21);
        org.jfree.chart.LegendItemCollection legendItemCollection23 = categoryPlot6.getLegendItems();
        org.jfree.chart.plot.PlotOrientation plotOrientation24 = categoryPlot6.getOrientation();
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.JFreeChart jFreeChart28 = org.jfree.chart.ChartFactory.createXYStepChart("RectangleConstraint[LengthConstraintType.FIXED: width=0.0, height=10.0]", "ChartChangeEventType.DATASET_UPDATED", "PieLabelLinkStyle.QUAD_CURVE", (org.jfree.data.xy.XYDataset) defaultXYDataset3, plotOrientation24, true, true, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Listener org.jfree.chart.JFreeChart@cea21b6 is not of type class sun.util.calendar.ZoneInfo");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xYDatasetSelectionState4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(layer8);
        org.junit.Assert.assertNull(collection9);
        org.junit.Assert.assertNull(axisSpace13);
        org.junit.Assert.assertNotNull(layer17);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(legendItemCollection23);
        org.junit.Assert.assertNotNull(plotOrientation24);
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test448");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.axis.AxisLocation axisLocation7 = org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT;
        categoryPlot0.setRangeAxisLocation(axisLocation7, false);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot0.zoomRangeAxes((double) (-16777216), plotRenderingInfo11, point2D12, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot();
        int int16 = categoryPlot15.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge20 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str21 = rectangleEdge20.toString();
        double double22 = categoryPlot15.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge20);
        boolean boolean23 = categoryPlot15.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis25 = categoryPlot15.getDomainAxis(10);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D26 = new org.jfree.chart.renderer.category.BarRenderer3D();
        categoryPlot15.setRenderer((org.jfree.chart.renderer.category.CategoryItemRenderer) barRenderer3D26, false);
        categoryPlot0.setRenderer((org.jfree.chart.renderer.category.CategoryItemRenderer) barRenderer3D26);
        org.jfree.chart.axis.AxisSpace axisSpace30 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot33 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis32);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer35 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer35.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator38 = null;
        xYAreaRenderer35.setLegendItemURLGenerator(xYSeriesLabelGenerator38);
        xYAreaRenderer35.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean46 = xYAreaRenderer35.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot33.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer35);
        org.jfree.chart.axis.ValueAxis valueAxis48 = null;
        int int49 = combinedDomainXYPlot33.getRangeAxisIndex(valueAxis48);
        org.jfree.chart.axis.ValueAxis valueAxis50 = null;
        combinedDomainXYPlot33.setDomainAxis(valueAxis50);
        org.jfree.chart.util.RectangleEdge rectangleEdge53 = combinedDomainXYPlot33.getDomainAxisEdge(0);
        axisSpace30.add((double) 10L, rectangleEdge53);
        categoryPlot0.setFixedRangeAxisSpace(axisSpace30);
        axisSpace30.setLeft(15.0d);
        axisSpace30.setTop((double) (byte) 10);
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertNotNull(axisLocation7);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "RectangleEdge.RIGHT" + "'", str21, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 149.0d + "'", double22 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(categoryAxis25);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge53);
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test449");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        boolean boolean18 = combinedDomainXYPlot1.isRangeCrosshairVisible();
        boolean boolean19 = combinedDomainXYPlot1.isDomainCrosshairVisible();
        java.util.TimeZone timeZone20 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection21 = new org.jfree.data.time.TimeSeriesCollection(timeZone20);
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot22.clearAnnotations();
        timeSeriesCollection21.removeChangeListener((org.jfree.data.general.DatasetChangeListener) categoryPlot22);
        org.jfree.data.general.DatasetGroup datasetGroup25 = timeSeriesCollection21.getGroup();
        org.jfree.chart.renderer.xy.XYItemRenderer xYItemRenderer26 = combinedDomainXYPlot1.getRendererForDataset((org.jfree.data.xy.XYDataset) timeSeriesCollection21);
        java.awt.Stroke stroke27 = combinedDomainXYPlot1.getDomainGridlineStroke();
        java.awt.geom.GeneralPath generalPath28 = null;
        org.jfree.data.time.Year year31 = new org.jfree.data.time.Year((int) (short) 0);
        org.jfree.data.time.Year year33 = new org.jfree.data.time.Year((int) (short) 0);
        long long34 = year33.getFirstMillisecond();
        org.jfree.chart.axis.PeriodAxis periodAxis35 = new org.jfree.chart.axis.PeriodAxis("Following", (org.jfree.data.time.RegularTimePeriod) year31, (org.jfree.data.time.RegularTimePeriod) year33);
        float float36 = periodAxis35.getMinorTickMarkInsideLength();
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.axis.AxisState axisState38 = new org.jfree.chart.axis.AxisState();
        double double39 = axisState38.getMax();
        java.util.List list40 = axisState38.getTicks();
        org.jfree.chart.entity.EntityCollection entityCollection41 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo42 = new org.jfree.chart.ChartRenderingInfo(entityCollection41);
        java.awt.Paint paint43 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean44 = chartRenderingInfo42.equals((java.lang.Object) paint43);
        java.awt.geom.Rectangle2D rectangle2D45 = chartRenderingInfo42.getChartArea();
        org.jfree.chart.plot.CategoryPlot categoryPlot46 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer48 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection49 = categoryPlot46.getDomainMarkers((int) 'a', layer48);
        org.jfree.data.category.CategoryDataset categoryDataset51 = null;
        categoryPlot46.setDataset(4, categoryDataset51);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier53 = categoryPlot46.getDrawingSupplier();
        categoryPlot46.configureDomainAxes();
        org.jfree.chart.axis.AxisSpace axisSpace55 = null;
        categoryPlot46.setFixedDomainAxisSpace(axisSpace55);
        categoryPlot46.setCrosshairDatasetIndex((int) (short) 100);
        categoryPlot46.setBackgroundAlpha((float) 8);
        org.jfree.chart.util.RectangleEdge rectangleEdge61 = categoryPlot46.getDomainAxisEdge();
        java.util.List list62 = periodAxis35.refreshTicks(graphics2D37, axisState38, rectangle2D45, rectangleEdge61);
        org.jfree.chart.RenderingSource renderingSource63 = null;
        combinedDomainXYPlot1.select(generalPath28, rectangle2D45, renderingSource63);
        combinedDomainXYPlot1.mapDatasetToRangeAxis(2147483647, 0);
        java.util.List list68 = combinedDomainXYPlot1.getSubplots();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(datasetGroup25);
        org.junit.Assert.assertNull(xYItemRenderer26);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-62167363200000L) + "'", long34 == (-62167363200000L));
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 0.0f + "'", float36 == 0.0f);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(rectangle2D45);
        org.junit.Assert.assertNotNull(layer48);
        org.junit.Assert.assertNull(collection49);
        org.junit.Assert.assertNotNull(drawingSupplier53);
        org.junit.Assert.assertNotNull(rectangleEdge61);
        org.junit.Assert.assertNotNull(list62);
        org.junit.Assert.assertNotNull(list68);
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test450");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        int int1 = categoryPlot0.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation2 = categoryPlot0.getOrientation();
        org.jfree.chart.axis.ValueAxis valueAxis3 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot4 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis3);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer6 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer6.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator9 = null;
        xYAreaRenderer6.setLegendItemURLGenerator(xYSeriesLabelGenerator9);
        xYAreaRenderer6.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean17 = xYAreaRenderer6.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot4.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer6);
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        int int20 = combinedDomainXYPlot4.getRangeAxisIndex(valueAxis19);
        boolean boolean21 = combinedDomainXYPlot4.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets22 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double23 = rectangleInsets22.getLeft();
        double double25 = rectangleInsets22.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot4.setAxisOffset(rectangleInsets22);
        combinedDomainXYPlot4.setDomainGridlinesVisible(false);
        boolean boolean29 = combinedDomainXYPlot4.isDomainMinorGridlinesVisible();
        boolean boolean30 = plotOrientation2.equals((java.lang.Object) combinedDomainXYPlot4);
        java.awt.Paint paint31 = combinedDomainXYPlot4.getDomainCrosshairPaint();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(plotOrientation2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(rectangleInsets22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(paint31);
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test451");
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D2 = new org.jfree.chart.renderer.category.BarRenderer3D((double) 0.0f, (double) 100L);
        org.jfree.chart.axis.ValueAxis valueAxis3 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot4 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis3);
        java.awt.Color color5 = org.jfree.chart.ChartColor.DARK_BLUE;
        combinedDomainXYPlot4.setRangeMinorGridlinePaint((java.awt.Paint) color5);
        boolean boolean7 = combinedDomainXYPlot4.canSelectByRegion();
        barRenderer3D2.addChangeListener((org.jfree.chart.event.RendererChangeListener) combinedDomainXYPlot4);
        boolean boolean9 = barRenderer3D2.isDrawBarOutline();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer11 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer11.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator14 = null;
        xYAreaRenderer11.setLegendItemURLGenerator(xYSeriesLabelGenerator14);
        xYAreaRenderer11.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean22 = xYAreaRenderer11.isItemLabelVisible((int) '#', (int) '#', true);
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator26 = xYAreaRenderer11.getItemLabelGenerator((int) (short) 10, 100, false);
        java.awt.Stroke stroke28 = xYAreaRenderer11.lookupSeriesStroke(0);
        barRenderer3D2.setBaseStroke(stroke28);
        org.junit.Assert.assertNotNull(color5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(xYItemLabelGenerator26);
        org.junit.Assert.assertNotNull(stroke28);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test452");
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot0 = new org.jfree.chart.plot.CombinedDomainXYPlot();
        java.awt.Paint paint1 = combinedDomainXYPlot0.getRangeGridlinePaint();
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        org.jfree.chart.title.TextTitle textTitle9 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity10 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.title.Title) textTitle9);
        combinedDomainXYPlot0.drawQuadrants(graphics2D2, rectangle2D7);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer13 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer13.clearSeriesStrokes(false);
        boolean boolean16 = xYAreaRenderer13.getPlotLines();
        boolean boolean17 = xYAreaRenderer13.getBaseItemLabelsVisible();
        java.awt.Paint paint18 = xYAreaRenderer13.getBasePaint();
        java.awt.Font font19 = xYAreaRenderer13.getBaseItemLabelFont();
        org.jfree.chart.text.TextFragment textFragment23 = new org.jfree.chart.text.TextFragment("RectangleEdge.RIGHT");
        java.awt.Font font24 = textFragment23.getFont();
        org.jfree.chart.text.TextFragment textFragment25 = new org.jfree.chart.text.TextFragment("ERROR : Relative To String", font24);
        xYAreaRenderer13.setSeriesItemLabelFont((int) ' ', font24);
        int int27 = combinedDomainXYPlot0.getIndexOf((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer13);
        combinedDomainXYPlot0.setWeight(500);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(font19);
        org.junit.Assert.assertNotNull(font24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test453");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        numberAxis11.setMinorTickMarkInsideLength((float) 60000L);
        java.text.NumberFormat numberFormat17 = numberAxis11.getNumberFormatOverride();
        org.jfree.chart.block.BorderArrangement borderArrangement18 = new org.jfree.chart.block.BorderArrangement();
        org.jfree.chart.block.BlockContainer blockContainer19 = new org.jfree.chart.block.BlockContainer((org.jfree.chart.block.Arrangement) borderArrangement18);
        blockContainer19.clear();
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer22 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer22.clearSeriesStrokes(false);
        boolean boolean25 = xYAreaRenderer22.getPlotLines();
        boolean boolean26 = xYAreaRenderer22.getBaseItemLabelsVisible();
        java.awt.Paint paint27 = xYAreaRenderer22.getBasePaint();
        boolean boolean28 = blockContainer19.equals((java.lang.Object) paint27);
        org.jfree.chart.util.RectangleInsets rectangleInsets29 = blockContainer19.getMargin();
        double double30 = rectangleInsets29.getLeft();
        numberAxis11.setTickLabelInsets(rectangleInsets29);
        java.awt.Paint paint32 = numberAxis11.getLabelPaint();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(rectangleInsets29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(paint32);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test454");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        org.jfree.chart.util.Layer layer2 = org.jfree.chart.util.Layer.FOREGROUND;
        java.util.Collection collection3 = categoryPlot0.getDomainMarkers((int) 'a', layer2);
        org.jfree.data.category.CategoryDataset categoryDataset5 = null;
        categoryPlot0.setDataset(4, categoryDataset5);
        org.jfree.chart.axis.AxisLocation axisLocation7 = org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT;
        categoryPlot0.setRangeAxisLocation(axisLocation7, false);
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo11 = null;
        java.awt.geom.Point2D point2D12 = null;
        categoryPlot0.zoomRangeAxes((double) (-16777216), plotRenderingInfo11, point2D12, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = new org.jfree.chart.plot.CategoryPlot();
        int int16 = categoryPlot15.getDatasetCount();
        org.jfree.chart.util.RectangleEdge rectangleEdge20 = org.jfree.chart.util.RectangleEdge.RIGHT;
        java.lang.String str21 = rectangleEdge20.toString();
        double double22 = categoryPlot15.getRectX((double) '4', (double) 'a', (double) 'a', rectangleEdge20);
        boolean boolean23 = categoryPlot15.isRangeZoomable();
        org.jfree.chart.axis.CategoryAxis categoryAxis25 = categoryPlot15.getDomainAxis(10);
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D26 = new org.jfree.chart.renderer.category.BarRenderer3D();
        categoryPlot15.setRenderer((org.jfree.chart.renderer.category.CategoryItemRenderer) barRenderer3D26, false);
        categoryPlot0.setRenderer((org.jfree.chart.renderer.category.CategoryItemRenderer) barRenderer3D26);
        org.jfree.chart.axis.AxisSpace axisSpace30 = new org.jfree.chart.axis.AxisSpace();
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot33 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis32);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer35 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer35.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator38 = null;
        xYAreaRenderer35.setLegendItemURLGenerator(xYSeriesLabelGenerator38);
        xYAreaRenderer35.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean46 = xYAreaRenderer35.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot33.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer35);
        org.jfree.chart.axis.ValueAxis valueAxis48 = null;
        int int49 = combinedDomainXYPlot33.getRangeAxisIndex(valueAxis48);
        org.jfree.chart.axis.ValueAxis valueAxis50 = null;
        combinedDomainXYPlot33.setDomainAxis(valueAxis50);
        org.jfree.chart.util.RectangleEdge rectangleEdge53 = combinedDomainXYPlot33.getDomainAxisEdge(0);
        axisSpace30.add((double) 10L, rectangleEdge53);
        categoryPlot0.setFixedRangeAxisSpace(axisSpace30);
        axisSpace30.setLeft(15.0d);
        double double58 = axisSpace30.getRight();
        org.junit.Assert.assertNotNull(layer2);
        org.junit.Assert.assertNull(collection3);
        org.junit.Assert.assertNotNull(axisLocation7);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(rectangleEdge20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "RectangleEdge.RIGHT" + "'", str21, "RectangleEdge.RIGHT");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 149.0d + "'", double22 == 149.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(categoryAxis25);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(rectangleEdge53);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test455");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        boolean boolean10 = combinedDomainXYPlot1.isDomainGridlinesVisible();
        combinedDomainXYPlot1.setDomainPannable(true);
        org.jfree.chart.axis.AxisLocation axisLocation14 = org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT;
        combinedDomainXYPlot1.setDomainAxisLocation(0, axisLocation14);
        combinedDomainXYPlot1.clearDomainAxes();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(axisLocation14);
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test456");
        java.util.TimeZone timeZone0 = null;
        org.jfree.data.time.TimeSeriesCollection timeSeriesCollection1 = new org.jfree.data.time.TimeSeriesCollection(timeZone0);
        org.jfree.chart.plot.CategoryPlot categoryPlot2 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot2.clearAnnotations();
        timeSeriesCollection1.removeChangeListener((org.jfree.data.general.DatasetChangeListener) categoryPlot2);
        org.jfree.data.Range range6 = org.jfree.data.general.DatasetUtilities.findRangeBounds((org.jfree.data.xy.XYDataset) timeSeriesCollection1, true);
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot7 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list8 = combinedRangeXYPlot7.getSubplots();
        combinedRangeXYPlot7.setGap((double) (-16777216));
        org.jfree.chart.util.RectangleEdge rectangleEdge11 = combinedRangeXYPlot7.getRangeAxisEdge();
        boolean boolean12 = timeSeriesCollection1.equals((java.lang.Object) combinedRangeXYPlot7);
        org.junit.Assert.assertNull(range6);
        org.junit.Assert.assertNotNull(list8);
        org.junit.Assert.assertNotNull(rectangleEdge11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test457");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        numberAxis11.setMinorTickMarkInsideLength((float) 60000L);
        java.text.NumberFormat numberFormat17 = numberAxis11.getNumberFormatOverride();
        org.jfree.chart.util.RectangleInsets rectangleInsets18 = numberAxis11.getTickLabelInsets();
        org.jfree.data.RangeType rangeType19 = numberAxis11.getRangeType();
        java.lang.Object obj20 = numberAxis11.clone();
        java.awt.Paint paint21 = numberAxis11.getTickMarkPaint();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNull(numberFormat17);
        org.junit.Assert.assertNotNull(rectangleInsets18);
        org.junit.Assert.assertNotNull(rangeType19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(paint21);
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test458");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list1 = combinedRangeXYPlot0.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis2 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot3 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis2);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer5 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer5.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator8 = null;
        xYAreaRenderer5.setLegendItemURLGenerator(xYSeriesLabelGenerator8);
        xYAreaRenderer5.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean16 = xYAreaRenderer5.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot3.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer5);
        combinedDomainXYPlot3.clearDomainMarkers();
        java.awt.Font font20 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint21 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer24 = null;
        org.jfree.chart.text.TextBlock textBlock25 = org.jfree.chart.text.TextUtilities.createTextBlock("", font20, paint21, (float) (-1L), (int) (short) -1, textMeasurer24);
        combinedDomainXYPlot3.setDomainCrosshairPaint(paint21);
        org.jfree.chart.plot.PiePlot piePlot27 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup28 = piePlot27.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener29 = null;
        piePlot27.addChangeListener(plotChangeListener29);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent31 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot27);
        combinedDomainXYPlot3.plotChanged(plotChangeEvent31);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType33 = plotChangeEvent31.getType();
        combinedRangeXYPlot0.plotChanged(plotChangeEvent31);
        org.jfree.chart.plot.IntervalMarker intervalMarker37 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        boolean boolean38 = combinedRangeXYPlot0.removeRangeMarker((org.jfree.chart.plot.Marker) intervalMarker37);
        // The following exception was thrown during execution in test generation
        try {
            intervalMarker37.setAlpha((float) 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The 'alpha' value must be in the range 0.0f to 1.0f");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(list1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(textBlock25);
        org.junit.Assert.assertNull(datasetGroup28);
        org.junit.Assert.assertNotNull(chartChangeEventType33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test459");
        org.jfree.chart.title.TextTitle textTitle1 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.util.HorizontalAlignment horizontalAlignment2 = textTitle1.getHorizontalAlignment();
        java.lang.String str3 = textTitle1.getID();
        org.jfree.chart.plot.IntervalMarker intervalMarker6 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        java.awt.Color color7 = org.jfree.chart.ChartColor.VERY_DARK_RED;
        intervalMarker6.setPaint((java.awt.Paint) color7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot10 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list11 = combinedRangeXYPlot10.getSubplots();
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot13 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis12);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer15 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer15.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator18 = null;
        xYAreaRenderer15.setLegendItemURLGenerator(xYSeriesLabelGenerator18);
        xYAreaRenderer15.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean26 = xYAreaRenderer15.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot13.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer15);
        combinedDomainXYPlot13.clearDomainMarkers();
        java.awt.Font font30 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint31 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer34 = null;
        org.jfree.chart.text.TextBlock textBlock35 = org.jfree.chart.text.TextUtilities.createTextBlock("", font30, paint31, (float) (-1L), (int) (short) -1, textMeasurer34);
        combinedDomainXYPlot13.setDomainCrosshairPaint(paint31);
        org.jfree.chart.plot.PiePlot piePlot37 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup38 = piePlot37.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener39 = null;
        piePlot37.addChangeListener(plotChangeListener39);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent41 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot37);
        combinedDomainXYPlot13.plotChanged(plotChangeEvent41);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType43 = plotChangeEvent41.getType();
        combinedRangeXYPlot10.plotChanged(plotChangeEvent41);
        org.jfree.chart.plot.IntervalMarker intervalMarker47 = new org.jfree.chart.plot.IntervalMarker((double) (short) 100, (double) 10);
        boolean boolean48 = combinedRangeXYPlot10.removeRangeMarker((org.jfree.chart.plot.Marker) intervalMarker47);
        combinedRangeXYPlot10.configureRangeAxes();
        org.jfree.chart.util.RectangleInsets rectangleInsets50 = combinedRangeXYPlot10.getAxisOffset();
        double double52 = rectangleInsets50.calculateBottomInset((double) 1577894400035L);
        org.jfree.chart.block.LineBorder lineBorder53 = new org.jfree.chart.block.LineBorder((java.awt.Paint) color7, stroke9, rectangleInsets50);
        textTitle1.setBackgroundPaint((java.awt.Paint) color7);
        org.junit.Assert.assertNotNull(horizontalAlignment2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(color7);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(font30);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(textBlock35);
        org.junit.Assert.assertNull(datasetGroup38);
        org.junit.Assert.assertNotNull(chartChangeEventType43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(rectangleInsets50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 4.0d + "'", double52 == 4.0d);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test460");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        combinedDomainXYPlot1.setDomainAxis(valueAxis18);
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot21 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis20);
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.entity.EntityCollection entityCollection23 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo24 = new org.jfree.chart.ChartRenderingInfo(entityCollection23);
        java.awt.Paint paint25 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean26 = chartRenderingInfo24.equals((java.lang.Object) paint25);
        java.awt.geom.Rectangle2D rectangle2D27 = chartRenderingInfo24.getChartArea();
        java.util.List list28 = null;
        combinedDomainXYPlot21.drawDomainGridlines(graphics2D22, rectangle2D27, list28);
        org.jfree.chart.axis.NumberAxis numberAxis31 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity34 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D27, (org.jfree.chart.axis.Axis) numberAxis31, "", "DatasetRenderingOrder.FORWARD");
        combinedDomainXYPlot1.setRangeAxis((org.jfree.chart.axis.ValueAxis) numberAxis31);
        numberAxis31.setTickMarksVisible(false);
        numberAxis31.setLabelAngle(1.0d);
        org.jfree.chart.text.TextAnchor textAnchor40 = org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT;
        boolean boolean41 = numberAxis31.equals((java.lang.Object) textAnchor40);
        org.jfree.chart.axis.NumberTickUnit numberTickUnit42 = numberAxis31.getTickUnit();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangle2D27);
        org.junit.Assert.assertNotNull(textAnchor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(numberTickUnit42);
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test461");
        java.awt.geom.Rectangle2D rectangle2D2 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = org.jfree.chart.util.ShapeUtilities.isPointInRect((double) 1900, (double) 0, rectangle2D2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test462");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.entity.EntityCollection entityCollection3 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo4 = new org.jfree.chart.ChartRenderingInfo(entityCollection3);
        java.awt.Paint paint5 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean6 = chartRenderingInfo4.equals((java.lang.Object) paint5);
        java.awt.geom.Rectangle2D rectangle2D7 = chartRenderingInfo4.getChartArea();
        java.util.List list8 = null;
        combinedDomainXYPlot1.drawDomainGridlines(graphics2D2, rectangle2D7, list8);
        org.jfree.chart.axis.NumberAxis numberAxis11 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity14 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D7, (org.jfree.chart.axis.Axis) numberAxis11, "", "DatasetRenderingOrder.FORWARD");
        org.jfree.chart.axis.Axis axis15 = axisEntity14.getAxis();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(rectangle2D7);
        org.junit.Assert.assertNotNull(axis15);
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test463");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke1 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot0.setRangeCrosshairStroke(stroke1);
        org.jfree.data.xy.XYSeries xYSeries6 = new org.jfree.data.xy.XYSeries((java.lang.Comparable) 0.2d, true, false);
        xYSeries6.setDescription("DateTickMarkPosition.MIDDLE");
        org.jfree.data.xy.XYDataItem xYDataItem11 = xYSeries6.addOrUpdate((java.lang.Number) (-1L), (java.lang.Number) (-1));
        boolean boolean12 = combinedRangeXYPlot0.equals((java.lang.Object) xYDataItem11);
        org.jfree.chart.LegendItemCollection legendItemCollection13 = combinedRangeXYPlot0.getLegendItems();
        org.jfree.chart.entity.EntityCollection entityCollection15 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo16 = new org.jfree.chart.ChartRenderingInfo(entityCollection15);
        java.awt.Paint paint17 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean18 = chartRenderingInfo16.equals((java.lang.Object) paint17);
        java.awt.geom.Rectangle2D rectangle2D19 = chartRenderingInfo16.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo20 = chartRenderingInfo16.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo21 = plotRenderingInfo20.getOwner();
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = new org.jfree.chart.plot.CategoryPlot();
        categoryPlot22.clearAnnotations();
        java.util.List list24 = categoryPlot22.getAnnotations();
        org.jfree.chart.plot.PolarPlot polarPlot27 = new org.jfree.chart.plot.PolarPlot();
        java.awt.Font font28 = polarPlot27.getAngleLabelFont();
        org.jfree.chart.axis.ValueAxis valueAxis29 = polarPlot27.getAxis();
        org.jfree.chart.entity.EntityCollection entityCollection31 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo32 = new org.jfree.chart.ChartRenderingInfo(entityCollection31);
        java.awt.Paint paint33 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean34 = chartRenderingInfo32.equals((java.lang.Object) paint33);
        java.awt.geom.Rectangle2D rectangle2D35 = chartRenderingInfo32.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo36 = chartRenderingInfo32.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo37 = plotRenderingInfo36.getOwner();
        java.awt.geom.Point2D point2D38 = null;
        polarPlot27.zoomDomainAxes((double) (byte) 1, plotRenderingInfo36, point2D38, false);
        categoryPlot22.handleClick(2958465, (int) (byte) 10, plotRenderingInfo36);
        int int42 = plotRenderingInfo36.getSubplotCount();
        plotRenderingInfo20.addSubplotInfo(plotRenderingInfo36);
        java.awt.geom.Point2D point2D44 = null;
        // The following exception was thrown during execution in test generation
        try {
            combinedRangeXYPlot0.zoomDomainAxes((double) (-42827342400000L), plotRenderingInfo20, point2D44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'source' argument.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke1);
        org.junit.Assert.assertNull(xYDataItem11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(legendItemCollection13);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(rectangle2D19);
        org.junit.Assert.assertNotNull(plotRenderingInfo20);
        org.junit.Assert.assertNotNull(chartRenderingInfo21);
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(font28);
        org.junit.Assert.assertNull(valueAxis29);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(rectangle2D35);
        org.junit.Assert.assertNotNull(plotRenderingInfo36);
        org.junit.Assert.assertNotNull(chartRenderingInfo37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test464");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        boolean boolean46 = legendGraphic45.isLineVisible();
        legendGraphic45.setShapeFilled(true);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor49 = legendGraphic45.getShapeLocation();
        java.awt.geom.Rectangle2D rectangle2D50 = legendGraphic45.getBounds();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(rectangleAnchor49);
        org.junit.Assert.assertNotNull(rectangle2D50);
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test465");
        org.jfree.chart.axis.ValueAxis valueAxis1 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot2 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis1);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer4 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer4.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator7 = null;
        xYAreaRenderer4.setLegendItemURLGenerator(xYSeriesLabelGenerator7);
        xYAreaRenderer4.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean15 = xYAreaRenderer4.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot2.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer4);
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        int int18 = combinedDomainXYPlot2.getRangeAxisIndex(valueAxis17);
        boolean boolean19 = combinedDomainXYPlot2.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets20 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double21 = rectangleInsets20.getLeft();
        double double23 = rectangleInsets20.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot2.setAxisOffset(rectangleInsets20);
        org.jfree.chart.axis.AxisSpace axisSpace25 = combinedDomainXYPlot2.getFixedRangeAxisSpace();
        org.jfree.chart.plot.PiePlot piePlot26 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup27 = piePlot26.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener28 = null;
        piePlot26.addChangeListener(plotChangeListener28);
        java.awt.Color color32 = java.awt.Color.getColor("hi!", (int) (short) 100);
        piePlot26.setLabelOutlinePaint((java.awt.Paint) color32);
        int int34 = color32.getTransparency();
        combinedDomainXYPlot2.setDomainMinorGridlinePaint((java.awt.Paint) color32);
        org.jfree.chart.LegendItem legendItem36 = new org.jfree.chart.LegendItem("item", (java.awt.Paint) color32);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(rectangleInsets20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertNull(axisSpace25);
        org.junit.Assert.assertNull(datasetGroup27);
        org.junit.Assert.assertNotNull(color32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test466");
        org.jfree.chart.entity.EntityCollection entityCollection0 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo1 = new org.jfree.chart.ChartRenderingInfo(entityCollection0);
        java.awt.Paint paint2 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean3 = chartRenderingInfo1.equals((java.lang.Object) paint2);
        java.awt.geom.Rectangle2D rectangle2D4 = chartRenderingInfo1.getChartArea();
        org.jfree.chart.title.TextTitle textTitle6 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.entity.TitleEntity titleEntity7 = new org.jfree.chart.entity.TitleEntity((java.awt.Shape) rectangle2D4, (org.jfree.chart.title.Title) textTitle6);
        org.jfree.chart.util.RectangleAnchor rectangleAnchor8 = org.jfree.chart.util.RectangleAnchor.CENTER;
        java.awt.geom.Point2D point2D9 = org.jfree.chart.util.RectangleAnchor.coordinates(rectangle2D4, rectangleAnchor8);
        org.jfree.data.general.PieDataset pieDataset10 = null;
        org.jfree.chart.entity.PieSectionEntity pieSectionEntity16 = new org.jfree.chart.entity.PieSectionEntity((java.awt.Shape) rectangle2D4, pieDataset10, (int) ' ', (int) (short) 1, (java.lang.Comparable) 149.0d, "Following", "NO_CHANGE");
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot18 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis17);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer20 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer20.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator23 = null;
        xYAreaRenderer20.setLegendItemURLGenerator(xYSeriesLabelGenerator23);
        xYAreaRenderer20.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean31 = xYAreaRenderer20.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot18.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer20);
        combinedDomainXYPlot18.clearDomainMarkers();
        java.awt.Font font35 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint36 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer39 = null;
        org.jfree.chart.text.TextBlock textBlock40 = org.jfree.chart.text.TextUtilities.createTextBlock("", font35, paint36, (float) (-1L), (int) (short) -1, textMeasurer39);
        combinedDomainXYPlot18.setDomainCrosshairPaint(paint36);
        org.jfree.chart.plot.SeriesRenderingOrder seriesRenderingOrder42 = combinedDomainXYPlot18.getSeriesRenderingOrder();
        java.awt.Paint paint43 = org.jfree.chart.plot.PolarPlot.DEFAULT_GRIDLINE_PAINT;
        combinedDomainXYPlot18.setRangeTickBandPaint(paint43);
        org.jfree.chart.title.LegendGraphic legendGraphic45 = new org.jfree.chart.title.LegendGraphic((java.awt.Shape) rectangle2D4, paint43);
        java.lang.Object obj46 = legendGraphic45.clone();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(rectangle2D4);
        org.junit.Assert.assertNotNull(rectangleAnchor8);
        org.junit.Assert.assertNotNull(point2D9);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(textBlock40);
        org.junit.Assert.assertNotNull(seriesRenderingOrder42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test467");
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer1.clearSeriesStrokes(false);
        boolean boolean4 = xYAreaRenderer1.getPlotLines();
        boolean boolean5 = xYAreaRenderer1.getBaseItemLabelsVisible();
        java.awt.Paint paint6 = xYAreaRenderer1.getBasePaint();
        java.awt.Font font7 = xYAreaRenderer1.getBaseItemLabelFont();
        org.jfree.chart.labels.XYItemLabelGenerator xYItemLabelGenerator8 = null;
        xYAreaRenderer1.setBaseItemLabelGenerator(xYItemLabelGenerator8);
        xYAreaRenderer1.setUseFillPaint(true);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot14 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis13);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer16 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer16.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator19 = null;
        xYAreaRenderer16.setLegendItemURLGenerator(xYSeriesLabelGenerator19);
        xYAreaRenderer16.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean27 = xYAreaRenderer16.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot14.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer16);
        combinedDomainXYPlot14.clearDomainMarkers();
        boolean boolean30 = combinedDomainXYPlot14.isRangeZeroBaselineVisible();
        org.jfree.chart.axis.NumberAxis numberAxis32 = new org.jfree.chart.axis.NumberAxis("");
        numberAxis32.pan((double) 1);
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot36 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis35);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.entity.EntityCollection entityCollection38 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo39 = new org.jfree.chart.ChartRenderingInfo(entityCollection38);
        java.awt.Paint paint40 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean41 = chartRenderingInfo39.equals((java.lang.Object) paint40);
        java.awt.geom.Rectangle2D rectangle2D42 = chartRenderingInfo39.getChartArea();
        java.util.List list43 = null;
        combinedDomainXYPlot36.drawDomainGridlines(graphics2D37, rectangle2D42, list43);
        org.jfree.chart.axis.NumberAxis numberAxis46 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity49 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D42, (org.jfree.chart.axis.Axis) numberAxis46, "", "DatasetRenderingOrder.FORWARD");
        xYAreaRenderer1.drawDomainGridLine(graphics2D12, (org.jfree.chart.plot.XYPlot) combinedDomainXYPlot14, (org.jfree.chart.axis.ValueAxis) numberAxis32, rectangle2D42, (double) 11);
        numberAxis32.setLabelToolTip("{0}: ({1}, {2})");
        org.jfree.chart.text.TextLine textLine55 = new org.jfree.chart.text.TextLine("hi!");
        org.jfree.chart.text.TextFragment textFragment56 = textLine55.getLastTextFragment();
        java.awt.Font font57 = textFragment56.getFont();
        numberAxis32.setLabelFont(font57);
        numberAxis32.setInverted(true);
        org.jfree.chart.axis.TickUnitSource tickUnitSource61 = numberAxis32.getStandardTickUnits();
        numberAxis32.setLowerMargin(3.6E8d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(rectangle2D42);
        org.junit.Assert.assertNotNull(textFragment56);
        org.junit.Assert.assertNotNull(font57);
        org.junit.Assert.assertNotNull(tickUnitSource61);
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test468");
        org.jfree.data.xy.DefaultXYDataset defaultXYDataset0 = new org.jfree.data.xy.DefaultXYDataset();
        org.jfree.data.xy.XYDatasetSelectionState xYDatasetSelectionState1 = defaultXYDataset0.getSelectionState();
        org.jfree.data.Range range2 = org.jfree.data.general.DatasetUtilities.iterateRangeBounds((org.jfree.data.xy.XYDataset) defaultXYDataset0);
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot3 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.util.List list4 = combinedRangeXYPlot3.getSubplots();
        combinedRangeXYPlot3.setGap((double) (-16777216));
        org.jfree.chart.entity.EntityCollection entityCollection9 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo10 = new org.jfree.chart.ChartRenderingInfo(entityCollection9);
        java.awt.Paint paint11 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean12 = chartRenderingInfo10.equals((java.lang.Object) paint11);
        java.awt.geom.Rectangle2D rectangle2D13 = chartRenderingInfo10.getChartArea();
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo14 = chartRenderingInfo10.getPlotInfo();
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo15 = plotRenderingInfo14.getOwner();
        combinedRangeXYPlot3.handleClick((-9999), 5, plotRenderingInfo14);
        boolean boolean17 = defaultXYDataset0.equals((java.lang.Object) plotRenderingInfo14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable comparable19 = defaultXYDataset0.getSeriesKey(2147483647);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Series index out of bounds");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xYDatasetSelectionState1);
        org.junit.Assert.assertNull(range2);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(rectangle2D13);
        org.junit.Assert.assertNotNull(plotRenderingInfo14);
        org.junit.Assert.assertNotNull(chartRenderingInfo15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test469");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        combinedDomainXYPlot1.clearDomainMarkers();
        java.awt.Font font18 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint19 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer22 = null;
        org.jfree.chart.text.TextBlock textBlock23 = org.jfree.chart.text.TextUtilities.createTextBlock("", font18, paint19, (float) (-1L), (int) (short) -1, textMeasurer22);
        combinedDomainXYPlot1.setDomainCrosshairPaint(paint19);
        org.jfree.chart.plot.PiePlot piePlot25 = new org.jfree.chart.plot.PiePlot();
        org.jfree.data.general.DatasetGroup datasetGroup26 = piePlot25.getDatasetGroup();
        org.jfree.chart.event.PlotChangeListener plotChangeListener27 = null;
        piePlot25.addChangeListener(plotChangeListener27);
        org.jfree.chart.event.PlotChangeEvent plotChangeEvent29 = new org.jfree.chart.event.PlotChangeEvent((org.jfree.chart.plot.Plot) piePlot25);
        combinedDomainXYPlot1.plotChanged(plotChangeEvent29);
        org.jfree.chart.event.ChartChangeEventType chartChangeEventType31 = plotChangeEvent29.getType();
        java.lang.String str32 = chartChangeEventType31.toString();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(textBlock23);
        org.junit.Assert.assertNull(datasetGroup26);
        org.junit.Assert.assertNotNull(chartChangeEventType31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ChartChangeEventType.GENERAL" + "'", str32, "ChartChangeEventType.GENERAL");
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test470");
        org.jfree.chart.axis.ValueAxis valueAxis0 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot1 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis0);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer3 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer3.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator6 = null;
        xYAreaRenderer3.setLegendItemURLGenerator(xYSeriesLabelGenerator6);
        xYAreaRenderer3.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean14 = xYAreaRenderer3.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot1.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer3);
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        int int17 = combinedDomainXYPlot1.getRangeAxisIndex(valueAxis16);
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        combinedDomainXYPlot1.setDomainAxis(valueAxis18);
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot21 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis20);
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.entity.EntityCollection entityCollection23 = null;
        org.jfree.chart.ChartRenderingInfo chartRenderingInfo24 = new org.jfree.chart.ChartRenderingInfo(entityCollection23);
        java.awt.Paint paint25 = org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT;
        boolean boolean26 = chartRenderingInfo24.equals((java.lang.Object) paint25);
        java.awt.geom.Rectangle2D rectangle2D27 = chartRenderingInfo24.getChartArea();
        java.util.List list28 = null;
        combinedDomainXYPlot21.drawDomainGridlines(graphics2D22, rectangle2D27, list28);
        org.jfree.chart.axis.NumberAxis numberAxis31 = new org.jfree.chart.axis.NumberAxis("");
        org.jfree.chart.entity.AxisEntity axisEntity34 = new org.jfree.chart.entity.AxisEntity((java.awt.Shape) rectangle2D27, (org.jfree.chart.axis.Axis) numberAxis31, "", "DatasetRenderingOrder.FORWARD");
        combinedDomainXYPlot1.setRangeAxis((org.jfree.chart.axis.ValueAxis) numberAxis31);
        numberAxis31.setTickLabelsVisible(true);
        numberAxis31.setAxisLineVisible(false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(rectangle2D27);
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test471");
        java.awt.Font font1 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint2 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer5 = null;
        org.jfree.chart.text.TextBlock textBlock6 = org.jfree.chart.text.TextUtilities.createTextBlock("", font1, paint2, (float) (-1L), (int) (short) -1, textMeasurer5);
        org.jfree.chart.title.TextTitle textTitle8 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.util.HorizontalAlignment horizontalAlignment9 = textTitle8.getTextAlignment();
        org.jfree.chart.util.VerticalAlignment verticalAlignment10 = null;
        org.jfree.chart.block.ColumnArrangement columnArrangement13 = new org.jfree.chart.block.ColumnArrangement(horizontalAlignment9, verticalAlignment10, (double) '#', (double) (byte) 1);
        textBlock6.setLineAlignment(horizontalAlignment9);
        java.awt.Graphics2D graphics2D15 = null;
        org.jfree.chart.text.TextBlockAnchor textBlockAnchor18 = org.jfree.chart.text.TextBlockAnchor.CENTER_LEFT;
        org.jfree.chart.axis.SegmentedTimeline segmentedTimeline19 = org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline();
        boolean boolean20 = textBlockAnchor18.equals((java.lang.Object) segmentedTimeline19);
        java.awt.Shape shape24 = textBlock6.calculateBounds(graphics2D15, (float) 11, (float) 86400000L, textBlockAnchor18, (float) 'a', (float) ' ', (double) (short) 1);
        org.jfree.chart.title.TextTitle textTitle26 = new org.jfree.chart.title.TextTitle("");
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot28 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis27);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer30 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer30.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator33 = null;
        xYAreaRenderer30.setLegendItemURLGenerator(xYSeriesLabelGenerator33);
        xYAreaRenderer30.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean41 = xYAreaRenderer30.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot28.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer30);
        boolean boolean43 = combinedDomainXYPlot28.canSelectByPoint();
        org.jfree.chart.axis.AxisLocation axisLocation44 = org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT;
        combinedDomainXYPlot28.setRangeAxisLocation(axisLocation44, true);
        boolean boolean47 = textTitle26.equals((java.lang.Object) combinedDomainXYPlot28);
        org.jfree.chart.entity.TitleEntity titleEntity48 = new org.jfree.chart.entity.TitleEntity(shape24, (org.jfree.chart.title.Title) textTitle26);
        org.junit.Assert.assertNotNull(font1);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(textBlock6);
        org.junit.Assert.assertNotNull(horizontalAlignment9);
        org.junit.Assert.assertNotNull(textBlockAnchor18);
        org.junit.Assert.assertNotNull(segmentedTimeline19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(shape24);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(axisLocation44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test472");
        org.jfree.chart.renderer.xy.XYStepRenderer xYStepRenderer0 = new org.jfree.chart.renderer.xy.XYStepRenderer();
        java.lang.Boolean boolean2 = xYStepRenderer0.getSeriesLinesVisible(0);
        java.lang.Object obj3 = null;
        boolean boolean4 = xYStepRenderer0.equals(obj3);
        java.lang.Boolean boolean6 = xYStepRenderer0.getSeriesLinesVisible(3);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test473");
        org.jfree.chart.util.StrokeMap strokeMap0 = new org.jfree.chart.util.StrokeMap();
        org.jfree.chart.renderer.category.BarRenderer3D barRenderer3D2 = new org.jfree.chart.renderer.category.BarRenderer3D();
        java.awt.Font font6 = barRenderer3D2.getItemLabelFont((int) (byte) -1, (int) (byte) 1, false);
        java.awt.Shape shape7 = barRenderer3D2.getBaseShape();
        barRenderer3D2.setBaseSeriesVisible(false);
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot11 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis10);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer13 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer13.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator16 = null;
        xYAreaRenderer13.setLegendItemURLGenerator(xYSeriesLabelGenerator16);
        xYAreaRenderer13.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean24 = xYAreaRenderer13.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot11.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer13);
        org.jfree.chart.axis.ValueAxis valueAxis26 = null;
        int int27 = combinedDomainXYPlot11.getRangeAxisIndex(valueAxis26);
        boolean boolean28 = combinedDomainXYPlot11.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets29 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double30 = rectangleInsets29.getLeft();
        double double32 = rectangleInsets29.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot11.setAxisOffset(rectangleInsets29);
        combinedDomainXYPlot11.setDomainGridlinesVisible(false);
        java.awt.Paint paint36 = combinedDomainXYPlot11.getNoDataMessagePaint();
        barRenderer3D2.setBaseItemLabelPaint(paint36, false);
        java.awt.Stroke stroke39 = barRenderer3D2.getBaseOutlineStroke();
        strokeMap0.put((java.lang.Comparable) "DateTickMarkPosition.MIDDLE", stroke39);
        java.lang.Object obj41 = strokeMap0.clone();
        org.junit.Assert.assertNotNull(font6);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(rectangleInsets29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(stroke39);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test474");
        org.jfree.chart.util.PaintList paintList0 = new org.jfree.chart.util.PaintList();
        org.jfree.chart.axis.ValueAxis valueAxis1 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot2 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis1);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer4 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer4.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator7 = null;
        xYAreaRenderer4.setLegendItemURLGenerator(xYSeriesLabelGenerator7);
        xYAreaRenderer4.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean15 = xYAreaRenderer4.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot2.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer4);
        combinedDomainXYPlot2.clearDomainMarkers();
        java.awt.Font font19 = org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT;
        java.awt.Paint paint20 = org.jfree.chart.renderer.category.BarRenderer3D.DEFAULT_WALL_PAINT;
        org.jfree.chart.text.TextMeasurer textMeasurer23 = null;
        org.jfree.chart.text.TextBlock textBlock24 = org.jfree.chart.text.TextUtilities.createTextBlock("", font19, paint20, (float) (-1L), (int) (short) -1, textMeasurer23);
        combinedDomainXYPlot2.setDomainCrosshairPaint(paint20);
        boolean boolean26 = paintList0.equals((java.lang.Object) paint20);
        java.awt.Paint paint28 = null;
        paintList0.setPaint(0, paint28);
        java.awt.Paint paint31 = paintList0.getPaint(5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(font19);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(textBlock24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(paint31);
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test475");
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot0 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke1 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot0.setRangeCrosshairStroke(stroke1);
        java.awt.geom.Point2D point2D3 = combinedRangeXYPlot0.getQuadrantOrigin();
        int int4 = combinedRangeXYPlot0.getRendererCount();
        java.util.List list5 = combinedRangeXYPlot0.getSubplots();
        org.junit.Assert.assertNotNull(stroke1);
        org.junit.Assert.assertNotNull(point2D3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(list5);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test476");
        org.jfree.chart.plot.CategoryPlot categoryPlot0 = new org.jfree.chart.plot.CategoryPlot();
        int int1 = categoryPlot0.getDatasetCount();
        org.jfree.chart.plot.PlotOrientation plotOrientation2 = categoryPlot0.getOrientation();
        org.jfree.chart.axis.ValueAxis valueAxis3 = null;
        org.jfree.chart.plot.CombinedDomainXYPlot combinedDomainXYPlot4 = new org.jfree.chart.plot.CombinedDomainXYPlot(valueAxis3);
        org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer6 = new org.jfree.chart.renderer.xy.XYAreaRenderer((int) '4');
        xYAreaRenderer6.clearSeriesStrokes(false);
        org.jfree.chart.labels.XYSeriesLabelGenerator xYSeriesLabelGenerator9 = null;
        xYAreaRenderer6.setLegendItemURLGenerator(xYSeriesLabelGenerator9);
        xYAreaRenderer6.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean17 = xYAreaRenderer6.isItemLabelVisible((int) '#', (int) '#', true);
        combinedDomainXYPlot4.setRenderer((org.jfree.chart.renderer.xy.XYItemRenderer) xYAreaRenderer6);
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        int int20 = combinedDomainXYPlot4.getRangeAxisIndex(valueAxis19);
        boolean boolean21 = combinedDomainXYPlot4.isRangeCrosshairVisible();
        org.jfree.chart.util.RectangleInsets rectangleInsets22 = org.jfree.chart.title.Title.DEFAULT_PADDING;
        double double23 = rectangleInsets22.getLeft();
        double double25 = rectangleInsets22.calculateLeftOutset((double) 0L);
        combinedDomainXYPlot4.setAxisOffset(rectangleInsets22);
        combinedDomainXYPlot4.setDomainGridlinesVisible(false);
        boolean boolean29 = combinedDomainXYPlot4.isDomainMinorGridlinesVisible();
        boolean boolean30 = plotOrientation2.equals((java.lang.Object) combinedDomainXYPlot4);
        org.jfree.chart.plot.Marker marker32 = null;
        org.jfree.chart.plot.CombinedRangeXYPlot combinedRangeXYPlot33 = new org.jfree.chart.plot.CombinedRangeXYPlot();
        java.awt.Stroke stroke34 = org.jfree.chart.plot.XYPlot.DEFAULT_GRIDLINE_STROKE;
        combinedRangeXYPlot33.setRangeCrosshairStroke(stroke34);
        org.jfree.chart.util.Layer layer36 = org.jfree.chart.util.Layer.BACKGROUND;
        java.util.Collection collection37 = combinedRangeXYPlot33.getDomainMarkers(layer36);
        boolean boolean38 = combinedDomainXYPlot4.removeDomainMarker(100, marker32, layer36);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertNotNull(plotOrientation2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(rectangleInsets22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertNotNull(layer36);
        org.junit.Assert.assertNull(collection37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }
}
