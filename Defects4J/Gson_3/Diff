diff --git a/Gson_3/Buggy-Version/.defects4j.config b/Gson_3/Patched-Version/.defects4j.config
index 2ae5939..eda77b6 100644
--- a/Gson_3/Buggy-Version/.defects4j.config
+++ b/Gson_3/Patched-Version/.defects4j.config
@@ -1,3 +1,3 @@
 #File automatically generated by Defects4J
 pid=Gson
-vid=3b
+vid=3f
diff --git a/Gson_3/Buggy-Version/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java b/Gson_3/Patched-Version/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java
index a0384fa..6fc9f2d 100644
--- a/Gson_3/Buggy-Version/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java
+++ b/Gson_3/Patched-Version/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java
@@ -33,6 +33,10 @@ import java.util.SortedMap;
 import java.util.SortedSet;
 import java.util.TreeMap;
 import java.util.TreeSet;
+import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.ConcurrentMap;
+import java.util.concurrent.ConcurrentNavigableMap;
+import java.util.concurrent.ConcurrentSkipListMap;
 
 import com.google.gson.InstanceCreator;
 import com.google.gson.JsonIOException;
@@ -172,7 +176,19 @@ public final class ConstructorConstructor {
     }
 
     if (Map.class.isAssignableFrom(rawType)) {
-      if (SortedMap.class.isAssignableFrom(rawType)) {
+      if (ConcurrentNavigableMap.class.isAssignableFrom(rawType)) {
+        return new ObjectConstructor<T>() {
+          @Override public T construct() {
+            return (T) new ConcurrentSkipListMap<Object, Object>();
+          }
+        };
+      } else if (ConcurrentMap.class.isAssignableFrom(rawType)) {
+        return new ObjectConstructor<T>() {
+          @Override public T construct() {
+            return (T) new ConcurrentHashMap<Object, Object>();
+          }
+        };
+      } else if (SortedMap.class.isAssignableFrom(rawType)) {
         return new ObjectConstructor<T>() {
           @Override public T construct() {
             return (T) new TreeMap<Object, Object>();
