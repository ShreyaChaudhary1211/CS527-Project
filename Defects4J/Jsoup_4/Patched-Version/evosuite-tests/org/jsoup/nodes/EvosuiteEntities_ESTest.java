/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 30 17:31:54 GMT 2024
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Entities;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EvosuiteEntities_ESTest extends EvosuiteEntities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = Entities.unescape("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Document document0 = Document.createShell("Q?qoO8&sE(QHC}.TY$");
      Document.OutputSettings document_OutputSettings0 = document0.new OutputSettings();
      String string0 = Entities.escape("Q?qoO8&sE(QHC}.TY$", document_OutputSettings0);
      assertEquals("Q?qoO8&amp;sE(QHC}.TY$", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Document document0 = new Document("");
      Document.OutputSettings document_OutputSettings0 = document0.new OutputSettings();
      CharsetEncoder charsetEncoder0 = document_OutputSettings0.encoder();
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.extended;
      String string0 = Entities.escape("", charsetEncoder0, entities_EscapeMode0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        Entities.unescape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Entities", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        Entities.escape("", (Document.OutputSettings) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Entities", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.base;
      // Undeclared exception!
      try { 
        Entities.escape("@|W1g|#tR8{{", (CharsetEncoder) null, entities_EscapeMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Entities", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = Entities.unescape("&#9");
      assertEquals("\t", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = Entities.unescape("Q?^oO8&sE(QHC}*TY$");
      assertEquals("Q?^oO8&sE(QHC}*TY$", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        Entities.unescape("Q&quest;NoO8&amp;sE&lpar;QC&rcub;&period;TY&dollar;");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal group reference: group index is missing
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      CharsetEncoder charsetEncoder0 = charset0.newEncoder();
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.extended;
      String string0 = Entities.escape("Q?NoO8&sE(QC}.TY$", charsetEncoder0, entities_EscapeMode0);
      assertEquals("Q&quest;NoO8&amp;sE&lpar;QC&rcub;&period;TY&dollar;", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Entities entities0 = new Entities();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Document document0 = Document.createShell("");
      Document.OutputSettings document_OutputSettings0 = document0.outputSettings();
      String string0 = Entities.escape("", document_OutputSettings0);
      assertEquals("", string0);
  }
}
