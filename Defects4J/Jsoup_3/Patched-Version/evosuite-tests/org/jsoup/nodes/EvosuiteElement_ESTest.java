/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 12:39:27 GMT 2024
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import java.util.NoSuchElementException;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EvosuiteElement_ESTest extends EvosuiteElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Document document0 = new Document("textarea");
      document0.appendElement("textarea");
      String string0 = document0.outerHtml();
      assertEquals("<textarea></textarea>", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Document document0 = new Document("P:?P(:#(rD*E9z+[#-T");
      document0.appendText("P:?P(:#(rD*E9z+[#-T");
      Elements elements0 = document0.getElementsByAttributeValueStarting("omicron", ";c4,$J G\"^S<5$");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Document document0 = new Document("<");
      Element element0 = document0.val("<");
      assertSame(document0, element0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tag tag0 = Tag.valueOf("sNVh!=^#M1K%");
      Element element0 = new Element(tag0, "sNVh!=^#M1K%");
      Element element1 = element0.prependElement("^QT$Ec<G N}");
      Elements elements0 = element1.parents();
      assertEquals("^qt$ec<g n}", element1.tagName());
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Document document0 = new Document(";dW rCM`UI@k(v[-");
      Elements elements0 = document0.getElementsByAttributeValueEnding(";dW rCM`UI@k(v[-", ";dW rCM`UI@k(v[-");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Document document0 = new Document("7:5\"qKrgtjbW2>YuS");
      Elements elements0 = document0.getElementsByClass("7:5\"qKrgtjbW2>YuS");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Document document0 = new Document("+K");
      // Undeclared exception!
      try { 
        document0.child((-1880776845));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Document document0 = new Document("+");
      Elements elements0 = document0.getElementsByAttributeValueContaining("+", "+");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Document document0 = new Document(";");
      Element element0 = document0.appendElement(";");
      element0.text(";");
      String string0 = element0.outerHtml();
      assertEquals("\n<;>\n;\n</;>", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Document document0 = new Document(">:(WA88'zmU5");
      Elements elements0 = document0.getElementsByAttributeValueNot(">:(WA88'zmU5", ">:(WA88'zmU5");
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Document document0 = new Document(";c4,F$J YG\"^S<5$");
      String string0 = document0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Document document0 = new Document("920");
      Elements elements0 = document0.getElementsByAttribute("920");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Document document0 = new Document("7:5\"qKrgtjbW2>YuS");
      Element element0 = document0.addClass("7:5\"qKrgtjbW2>YuS");
      Elements elements0 = element0.getElementsByClass("7:5\"qKrgtjbW2>YuS");
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tag tag0 = Tag.valueOf("sNVh!=^#M1K%");
      Element element0 = new Element(tag0, "sNVh!=^#M1K%");
      // Undeclared exception!
      try { 
        element0.html("4TcFmnf[Ab");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Document document0 = new Document("w(a8:GO");
      Elements elements0 = document0.getElementsByAttributeValue("w(a8:GO", "w(a8:GO");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Document document0 = new Document(";dW rCM`UI@k(v[-");
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Document document0 = new Document("P:?P(:#(rD*E9z+[#-T");
      Elements elements0 = document0.getElementsByAttributeValueStarting("omicron", ";c4,$J G\"^S<5$");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Document document0 = new Document(";dW rCM`UI@k(v[-");
      Element element0 = document0.appendElement(";dW rCM`UI@k(v[-");
      String string0 = element0.nodeName();
      assertEquals(";dw rcm`ui@k(v[-", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Document document0 = new Document("U.uSo?");
      // Undeclared exception!
      try { 
        document0.normalise();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Document document0 = new Document("UuSo?");
      Elements elements0 = document0.getAllElements();
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Document document0 = new Document(";dW rCM`UI@k(v[-");
      Elements elements0 = document0.getElementsByIndexLessThan((-1835));
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tag tag0 = Tag.valueOf("sNVh!=^#M1K%");
      Element element0 = new Element(tag0, "sNVh!=^#M1K%");
      Elements elements0 = element0.parents();
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Document document0 = new Document("^");
      Elements elements0 = document0.getElementsByIndexGreaterThan((-792));
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Document document0 = new Document(";s(H:GO");
      Elements elements0 = document0.getElementsByIndexEquals((-1));
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Document document0 = new Document("#SGp(:\"O&%xI9Cpp");
      Element element0 = document0.getElementById("#SGp(:\"O&%xI9Cpp");
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Document document0 = new Document("P:?P(:;(rD*E9z+[#-T");
      Element element0 = document0.appendElement("P:?P(:;(rD*E9z+[#-T");
      Elements elements0 = element0.parents();
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Document document0 = new Document(";dW rCM`UI@k(v[-");
      Element element0 = document0.appendElement(";dW rCM`UI@k(v[-");
      Element element1 = element0.nextElementSibling();
      assertNull(element1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Document document0 = new Document(";dW rCM`UI@k(v[-");
      Element element0 = document0.appendElement(";dW rCM`UI@k(v[-");
      Element element1 = element0.previousElementSibling();
      assertNull(element1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Document document0 = new Document(";dW rCM`UI@k(v[-");
      document0.appendChild(document0);
      Element element0 = document0.appendElement(";dW rCM`UI@k(v[-");
      Element element1 = element0.previousElementSibling();
      assertEquals("#document", element1.nodeName());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Document document0 = new Document(";dW rCM`UI@k(v[-");
      Element element0 = document0.appendElement(";dW rCM`UI@k(v[-");
      Element element1 = element0.firstElementSibling();
      assertNull(element1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Document document0 = new Document(";dW rCM`UI@k(v[-");
      document0.addChild(document0);
      Element element0 = document0.appendElement(";dW rCM`UI@k(v[-");
      Element element1 = element0.firstElementSibling();
      assertSame(element1, document0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Document document0 = new Document("nNPUT");
      Element element0 = document0.appendElement("nNPUT");
      Integer integer0 = element0.elementSiblingIndex();
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Document document0 = new Document("+A|YM,<MYT#Kctt]%");
      Element element0 = document0.appendElement("+A|YM,<MYT#Kctt]%");
      Element element1 = element0.lastElementSibling();
      assertNull(element1);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Document document0 = new Document(">:(dA8U5");
      document0.prependChild(document0);
      Element element0 = document0.appendElement(">:(dA8U5");
      Element element1 = element0.lastElementSibling();
      assertEquals(">:(da8u5", element1.nodeName());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Document document0 = new Document("P:?P(:#(rD*E9z+[#-T");
      document0.appendElement("P:?P(:#(rD*E9z+[#-T");
      String string0 = document0.text();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Document document0 = new Document(">:(W8'zm");
      DataNode dataNode0 = DataNode.createFromEncoded(">:(W8'zm", "K");
      document0.addChild(dataNode0);
      String string0 = document0.text();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Document document0 = new Document("P:?P(:#(rD*E9z+[#-T");
      document0.appendText("P:?P(:#(rD*E9z+[#-T");
      document0.appendElement("P:?P(:#(rD*E9z+[#-T");
      String string0 = document0.text();
      assertEquals("P:?P(:#(rD*E9z+[#-T", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Document document0 = new Document("7:5\"qKrgtjbW2>YuS");
      document0.appendElement("7:5\"qKrgtjbW2>YuS");
      boolean boolean0 = document0.hasText();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Document document0 = new Document(";dW rCM`UI@k(v[-");
      document0.appendText(" ");
      boolean boolean0 = document0.hasText();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Tag tag0 = Tag.valueOf("hs(H:GO");
      Element element0 = new Element(tag0, ".[phab");
      DataNode dataNode0 = new DataNode("_N8q,g}O_EKdIdwAs", "<");
      Element element1 = element0.prependChild(dataNode0);
      boolean boolean0 = element1.hasText();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Document document0 = new Document("+A|YM,<MYT#Kctt]%");
      Element element0 = document0.appendElement("+A|YM,<MYT#Kctt]%");
      element0.text("+A|YM,<MYT#Kctt]%");
      boolean boolean0 = document0.hasText();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Document document0 = new Document("P:?P(:;(rD*E9z+[#-T");
      DataNode dataNode0 = DataNode.createFromEncoded("P:?P(:;(rD*E9z+[#-T", "P:?P(:;(rD*E9z+[#-T");
      document0.appendChild(dataNode0);
      String string0 = document0.data();
      assertEquals("P:?P(:;(rD*E9z+[#-T", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Document document0 = new Document("hs(aH:GO");
      Element element0 = document0.appendElement("hs(aH:GO");
      Element element1 = element0.text("hs(aH:GO");
      String string0 = element1.data();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Document document0 = new Document(";dW rCM`UI@k(v[-");
      document0.appendElement(";dW rCM`UI@k(v[-");
      String string0 = document0.data();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Document document0 = new Document("P:?P(:;(rD*E9z+[#-T");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Element element0 = document0.classNames((Set<String>) linkedHashSet0);
      Element element1 = element0.removeClass("P:?P(:;(rD*E9z+[#-T");
      assertFalse(element1.isBlock());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Document document0 = new Document(">:(dA8U5");
      Element element0 = document0.toggleClass("57[P");
      assertFalse(element0.isBlock());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Document document0 = new Document("U.uSo?");
      Element element0 = document0.toggleClass("");
      assertSame(element0, document0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Document document0 = new Document(";dW rCM`UI@k(v[-");
      String string0 = document0.val();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Tag tag0 = Tag.valueOf("textarea");
      Element element0 = new Element(tag0, "textarea");
      String string0 = element0.val();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Tag tag0 = Tag.valueOf("textarea");
      Element element0 = new Element(tag0, "textarea");
      Element element1 = element0.val("forall");
      assertSame(element1, element0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Document document0 = new Document("hs(aH:GO");
      document0.appendElement("NOSCRIPT");
      String string0 = document0.outerHtml();
      assertEquals("<noscript>\n</noscript>", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Document document0 = new Document("Z-0]]FzkupN`$gMq18");
      // Undeclared exception!
      try { 
        document0.outerHtml((StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Document document0 = new Document("hs(aH:GO");
      document0.appendElement("hs(aH:GO");
      document0.prependText("!/");
      String string0 = document0.outerHtml();
      assertEquals("!/<hs(ah:go>\n</hs(ah:go>", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Document document0 = new Document("#root");
      document0.appendElement("INPUT");
      String string0 = document0.html();
      assertEquals("<input />", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Document document0 = new Document(">:(WA88'zmU5");
      boolean boolean0 = document0.equals(">:(WA88'zmU5");
      assertFalse(boolean0);
  }
}
