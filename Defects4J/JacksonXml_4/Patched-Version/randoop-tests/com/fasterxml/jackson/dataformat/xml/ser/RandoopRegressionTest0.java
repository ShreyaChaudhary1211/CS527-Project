package com.fasterxml.jackson.dataformat.xml.ser;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RandoopRegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test001");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature feature8 = null;
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray9 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] { feature8 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper5.enable(featureArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray9);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test002");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        byte[] byteArray6 = new byte[] {};
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode7 = xmlMapper5.readTree(byteArray6);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxEOFException: Unexpected EOF in prolog? at [row,col {unknown-source}]: [1,0]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test003");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        java.io.File file8 = null;
        com.fasterxml.jackson.databind.JavaType javaType9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.TreeCodec treeCodec10 = xmlMapper5.readValue(file8, javaType9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test004");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.core.type.TypeReference typeReference11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.Flushable flushable12 = objectMapper9.readValue("", typeReference11);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxEOFException: Unexpected EOF in prolog? at [row,col {unknown-source}]: [1,0]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test005");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        byte[] byteArray10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode11 = xmlMapper5.readTree(byteArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test006");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 1, (byte) 100, (byte) 10 };
        com.fasterxml.jackson.core.type.TypeReference typeReference11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlMapper5.readValue(byteArray10, typeReference11);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxUnexpectedCharException: Illegal character ((CTRL-CHAR, code 1))? at [row,col {unknown-source}]: [1,1]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 1, 100, 10]");
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test007");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper9.enable(deserializationFeature10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test008");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.JavaType javaType10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = objectMapper9.writerFor(javaType10);
        com.fasterxml.jackson.core.JsonParser.Feature feature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = objectMapper9.configure(feature12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectWriter11);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test009");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        byte[] byteArray15 = new byte[] { (byte) 10, (byte) 0, (byte) -1 };
        com.fasterxml.jackson.databind.JavaType javaType18 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.Version version19 = xmlMapper5.readValue(byteArray15, (int) '#', (int) '4', javaType18);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 0, -1]");
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test010");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.databind.JavaType javaType13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair> pairItor14 = xmlMapper5.readValues(jsonParser12, javaType13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test011");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.core.ObjectCodec objectCodec10 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec10, xMLInputFactory11, xMLOutputFactory12);
        com.fasterxml.jackson.core.JsonFactory jsonFactory15 = xmlFactory13.setRootValueSeparator("");
        java.io.DataOutput dataOutput16 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator17 = jsonFactory15.createGenerator(dataOutput16);
        com.fasterxml.jackson.core.TreeNode treeNode18 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper5.writeTree(jsonGenerator17, treeNode18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(jsonFactory15);
        org.junit.Assert.assertNotNull(jsonGenerator17);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test012");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.core.JsonParser.Feature feature11 = null;
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray12 = new com.fasterxml.jackson.core.JsonParser.Feature[] { feature11 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper10.enable(featureArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(featureArray12);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test013");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        java.io.Writer writer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper9.writeValue(writer10, (java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null Writer is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test014");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = objectMapper9.writer(serializationFeature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test015");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature10 = null;
        com.fasterxml.jackson.databind.SerializationFeature[] serializationFeatureArray11 = new com.fasterxml.jackson.databind.SerializationFeature[] {};
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writer(serializationFeature10, serializationFeatureArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(serializationFeatureArray11);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test016");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.core.JsonGenerator.Feature feature10 = null;
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] { feature10 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper5.enable(featureArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(featureArray11);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test017");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = xmlMapper5.isEnabled(deserializationFeature8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test018");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        java.util.TimeZone timeZone10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper9.setTimeZone(timeZone10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test019");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = objectMapper10.writerWithType(javaType11);
        com.fasterxml.jackson.core.JsonParser jsonParser13 = null;
        com.fasterxml.jackson.databind.JavaType javaType14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.DatabindContext databindContext15 = objectMapper10.readValue(jsonParser13, javaType14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectWriter12);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test020");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setDefaultPrettyPrinter(prettyPrinter8);
        com.fasterxml.jackson.core.ObjectCodec objectCodec10 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec10, xMLInputFactory11, xMLOutputFactory12);
        com.fasterxml.jackson.core.JsonFactory jsonFactory15 = xmlFactory13.setRootValueSeparator("");
        java.io.DataOutput dataOutput16 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator17 = jsonFactory15.createGenerator(dataOutput16);
        com.fasterxml.jackson.databind.JsonNode jsonNode18 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper9.writeTree(jsonGenerator17, jsonNode18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(jsonFactory15);
        org.junit.Assert.assertNotNull(jsonGenerator17);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test021");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        java.io.InputStream inputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode13 = xmlMapper5.readTree(inputStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test022");
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase xmlBeanSerializerBase0 = null;
        com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter objectIdWriter1 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec2 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec2, xMLInputFactory3, xMLOutputFactory4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper7.writer(characterEscapes8);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray10 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper7.disable(featureArray10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper11.disableDefaultTyping();
        com.fasterxml.jackson.databind.JavaType javaType13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = objectMapper12.writerWithType(javaType13);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer xmlBeanSerializer15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer(xmlBeanSerializerBase0, objectIdWriter1, (java.lang.Object) objectMapper12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(featureArray10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter14);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test023");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.ObjectCodec objectCodec11 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory14 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec11, xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature15 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = xmlFactory14.disable(feature15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass18 = xmlFactory16.getFormatReadFeatureType();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType19 = deserializationContext10.constructType((java.lang.reflect.Type) featureClass18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertTrue("'" + feature15 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature15.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory16);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(featureClass18);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test024");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil annotationUtil11 = new com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil();
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature16 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = xmlFactory15.disable(feature16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass19 = xmlFactory17.getFormatReadFeatureType();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature20 = xmlMapper5.convertValue((java.lang.Object) annotationUtil11, featureClass19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No serializer found for class com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertTrue("'" + feature16 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature16.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory17);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(featureClass19);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test025");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping6 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper5.enableDefaultTypingAsProperty(defaultTyping6, "XML");
        java.io.Writer writer9 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector10 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair12 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector10, annotationIntrospector11);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector13 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair15 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector13, annotationIntrospector14);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair16 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair12, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair15);
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper5.writeValue(writer9, (java.lang.Object) pair16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null Writer is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectMapper8);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test026");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.core.type.TypeReference typeReference11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature12 = objectMapper9.readValue("xmlInfo", typeReference11);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxUnexpectedCharException: Unexpected character 'x' (code 120) in prolog; expected '<'? at [row,col {unknown-source}]: [1,1]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test027");
        com.fasterxml.jackson.core.io.IOContext iOContext0 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper12.disableDefaultTyping();
        com.fasterxml.jackson.databind.JavaType javaType14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = objectMapper13.writerWithType(javaType14);
        javax.xml.stream.XMLStreamReader xMLStreamReader16 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser fromXmlParser17 = new com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser(iOContext0, (int) (short) -1, 1, (com.fasterxml.jackson.core.ObjectCodec) objectMapper13, xMLStreamReader16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectWriter15);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test028");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader7 = xmlMapper2.readerForUpdating((java.lang.Object) xMLOutputFactory5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test029");
        com.fasterxml.jackson.core.io.IOContext iOContext0 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        javax.xml.stream.XMLStreamReader xMLStreamReader13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser fromXmlParser14 = new com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser(iOContext0, (int) (short) 0, (int) 'a', (com.fasterxml.jackson.core.ObjectCodec) xmlMapper8, xMLStreamReader13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test030");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.Module[] moduleArray10 = new com.fasterxml.jackson.databind.Module[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper9.registerModules(moduleArray10);
        com.fasterxml.jackson.databind.JavaType javaType12 = null;
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = objectMapper11.canDeserialize(javaType12, throwableAtomicReference13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null JavaType passed");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(moduleArray10);
        org.junit.Assert.assertNotNull(objectMapper11);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test031");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper5.writer(filterProvider8);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper5.writer(contextAttributes10);
        java.io.DataInput dataInput12 = null;
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature14 = xmlMapper5.readValue(dataInput12, featureClass13);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: InputData source not (yet?) support for this format (XML)");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectWriter11);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test032");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.JsonFactory jsonFactory5 = xmlFactory3.setRootValueSeparator("");
        java.io.DataOutput dataOutput6 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = jsonFactory5.createGenerator(dataOutput6);
        com.fasterxml.jackson.core.ObjectCodec objectCodec8 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec8, xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = xmlMapper13.writer(characterEscapes14);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper13.setNodeFactory(jsonNodeFactory16);
        java.lang.String str19 = objectMapper17.writeValueAsString((java.lang.Object) "XML");
        // The following exception was thrown during execution in test generation
        try {
            jsonGenerator7.writeObjectRef((java.lang.Object) objectMapper17);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonGenerationException; message: No native support for writing Object Ids");
        } catch (com.fasterxml.jackson.core.JsonGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jsonFactory5);
        org.junit.Assert.assertNotNull(jsonGenerator7);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "<String>XML</String>" + "'", str19, "<String>XML</String>");
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test033");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        java.util.Date date13 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.JsonFactory jsonFactory19 = xmlFactory17.setRootValueSeparator("");
        java.io.DataOutput dataOutput20 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = jsonFactory19.createGenerator(dataOutput20);
        // The following exception was thrown during execution in test generation
        try {
            serializerProvider12.defaultSerializeDateKey(date13, jsonGenerator21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(jsonFactory19);
        org.junit.Assert.assertNotNull(jsonGenerator21);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test034");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        com.fasterxml.jackson.core.JsonParser.Feature feature11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = xmlMapper5.isEnabled(feature11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test035");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper5.writer(filterProvider8);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper5.writer(contextAttributes10);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode13 = xmlMapper5.readTree("xmlInfo");
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxUnexpectedCharException: Unexpected character 'x' (code 120) in prolog; expected '<'? at [row,col {unknown-source}]: [1,1]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectWriter11);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test036");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.databind.JavaType javaType1 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec2 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec2, xMLInputFactory3, xMLOutputFactory4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper7.writer(characterEscapes8);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray10 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper7.disable(featureArray10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper11.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = objectMapper11.getSerializationConfig();
        // The following exception was thrown during execution in test generation
        try {
            javax.xml.namespace.QName qName14 = xmlRootNameLookup0.findRootName(javaType1, (com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(featureArray10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(serializationConfig13);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test037");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.databind.MapperFeature mapperFeature23 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = serializerProvider12.isEnabled(mapperFeature23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test038");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping6 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper5.enableDefaultTypingAsProperty(defaultTyping6, "XML");
        com.fasterxml.jackson.core.JsonParser jsonParser9 = null;
        com.fasterxml.jackson.core.type.ResolvedType resolvedType10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.AutoCloseable autoCloseable11 = objectMapper8.readValue(jsonParser9, resolvedType10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectMapper8);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test039");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.readerForUpdating((java.lang.Object) xmlFactory10);
        com.fasterxml.jackson.core.type.TypeReference typeReference13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver mixInResolver14 = xmlMapper5.readValue("XML", typeReference13);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxUnexpectedCharException: Unexpected character 'X' (code 88) in prolog; expected '<'? at [row,col {unknown-source}]: [1,1]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test040");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        byte[] byteArray18 = new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 100, (byte) -1, (byte) 100 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode19 = xmlMapper5.readTree(byteArray18);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: java.io.CharConversionException: Invalid UTF-8 start byte 0xff (at char #5, byte #-1)");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 0, 100, -1, 100]");
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test041");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec24 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec24, xMLInputFactory25, xMLOutputFactory26);
        com.fasterxml.jackson.core.Version version28 = xmlFactory27.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper29 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory27);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes30 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter31 = xmlMapper29.writer(characterEscapes30);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray32 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = xmlMapper29.disable(featureArray32);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter34 = xmlMapper29.writer();
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.JsonFactory jsonFactory40 = xmlFactory38.setRootValueSeparator("");
        java.io.DataOutput dataOutput41 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator42 = jsonFactory40.createGenerator(dataOutput41);
        boolean boolean43 = jsonGenerator42.canWriteTypeId();
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes44 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator45 = jsonGenerator42.setCharacterEscapes(characterEscapes44);
        // The following exception was thrown during execution in test generation
        try {
            serializerProvider12.defaultSerializeField(" ", (java.lang.Object) objectWriter34, jsonGenerator42);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonGenerationException; message: Can not write a field name, expecting a value");
        } catch (com.fasterxml.jackson.core.JsonGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(objectWriter31);
        org.junit.Assert.assertNotNull(featureArray32);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(objectWriter34);
        org.junit.Assert.assertNotNull(jsonFactory40);
        org.junit.Assert.assertNotNull(jsonGenerator42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jsonGenerator45);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test042");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        java.io.File file10 = null;
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup12 = objectMapper9.readValue(file10, javaType11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test043");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.annotation.JsonInclude.Value value3 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper4 = xmlMapper2.setPropertyInclusion(value3);
        java.io.InputStream inputStream5 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = objectMapper4.readValue(inputStream5, typeReference6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper4);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test044");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.Version version27 = xmlFactory26.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory26);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(characterEscapes29);
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory34);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes37 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter38 = xmlMapper36.writer(characterEscapes37);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory39 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper36.setNodeFactory(jsonNodeFactory39);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper36.setFilterProvider(filterProvider41);
        com.fasterxml.jackson.core.JsonParser jsonParser43 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature48 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = xmlFactory47.disable(feature48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass51 = xmlFactory49.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor52 = objectMapper42.readValues(jsonParser43, featureClass51);
        boolean boolean53 = xmlMapper28.canSerialize(featureClass51);
        com.fasterxml.jackson.databind.BeanProperty beanProperty54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = serializerProvider12.findKeySerializer(featureClass51, beanProperty54);
        com.fasterxml.jackson.databind.JavaType javaType56 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = serializerProvider12.findValueSerializer(javaType56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(objectWriter38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertTrue("'" + feature48 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature48.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory49);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(featureClass51);
        org.junit.Assert.assertNotNull(featureItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test045");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        int int10 = xmlMapper5.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues11 = xmlMapper5.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature12 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean14 = feature12.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper5.disable(feature12);
        com.fasterxml.jackson.core.JsonGenerator.Feature feature16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = objectMapper15.isEnabled(feature16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(injectableValues11);
        org.junit.Assert.assertTrue("'" + feature12 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature12.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objectMapper15);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test046");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory12 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper9.setNodeFactory(jsonNodeFactory12);
        com.fasterxml.jackson.core.JsonFactory.Feature feature14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = objectMapper13.isEnabled(feature14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objectMapper13);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test047");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        java.io.Reader reader8 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlMapper5.readValue(reader8, typeReference9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test048");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.JsonParser jsonParser11 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.Version version16 = xmlFactory15.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory15);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(characterEscapes18);
        com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory23 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec20, xMLInputFactory21, xMLOutputFactory22);
        com.fasterxml.jackson.core.Version version24 = xmlFactory23.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory23);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes26 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter27 = xmlMapper25.writer(characterEscapes26);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory28 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = xmlMapper25.setNodeFactory(jsonNodeFactory28);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider30 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper25.setFilterProvider(filterProvider30);
        com.fasterxml.jackson.core.JsonParser jsonParser32 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory34 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec33, xMLInputFactory34, xMLOutputFactory35);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature37 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = xmlFactory36.disable(feature37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass40 = xmlFactory38.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor41 = objectMapper31.readValues(jsonParser32, featureClass40);
        boolean boolean42 = xmlMapper17.canSerialize(featureClass40);
        boolean boolean43 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass40);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature44 = xmlMapper5.readValue(jsonParser11, featureClass40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(objectWriter27);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertTrue("'" + feature37 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature37.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory38);
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(featureClass40);
        org.junit.Assert.assertNotNull(featureItor41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test049");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector3 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair5 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector3, annotationIntrospector4);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair6 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair2, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair5);
        pair6.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector9 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair11 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector9, annotationIntrospector10);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector12 = com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.create((com.fasterxml.jackson.databind.AnnotationIntrospector) pair6, annotationIntrospector10);
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = objectMapper22.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig24 = objectMapper22.getSerializationConfig();
        com.fasterxml.jackson.databind.introspect.Annotated annotated25 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory29);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(characterEscapes32);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray34 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper31.disable(featureArray34);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = objectMapper35.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig37 = objectMapper35.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = objectMapper35.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec39 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory40 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory41 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec39, xMLInputFactory40, xMLOutputFactory41);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature43 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory44 = xmlFactory42.disable(feature43);
        com.fasterxml.jackson.core.Version version45 = xmlFactory44.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass46 = xmlFactory44.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = serializerProvider38.getUnknownTypeSerializer(featureClass46);
        java.util.TimeZone timeZone48 = serializerProvider38.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec49 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory50 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory51 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory52 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec49, xMLInputFactory50, xMLOutputFactory51);
        com.fasterxml.jackson.core.Version version53 = xmlFactory52.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper54 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory52);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes55 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter56 = xmlMapper54.writer(characterEscapes55);
        com.fasterxml.jackson.core.ObjectCodec objectCodec57 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory58 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory59 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory60 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec57, xMLInputFactory58, xMLOutputFactory59);
        com.fasterxml.jackson.core.Version version61 = xmlFactory60.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper62 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory60);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes63 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter64 = xmlMapper62.writer(characterEscapes63);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory65 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper66 = xmlMapper62.setNodeFactory(jsonNodeFactory65);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider67 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper68 = xmlMapper62.setFilterProvider(filterProvider67);
        com.fasterxml.jackson.core.JsonParser jsonParser69 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec70 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory71 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory72 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory73 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec70, xMLInputFactory71, xMLOutputFactory72);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature74 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory75 = xmlFactory73.disable(feature74);
        com.fasterxml.jackson.core.Version version76 = xmlFactory75.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass77 = xmlFactory75.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor78 = objectMapper68.readValues(jsonParser69, featureClass77);
        boolean boolean79 = xmlMapper54.canSerialize(featureClass77);
        com.fasterxml.jackson.databind.JavaType javaType80 = serializerProvider38.constructType((java.lang.reflect.Type) featureClass77);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType81 = pair6.refineSerializationType((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig24, annotated25, javaType80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationIntrospector12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(serializationConfig24);
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(featureArray34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(serializationConfig37);
        org.junit.Assert.assertNotNull(serializerProvider38);
        org.junit.Assert.assertTrue("'" + feature43 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature43.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory44);
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(featureClass46);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNotNull(timeZone48);
        org.junit.Assert.assertEquals(timeZone48.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(objectWriter56);
        org.junit.Assert.assertNotNull(version61);
        org.junit.Assert.assertNotNull(objectWriter64);
        org.junit.Assert.assertNotNull(objectMapper66);
        org.junit.Assert.assertNotNull(objectMapper68);
        org.junit.Assert.assertTrue("'" + feature74 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature74.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory75);
        org.junit.Assert.assertNotNull(version76);
        org.junit.Assert.assertNotNull(featureClass77);
        org.junit.Assert.assertNotNull(featureItor78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(javaType80);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test050");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        int int10 = xmlMapper5.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues11 = xmlMapper5.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature12 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean14 = feature12.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper5.disable(feature12);
        java.net.URL uRL16 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory25 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.setNodeFactory(jsonNodeFactory25);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider27 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = xmlMapper22.setFilterProvider(filterProvider27);
        com.fasterxml.jackson.core.JsonParser jsonParser29 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec30 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec30, xMLInputFactory31, xMLOutputFactory32);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature34 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = xmlFactory33.disable(feature34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass37 = xmlFactory35.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor38 = objectMapper28.readValues(jsonParser29, featureClass37);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature39 = objectMapper15.readValue(uRL16, featureClass37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(injectableValues11);
        org.junit.Assert.assertTrue("'" + feature12 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature12.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertTrue("'" + feature34 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature34.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory35);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(featureClass37);
        org.junit.Assert.assertNotNull(featureItor38);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test051");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory12 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper9.setNodeFactory(jsonNodeFactory12);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = objectMapper9.isEnabled(serializationFeature14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(objectMapper13);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test052");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.enableDefaultTypingAsProperty(defaultTyping10, "XML");
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader14 = objectMapper9.reader(deserializationFeature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper12);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test053");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        java.lang.Boolean boolean4 = pair2.isOutputAsCData(annotated3);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector5 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair7 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector5, annotationIntrospector6);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector8 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair10 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector8, annotationIntrospector9);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair11 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair7, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair10);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair12 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair2, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair10);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair14 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair12, annotationIntrospector13);
        com.fasterxml.jackson.core.ObjectCodec objectCodec15 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec15, xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory18);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper20.writer(characterEscapes21);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray23 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper20.disable(featureArray23);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = objectMapper24.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper24.getSerializationConfig();
        com.fasterxml.jackson.databind.introspect.AnnotatedClass annotatedClass27 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec28 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec28, xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.core.Version version32 = xmlFactory31.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper33 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory31);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper33.writer(characterEscapes34);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray36 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = xmlMapper33.disable(featureArray36);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper37.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig39 = objectMapper37.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = objectMapper37.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec41 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory42 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory43 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory44 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec41, xMLInputFactory42, xMLOutputFactory43);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature45 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = xmlFactory44.disable(feature45);
        com.fasterxml.jackson.core.Version version47 = xmlFactory46.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass48 = xmlFactory46.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = serializerProvider40.getUnknownTypeSerializer(featureClass48);
        java.util.TimeZone timeZone50 = serializerProvider40.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec51 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory52 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory53 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory54 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec51, xMLInputFactory52, xMLOutputFactory53);
        com.fasterxml.jackson.core.Version version55 = xmlFactory54.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper56 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory54);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes57 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter58 = xmlMapper56.writer(characterEscapes57);
        com.fasterxml.jackson.core.ObjectCodec objectCodec59 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory60 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory61 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory62 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec59, xMLInputFactory60, xMLOutputFactory61);
        com.fasterxml.jackson.core.Version version63 = xmlFactory62.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper64 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory62);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes65 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter66 = xmlMapper64.writer(characterEscapes65);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory67 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper68 = xmlMapper64.setNodeFactory(jsonNodeFactory67);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider69 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper70 = xmlMapper64.setFilterProvider(filterProvider69);
        com.fasterxml.jackson.core.JsonParser jsonParser71 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec72 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory73 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory74 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory75 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec72, xMLInputFactory73, xMLOutputFactory74);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature76 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory77 = xmlFactory75.disable(feature76);
        com.fasterxml.jackson.core.Version version78 = xmlFactory77.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass79 = xmlFactory77.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor80 = objectMapper70.readValues(jsonParser71, featureClass79);
        boolean boolean81 = xmlMapper56.canSerialize(featureClass79);
        com.fasterxml.jackson.databind.JavaType javaType82 = serializerProvider40.constructType((java.lang.reflect.Type) featureClass79);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?> wildcardTypeResolverBuilder83 = pair14.findTypeResolver((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig26, annotatedClass27, javaType82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(pair12);
        org.junit.Assert.assertNotNull(pair14);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(featureArray23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(version32);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertNotNull(featureArray36);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(serializationConfig39);
        org.junit.Assert.assertNotNull(serializerProvider40);
        org.junit.Assert.assertTrue("'" + feature45 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature45.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory46);
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(featureClass48);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(timeZone50);
        org.junit.Assert.assertEquals(timeZone50.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version55);
        org.junit.Assert.assertNotNull(objectWriter58);
        org.junit.Assert.assertNotNull(version63);
        org.junit.Assert.assertNotNull(objectWriter66);
        org.junit.Assert.assertNotNull(objectMapper68);
        org.junit.Assert.assertNotNull(objectMapper70);
        org.junit.Assert.assertTrue("'" + feature76 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature76.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory77);
        org.junit.Assert.assertNotNull(version78);
        org.junit.Assert.assertNotNull(featureClass79);
        org.junit.Assert.assertNotNull(featureItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(javaType82);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test054");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.databind.InjectableValues injectableValues12 = objectMapper11.getInjectableValues();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature13 = null;
        com.fasterxml.jackson.databind.SerializationFeature[] serializationFeatureArray14 = new com.fasterxml.jackson.databind.SerializationFeature[] {};
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = objectMapper11.enable(serializationFeature13, serializationFeatureArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNull(injectableValues12);
        org.junit.Assert.assertNotNull(serializationFeatureArray14);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test055");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper5.writer();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider11 = null;
        xmlMapper5.setFilters(filterProvider11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature14 = null;
        com.fasterxml.jackson.databind.SerializationFeature[] serializationFeatureArray15 = new com.fasterxml.jackson.databind.SerializationFeature[] {};
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper5.enable(serializationFeature14, serializationFeatureArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializationFeatureArray15);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test056");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        byte[] byteArray16 = new byte[] { (byte) -1, (byte) -1, (byte) 100, (byte) 0 };
        com.fasterxml.jackson.core.ObjectCodec objectCodec19 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory22 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec19, xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature23 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = xmlFactory22.disable(feature23);
        com.fasterxml.jackson.core.Version version25 = xmlFactory24.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass26 = xmlFactory24.getFormatReadFeatureType();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature27 = xmlMapper5.readValue(byteArray16, 10, (int) (short) 10, featureClass26);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -1, 100, 0]");
        org.junit.Assert.assertTrue("'" + feature23 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature23.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory24);
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(featureClass26);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test057");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.readerForUpdating((java.lang.Object) xmlFactory10);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass12 = xmlFactory10.getFormatWriteFeatureType();
        java.net.URL uRL13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser14 = xmlFactory10.createJsonParser(uRL13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
        org.junit.Assert.assertNotNull(featureClass12);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test058");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader7 = xmlMapper5.reader(deserializationFeature6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test059");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.annotation.JsonInclude.Value value3 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper4 = xmlMapper2.setPropertyInclusion(value3);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = objectMapper4.canSerialize(featureClass5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper4);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test060");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.core.ObjectCodec objectCodec10 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec10, xMLInputFactory11, xMLOutputFactory12);
        com.fasterxml.jackson.core.JsonFactory jsonFactory15 = xmlFactory13.setRootValueSeparator("");
        java.io.DataOutput dataOutput16 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator17 = jsonFactory15.createGenerator(dataOutput16);
        boolean boolean18 = jsonGenerator17.canWriteTypeId();
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator20 = jsonGenerator17.setCharacterEscapes(characterEscapes19);
        boolean boolean21 = jsonGenerator17.canWriteBinaryNatively();
        jsonGenerator17.writeOmittedField("hi!");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector24 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair26 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector24, annotationIntrospector25);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector27 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair29 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector27, annotationIntrospector28);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair26, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair29);
        pair30.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector33 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair35 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector33, annotationIntrospector34);
        com.fasterxml.jackson.databind.introspect.Annotated annotated36 = null;
        java.lang.Boolean boolean37 = pair35.isOutputAsCData(annotated36);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector38 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector39 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair40 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector38, annotationIntrospector39);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector41 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair43 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector41, annotationIntrospector42);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair44 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair40, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair43);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair45 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair35, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair43);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair46 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair30, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair35);
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper5.writeValue(jsonGenerator17, (java.lang.Object) pair30);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: No serializer found for class com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(jsonFactory15);
        org.junit.Assert.assertNotNull(jsonGenerator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(jsonGenerator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(pair45);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test061");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.Version version27 = xmlFactory26.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory26);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(characterEscapes29);
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory34);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes37 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter38 = xmlMapper36.writer(characterEscapes37);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory39 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper36.setNodeFactory(jsonNodeFactory39);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper36.setFilterProvider(filterProvider41);
        com.fasterxml.jackson.core.JsonParser jsonParser43 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature48 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = xmlFactory47.disable(feature48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass51 = xmlFactory49.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor52 = objectMapper42.readValues(jsonParser43, featureClass51);
        boolean boolean53 = xmlMapper28.canSerialize(featureClass51);
        com.fasterxml.jackson.databind.JavaType javaType54 = serializerProvider12.constructType((java.lang.reflect.Type) featureClass51);
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.core.JsonFactory jsonFactory61 = xmlFactory59.setRootValueSeparator("");
        java.io.DataOutput dataOutput62 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator63 = jsonFactory61.createGenerator(dataOutput62);
        boolean boolean64 = jsonGenerator63.canWriteTypeId();
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes65 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator66 = jsonGenerator63.setCharacterEscapes(characterEscapes65);
        boolean boolean67 = jsonGenerator63.canWriteBinaryNatively();
        jsonGenerator63.writeOmittedField("hi!");
        // The following exception was thrown during execution in test generation
        try {
            serializerProvider12.defaultSerializeDateValue(0L, jsonGenerator63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No element/attribute name specified when trying to output element");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(objectWriter38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertTrue("'" + feature48 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature48.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory49);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(featureClass51);
        org.junit.Assert.assertNotNull(featureItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(javaType54);
        org.junit.Assert.assertNotNull(jsonFactory61);
        org.junit.Assert.assertNotNull(jsonGenerator63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(jsonGenerator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test062");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.databind.JavaType javaType13 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = serializerProvider12.findKeySerializer(javaType13, beanProperty14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test063");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.Version version27 = xmlFactory26.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory26);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(characterEscapes29);
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory34);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes37 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter38 = xmlMapper36.writer(characterEscapes37);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory39 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper36.setNodeFactory(jsonNodeFactory39);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper36.setFilterProvider(filterProvider41);
        com.fasterxml.jackson.core.JsonParser jsonParser43 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature48 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = xmlFactory47.disable(feature48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass51 = xmlFactory49.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor52 = objectMapper42.readValues(jsonParser43, featureClass51);
        boolean boolean53 = xmlMapper28.canSerialize(featureClass51);
        com.fasterxml.jackson.databind.BeanProperty beanProperty54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = serializerProvider12.findKeySerializer(featureClass51, beanProperty54);
        com.fasterxml.jackson.databind.JavaType javaType56 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty57 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = serializerProvider12.findPrimaryPropertySerializer(javaType56, beanProperty57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(objectWriter38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertTrue("'" + feature48 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature48.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory49);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(featureClass51);
        org.junit.Assert.assertNotNull(featureItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test064");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature11 = null;
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature12 = null;
        com.fasterxml.jackson.databind.DeserializationFeature[] deserializationFeatureArray13 = new com.fasterxml.jackson.databind.DeserializationFeature[] { deserializationFeature12 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper5.enable(deserializationFeature11, deserializationFeatureArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(deserializationFeatureArray13);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test065");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        com.fasterxml.jackson.annotation.JsonInclude.Include include11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper5.setSerializationInclusion(include11);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper5.enable(deserializationFeature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(objectMapper12);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test066");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.core.ObjectCodec objectCodec1 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory2 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory3 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory4 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec1, xMLInputFactory2, xMLOutputFactory3);
        com.fasterxml.jackson.core.Version version5 = xmlFactory4.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory4);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(characterEscapes7);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray9 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper6.disable(featureArray9);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper10.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig12 = objectMapper10.getSerializationConfig();
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod annotatedMethod13 = null;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod annotatedMethod14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.introspect.AnnotatedMethod annotatedMethod15 = jacksonXmlAnnotationIntrospector0.resolveSetterConflict((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig12, annotatedMethod13, annotatedMethod14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(featureArray9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(serializationConfig12);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test067");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.Version version27 = xmlFactory26.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory26);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(characterEscapes29);
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory34);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes37 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter38 = xmlMapper36.writer(characterEscapes37);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory39 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper36.setNodeFactory(jsonNodeFactory39);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper36.setFilterProvider(filterProvider41);
        com.fasterxml.jackson.core.JsonParser jsonParser43 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature48 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = xmlFactory47.disable(feature48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass51 = xmlFactory49.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor52 = objectMapper42.readValues(jsonParser43, featureClass51);
        boolean boolean53 = xmlMapper28.canSerialize(featureClass51);
        com.fasterxml.jackson.databind.BeanProperty beanProperty54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = serializerProvider12.findKeySerializer(featureClass51, beanProperty54);
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.core.Version version60 = xmlFactory59.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper61 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory59);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes62 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter63 = xmlMapper61.writer(characterEscapes62);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray64 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = xmlMapper61.disable(featureArray64);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper66 = objectMapper65.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig67 = objectMapper65.getSerializationConfig();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator68 = null;
        // The following exception was thrown during execution in test generation
        try {
            serializerProvider12.defaultSerializeValue((java.lang.Object) objectMapper65, jsonGenerator68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(objectWriter38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertTrue("'" + feature48 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature48.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory49);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(featureClass51);
        org.junit.Assert.assertNotNull(featureItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(objectWriter63);
        org.junit.Assert.assertNotNull(featureArray64);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertNotNull(objectMapper66);
        org.junit.Assert.assertNotNull(serializationConfig67);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test068");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.enableDefaultTypingAsProperty(defaultTyping10, "XML");
        java.io.DataInput dataInput13 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory22 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.setNodeFactory(jsonNodeFactory22);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper19.setFilterProvider(filterProvider24);
        com.fasterxml.jackson.core.JsonParser jsonParser26 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec27 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory28 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec27, xMLInputFactory28, xMLOutputFactory29);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature31 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = xmlFactory30.disable(feature31);
        com.fasterxml.jackson.core.Version version33 = xmlFactory32.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass34 = xmlFactory32.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor35 = objectMapper25.readValues(jsonParser26, featureClass34);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature36 = objectMapper9.readValue(dataInput13, featureClass34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: InputData source not (yet?) support for this format (XML)");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertTrue("'" + feature31 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature31.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory32);
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(featureClass34);
        org.junit.Assert.assertNotNull(featureItor35);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test069");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        com.fasterxml.jackson.databind.introspect.Annotated annotated22 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature27 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = xmlFactory26.disable(feature27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter31 = serializerProvider12.converterInstance(annotated22, (java.lang.Object) xmlFactory28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Converter definition of type com.fasterxml.jackson.dataformat.xml.XmlFactory; expected type Converter or Class<Converter> instead");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertTrue("'" + feature27 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature27.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory28);
        org.junit.Assert.assertNotNull(version29);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test070");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper5.writer(filterProvider8);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass10 = null;
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride11 = xmlMapper5.configOverride(featureClass10);
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.disable(feature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(mutableConfigOverride11);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test071");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = objectMapper10.writerWithType(javaType11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper10.clearProblemHandlers();
        com.fasterxml.jackson.core.TreeNode treeNode14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser15 = objectMapper13.treeAsTokens(treeNode14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper13);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test072");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = xmlMapper18.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec24 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec24, xMLInputFactory25, xMLOutputFactory26);
        com.fasterxml.jackson.core.Version version28 = xmlFactory27.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper29 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory27);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes30 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter31 = xmlMapper29.writer(characterEscapes30);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray32 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = xmlMapper29.disable(featureArray32);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = objectMapper33.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig35 = objectMapper33.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = objectMapper33.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec37 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory38 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory39 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec37, xMLInputFactory38, xMLOutputFactory39);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature41 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = xmlFactory40.disable(feature41);
        com.fasterxml.jackson.core.Version version43 = xmlFactory42.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass44 = xmlFactory42.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = serializerProvider36.getUnknownTypeSerializer(featureClass44);
        java.util.TimeZone timeZone46 = serializerProvider36.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.core.Version version51 = xmlFactory50.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper52 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory50);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes53 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter54 = xmlMapper52.writer(characterEscapes53);
        com.fasterxml.jackson.core.ObjectCodec objectCodec55 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory56 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory57 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory58 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec55, xMLInputFactory56, xMLOutputFactory57);
        com.fasterxml.jackson.core.Version version59 = xmlFactory58.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper60 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory58);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes61 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter62 = xmlMapper60.writer(characterEscapes61);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory63 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper64 = xmlMapper60.setNodeFactory(jsonNodeFactory63);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider65 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper66 = xmlMapper60.setFilterProvider(filterProvider65);
        com.fasterxml.jackson.core.JsonParser jsonParser67 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec68 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory69 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory70 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory71 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec68, xMLInputFactory69, xMLOutputFactory70);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature72 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory73 = xmlFactory71.disable(feature72);
        com.fasterxml.jackson.core.Version version74 = xmlFactory73.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass75 = xmlFactory73.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor76 = objectMapper66.readValues(jsonParser67, featureClass75);
        boolean boolean77 = xmlMapper52.canSerialize(featureClass75);
        com.fasterxml.jackson.databind.JavaType javaType78 = serializerProvider36.constructType((java.lang.reflect.Type) featureClass75);
        com.fasterxml.jackson.databind.ObjectReader objectReader79 = xmlMapper23.readerFor(javaType78);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper80 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper5.acceptJsonFormatVisitor(javaType78, jsonFormatVisitorWrapper80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(xmlMapper23);
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(objectWriter31);
        org.junit.Assert.assertNotNull(featureArray32);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(serializationConfig35);
        org.junit.Assert.assertNotNull(serializerProvider36);
        org.junit.Assert.assertTrue("'" + feature41 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature41.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory42);
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(featureClass44);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
        org.junit.Assert.assertNotNull(timeZone46);
        org.junit.Assert.assertEquals(timeZone46.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version51);
        org.junit.Assert.assertNotNull(objectWriter54);
        org.junit.Assert.assertNotNull(version59);
        org.junit.Assert.assertNotNull(objectWriter62);
        org.junit.Assert.assertNotNull(objectMapper64);
        org.junit.Assert.assertNotNull(objectMapper66);
        org.junit.Assert.assertTrue("'" + feature72 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature72.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory73);
        org.junit.Assert.assertNotNull(version74);
        org.junit.Assert.assertNotNull(featureClass75);
        org.junit.Assert.assertNotNull(featureItor76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(javaType78);
        org.junit.Assert.assertNotNull(objectReader79);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test073");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        java.io.Writer writer6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = xmlFactory3.createJsonGenerator(writer6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null Writer is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test074");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.Version version27 = xmlFactory26.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory26);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(characterEscapes29);
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory34);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes37 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter38 = xmlMapper36.writer(characterEscapes37);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory39 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper36.setNodeFactory(jsonNodeFactory39);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper36.setFilterProvider(filterProvider41);
        com.fasterxml.jackson.core.JsonParser jsonParser43 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature48 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = xmlFactory47.disable(feature48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass51 = xmlFactory49.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor52 = objectMapper42.readValues(jsonParser43, featureClass51);
        boolean boolean53 = xmlMapper28.canSerialize(featureClass51);
        com.fasterxml.jackson.databind.BeanProperty beanProperty54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = serializerProvider12.findKeySerializer(featureClass51, beanProperty54);
        com.fasterxml.jackson.databind.introspect.Annotated annotated56 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter58 = serializerProvider12.converterInstance(annotated56, (java.lang.Object) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Converter definition of type java.lang.Short; expected type Converter or Class<Converter> instead");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(objectWriter38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertTrue("'" + feature48 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature48.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory49);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(featureClass51);
        org.junit.Assert.assertNotNull(featureItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test075");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray22 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.disable(featureArray22);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = objectMapper23.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig25 = objectMapper23.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper5.setMixInResolver((com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver) serializationConfig25);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature27 = null;
        com.fasterxml.jackson.databind.DeserializationFeature[] deserializationFeatureArray28 = new com.fasterxml.jackson.databind.DeserializationFeature[] {};
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader29 = objectMapper26.reader(deserializationFeature27, deserializationFeatureArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(featureArray22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(serializationConfig25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(deserializationFeatureArray28);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test076");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.JsonFactory jsonFactory28 = xmlFactory26.setRootValueSeparator("");
        java.io.DataOutput dataOutput29 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator30 = jsonFactory28.createGenerator(dataOutput29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = serializerProvider12.setAttribute((java.lang.Object) jsonFactory28, (java.lang.Object) ' ');
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory34 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec33, xMLInputFactory34, xMLOutputFactory35);
        com.fasterxml.jackson.core.Version version37 = xmlFactory36.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper38 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory36);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes39 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter40 = xmlMapper38.writer(characterEscapes39);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray41 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper38.disable(featureArray41);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = objectMapper42.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig44 = objectMapper42.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = objectMapper42.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature50 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = xmlFactory49.disable(feature50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass53 = xmlFactory51.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = serializerProvider45.getUnknownTypeSerializer(featureClass53);
        java.util.TimeZone timeZone55 = serializerProvider45.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.core.Version version60 = xmlFactory59.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper61 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory59);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes62 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter63 = xmlMapper61.writer(characterEscapes62);
        com.fasterxml.jackson.core.ObjectCodec objectCodec64 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory65 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory66 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory67 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec64, xMLInputFactory65, xMLOutputFactory66);
        com.fasterxml.jackson.core.Version version68 = xmlFactory67.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper69 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory67);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes70 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter71 = xmlMapper69.writer(characterEscapes70);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory72 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper73 = xmlMapper69.setNodeFactory(jsonNodeFactory72);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider74 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper75 = xmlMapper69.setFilterProvider(filterProvider74);
        com.fasterxml.jackson.core.JsonParser jsonParser76 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec77 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory78 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory79 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory80 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec77, xMLInputFactory78, xMLOutputFactory79);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature81 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory82 = xmlFactory80.disable(feature81);
        com.fasterxml.jackson.core.Version version83 = xmlFactory82.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass84 = xmlFactory82.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor85 = objectMapper75.readValues(jsonParser76, featureClass84);
        boolean boolean86 = xmlMapper61.canSerialize(featureClass84);
        com.fasterxml.jackson.databind.JavaType javaType87 = serializerProvider45.constructType((java.lang.reflect.Type) featureClass84);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass88 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType89 = serializerProvider12.constructSpecializedType(javaType87, featureClass88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(jsonFactory28);
        org.junit.Assert.assertNotNull(jsonGenerator30);
        org.junit.Assert.assertNotNull(serializerProvider32);
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(objectWriter40);
        org.junit.Assert.assertNotNull(featureArray41);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(serializationConfig44);
        org.junit.Assert.assertNotNull(serializerProvider45);
        org.junit.Assert.assertTrue("'" + feature50 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature50.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory51);
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(featureClass53);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertNotNull(timeZone55);
        org.junit.Assert.assertEquals(timeZone55.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(objectWriter63);
        org.junit.Assert.assertNotNull(version68);
        org.junit.Assert.assertNotNull(objectWriter71);
        org.junit.Assert.assertNotNull(objectMapper73);
        org.junit.Assert.assertNotNull(objectMapper75);
        org.junit.Assert.assertTrue("'" + feature81 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature81.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory82);
        org.junit.Assert.assertNotNull(version83);
        org.junit.Assert.assertNotNull(featureClass84);
        org.junit.Assert.assertNotNull(featureItor85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(javaType87);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test077");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.readerForUpdating((java.lang.Object) xmlFactory10);
        java.io.File file12 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator14 = xmlFactory10.createGenerator(file12, jsonEncoding13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test078");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor21 = objectMapper11.readValues(jsonParser12, featureClass20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.databind.introspect.Annotated annotated25 = null;
        java.lang.Boolean boolean26 = pair24.isOutputAsCData(annotated25);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector27 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair29 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector27, annotationIntrospector28);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector30 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair32 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector30, annotationIntrospector31);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair29, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair24, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper11.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.introspect.Annotated annotated36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = pair33.findKeyDeserializer(annotated36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(featureItor21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(pair34);
        org.junit.Assert.assertNotNull(objectMapper35);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test079");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.core.JsonGenerator.Feature feature10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.configure(feature10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test080");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        java.lang.reflect.Type type11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType12 = objectMapper9.constructType(type11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unrecognized Type: [null]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test081");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.databind.InjectableValues injectableValues12 = objectMapper11.getInjectableValues();
        java.io.File file13 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper11.writeValue(file13, (java.lang.Object) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNull(injectableValues12);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test082");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper5.writer();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider11 = null;
        xmlMapper5.setFilters(filterProvider11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.disableDefaultTyping();
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature14 = null;
        com.fasterxml.jackson.databind.DeserializationFeature[] deserializationFeatureArray15 = new com.fasterxml.jackson.databind.DeserializationFeature[] {};
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader16 = xmlMapper5.reader(deserializationFeature14, deserializationFeatureArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(deserializationFeatureArray15);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test083");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        java.io.Reader reader13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser14 = xmlFactory12.createParser(reader13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test084");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper5);
        char[] charArray15 = new char[] { ' ', '4', 'a' };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser16 = xmlFactory11.createParser(charArray15);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxUnexpectedCharException: Unexpected character '4' (code 52) in prolog; expected '<'? at [row,col {unknown-source}]: [1,2]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " 4a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " 4a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , 4, a]");
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test085");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        java.io.File file10 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec11 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory14 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec11, xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.core.Version version15 = xmlFactory14.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory14);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes17 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = xmlMapper16.writer(characterEscapes17);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray19 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper16.disable(featureArray19);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = objectMapper20.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig22 = objectMapper20.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = objectMapper20.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec24 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec24, xMLInputFactory25, xMLOutputFactory26);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature28 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = xmlFactory27.disable(feature28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass31 = xmlFactory29.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = serializerProvider23.getUnknownTypeSerializer(featureClass31);
        java.util.TimeZone timeZone33 = serializerProvider23.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.core.Version version38 = xmlFactory37.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory37);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes40 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = xmlMapper39.writer(characterEscapes40);
        com.fasterxml.jackson.core.ObjectCodec objectCodec42 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory45 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec42, xMLInputFactory43, xMLOutputFactory44);
        com.fasterxml.jackson.core.Version version46 = xmlFactory45.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper47 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory45);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes48 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter49 = xmlMapper47.writer(characterEscapes48);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory50 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper51 = xmlMapper47.setNodeFactory(jsonNodeFactory50);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider52 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper53 = xmlMapper47.setFilterProvider(filterProvider52);
        com.fasterxml.jackson.core.JsonParser jsonParser54 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec55 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory56 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory57 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory58 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec55, xMLInputFactory56, xMLOutputFactory57);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature59 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory60 = xmlFactory58.disable(feature59);
        com.fasterxml.jackson.core.Version version61 = xmlFactory60.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass62 = xmlFactory60.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor63 = objectMapper53.readValues(jsonParser54, featureClass62);
        boolean boolean64 = xmlMapper39.canSerialize(featureClass62);
        com.fasterxml.jackson.databind.JavaType javaType65 = serializerProvider23.constructType((java.lang.reflect.Type) featureClass62);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray66 = xmlMapper5.readValue(file10, javaType65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(objectWriter18);
        org.junit.Assert.assertNotNull(featureArray19);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(serializationConfig22);
        org.junit.Assert.assertNotNull(serializerProvider23);
        org.junit.Assert.assertTrue("'" + feature28 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature28.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory29);
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(featureClass31);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(timeZone33);
        org.junit.Assert.assertEquals(timeZone33.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(objectWriter41);
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(objectWriter49);
        org.junit.Assert.assertNotNull(objectMapper51);
        org.junit.Assert.assertNotNull(objectMapper53);
        org.junit.Assert.assertTrue("'" + feature59 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature59.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory60);
        org.junit.Assert.assertNotNull(version61);
        org.junit.Assert.assertNotNull(featureClass62);
        org.junit.Assert.assertNotNull(featureItor63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(javaType65);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test086");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTypingAsProperty(defaultTyping11, "");
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider14 = null;
        objectMapper13.setFilters(filterProvider14);
        com.fasterxml.jackson.core.JsonParser jsonParser16 = null;
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass17 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature18 = objectMapper13.readValue(jsonParser16, featureClass17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unrecognized Type: [null]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(objectMapper13);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test087");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor21 = objectMapper11.readValues(jsonParser12, featureClass20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.databind.introspect.Annotated annotated25 = null;
        java.lang.Boolean boolean26 = pair24.isOutputAsCData(annotated25);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector27 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair29 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector27, annotationIntrospector28);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector30 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair32 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector30, annotationIntrospector31);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair29, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair24, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper11.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature36 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper11.configure(serializationFeature36, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(featureItor21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(pair34);
        org.junit.Assert.assertNotNull(objectMapper35);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test088");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.Module[] moduleArray10 = new com.fasterxml.jackson.databind.Module[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper9.registerModules(moduleArray10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = objectMapper22.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig24 = objectMapper22.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = objectMapper22.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature30 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = xmlFactory29.disable(feature30);
        com.fasterxml.jackson.core.Version version32 = xmlFactory31.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass33 = xmlFactory31.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = serializerProvider25.getUnknownTypeSerializer(featureClass33);
        java.util.TimeZone timeZone35 = serializerProvider25.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec36 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory37 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory38 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec36, xMLInputFactory37, xMLOutputFactory38);
        com.fasterxml.jackson.core.Version version40 = xmlFactory39.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper41 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory39);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes42 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter43 = xmlMapper41.writer(characterEscapes42);
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.core.Version version48 = xmlFactory47.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper49 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory47);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes50 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter51 = xmlMapper49.writer(characterEscapes50);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory52 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper53 = xmlMapper49.setNodeFactory(jsonNodeFactory52);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider54 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = xmlMapper49.setFilterProvider(filterProvider54);
        com.fasterxml.jackson.core.JsonParser jsonParser56 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec57 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory58 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory59 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory60 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec57, xMLInputFactory58, xMLOutputFactory59);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature61 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory62 = xmlFactory60.disable(feature61);
        com.fasterxml.jackson.core.Version version63 = xmlFactory62.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass64 = xmlFactory62.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor65 = objectMapper55.readValues(jsonParser56, featureClass64);
        boolean boolean66 = xmlMapper41.canSerialize(featureClass64);
        com.fasterxml.jackson.databind.JavaType javaType67 = serializerProvider25.constructType((java.lang.reflect.Type) featureClass64);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.BeanSerializerModifier beanSerializerModifier68 = objectMapper9.readValue(jsonParser12, javaType67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(moduleArray10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(serializationConfig24);
        org.junit.Assert.assertNotNull(serializerProvider25);
        org.junit.Assert.assertTrue("'" + feature30 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature30.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory31);
        org.junit.Assert.assertNotNull(version32);
        org.junit.Assert.assertNotNull(featureClass33);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(timeZone35);
        org.junit.Assert.assertEquals(timeZone35.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version40);
        org.junit.Assert.assertNotNull(objectWriter43);
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(objectWriter51);
        org.junit.Assert.assertNotNull(objectMapper53);
        org.junit.Assert.assertNotNull(objectMapper55);
        org.junit.Assert.assertTrue("'" + feature61 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature61.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory62);
        org.junit.Assert.assertNotNull(version63);
        org.junit.Assert.assertNotNull(featureClass64);
        org.junit.Assert.assertNotNull(featureItor65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(javaType67);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test089");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        int int10 = xmlMapper5.mixInCount();
        java.net.URL uRL11 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.Version version16 = xmlFactory15.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory15);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(characterEscapes18);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray20 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper17.disable(featureArray20);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = xmlMapper17.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.Version version27 = xmlFactory26.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory26);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(characterEscapes29);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray31 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper28.disable(featureArray31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = objectMapper32.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig34 = objectMapper32.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = objectMapper32.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec36 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory37 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory38 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec36, xMLInputFactory37, xMLOutputFactory38);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature40 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = xmlFactory39.disable(feature40);
        com.fasterxml.jackson.core.Version version42 = xmlFactory41.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass43 = xmlFactory41.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = serializerProvider35.getUnknownTypeSerializer(featureClass43);
        java.util.TimeZone timeZone45 = serializerProvider35.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper51 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory49);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes52 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter53 = xmlMapper51.writer(characterEscapes52);
        com.fasterxml.jackson.core.ObjectCodec objectCodec54 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory55 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory56 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory57 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec54, xMLInputFactory55, xMLOutputFactory56);
        com.fasterxml.jackson.core.Version version58 = xmlFactory57.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper59 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory57);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes60 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter61 = xmlMapper59.writer(characterEscapes60);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory62 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper63 = xmlMapper59.setNodeFactory(jsonNodeFactory62);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider64 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = xmlMapper59.setFilterProvider(filterProvider64);
        com.fasterxml.jackson.core.JsonParser jsonParser66 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec67 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory68 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory69 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory70 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec67, xMLInputFactory68, xMLOutputFactory69);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature71 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = xmlFactory70.disable(feature71);
        com.fasterxml.jackson.core.Version version73 = xmlFactory72.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass74 = xmlFactory72.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor75 = objectMapper65.readValues(jsonParser66, featureClass74);
        boolean boolean76 = xmlMapper51.canSerialize(featureClass74);
        com.fasterxml.jackson.databind.JavaType javaType77 = serializerProvider35.constructType((java.lang.reflect.Type) featureClass74);
        com.fasterxml.jackson.databind.ObjectReader objectReader78 = xmlMapper22.readerFor(javaType77);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Enum<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureEnum79 = xmlMapper5.readValue(uRL11, javaType77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(featureArray20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(xmlMapper22);
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(featureArray31);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(serializationConfig34);
        org.junit.Assert.assertNotNull(serializerProvider35);
        org.junit.Assert.assertTrue("'" + feature40 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature40.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory41);
        org.junit.Assert.assertNotNull(version42);
        org.junit.Assert.assertNotNull(featureClass43);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(timeZone45);
        org.junit.Assert.assertEquals(timeZone45.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(objectWriter53);
        org.junit.Assert.assertNotNull(version58);
        org.junit.Assert.assertNotNull(objectWriter61);
        org.junit.Assert.assertNotNull(objectMapper63);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertTrue("'" + feature71 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature71.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory72);
        org.junit.Assert.assertNotNull(version73);
        org.junit.Assert.assertNotNull(featureClass74);
        org.junit.Assert.assertNotNull(featureItor75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(javaType77);
        org.junit.Assert.assertNotNull(objectReader78);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test090");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.JavaType javaType10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = objectMapper9.writerFor(javaType10);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper9.disable(deserializationFeature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectWriter11);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test091");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext13 = xmlMapper8.getDeserializationContext();
        com.fasterxml.jackson.core.Version version14 = xmlMapper8.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = xmlMapper8.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper8.enableDefaultTyping();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider17 = null;
        xmlMapper8.setFilters(filterProvider17);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig19 = xmlMapper8.getSerializationConfig();
        com.fasterxml.jackson.databind.introspect.AnnotatedClass annotatedClass20 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec21 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory22 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec21, xMLInputFactory22, xMLOutputFactory23);
        com.fasterxml.jackson.core.Version version25 = xmlFactory24.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper26 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory24);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes27 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter28 = xmlMapper26.writer(characterEscapes27);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper26.writer(filterProvider29);
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory34);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes37 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter38 = xmlMapper36.writer(characterEscapes37);
        com.fasterxml.jackson.core.ObjectCodec objectCodec39 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory40 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory41 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec39, xMLInputFactory40, xMLOutputFactory41);
        com.fasterxml.jackson.core.Version version43 = xmlFactory42.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper44 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory42);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes45 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter46 = xmlMapper44.writer(characterEscapes45);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory47 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper48 = xmlMapper44.setNodeFactory(jsonNodeFactory47);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider49 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper50 = xmlMapper44.setFilterProvider(filterProvider49);
        com.fasterxml.jackson.core.JsonParser jsonParser51 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec52 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory53 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory54 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory55 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec52, xMLInputFactory53, xMLOutputFactory54);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature56 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory57 = xmlFactory55.disable(feature56);
        com.fasterxml.jackson.core.Version version58 = xmlFactory57.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass59 = xmlFactory57.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor60 = objectMapper50.readValues(jsonParser51, featureClass59);
        boolean boolean61 = xmlMapper36.canSerialize(featureClass59);
        boolean boolean62 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass59);
        com.fasterxml.jackson.databind.JavaType javaType63 = xmlMapper26.constructType((java.lang.reflect.Type) featureClass59);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?> wildcardTypeResolverBuilder64 = jacksonAnnotationIntrospector2.findTypeResolver((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig19, annotatedClass20, javaType63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(deserializationContext13);
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(serializationConfig19);
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(objectWriter28);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(objectWriter38);
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(objectWriter46);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertNotNull(objectMapper50);
        org.junit.Assert.assertTrue("'" + feature56 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature56.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory57);
        org.junit.Assert.assertNotNull(version58);
        org.junit.Assert.assertNotNull(featureClass59);
        org.junit.Assert.assertNotNull(featureItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(javaType63);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test092");
        com.fasterxml.jackson.core.io.IOContext iOContext0 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        javax.xml.stream.XMLStreamReader xMLStreamReader11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser fromXmlParser12 = new com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser(iOContext0, (int) (byte) 0, 1, (com.fasterxml.jackson.core.ObjectCodec) xmlMapper8, xMLStreamReader11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test093");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        java.lang.Boolean boolean4 = pair2.isOutputAsCData(annotated3);
        com.fasterxml.jackson.databind.introspect.Annotated annotated5 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.core.Version version10 = xmlFactory9.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory9);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper11.writer(characterEscapes12);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray14 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper11.disable(featureArray14);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = xmlMapper11.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray25 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.disable(featureArray25);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = objectMapper26.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig28 = objectMapper26.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = objectMapper26.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec30 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec30, xMLInputFactory31, xMLOutputFactory32);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature34 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = xmlFactory33.disable(feature34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass37 = xmlFactory35.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = serializerProvider29.getUnknownTypeSerializer(featureClass37);
        java.util.TimeZone timeZone39 = serializerProvider29.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec40 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory41 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec40, xMLInputFactory41, xMLOutputFactory42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper45 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory43);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes46 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter47 = xmlMapper45.writer(characterEscapes46);
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper53 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory51);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes54 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter55 = xmlMapper53.writer(characterEscapes54);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory56 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper57 = xmlMapper53.setNodeFactory(jsonNodeFactory56);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider58 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper59 = xmlMapper53.setFilterProvider(filterProvider58);
        com.fasterxml.jackson.core.JsonParser jsonParser60 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec61 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory62 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory63 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory64 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec61, xMLInputFactory62, xMLOutputFactory63);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature65 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory66 = xmlFactory64.disable(feature65);
        com.fasterxml.jackson.core.Version version67 = xmlFactory66.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass68 = xmlFactory66.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor69 = objectMapper59.readValues(jsonParser60, featureClass68);
        boolean boolean70 = xmlMapper45.canSerialize(featureClass68);
        com.fasterxml.jackson.databind.JavaType javaType71 = serializerProvider29.constructType((java.lang.reflect.Type) featureClass68);
        com.fasterxml.jackson.databind.ObjectReader objectReader72 = xmlMapper16.readerFor(javaType71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass73 = pair2.findSerializationKeyType(annotated5, javaType71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(version10);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(featureArray14);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(xmlMapper16);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(featureArray25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(serializationConfig28);
        org.junit.Assert.assertNotNull(serializerProvider29);
        org.junit.Assert.assertTrue("'" + feature34 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature34.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory35);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(featureClass37);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(timeZone39);
        org.junit.Assert.assertEquals(timeZone39.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(objectWriter47);
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(objectWriter55);
        org.junit.Assert.assertNotNull(objectMapper57);
        org.junit.Assert.assertNotNull(objectMapper59);
        org.junit.Assert.assertTrue("'" + feature65 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature65.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory66);
        org.junit.Assert.assertNotNull(version67);
        org.junit.Assert.assertNotNull(featureClass68);
        org.junit.Assert.assertNotNull(featureItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(javaType71);
        org.junit.Assert.assertNotNull(objectReader72);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test094");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = xmlFactory5.isEnabled(feature10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test095");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.databind.BeanDescription beanDescription23 = null;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition beanPropertyDefinition24 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray26 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray27 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        int int28 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray26, beanPropertyWriterArray27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence29 = serializerProvider12.reportBadPropertyDefinition(beanDescription23, beanPropertyDefinition24, "XML", (java.lang.Object[]) beanPropertyWriterArray27);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid definition for property N/A (of type N/A): XML");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(beanPropertyWriterArray26);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test096");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector3 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair5 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector3, annotationIntrospector4);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair6 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair2, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair5);
        pair6.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.introspect.Annotated annotated9 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec10 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec10, xMLInputFactory11, xMLOutputFactory12);
        com.fasterxml.jackson.core.Version version14 = xmlFactory13.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory13);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(characterEscapes16);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray18 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.disable(featureArray18);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = objectMapper19.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig21 = objectMapper19.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = objectMapper19.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature27 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = xmlFactory26.disable(feature27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass30 = xmlFactory28.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = serializerProvider22.getUnknownTypeSerializer(featureClass30);
        com.fasterxml.jackson.core.ObjectCodec objectCodec32 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec32, xMLInputFactory33, xMLOutputFactory34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper37 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory35);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes38 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter39 = xmlMapper37.writer(characterEscapes38);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory40 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = xmlMapper37.setNodeFactory(jsonNodeFactory40);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader43 = xmlMapper37.readerForUpdating((java.lang.Object) xmlFactory42);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass44 = xmlFactory42.getFormatWriteFeatureType();
        com.fasterxml.jackson.databind.JavaType javaType45 = serializerProvider22.constructType((java.lang.reflect.Type) featureClass44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass46 = pair6.findDeserializationType(annotated9, javaType45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(featureArray18);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(serializationConfig21);
        org.junit.Assert.assertNotNull(serializerProvider22);
        org.junit.Assert.assertTrue("'" + feature27 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature27.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory28);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(featureClass30);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(objectWriter39);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(objectReader43);
        org.junit.Assert.assertNotNull(featureClass44);
        org.junit.Assert.assertNotNull(javaType45);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test097");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping11 = null;
        com.fasterxml.jackson.annotation.JsonTypeInfo.As as12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper10.enableDefaultTyping(defaultTyping11, as12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: includeAs can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test098");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec18 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec18, xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.core.JsonFactory jsonFactory23 = xmlFactory21.setRootValueSeparator("");
        java.io.DataOutput dataOutput24 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator25 = jsonFactory23.createGenerator(dataOutput24);
        boolean boolean26 = jsonGenerator25.canWriteTypeId();
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes27 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator28 = jsonGenerator25.setCharacterEscapes(characterEscapes27);
        boolean boolean29 = jsonGenerator25.canWriteBinaryNatively();
        com.fasterxml.jackson.core.FormatSchema formatSchema30 = jsonGenerator25.getSchema();
        // The following exception was thrown during execution in test generation
        try {
            serializerProvider12.defaultSerializeValue((java.lang.Object) xmlFactory16, jsonGenerator25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No element/attribute name specified when trying to output element");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(jsonFactory23);
        org.junit.Assert.assertNotNull(jsonGenerator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(jsonGenerator28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(formatSchema30);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test099");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        boolean boolean13 = feature10.enabledByDefault();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test100");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setDefaultPrettyPrinter(prettyPrinter8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.enableDefaultTyping();
        java.io.InputStream inputStream11 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.Version version16 = xmlFactory15.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory15);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(characterEscapes18);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray20 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper17.disable(featureArray20);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = objectMapper21.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig23 = objectMapper21.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = objectMapper21.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature29 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = xmlFactory28.disable(feature29);
        com.fasterxml.jackson.core.Version version31 = xmlFactory30.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass32 = xmlFactory30.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = serializerProvider24.getUnknownTypeSerializer(featureClass32);
        java.util.TimeZone timeZone34 = serializerProvider24.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory38);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper40.writer(characterEscapes41);
        com.fasterxml.jackson.core.ObjectCodec objectCodec43 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory44 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory45 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec43, xMLInputFactory44, xMLOutputFactory45);
        com.fasterxml.jackson.core.Version version47 = xmlFactory46.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper48 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory46);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes49 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter50 = xmlMapper48.writer(characterEscapes49);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory51 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper52 = xmlMapper48.setNodeFactory(jsonNodeFactory51);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider53 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper54 = xmlMapper48.setFilterProvider(filterProvider53);
        com.fasterxml.jackson.core.JsonParser jsonParser55 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature60 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory61 = xmlFactory59.disable(feature60);
        com.fasterxml.jackson.core.Version version62 = xmlFactory61.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass63 = xmlFactory61.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor64 = objectMapper54.readValues(jsonParser55, featureClass63);
        boolean boolean65 = xmlMapper40.canSerialize(featureClass63);
        com.fasterxml.jackson.databind.BeanProperty beanProperty66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = serializerProvider24.findKeySerializer(featureClass63, beanProperty66);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature68 = objectMapper9.readValue(inputStream11, featureClass63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(featureArray20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(serializationConfig23);
        org.junit.Assert.assertNotNull(serializerProvider24);
        org.junit.Assert.assertTrue("'" + feature29 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature29.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory30);
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(featureClass32);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(timeZone34);
        org.junit.Assert.assertEquals(timeZone34.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(objectWriter50);
        org.junit.Assert.assertNotNull(objectMapper52);
        org.junit.Assert.assertNotNull(objectMapper54);
        org.junit.Assert.assertTrue("'" + feature60 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature60.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory61);
        org.junit.Assert.assertNotNull(version62);
        org.junit.Assert.assertNotNull(featureClass63);
        org.junit.Assert.assertNotNull(featureItor64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test101");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTypingAsProperty(defaultTyping11, "");
        java.io.InputStream inputStream14 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray16 = objectMapper13.readValue(inputStream14, typeReference15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(objectMapper13);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test102");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper5.writer();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider11 = null;
        xmlMapper5.setFilters(filterProvider11);
        java.io.InputStream inputStream13 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode15 = xmlMapper5.readValue(inputStream13, typeReference14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectWriter10);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test103");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setDefaultPrettyPrinter(prettyPrinter8);
        byte[] byteArray10 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec11 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory14 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec11, xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.core.Version version15 = xmlFactory14.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory14);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes17 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = xmlMapper16.writer(characterEscapes17);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray19 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper16.disable(featureArray19);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = objectMapper20.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig22 = objectMapper20.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = objectMapper20.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec24 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec24, xMLInputFactory25, xMLOutputFactory26);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature28 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = xmlFactory27.disable(feature28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass31 = xmlFactory29.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = serializerProvider23.getUnknownTypeSerializer(featureClass31);
        java.util.TimeZone timeZone33 = serializerProvider23.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.core.Version version38 = xmlFactory37.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory37);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes40 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = xmlMapper39.writer(characterEscapes40);
        com.fasterxml.jackson.core.ObjectCodec objectCodec42 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory45 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec42, xMLInputFactory43, xMLOutputFactory44);
        com.fasterxml.jackson.core.Version version46 = xmlFactory45.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper47 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory45);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes48 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter49 = xmlMapper47.writer(characterEscapes48);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory50 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper51 = xmlMapper47.setNodeFactory(jsonNodeFactory50);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider52 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper53 = xmlMapper47.setFilterProvider(filterProvider52);
        com.fasterxml.jackson.core.JsonParser jsonParser54 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec55 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory56 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory57 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory58 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec55, xMLInputFactory56, xMLOutputFactory57);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature59 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory60 = xmlFactory58.disable(feature59);
        com.fasterxml.jackson.core.Version version61 = xmlFactory60.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass62 = xmlFactory60.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor63 = objectMapper53.readValues(jsonParser54, featureClass62);
        boolean boolean64 = xmlMapper39.canSerialize(featureClass62);
        com.fasterxml.jackson.databind.BeanProperty beanProperty65 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = serializerProvider23.findKeySerializer(featureClass62, beanProperty65);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature67 = xmlMapper5.readValue(byteArray10, featureClass62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(objectWriter18);
        org.junit.Assert.assertNotNull(featureArray19);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(serializationConfig22);
        org.junit.Assert.assertNotNull(serializerProvider23);
        org.junit.Assert.assertTrue("'" + feature28 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature28.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory29);
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(featureClass31);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(timeZone33);
        org.junit.Assert.assertEquals(timeZone33.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(objectWriter41);
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(objectWriter49);
        org.junit.Assert.assertNotNull(objectMapper51);
        org.junit.Assert.assertNotNull(objectMapper53);
        org.junit.Assert.assertTrue("'" + feature59 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature59.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory60);
        org.junit.Assert.assertNotNull(version61);
        org.junit.Assert.assertNotNull(featureClass62);
        org.junit.Assert.assertNotNull(featureItor63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test104");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext13 = xmlMapper8.getDeserializationContext();
        com.fasterxml.jackson.core.Version version14 = xmlMapper8.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = xmlMapper8.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper8.enableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray25 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.disable(featureArray25);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = objectMapper26.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig28 = objectMapper26.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = xmlMapper8.setMixInResolver((com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver) serializationConfig28);
        com.fasterxml.jackson.databind.introspect.AnnotatedMember annotatedMember30 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory34);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes37 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter38 = xmlMapper36.writer(characterEscapes37);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider39 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter40 = xmlMapper36.writer(filterProvider39);
        com.fasterxml.jackson.core.ObjectCodec objectCodec41 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory42 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory43 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory44 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec41, xMLInputFactory42, xMLOutputFactory43);
        com.fasterxml.jackson.core.Version version45 = xmlFactory44.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper46 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory44);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes47 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter48 = xmlMapper46.writer(characterEscapes47);
        com.fasterxml.jackson.core.ObjectCodec objectCodec49 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory50 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory51 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory52 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec49, xMLInputFactory50, xMLOutputFactory51);
        com.fasterxml.jackson.core.Version version53 = xmlFactory52.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper54 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory52);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes55 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter56 = xmlMapper54.writer(characterEscapes55);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory57 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper58 = xmlMapper54.setNodeFactory(jsonNodeFactory57);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider59 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper60 = xmlMapper54.setFilterProvider(filterProvider59);
        com.fasterxml.jackson.core.JsonParser jsonParser61 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec62 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory63 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory64 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory65 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec62, xMLInputFactory63, xMLOutputFactory64);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature66 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory67 = xmlFactory65.disable(feature66);
        com.fasterxml.jackson.core.Version version68 = xmlFactory67.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass69 = xmlFactory67.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor70 = objectMapper60.readValues(jsonParser61, featureClass69);
        boolean boolean71 = xmlMapper46.canSerialize(featureClass69);
        boolean boolean72 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass69);
        com.fasterxml.jackson.databind.JavaType javaType73 = xmlMapper36.constructType((java.lang.reflect.Type) featureClass69);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?> wildcardTypeResolverBuilder74 = jacksonXmlAnnotationIntrospector0.findPropertyContentTypeResolver((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig28, annotatedMember30, javaType73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Must call method with a container or reference type (got [simple type, class com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature])");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(deserializationContext13);
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(featureArray25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(serializationConfig28);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(objectWriter38);
        org.junit.Assert.assertNotNull(objectWriter40);
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(objectWriter48);
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(objectWriter56);
        org.junit.Assert.assertNotNull(objectMapper58);
        org.junit.Assert.assertNotNull(objectMapper60);
        org.junit.Assert.assertTrue("'" + feature66 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature66.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory67);
        org.junit.Assert.assertNotNull(version68);
        org.junit.Assert.assertNotNull(featureClass69);
        org.junit.Assert.assertNotNull(featureItor70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(javaType73);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test105");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.Module[] moduleArray10 = new com.fasterxml.jackson.databind.Module[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper9.registerModules(moduleArray10);
        java.text.DateFormat dateFormat12 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper9.setDateFormat(dateFormat12);
        com.fasterxml.jackson.databind.ObjectReader objectReader14 = objectMapper13.reader();
        com.fasterxml.jackson.core.ObjectCodec objectCodec15 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec15, xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory18);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper20.writer(characterEscapes21);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray23 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper20.disable(featureArray23);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = objectMapper24.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper24.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = objectMapper24.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec28 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec28, xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature32 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = xmlFactory31.disable(feature32);
        com.fasterxml.jackson.core.Version version34 = xmlFactory33.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass35 = xmlFactory33.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = serializerProvider27.getUnknownTypeSerializer(featureClass35);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper37 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper13.acceptJsonFormatVisitor(featureClass35, jsonFormatVisitorWrapper37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(moduleArray10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectReader14);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(featureArray23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(serializerProvider27);
        org.junit.Assert.assertTrue("'" + feature32 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature32.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory33);
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertNotNull(featureClass35);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test106");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTyping();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = objectMapper13.enableDefaultTypingAsProperty(defaultTyping14, " ");
        com.fasterxml.jackson.core.JsonGenerator.Feature feature17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = objectMapper13.isEnabled(feature17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper16);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test107");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        com.fasterxml.jackson.databind.BeanDescription beanDescription22 = null;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition beanPropertyDefinition23 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(characterEscapes31);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray33 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = xmlMapper30.disable(featureArray33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper34.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig36 = objectMapper34.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = objectMapper34.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature42 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = xmlFactory41.disable(feature42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass45 = xmlFactory43.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = serializerProvider37.getUnknownTypeSerializer(featureClass45);
        java.util.TimeZone timeZone47 = serializerProvider37.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper53 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory51);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes54 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter55 = xmlMapper53.writer(characterEscapes54);
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.core.Version version60 = xmlFactory59.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper61 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory59);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes62 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter63 = xmlMapper61.writer(characterEscapes62);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory64 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = xmlMapper61.setNodeFactory(jsonNodeFactory64);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider66 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper67 = xmlMapper61.setFilterProvider(filterProvider66);
        com.fasterxml.jackson.core.JsonParser jsonParser68 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec69 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory70 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory71 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec69, xMLInputFactory70, xMLOutputFactory71);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature73 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory74 = xmlFactory72.disable(feature73);
        com.fasterxml.jackson.core.Version version75 = xmlFactory74.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass76 = xmlFactory74.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor77 = objectMapper67.readValues(jsonParser68, featureClass76);
        boolean boolean78 = xmlMapper53.canSerialize(featureClass76);
        com.fasterxml.jackson.databind.BeanProperty beanProperty79 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = serializerProvider37.findKeySerializer(featureClass76, beanProperty79);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray82 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray83 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        int int84 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray82, beanPropertyWriterArray83);
        boolean boolean85 = objJsonSerializer80.isEmpty(serializerProvider81, (java.lang.Object) beanPropertyWriterArray82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<com.fasterxml.jackson.databind.Module> moduleCollection86 = serializerProvider12.reportBadPropertyDefinition(beanDescription22, beanPropertyDefinition23, "unknown", (java.lang.Object[]) beanPropertyWriterArray82);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid definition for property N/A (of type N/A): unknown");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(featureArray33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(serializationConfig36);
        org.junit.Assert.assertNotNull(serializerProvider37);
        org.junit.Assert.assertTrue("'" + feature42 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature42.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory43);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(featureClass45);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(timeZone47);
        org.junit.Assert.assertEquals(timeZone47.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(objectWriter55);
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(objectWriter63);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertNotNull(objectMapper67);
        org.junit.Assert.assertTrue("'" + feature73 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature73.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory74);
        org.junit.Assert.assertNotNull(version75);
        org.junit.Assert.assertNotNull(featureClass76);
        org.junit.Assert.assertNotNull(featureItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray82);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test108");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        int int10 = xmlMapper5.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues11 = xmlMapper5.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature12 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean14 = feature12.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper5.disable(feature12);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper5.writer(contextAttributes16);
        com.fasterxml.jackson.core.ObjectCodec objectCodec18 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec18, xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory21);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes24 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter25 = xmlMapper23.writer(characterEscapes24);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray26 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper23.disable(featureArray26);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = xmlMapper23.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec29 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec29, xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.core.Version version33 = xmlFactory32.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper34 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory32);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes35 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = xmlMapper34.writer(characterEscapes35);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray37 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper34.disable(featureArray37);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper39 = objectMapper38.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig40 = objectMapper38.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = objectMapper38.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec42 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory45 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec42, xMLInputFactory43, xMLOutputFactory44);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature46 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = xmlFactory45.disable(feature46);
        com.fasterxml.jackson.core.Version version48 = xmlFactory47.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass49 = xmlFactory47.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = serializerProvider41.getUnknownTypeSerializer(featureClass49);
        java.util.TimeZone timeZone51 = serializerProvider41.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec52 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory53 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory54 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory55 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec52, xMLInputFactory53, xMLOutputFactory54);
        com.fasterxml.jackson.core.Version version56 = xmlFactory55.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper57 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory55);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes58 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter59 = xmlMapper57.writer(characterEscapes58);
        com.fasterxml.jackson.core.ObjectCodec objectCodec60 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory61 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory62 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory63 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec60, xMLInputFactory61, xMLOutputFactory62);
        com.fasterxml.jackson.core.Version version64 = xmlFactory63.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper65 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory63);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes66 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter67 = xmlMapper65.writer(characterEscapes66);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory68 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper69 = xmlMapper65.setNodeFactory(jsonNodeFactory68);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider70 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper71 = xmlMapper65.setFilterProvider(filterProvider70);
        com.fasterxml.jackson.core.JsonParser jsonParser72 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec73 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory74 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory75 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory76 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec73, xMLInputFactory74, xMLOutputFactory75);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature77 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory78 = xmlFactory76.disable(feature77);
        com.fasterxml.jackson.core.Version version79 = xmlFactory78.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass80 = xmlFactory78.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor81 = objectMapper71.readValues(jsonParser72, featureClass80);
        boolean boolean82 = xmlMapper57.canSerialize(featureClass80);
        com.fasterxml.jackson.databind.JavaType javaType83 = serializerProvider41.constructType((java.lang.reflect.Type) featureClass80);
        com.fasterxml.jackson.databind.ObjectReader objectReader84 = xmlMapper28.readerFor(javaType83);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper85 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper5.acceptJsonFormatVisitor(javaType83, jsonFormatVisitorWrapper85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(injectableValues11);
        org.junit.Assert.assertTrue("'" + feature12 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature12.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(objectWriter25);
        org.junit.Assert.assertNotNull(featureArray26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(xmlMapper28);
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(featureArray37);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper39);
        org.junit.Assert.assertNotNull(serializationConfig40);
        org.junit.Assert.assertNotNull(serializerProvider41);
        org.junit.Assert.assertTrue("'" + feature46 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature46.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory47);
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(featureClass49);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(timeZone51);
        org.junit.Assert.assertEquals(timeZone51.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version56);
        org.junit.Assert.assertNotNull(objectWriter59);
        org.junit.Assert.assertNotNull(version64);
        org.junit.Assert.assertNotNull(objectWriter67);
        org.junit.Assert.assertNotNull(objectMapper69);
        org.junit.Assert.assertNotNull(objectMapper71);
        org.junit.Assert.assertTrue("'" + feature77 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature77.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory78);
        org.junit.Assert.assertNotNull(version79);
        org.junit.Assert.assertNotNull(featureClass80);
        org.junit.Assert.assertNotNull(featureItor81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(javaType83);
        org.junit.Assert.assertNotNull(objectReader84);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test109");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.JsonFactory jsonFactory28 = xmlFactory26.setRootValueSeparator("");
        java.io.DataOutput dataOutput29 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator30 = jsonFactory28.createGenerator(dataOutput29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = serializerProvider12.setAttribute((java.lang.Object) jsonFactory28, (java.lang.Object) ' ');
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass33 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty34 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = serializerProvider12.findValueSerializer(featureClass33, beanProperty34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(jsonFactory28);
        org.junit.Assert.assertNotNull(jsonGenerator30);
        org.junit.Assert.assertNotNull(serializerProvider32);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test110");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec22, xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.core.Version version26 = xmlFactory25.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory25);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes28 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter29 = xmlMapper27.writer(characterEscapes28);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray30 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper27.disable(featureArray30);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = objectMapper31.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig33 = objectMapper31.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = objectMapper31.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature39 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = xmlFactory38.disable(feature39);
        com.fasterxml.jackson.core.Version version41 = xmlFactory40.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass42 = xmlFactory40.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = serializerProvider34.getUnknownTypeSerializer(featureClass42);
        java.util.TimeZone timeZone44 = serializerProvider34.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec45 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory46 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec45, xMLInputFactory46, xMLOutputFactory47);
        com.fasterxml.jackson.core.Version version49 = xmlFactory48.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper50 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory48);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes51 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter52 = xmlMapper50.writer(characterEscapes51);
        com.fasterxml.jackson.core.ObjectCodec objectCodec53 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec53, xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.core.Version version57 = xmlFactory56.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper58 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory56);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes59 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter60 = xmlMapper58.writer(characterEscapes59);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory61 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper62 = xmlMapper58.setNodeFactory(jsonNodeFactory61);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider63 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper64 = xmlMapper58.setFilterProvider(filterProvider63);
        com.fasterxml.jackson.core.JsonParser jsonParser65 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec66 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory67 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory68 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory69 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec66, xMLInputFactory67, xMLOutputFactory68);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature70 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory71 = xmlFactory69.disable(feature70);
        com.fasterxml.jackson.core.Version version72 = xmlFactory71.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass73 = xmlFactory71.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor74 = objectMapper64.readValues(jsonParser65, featureClass73);
        boolean boolean75 = xmlMapper50.canSerialize(featureClass73);
        com.fasterxml.jackson.databind.BeanProperty beanProperty76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = serializerProvider34.findKeySerializer(featureClass73, beanProperty76);
        com.fasterxml.jackson.core.ObjectCodec objectCodec78 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory79 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory80 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory81 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec78, xMLInputFactory79, xMLOutputFactory80);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature82 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory83 = xmlFactory81.disable(feature82);
        com.fasterxml.jackson.core.Version version84 = xmlFactory83.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper85 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory83);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature86 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper87 = xmlMapper85.disable(feature86);
        java.lang.Object obj88 = serializerProvider34.getAttribute((java.lang.Object) objectMapper87);
        boolean boolean90 = objJsonSerializer21.isEmpty(serializerProvider34, (java.lang.Object) (short) 100);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(objectWriter29);
        org.junit.Assert.assertNotNull(featureArray30);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(serializationConfig33);
        org.junit.Assert.assertNotNull(serializerProvider34);
        org.junit.Assert.assertTrue("'" + feature39 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature39.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory40);
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(featureClass42);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(timeZone44);
        org.junit.Assert.assertEquals(timeZone44.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version49);
        org.junit.Assert.assertNotNull(objectWriter52);
        org.junit.Assert.assertNotNull(version57);
        org.junit.Assert.assertNotNull(objectWriter60);
        org.junit.Assert.assertNotNull(objectMapper62);
        org.junit.Assert.assertNotNull(objectMapper64);
        org.junit.Assert.assertTrue("'" + feature70 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature70.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory71);
        org.junit.Assert.assertNotNull(version72);
        org.junit.Assert.assertNotNull(featureClass73);
        org.junit.Assert.assertNotNull(featureItor74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertTrue("'" + feature82 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature82.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory83);
        org.junit.Assert.assertNotNull(version84);
        org.junit.Assert.assertTrue("'" + feature86 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature86.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test111");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.Version version27 = xmlFactory26.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory26);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(characterEscapes29);
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory34);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes37 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter38 = xmlMapper36.writer(characterEscapes37);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory39 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper36.setNodeFactory(jsonNodeFactory39);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper36.setFilterProvider(filterProvider41);
        com.fasterxml.jackson.core.JsonParser jsonParser43 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature48 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = xmlFactory47.disable(feature48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass51 = xmlFactory49.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor52 = objectMapper42.readValues(jsonParser43, featureClass51);
        boolean boolean53 = xmlMapper28.canSerialize(featureClass51);
        com.fasterxml.jackson.databind.BeanProperty beanProperty54 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = serializerProvider12.findKeySerializer(featureClass51, beanProperty54);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider56 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray57 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray58 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        int int59 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray57, beanPropertyWriterArray58);
        boolean boolean60 = objJsonSerializer55.isEmpty(serializerProvider56, (java.lang.Object) beanPropertyWriterArray57);
        com.fasterxml.jackson.core.ObjectCodec objectCodec61 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory62 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory63 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory64 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec61, xMLInputFactory62, xMLOutputFactory63);
        com.fasterxml.jackson.core.Version version65 = xmlFactory64.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper66 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory64);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes67 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter68 = xmlMapper66.writer(characterEscapes67);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray69 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper70 = xmlMapper66.disable(featureArray69);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper71 = objectMapper70.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig72 = objectMapper70.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider73 = objectMapper70.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec74 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory75 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory76 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory77 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec74, xMLInputFactory75, xMLOutputFactory76);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature78 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory79 = xmlFactory77.disable(feature78);
        com.fasterxml.jackson.core.Version version80 = xmlFactory79.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass81 = xmlFactory79.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer82 = serializerProvider73.getUnknownTypeSerializer(featureClass81);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer83 = objJsonSerializer55.replaceDelegatee(objJsonSerializer82);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(objectWriter38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertTrue("'" + feature48 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature48.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory49);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(featureClass51);
        org.junit.Assert.assertNotNull(featureItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray57);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(version65);
        org.junit.Assert.assertNotNull(objectWriter68);
        org.junit.Assert.assertNotNull(featureArray69);
        org.junit.Assert.assertNotNull(objectMapper70);
        org.junit.Assert.assertNotNull(objectMapper71);
        org.junit.Assert.assertNotNull(serializationConfig72);
        org.junit.Assert.assertNotNull(serializerProvider73);
        org.junit.Assert.assertTrue("'" + feature78 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature78.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory79);
        org.junit.Assert.assertNotNull(version80);
        org.junit.Assert.assertNotNull(featureClass81);
        org.junit.Assert.assertNotNull(objJsonSerializer82);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test112");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper5.writer();
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper5.configure(feature12, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(objectWriter11);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test113");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory13 = serializerProvider12.getTypeFactory();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator15 = null;
        // The following exception was thrown during execution in test generation
        try {
            serializerProvider12.defaultSerializeDateValue((long) 55296, jsonGenerator15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(typeFactory13);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test114");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.Version version27 = xmlFactory26.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory26);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(characterEscapes29);
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory34);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes37 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter38 = xmlMapper36.writer(characterEscapes37);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory39 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper36.setNodeFactory(jsonNodeFactory39);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper36.setFilterProvider(filterProvider41);
        com.fasterxml.jackson.core.JsonParser jsonParser43 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature48 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = xmlFactory47.disable(feature48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass51 = xmlFactory49.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor52 = objectMapper42.readValues(jsonParser43, featureClass51);
        boolean boolean53 = xmlMapper28.canSerialize(featureClass51);
        com.fasterxml.jackson.databind.JavaType javaType54 = serializerProvider12.constructType((java.lang.reflect.Type) featureClass51);
        com.fasterxml.jackson.databind.JavaType javaType55 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty56 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = serializerProvider12.findKeySerializer(javaType55, beanProperty56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(objectWriter38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertTrue("'" + feature48 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature48.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory49);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(featureClass51);
        org.junit.Assert.assertNotNull(featureItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(javaType54);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test115");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper5.findAndRegisterModules();
        java.io.DataInput dataInput11 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.Version version16 = xmlFactory15.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory15);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(characterEscapes18);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper17.writer(filterProvider20);
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec22, xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.core.Version version26 = xmlFactory25.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory25);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes28 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter29 = xmlMapper27.writer(characterEscapes28);
        com.fasterxml.jackson.core.ObjectCodec objectCodec30 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec30, xMLInputFactory31, xMLOutputFactory32);
        com.fasterxml.jackson.core.Version version34 = xmlFactory33.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper35 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory33);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes36 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter37 = xmlMapper35.writer(characterEscapes36);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory38 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper39 = xmlMapper35.setNodeFactory(jsonNodeFactory38);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider40 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = xmlMapper35.setFilterProvider(filterProvider40);
        com.fasterxml.jackson.core.JsonParser jsonParser42 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec43 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory44 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory45 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec43, xMLInputFactory44, xMLOutputFactory45);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature47 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = xmlFactory46.disable(feature47);
        com.fasterxml.jackson.core.Version version49 = xmlFactory48.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass50 = xmlFactory48.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor51 = objectMapper41.readValues(jsonParser42, featureClass50);
        boolean boolean52 = xmlMapper27.canSerialize(featureClass50);
        boolean boolean53 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass50);
        com.fasterxml.jackson.databind.JavaType javaType54 = xmlMapper17.constructType((java.lang.reflect.Type) featureClass50);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.util.TypeUtil typeUtil55 = xmlMapper5.readValue(dataInput11, javaType54);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: InputData source not (yet?) support for this format (XML)");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(objectWriter29);
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertNotNull(objectWriter37);
        org.junit.Assert.assertNotNull(objectMapper39);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertTrue("'" + feature47 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature47.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory48);
        org.junit.Assert.assertNotNull(version49);
        org.junit.Assert.assertNotNull(featureClass50);
        org.junit.Assert.assertNotNull(featureItor51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(javaType54);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test116");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper5);
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.Version version16 = xmlFactory15.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory15);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(characterEscapes18);
        com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory23 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec20, xMLInputFactory21, xMLOutputFactory22);
        com.fasterxml.jackson.core.Version version24 = xmlFactory23.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory23);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes26 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter27 = xmlMapper25.writer(characterEscapes26);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory28 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = xmlMapper25.setNodeFactory(jsonNodeFactory28);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider30 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper25.setFilterProvider(filterProvider30);
        com.fasterxml.jackson.core.JsonParser jsonParser32 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory34 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec33, xMLInputFactory34, xMLOutputFactory35);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature37 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = xmlFactory36.disable(feature37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass40 = xmlFactory38.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor41 = objectMapper31.readValues(jsonParser32, featureClass40);
        boolean boolean42 = xmlMapper17.canSerialize(featureClass40);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference43 = null;
        boolean boolean44 = xmlMapper5.canSerialize(featureClass40, throwableAtomicReference43);
        java.io.DataOutput dataOutput45 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper51 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory49);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes52 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter53 = xmlMapper51.writer(characterEscapes52);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray54 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = xmlMapper51.disable(featureArray54);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext56 = xmlMapper51.getDeserializationContext();
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper5.writeValue(dataOutput45, (java.lang.Object) xmlMapper51);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: No serializer found for class com.ctc.wstx.api.WstxInputProperties$ParsingMode and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.fasterxml.jackson.dataformat.xml.XmlMapper[\"factory\"]->com.fasterxml.jackson.dataformat.xml.XmlFactory[\"xmlinputFactory\"]->com.ctc.wstx.stax.WstxInputFactory[\"config\"]->com.ctc.wstx.api.ReaderConfig[\"inputParsingMode\"])");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(objectWriter27);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertTrue("'" + feature37 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature37.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory38);
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(featureClass40);
        org.junit.Assert.assertNotNull(featureItor41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(objectWriter53);
        org.junit.Assert.assertNotNull(featureArray54);
        org.junit.Assert.assertNotNull(objectMapper55);
        org.junit.Assert.assertNotNull(deserializationContext56);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test117");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setDefaultPrettyPrinter(prettyPrinter8);
        java.io.Reader reader10 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = xmlMapper5.readValue(reader10, typeReference11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test118");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper5.writer();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider11 = null;
        xmlMapper5.setFilters(filterProvider11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.disableDefaultTyping();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper5.setSerializerFactory(serializerFactory14);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature16 = null;
        com.fasterxml.jackson.databind.SerializationFeature[] serializationFeatureArray17 = new com.fasterxml.jackson.databind.SerializationFeature[] {};
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = objectMapper15.enable(serializationFeature16, serializationFeatureArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(serializationFeatureArray17);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test119");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean5 = xmlFactory3.isEnabled(feature4);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlFactory9.disable(feature10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature14 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper13.disable(feature14);
        boolean boolean16 = feature14.enabledByDefault();
        boolean boolean17 = xmlFactory3.isEnabled(feature14);
        com.fasterxml.jackson.core.JsonParser.Feature feature18 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory19 = xmlFactory3.enable(feature18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + feature14 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature14.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test120");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.annotation.JsonInclude.Value value3 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper4 = xmlMapper2.setPropertyInclusion(value3);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper5 = xmlMapper2.findAndRegisterModules();
        java.net.URL uRL6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode7 = xmlMapper2.readTree(uRL6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNotNull(objectMapper5);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test121");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper5.writer();
        byte[] byteArray16 = new byte[] { (byte) 1, (byte) 1, (byte) 0, (byte) 100, (byte) 10 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode17 = xmlMapper5.readTree(byteArray16);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxUnexpectedCharException: Illegal character ((CTRL-CHAR, code 1))? at [row,col {unknown-source}]: [1,1]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, 1, 0, 100, 10]");
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test122");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.Module[] moduleArray10 = new com.fasterxml.jackson.databind.Module[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper9.registerModules(moduleArray10);
        java.text.DateFormat dateFormat12 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper9.setDateFormat(dateFormat12);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver14 = objectMapper9.getSubtypeResolver();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider15 = null;
        objectMapper9.setFilters(filterProvider15);
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray25 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.disable(featureArray25);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = objectMapper26.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig28 = objectMapper26.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = objectMapper26.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec30 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec30, xMLInputFactory31, xMLOutputFactory32);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature34 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = xmlFactory33.disable(feature34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass37 = xmlFactory35.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = serializerProvider29.getUnknownTypeSerializer(featureClass37);
        java.util.TimeZone timeZone39 = serializerProvider29.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec40 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory41 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec40, xMLInputFactory41, xMLOutputFactory42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper45 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory43);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes46 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter47 = xmlMapper45.writer(characterEscapes46);
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper53 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory51);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes54 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter55 = xmlMapper53.writer(characterEscapes54);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory56 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper57 = xmlMapper53.setNodeFactory(jsonNodeFactory56);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider58 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper59 = xmlMapper53.setFilterProvider(filterProvider58);
        com.fasterxml.jackson.core.JsonParser jsonParser60 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec61 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory62 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory63 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory64 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec61, xMLInputFactory62, xMLOutputFactory63);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature65 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory66 = xmlFactory64.disable(feature65);
        com.fasterxml.jackson.core.Version version67 = xmlFactory66.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass68 = xmlFactory66.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor69 = objectMapper59.readValues(jsonParser60, featureClass68);
        boolean boolean70 = xmlMapper45.canSerialize(featureClass68);
        com.fasterxml.jackson.databind.BeanProperty beanProperty71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer72 = serializerProvider29.findKeySerializer(featureClass68, beanProperty71);
        java.lang.Class<?> wildcardClass73 = objectMapper9.findMixInClassFor(featureClass68);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(moduleArray10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(subtypeResolver14);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(featureArray25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(serializationConfig28);
        org.junit.Assert.assertNotNull(serializerProvider29);
        org.junit.Assert.assertTrue("'" + feature34 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature34.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory35);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(featureClass37);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(timeZone39);
        org.junit.Assert.assertEquals(timeZone39.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(objectWriter47);
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(objectWriter55);
        org.junit.Assert.assertNotNull(objectMapper57);
        org.junit.Assert.assertNotNull(objectMapper59);
        org.junit.Assert.assertTrue("'" + feature65 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature65.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory66);
        org.junit.Assert.assertNotNull(version67);
        org.junit.Assert.assertNotNull(featureClass68);
        org.junit.Assert.assertNotNull(featureItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer72);
        org.junit.Assert.assertNull(wildcardClass73);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test123");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper12.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = objectMapper12.getSerializationConfig();
        com.fasterxml.jackson.databind.introspect.AnnotatedMember annotatedMember15 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(characterEscapes22);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray24 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper21.disable(featureArray24);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory26 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader27 = xmlMapper21.reader(jsonNodeFactory26);
        javax.xml.stream.XMLInputFactory xMLInputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper29 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory28);
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory30 = xmlMapper29.getTypeFactory();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper21.setTypeFactory(typeFactory30);
        com.fasterxml.jackson.core.JsonParser jsonParser32 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory34 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec33, xMLInputFactory34, xMLOutputFactory35);
        com.fasterxml.jackson.core.Version version37 = xmlFactory36.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper38 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory36);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes39 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter40 = xmlMapper38.writer(characterEscapes39);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper38.writer(filterProvider41);
        com.fasterxml.jackson.core.ObjectCodec objectCodec43 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory44 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory45 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec43, xMLInputFactory44, xMLOutputFactory45);
        com.fasterxml.jackson.core.Version version47 = xmlFactory46.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper48 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory46);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes49 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter50 = xmlMapper48.writer(characterEscapes49);
        com.fasterxml.jackson.core.ObjectCodec objectCodec51 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory52 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory53 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory54 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec51, xMLInputFactory52, xMLOutputFactory53);
        com.fasterxml.jackson.core.Version version55 = xmlFactory54.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper56 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory54);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes57 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter58 = xmlMapper56.writer(characterEscapes57);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory59 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper60 = xmlMapper56.setNodeFactory(jsonNodeFactory59);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider61 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper62 = xmlMapper56.setFilterProvider(filterProvider61);
        com.fasterxml.jackson.core.JsonParser jsonParser63 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec64 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory65 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory66 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory67 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec64, xMLInputFactory65, xMLOutputFactory66);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature68 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory69 = xmlFactory67.disable(feature68);
        com.fasterxml.jackson.core.Version version70 = xmlFactory69.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass71 = xmlFactory69.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor72 = objectMapper62.readValues(jsonParser63, featureClass71);
        boolean boolean73 = xmlMapper48.canSerialize(featureClass71);
        boolean boolean74 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass71);
        com.fasterxml.jackson.databind.JavaType javaType75 = xmlMapper38.constructType((java.lang.reflect.Type) featureClass71);
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.core.TreeCodec> treeCodecItor76 = xmlMapper21.readValues(jsonParser32, javaType75);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?> wildcardTypeResolverBuilder77 = jacksonXmlAnnotationIntrospector0.findPropertyTypeResolver((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig14, annotatedMember15, javaType75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializationConfig14);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(featureArray24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectReader27);
        org.junit.Assert.assertNotNull(typeFactory30);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(objectWriter40);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(objectWriter50);
        org.junit.Assert.assertNotNull(version55);
        org.junit.Assert.assertNotNull(objectWriter58);
        org.junit.Assert.assertNotNull(objectMapper60);
        org.junit.Assert.assertNotNull(objectMapper62);
        org.junit.Assert.assertTrue("'" + feature68 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature68.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory69);
        org.junit.Assert.assertNotNull(version70);
        org.junit.Assert.assertNotNull(featureClass71);
        org.junit.Assert.assertNotNull(featureItor72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(javaType75);
        org.junit.Assert.assertNotNull(treeCodecItor76);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test124");
        com.fasterxml.jackson.core.io.IOContext iOContext0 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        javax.xml.stream.XMLStreamReader xMLStreamReader9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser fromXmlParser10 = new com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser(iOContext0, (int) (short) 100, 55296, (com.fasterxml.jackson.core.ObjectCodec) xmlMapper8, xMLStreamReader9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version7);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test125");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.annotation.JsonInclude.Value value3 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper4 = xmlMapper2.setPropertyInclusion(value3);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper5 = xmlMapper2.findAndRegisterModules();
        com.fasterxml.jackson.core.JsonParser jsonParser6 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec7, xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.Version version11 = xmlFactory10.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory10);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = xmlMapper12.writer(characterEscapes13);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory15 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper12.setNodeFactory(jsonNodeFactory15);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider17 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = xmlMapper12.setFilterProvider(filterProvider17);
        com.fasterxml.jackson.core.JsonParser jsonParser19 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory23 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec20, xMLInputFactory21, xMLOutputFactory22);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature24 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = xmlFactory23.disable(feature24);
        com.fasterxml.jackson.core.Version version26 = xmlFactory25.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass27 = xmlFactory25.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor28 = objectMapper18.readValues(jsonParser19, featureClass27);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature29 = objectMapper5.readValue(jsonParser6, featureClass27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter14);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertTrue("'" + feature24 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature24.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory25);
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(featureClass27);
        org.junit.Assert.assertNotNull(featureItor28);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test126");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        int int10 = xmlMapper5.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues11 = xmlMapper5.getInjectableValues();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory12 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.setSerializerFactory(serializerFactory12);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = xmlMapper5.isEnabled(serializationFeature14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(injectableValues11);
        org.junit.Assert.assertNotNull(objectMapper13);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test127");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.databind.BeanDescription beanDescription13 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec15 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec15, xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory18);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper20.writer(characterEscapes21);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory23 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper20.setNodeFactory(jsonNodeFactory23);
        com.fasterxml.jackson.databind.Module[] moduleArray25 = new com.fasterxml.jackson.databind.Module[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = objectMapper24.registerModules(moduleArray25);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.cfg.ConfigOverride configOverride27 = serializerProvider12.reportBadTypeDefinition(beanDescription13, "", (java.lang.Object[]) moduleArray25);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Invalid type definition for type N/A: ");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(moduleArray25);
        org.junit.Assert.assertNotNull(objectMapper26);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test128");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        int int23 = xmlMapper18.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues24 = xmlMapper18.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature25 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean27 = feature25.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = xmlMapper18.disable(feature25);
        boolean boolean29 = xmlFactory12.isEnabled(feature25);
        boolean boolean30 = feature25.enabledByDefault();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(injectableValues24);
        org.junit.Assert.assertTrue("'" + feature25 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature25.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test129");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean5 = xmlFactory3.isEnabled(feature4);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlFactory9.disable(feature10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature14 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper13.disable(feature14);
        boolean boolean16 = feature14.enabledByDefault();
        boolean boolean17 = xmlFactory3.isEnabled(feature14);
        javax.xml.stream.XMLStreamWriter xMLStreamWriter18 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator19 = xmlFactory3.createGenerator(xMLStreamWriter18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + feature14 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature14.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test130");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature8 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper7.disable(feature8);
        com.fasterxml.jackson.databind.MapperFeature mapperFeature10 = null;
        com.fasterxml.jackson.databind.MapperFeature[] mapperFeatureArray11 = new com.fasterxml.jackson.databind.MapperFeature[] { mapperFeature10 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.disable(mapperFeatureArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertTrue("'" + feature8 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature8.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(mapperFeatureArray11);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test131");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.ObjectCodec objectCodec11 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory14 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec11, xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.core.Version version15 = xmlFactory14.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory14);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes17 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = xmlMapper16.writer(characterEscapes17);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray19 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper16.disable(featureArray19);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = objectMapper20.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig22 = objectMapper20.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = objectMapper20.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec24 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec24, xMLInputFactory25, xMLOutputFactory26);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature28 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = xmlFactory27.disable(feature28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass31 = xmlFactory29.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = serializerProvider23.getUnknownTypeSerializer(featureClass31);
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory34 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec33, xMLInputFactory34, xMLOutputFactory35);
        com.fasterxml.jackson.core.Version version37 = xmlFactory36.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper38 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory36);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes39 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter40 = xmlMapper38.writer(characterEscapes39);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper38.setNodeFactory(jsonNodeFactory41);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper38.setFilterProvider(filterProvider43);
        com.fasterxml.jackson.core.JsonParser jsonParser45 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature50 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = xmlFactory49.disable(feature50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass53 = xmlFactory51.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor54 = objectMapper44.readValues(jsonParser45, featureClass53);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = xmlMapper5.addMixIn(featureClass31, featureClass53);
        com.fasterxml.jackson.databind.Module[] moduleArray56 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper57 = xmlMapper5.registerModules(moduleArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(objectWriter18);
        org.junit.Assert.assertNotNull(featureArray19);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(serializationConfig22);
        org.junit.Assert.assertNotNull(serializerProvider23);
        org.junit.Assert.assertTrue("'" + feature28 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature28.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory29);
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(featureClass31);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(objectWriter40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertTrue("'" + feature50 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature50.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory51);
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(featureClass53);
        org.junit.Assert.assertNotNull(featureItor54);
        org.junit.Assert.assertNotNull(objectMapper55);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test132");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.readerForUpdating((java.lang.Object) xmlFactory10);
        com.fasterxml.jackson.core.JsonGenerator.Feature feature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory13 = xmlFactory10.disable(feature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test133");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping6 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper5.enableDefaultTypingAsProperty(defaultTyping6, "XML");
        java.io.InputStream inputStream9 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.TimeZone timeZone11 = objectMapper8.readValue(inputStream9, typeReference10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectMapper8);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test134");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        byte[] byteArray13 = new byte[] {};
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray22 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.disable(featureArray22);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = objectMapper23.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig25 = objectMapper23.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = objectMapper23.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec27 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory28 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec27, xMLInputFactory28, xMLOutputFactory29);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature31 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = xmlFactory30.disable(feature31);
        com.fasterxml.jackson.core.Version version33 = xmlFactory32.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass34 = xmlFactory32.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = serializerProvider26.getUnknownTypeSerializer(featureClass34);
        java.util.TimeZone timeZone36 = serializerProvider26.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec37 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory38 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory39 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec37, xMLInputFactory38, xMLOutputFactory39);
        com.fasterxml.jackson.core.Version version41 = xmlFactory40.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper42 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory40);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes43 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter44 = xmlMapper42.writer(characterEscapes43);
        com.fasterxml.jackson.core.ObjectCodec objectCodec45 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory46 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec45, xMLInputFactory46, xMLOutputFactory47);
        com.fasterxml.jackson.core.Version version49 = xmlFactory48.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper50 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory48);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes51 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter52 = xmlMapper50.writer(characterEscapes51);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory53 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper54 = xmlMapper50.setNodeFactory(jsonNodeFactory53);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider55 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper56 = xmlMapper50.setFilterProvider(filterProvider55);
        com.fasterxml.jackson.core.JsonParser jsonParser57 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec58 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory59 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory60 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory61 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec58, xMLInputFactory59, xMLOutputFactory60);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature62 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory63 = xmlFactory61.disable(feature62);
        com.fasterxml.jackson.core.Version version64 = xmlFactory63.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass65 = xmlFactory63.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor66 = objectMapper56.readValues(jsonParser57, featureClass65);
        boolean boolean67 = xmlMapper42.canSerialize(featureClass65);
        com.fasterxml.jackson.databind.JavaType javaType68 = serializerProvider26.constructType((java.lang.reflect.Type) featureClass65);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.DeserializationContext deserializationContext69 = objectMapper9.readValue(byteArray13, javaType68);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxEOFException: Unexpected EOF in prolog? at [row,col {unknown-source}]: [1,0]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(featureArray22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(serializationConfig25);
        org.junit.Assert.assertNotNull(serializerProvider26);
        org.junit.Assert.assertTrue("'" + feature31 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature31.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory32);
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(featureClass34);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNotNull(timeZone36);
        org.junit.Assert.assertEquals(timeZone36.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(objectWriter44);
        org.junit.Assert.assertNotNull(version49);
        org.junit.Assert.assertNotNull(objectWriter52);
        org.junit.Assert.assertNotNull(objectMapper54);
        org.junit.Assert.assertNotNull(objectMapper56);
        org.junit.Assert.assertTrue("'" + feature62 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature62.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory63);
        org.junit.Assert.assertNotNull(version64);
        org.junit.Assert.assertNotNull(featureClass65);
        org.junit.Assert.assertNotNull(featureItor66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(javaType68);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test135");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor21 = objectMapper11.readValues(jsonParser12, featureClass20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.databind.introspect.Annotated annotated25 = null;
        java.lang.Boolean boolean26 = pair24.isOutputAsCData(annotated25);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector27 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair29 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector27, annotationIntrospector28);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector30 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair32 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector30, annotationIntrospector31);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair29, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair24, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper11.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = objectMapper11.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.core.JsonGenerator.Feature feature37 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper39 = objectMapper11.configure(feature37, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(featureItor21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(pair34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectWriter36);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test136");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        int int23 = xmlMapper18.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues24 = xmlMapper18.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature25 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean27 = feature25.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = xmlMapper18.disable(feature25);
        boolean boolean29 = xmlFactory12.isEnabled(feature25);
        com.fasterxml.jackson.core.JsonParser.Feature feature30 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory32 = xmlFactory12.configure(feature30, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(injectableValues24);
        org.junit.Assert.assertTrue("'" + feature25 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature25.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test137");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        java.lang.Boolean boolean4 = pair2.isOutputAsCData(annotated3);
        com.fasterxml.jackson.databind.introspect.Annotated annotated5 = null;
        java.lang.Boolean boolean6 = pair2.isOutputAsCData(annotated5);
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.core.ObjectCodec objectCodec9 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec9, xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.core.Version version13 = xmlFactory12.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory12);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes15 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter16 = xmlMapper14.writer(characterEscapes15);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray17 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = xmlMapper14.disable(featureArray17);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = objectMapper18.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig20 = objectMapper18.getSerializationConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription21 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder22 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder23 = xmlBeanSerializerModifier8.updateBuilder(serializationConfig20, beanDescription21, beanSerializerBuilder22);
        com.fasterxml.jackson.databind.BeanDescription beanDescription24 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray25 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList26 = new java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList26, beanPropertyWriterArray25);
        java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList28 = xmlBeanSerializerModifier7.changeProperties(serializationConfig20, beanDescription24, (java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList26);
        com.fasterxml.jackson.databind.introspect.AnnotatedMember annotatedMember29 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec30 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec30, xMLInputFactory31, xMLOutputFactory32);
        com.fasterxml.jackson.core.Version version34 = xmlFactory33.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper35 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory33);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes36 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter37 = xmlMapper35.writer(characterEscapes36);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider38 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter39 = xmlMapper35.writer(filterProvider38);
        com.fasterxml.jackson.core.ObjectCodec objectCodec40 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory41 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec40, xMLInputFactory41, xMLOutputFactory42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper45 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory43);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes46 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter47 = xmlMapper45.writer(characterEscapes46);
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper53 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory51);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes54 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter55 = xmlMapper53.writer(characterEscapes54);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory56 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper57 = xmlMapper53.setNodeFactory(jsonNodeFactory56);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider58 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper59 = xmlMapper53.setFilterProvider(filterProvider58);
        com.fasterxml.jackson.core.JsonParser jsonParser60 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec61 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory62 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory63 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory64 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec61, xMLInputFactory62, xMLOutputFactory63);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature65 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory66 = xmlFactory64.disable(feature65);
        com.fasterxml.jackson.core.Version version67 = xmlFactory66.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass68 = xmlFactory66.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor69 = objectMapper59.readValues(jsonParser60, featureClass68);
        boolean boolean70 = xmlMapper45.canSerialize(featureClass68);
        boolean boolean71 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass68);
        com.fasterxml.jackson.databind.JavaType javaType72 = xmlMapper35.constructType((java.lang.reflect.Type) featureClass68);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?> wildcardTypeResolverBuilder73 = pair2.findPropertyContentTypeResolver((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig20, annotatedMember29, javaType72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(version13);
        org.junit.Assert.assertNotNull(objectWriter16);
        org.junit.Assert.assertNotNull(featureArray17);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(serializationConfig20);
        org.junit.Assert.assertNull(beanSerializerBuilder23);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(beanPropertyWriterList28);
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertNotNull(objectWriter37);
        org.junit.Assert.assertNotNull(objectWriter39);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(objectWriter47);
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(objectWriter55);
        org.junit.Assert.assertNotNull(objectMapper57);
        org.junit.Assert.assertNotNull(objectMapper59);
        org.junit.Assert.assertTrue("'" + feature65 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature65.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory66);
        org.junit.Assert.assertNotNull(version67);
        org.junit.Assert.assertNotNull(featureClass68);
        org.junit.Assert.assertNotNull(featureItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(javaType72);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test138");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray22 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.disable(featureArray22);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = objectMapper23.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig25 = objectMapper23.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper5.setMixInResolver((com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver) serializationConfig25);
        java.io.File file27 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair30, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        pair34.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector37 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector38 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair39 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector37, annotationIntrospector38);
        com.fasterxml.jackson.databind.introspect.Annotated annotated40 = null;
        java.lang.Boolean boolean41 = pair39.isOutputAsCData(annotated40);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector42 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector43 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair44 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector42, annotationIntrospector43);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector45 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair47 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector45, annotationIntrospector46);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair48 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair44, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair47);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair49 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair39, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair47);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair50 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair34, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair39);
        com.fasterxml.jackson.databind.introspect.Annotated annotated51 = null;
        java.lang.Boolean boolean52 = pair50.isOutputAsAttribute(annotated51);
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper5.writeValue(file27, (java.lang.Object) pair50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(featureArray22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(serializationConfig25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(pair49);
        org.junit.Assert.assertNull(boolean52);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test139");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTyping();
        byte[] byteArray14 = new byte[] {};
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray25 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.disable(featureArray25);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = objectMapper26.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig28 = objectMapper26.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = objectMapper26.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec30 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec30, xMLInputFactory31, xMLOutputFactory32);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature34 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = xmlFactory33.disable(feature34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass37 = xmlFactory35.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = serializerProvider29.getUnknownTypeSerializer(featureClass37);
        com.fasterxml.jackson.core.ObjectCodec objectCodec39 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory40 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory41 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec39, xMLInputFactory40, xMLOutputFactory41);
        com.fasterxml.jackson.core.Version version43 = xmlFactory42.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper44 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory42);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes45 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter46 = xmlMapper44.writer(characterEscapes45);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory47 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper48 = xmlMapper44.setNodeFactory(jsonNodeFactory47);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader50 = xmlMapper44.readerForUpdating((java.lang.Object) xmlFactory49);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass51 = xmlFactory49.getFormatWriteFeatureType();
        com.fasterxml.jackson.databind.JavaType javaType52 = serializerProvider29.constructType((java.lang.reflect.Type) featureClass51);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.TreeNode treeNode53 = objectMapper13.readValue(byteArray14, 0, (int) '#', javaType52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(featureArray25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(serializationConfig28);
        org.junit.Assert.assertNotNull(serializerProvider29);
        org.junit.Assert.assertTrue("'" + feature34 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature34.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory35);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(featureClass37);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(objectWriter46);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertNotNull(objectReader50);
        org.junit.Assert.assertNotNull(featureClass51);
        org.junit.Assert.assertNotNull(javaType52);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test140");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping6 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper5.enableDefaultTypingAsProperty(defaultTyping6, "XML");
        java.io.InputStream inputStream9 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.util.TypeUtil typeUtil11 = objectMapper8.readValue(inputStream9, typeReference10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectMapper8);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test141");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean5 = xmlFactory3.isEnabled(feature4);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlFactory9.disable(feature10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature14 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper13.disable(feature14);
        boolean boolean16 = feature14.enabledByDefault();
        boolean boolean17 = xmlFactory3.isEnabled(feature14);
        com.fasterxml.jackson.core.JsonFactory jsonFactory19 = xmlFactory3.setRootValueSeparator(" ");
        java.io.OutputStream outputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = jsonFactory19.createJsonGenerator(outputStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null OutputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + feature14 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature14.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(jsonFactory19);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test142");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        int int23 = xmlMapper18.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues24 = xmlMapper18.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature25 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean27 = feature25.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = xmlMapper18.disable(feature25);
        boolean boolean29 = xmlFactory12.isEnabled(feature25);
        java.net.URL uRL30 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser31 = xmlFactory12.createJsonParser(uRL30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(injectableValues24);
        org.junit.Assert.assertTrue("'" + feature25 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature25.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test143");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTypingAsProperty(defaultTyping11, "");
        javax.xml.stream.XMLStreamReader xMLStreamReader14 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec15 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec15, xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory18);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper20.writer(characterEscapes21);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray23 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper20.disable(featureArray23);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext25 = xmlMapper20.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping26 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = xmlMapper20.enableDefaultTypingAsProperty(defaultTyping26, "");
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory29 = objectMapper28.getNodeFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec30 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec30, xMLInputFactory31, xMLOutputFactory32);
        com.fasterxml.jackson.core.Version version34 = xmlFactory33.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper35 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory33);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes36 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter37 = xmlMapper35.writer(characterEscapes36);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray38 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper39 = xmlMapper35.disable(featureArray38);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = objectMapper39.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig41 = objectMapper39.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = objectMapper39.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec43 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory44 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory45 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec43, xMLInputFactory44, xMLOutputFactory45);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature47 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = xmlFactory46.disable(feature47);
        com.fasterxml.jackson.core.Version version49 = xmlFactory48.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass50 = xmlFactory48.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = serializerProvider42.getUnknownTypeSerializer(featureClass50);
        java.util.TimeZone timeZone52 = serializerProvider42.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec53 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec53, xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.core.Version version57 = xmlFactory56.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper58 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory56);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes59 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter60 = xmlMapper58.writer(characterEscapes59);
        com.fasterxml.jackson.core.ObjectCodec objectCodec61 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory62 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory63 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory64 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec61, xMLInputFactory62, xMLOutputFactory63);
        com.fasterxml.jackson.core.Version version65 = xmlFactory64.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper66 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory64);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes67 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter68 = xmlMapper66.writer(characterEscapes67);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory69 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper70 = xmlMapper66.setNodeFactory(jsonNodeFactory69);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider71 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper72 = xmlMapper66.setFilterProvider(filterProvider71);
        com.fasterxml.jackson.core.JsonParser jsonParser73 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec74 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory75 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory76 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory77 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec74, xMLInputFactory75, xMLOutputFactory76);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature78 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory79 = xmlFactory77.disable(feature78);
        com.fasterxml.jackson.core.Version version80 = xmlFactory79.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass81 = xmlFactory79.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor82 = objectMapper72.readValues(jsonParser73, featureClass81);
        boolean boolean83 = xmlMapper58.canSerialize(featureClass81);
        com.fasterxml.jackson.databind.JavaType javaType84 = serializerProvider42.constructType((java.lang.reflect.Type) featureClass81);
        boolean boolean85 = objectMapper28.canDeserialize(javaType84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence86 = xmlMapper5.readValue(xMLStreamReader14, javaType84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(featureArray23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(deserializationContext25);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertNotNull(jsonNodeFactory29);
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertNotNull(objectWriter37);
        org.junit.Assert.assertNotNull(featureArray38);
        org.junit.Assert.assertNotNull(objectMapper39);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(serializationConfig41);
        org.junit.Assert.assertNotNull(serializerProvider42);
        org.junit.Assert.assertTrue("'" + feature47 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature47.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory48);
        org.junit.Assert.assertNotNull(version49);
        org.junit.Assert.assertNotNull(featureClass50);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(timeZone52);
        org.junit.Assert.assertEquals(timeZone52.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version57);
        org.junit.Assert.assertNotNull(objectWriter60);
        org.junit.Assert.assertNotNull(version65);
        org.junit.Assert.assertNotNull(objectWriter68);
        org.junit.Assert.assertNotNull(objectMapper70);
        org.junit.Assert.assertNotNull(objectMapper72);
        org.junit.Assert.assertTrue("'" + feature78 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature78.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory79);
        org.junit.Assert.assertNotNull(version80);
        org.junit.Assert.assertNotNull(featureClass81);
        org.junit.Assert.assertNotNull(featureItor82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(javaType84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test144");
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier0 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.core.ObjectCodec objectCodec1 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory2 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory3 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory4 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec1, xMLInputFactory2, xMLOutputFactory3);
        com.fasterxml.jackson.core.Version version5 = xmlFactory4.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory4);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(characterEscapes7);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray9 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper6.disable(featureArray9);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper10.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig12 = objectMapper10.getSerializationConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription13 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder14 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder15 = xmlBeanSerializerModifier0.updateBuilder(serializationConfig12, beanDescription13, beanSerializerBuilder14);
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(characterEscapes22);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray24 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper21.disable(featureArray24);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext26 = xmlMapper21.getDeserializationContext();
        com.fasterxml.jackson.core.Version version27 = xmlMapper21.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter28 = xmlMapper21.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = xmlMapper21.enableDefaultTyping();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider30 = null;
        xmlMapper21.setFilters(filterProvider30);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig32 = xmlMapper21.getSerializationConfig();
        com.fasterxml.jackson.databind.type.ArrayType arrayType33 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription34 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer36 = xmlBeanSerializerModifier0.modifyArraySerializer(serializationConfig32, arrayType33, beanDescription34, objJsonSerializer35);
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(featureArray9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(serializationConfig12);
        org.junit.Assert.assertNull(beanSerializerBuilder15);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(featureArray24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(deserializationContext26);
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(objectWriter28);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(serializationConfig32);
        org.junit.Assert.assertNull(wildcardJsonSerializer36);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test145");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory13 = serializerProvider12.getTypeFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper19.writer(filterProvider22);
        com.fasterxml.jackson.core.ObjectCodec objectCodec24 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec24, xMLInputFactory25, xMLOutputFactory26);
        com.fasterxml.jackson.core.Version version28 = xmlFactory27.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper29 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory27);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes30 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter31 = xmlMapper29.writer(characterEscapes30);
        com.fasterxml.jackson.core.ObjectCodec objectCodec32 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec32, xMLInputFactory33, xMLOutputFactory34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper37 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory35);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes38 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter39 = xmlMapper37.writer(characterEscapes38);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory40 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = xmlMapper37.setNodeFactory(jsonNodeFactory40);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper37.setFilterProvider(filterProvider42);
        com.fasterxml.jackson.core.JsonParser jsonParser44 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec45 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory46 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec45, xMLInputFactory46, xMLOutputFactory47);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature49 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = xmlFactory48.disable(feature49);
        com.fasterxml.jackson.core.Version version51 = xmlFactory50.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass52 = xmlFactory50.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor53 = objectMapper43.readValues(jsonParser44, featureClass52);
        boolean boolean54 = xmlMapper29.canSerialize(featureClass52);
        boolean boolean55 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass52);
        com.fasterxml.jackson.databind.JavaType javaType56 = xmlMapper19.constructType((java.lang.reflect.Type) featureClass52);
        com.fasterxml.jackson.databind.BeanProperty beanProperty57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = serializerProvider12.findKeySerializer(javaType56, beanProperty57);
        com.fasterxml.jackson.databind.introspect.Annotated annotated59 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo60 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdGenerator<?> wildcardObjectIdGenerator61 = serializerProvider12.objectIdGeneratorInstance(annotated59, objectIdInfo60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(typeFactory13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(objectWriter31);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(objectWriter39);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertTrue("'" + feature49 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature49.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory50);
        org.junit.Assert.assertNotNull(version51);
        org.junit.Assert.assertNotNull(featureClass52);
        org.junit.Assert.assertNotNull(featureItor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(javaType56);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test146");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.JsonFactory jsonFactory5 = xmlFactory3.setRootValueSeparator("");
        java.io.DataOutput dataOutput6 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = jsonFactory5.createGenerator(dataOutput6);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = jsonGenerator7.setHighestNonEscapedChar((-1));
        boolean boolean10 = jsonGenerator9.canWriteObjectId();
        int int11 = jsonGenerator9.getHighestEscapedChar();
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.Version version16 = xmlFactory15.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory15);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(characterEscapes18);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray20 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper17.disable(featureArray20);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory22 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader23 = xmlMapper17.reader(jsonNodeFactory22);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = xmlMapper17.copy();
        // The following exception was thrown during execution in test generation
        try {
            jsonGenerator9.writeEmbeddedObject((java.lang.Object) xmlMapper17);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonGenerationException; message: No native support for writing embedded objects of type com.fasterxml.jackson.dataformat.xml.XmlMapper");
        } catch (com.fasterxml.jackson.core.JsonGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jsonFactory5);
        org.junit.Assert.assertNotNull(jsonGenerator7);
        org.junit.Assert.assertNotNull(jsonGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(featureArray20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(objectReader23);
        org.junit.Assert.assertNotNull(xmlMapper24);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test147");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory10 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.reader(jsonNodeFactory10);
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.Version version16 = xmlFactory15.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory15);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(characterEscapes18);
        com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory23 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec20, xMLInputFactory21, xMLOutputFactory22);
        com.fasterxml.jackson.core.Version version24 = xmlFactory23.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory23);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes26 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter27 = xmlMapper25.writer(characterEscapes26);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory28 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = xmlMapper25.setNodeFactory(jsonNodeFactory28);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider30 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper25.setFilterProvider(filterProvider30);
        com.fasterxml.jackson.core.JsonParser jsonParser32 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory34 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec33, xMLInputFactory34, xMLOutputFactory35);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature37 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = xmlFactory36.disable(feature37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass40 = xmlFactory38.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor41 = objectMapper31.readValues(jsonParser32, featureClass40);
        boolean boolean42 = xmlMapper17.canSerialize(featureClass40);
        boolean boolean43 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass40);
        com.fasterxml.jackson.databind.jsonschema.JsonSchema jsonSchema44 = xmlMapper5.generateJsonSchema(featureClass40);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper5.findAndRegisterModules();
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes46 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader47 = objectMapper45.reader(contextAttributes46);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(objectWriter27);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertTrue("'" + feature37 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature37.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory38);
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(featureClass40);
        org.junit.Assert.assertNotNull(featureItor41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(jsonSchema44);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertNotNull(objectReader47);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test148");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        int int23 = xmlMapper18.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues24 = xmlMapper18.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature25 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean27 = feature25.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = xmlMapper18.disable(feature25);
        boolean boolean29 = xmlFactory12.isEnabled(feature25);
        com.fasterxml.jackson.core.JsonGenerator.Feature feature30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = xmlFactory12.isEnabled(feature30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(injectableValues24);
        org.junit.Assert.assertTrue("'" + feature25 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature25.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test149");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTyping();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = objectMapper13.enableDefaultTypingAsProperty(defaultTyping14, " ");
        java.io.OutputStream outputStream17 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec18 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec18, xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory21);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes24 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter25 = xmlMapper23.writer(characterEscapes24);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray26 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper23.disable(featureArray26);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext28 = xmlMapper23.getDeserializationContext();
        com.fasterxml.jackson.core.ObjectCodec objectCodec29 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec29, xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.core.Version version33 = xmlFactory32.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper34 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory32);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes35 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = xmlMapper34.writer(characterEscapes35);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray37 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper34.disable(featureArray37);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper39 = objectMapper38.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig40 = objectMapper38.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = objectMapper38.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec42 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory45 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec42, xMLInputFactory43, xMLOutputFactory44);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature46 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = xmlFactory45.disable(feature46);
        com.fasterxml.jackson.core.Version version48 = xmlFactory47.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass49 = xmlFactory47.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = serializerProvider41.getUnknownTypeSerializer(featureClass49);
        com.fasterxml.jackson.core.ObjectCodec objectCodec51 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory52 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory53 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory54 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec51, xMLInputFactory52, xMLOutputFactory53);
        com.fasterxml.jackson.core.Version version55 = xmlFactory54.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper56 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory54);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes57 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter58 = xmlMapper56.writer(characterEscapes57);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory59 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper60 = xmlMapper56.setNodeFactory(jsonNodeFactory59);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider61 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper62 = xmlMapper56.setFilterProvider(filterProvider61);
        com.fasterxml.jackson.core.JsonParser jsonParser63 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec64 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory65 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory66 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory67 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec64, xMLInputFactory65, xMLOutputFactory66);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature68 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory69 = xmlFactory67.disable(feature68);
        com.fasterxml.jackson.core.Version version70 = xmlFactory69.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass71 = xmlFactory69.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor72 = objectMapper62.readValues(jsonParser63, featureClass71);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper73 = xmlMapper23.addMixIn(featureClass49, featureClass71);
        // The following exception was thrown during execution in test generation
        try {
            objectMapper13.writeValue(outputStream17, (java.lang.Object) featureClass71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null OutputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(objectWriter25);
        org.junit.Assert.assertNotNull(featureArray26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(deserializationContext28);
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(featureArray37);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper39);
        org.junit.Assert.assertNotNull(serializationConfig40);
        org.junit.Assert.assertNotNull(serializerProvider41);
        org.junit.Assert.assertTrue("'" + feature46 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature46.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory47);
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(featureClass49);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(version55);
        org.junit.Assert.assertNotNull(objectWriter58);
        org.junit.Assert.assertNotNull(objectMapper60);
        org.junit.Assert.assertNotNull(objectMapper62);
        org.junit.Assert.assertTrue("'" + feature68 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature68.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory69);
        org.junit.Assert.assertNotNull(version70);
        org.junit.Assert.assertNotNull(featureClass71);
        org.junit.Assert.assertNotNull(featureItor72);
        org.junit.Assert.assertNotNull(objectMapper73);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test150");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver11 = xmlMapper5.getSubtypeResolver();
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.type.ResolvedType resolvedType13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.Closeable closeable14 = xmlMapper5.readValue(jsonParser12, resolvedType13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(subtypeResolver11);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test151");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature12 = null;
        com.fasterxml.jackson.databind.DeserializationFeature[] deserializationFeatureArray13 = new com.fasterxml.jackson.databind.DeserializationFeature[] {};
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = objectMapper9.enable(deserializationFeature12, deserializationFeatureArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(deserializationFeatureArray13);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test152");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext12 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper5.enable(deserializationFeature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(deserializationContext12);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test153");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec4, xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.core.Version version8 = xmlFactory7.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper9.writer(characterEscapes10);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper9.writer(filterProvider12);
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec22, xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.core.Version version26 = xmlFactory25.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory25);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes28 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter29 = xmlMapper27.writer(characterEscapes28);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory30 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper27.setNodeFactory(jsonNodeFactory30);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider32 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = xmlMapper27.setFilterProvider(filterProvider32);
        com.fasterxml.jackson.core.JsonParser jsonParser34 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature39 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = xmlFactory38.disable(feature39);
        com.fasterxml.jackson.core.Version version41 = xmlFactory40.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass42 = xmlFactory40.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor43 = objectMapper33.readValues(jsonParser34, featureClass42);
        boolean boolean44 = xmlMapper19.canSerialize(featureClass42);
        boolean boolean45 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass42);
        com.fasterxml.jackson.databind.JavaType javaType46 = xmlMapper9.constructType((java.lang.reflect.Type) featureClass42);
        boolean boolean47 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType46);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass48 = jacksonXmlAnnotationIntrospector0.findDeserializationType(annotated3, javaType46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(objectWriter11);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(objectWriter29);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertTrue("'" + feature39 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature39.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory40);
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(featureClass42);
        org.junit.Assert.assertNotNull(featureItor43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(javaType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test154");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.core.ObjectCodec objectCodec4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec4, xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.core.Version version8 = xmlFactory7.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper9.writer(characterEscapes10);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray12 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper9.disable(featureArray12);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = objectMapper13.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig15 = objectMapper13.getSerializationConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription16 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder17 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder18 = xmlBeanSerializerModifier3.updateBuilder(serializationConfig15, beanDescription16, beanSerializerBuilder17);
        com.fasterxml.jackson.databind.introspect.AnnotatedClass annotatedClass19 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory23 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec20, xMLInputFactory21, xMLOutputFactory22);
        com.fasterxml.jackson.core.Version version24 = xmlFactory23.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory23);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes26 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter27 = xmlMapper25.writer(characterEscapes26);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider28 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter29 = xmlMapper25.writer(filterProvider28);
        com.fasterxml.jackson.core.ObjectCodec objectCodec30 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec30, xMLInputFactory31, xMLOutputFactory32);
        com.fasterxml.jackson.core.Version version34 = xmlFactory33.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper35 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory33);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes36 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter37 = xmlMapper35.writer(characterEscapes36);
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.core.Version version42 = xmlFactory41.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper43 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory41);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes44 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter45 = xmlMapper43.writer(characterEscapes44);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory46 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper47 = xmlMapper43.setNodeFactory(jsonNodeFactory46);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider48 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper49 = xmlMapper43.setFilterProvider(filterProvider48);
        com.fasterxml.jackson.core.JsonParser jsonParser50 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec51 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory52 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory53 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory54 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec51, xMLInputFactory52, xMLOutputFactory53);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature55 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = xmlFactory54.disable(feature55);
        com.fasterxml.jackson.core.Version version57 = xmlFactory56.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass58 = xmlFactory56.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor59 = objectMapper49.readValues(jsonParser50, featureClass58);
        boolean boolean60 = xmlMapper35.canSerialize(featureClass58);
        boolean boolean61 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass58);
        com.fasterxml.jackson.databind.JavaType javaType62 = xmlMapper25.constructType((java.lang.reflect.Type) featureClass58);
        boolean boolean63 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType62);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?> wildcardTypeResolverBuilder64 = jacksonXmlAnnotationIntrospector0.findTypeResolver((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig15, annotatedClass19, javaType62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(objectWriter11);
        org.junit.Assert.assertNotNull(featureArray12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(serializationConfig15);
        org.junit.Assert.assertNull(beanSerializerBuilder18);
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(objectWriter27);
        org.junit.Assert.assertNotNull(objectWriter29);
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertNotNull(objectWriter37);
        org.junit.Assert.assertNotNull(version42);
        org.junit.Assert.assertNotNull(objectWriter45);
        org.junit.Assert.assertNotNull(objectMapper47);
        org.junit.Assert.assertNotNull(objectMapper49);
        org.junit.Assert.assertTrue("'" + feature55 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature55.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory56);
        org.junit.Assert.assertNotNull(version57);
        org.junit.Assert.assertNotNull(featureClass58);
        org.junit.Assert.assertNotNull(featureItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(javaType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test155");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor21 = objectMapper11.readValues(jsonParser12, featureClass20);
        java.io.DataInput dataInput22 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.Version version27 = xmlFactory26.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory26);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(characterEscapes29);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray31 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper28.disable(featureArray31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = objectMapper32.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig34 = objectMapper32.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = objectMapper32.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec36 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory37 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory38 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec36, xMLInputFactory37, xMLOutputFactory38);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature40 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = xmlFactory39.disable(feature40);
        com.fasterxml.jackson.core.Version version42 = xmlFactory41.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass43 = xmlFactory41.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = serializerProvider35.getUnknownTypeSerializer(featureClass43);
        java.util.TimeZone timeZone45 = serializerProvider35.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper51 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory49);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes52 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter53 = xmlMapper51.writer(characterEscapes52);
        com.fasterxml.jackson.core.ObjectCodec objectCodec54 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory55 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory56 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory57 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec54, xMLInputFactory55, xMLOutputFactory56);
        com.fasterxml.jackson.core.Version version58 = xmlFactory57.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper59 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory57);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes60 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter61 = xmlMapper59.writer(characterEscapes60);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory62 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper63 = xmlMapper59.setNodeFactory(jsonNodeFactory62);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider64 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = xmlMapper59.setFilterProvider(filterProvider64);
        com.fasterxml.jackson.core.JsonParser jsonParser66 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec67 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory68 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory69 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory70 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec67, xMLInputFactory68, xMLOutputFactory69);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature71 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = xmlFactory70.disable(feature71);
        com.fasterxml.jackson.core.Version version73 = xmlFactory72.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass74 = xmlFactory72.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor75 = objectMapper65.readValues(jsonParser66, featureClass74);
        boolean boolean76 = xmlMapper51.canSerialize(featureClass74);
        com.fasterxml.jackson.databind.JavaType javaType77 = serializerProvider35.constructType((java.lang.reflect.Type) featureClass74);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature78 = objectMapper11.readValue(dataInput22, featureClass74);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: InputData source not (yet?) support for this format (XML)");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(featureItor21);
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(featureArray31);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(serializationConfig34);
        org.junit.Assert.assertNotNull(serializerProvider35);
        org.junit.Assert.assertTrue("'" + feature40 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature40.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory41);
        org.junit.Assert.assertNotNull(version42);
        org.junit.Assert.assertNotNull(featureClass43);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(timeZone45);
        org.junit.Assert.assertEquals(timeZone45.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(objectWriter53);
        org.junit.Assert.assertNotNull(version58);
        org.junit.Assert.assertNotNull(objectWriter61);
        org.junit.Assert.assertNotNull(objectMapper63);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertTrue("'" + feature71 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature71.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory72);
        org.junit.Assert.assertNotNull(version73);
        org.junit.Assert.assertNotNull(featureClass74);
        org.junit.Assert.assertNotNull(featureItor75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(javaType77);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test156");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier4 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.core.ObjectCodec objectCodec5 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory6 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory7 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory8 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec5, xMLInputFactory6, xMLOutputFactory7);
        com.fasterxml.jackson.core.Version version9 = xmlFactory8.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory8);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper10.writer(characterEscapes11);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray13 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.disable(featureArray13);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = objectMapper14.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig16 = objectMapper14.getSerializationConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription17 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder18 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder19 = xmlBeanSerializerModifier4.updateBuilder(serializationConfig16, beanDescription17, beanSerializerBuilder18);
        com.fasterxml.jackson.databind.BeanDescription beanDescription20 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray21 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList22 = new java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList22, beanPropertyWriterArray21);
        java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList24 = xmlBeanSerializerModifier3.changeProperties(serializationConfig16, beanDescription20, (java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList22);
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(characterEscapes31);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray33 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = xmlMapper30.disable(featureArray33);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext35 = xmlMapper30.getDeserializationContext();
        com.fasterxml.jackson.core.Version version36 = xmlMapper30.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter37 = xmlMapper30.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper30.enableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec39 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory40 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory41 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec39, xMLInputFactory40, xMLOutputFactory41);
        com.fasterxml.jackson.core.Version version43 = xmlFactory42.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper44 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory42);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes45 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter46 = xmlMapper44.writer(characterEscapes45);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray47 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper48 = xmlMapper44.disable(featureArray47);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper49 = objectMapper48.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig50 = objectMapper48.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper51 = xmlMapper30.setMixInResolver((com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver) serializationConfig50);
        com.fasterxml.jackson.databind.type.ArrayType arrayType52 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription53 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec54 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory55 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory56 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory57 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec54, xMLInputFactory55, xMLOutputFactory56);
        com.fasterxml.jackson.core.Version version58 = xmlFactory57.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper59 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory57);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes60 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter61 = xmlMapper59.writer(characterEscapes60);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray62 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper63 = xmlMapper59.disable(featureArray62);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper64 = objectMapper63.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig65 = objectMapper63.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider66 = objectMapper63.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec67 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory68 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory69 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory70 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec67, xMLInputFactory68, xMLOutputFactory69);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature71 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = xmlFactory70.disable(feature71);
        com.fasterxml.jackson.core.Version version73 = xmlFactory72.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass74 = xmlFactory72.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer75 = serializerProvider66.getUnknownTypeSerializer(featureClass74);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer76 = xmlBeanSerializerModifier3.modifyArraySerializer(serializationConfig50, arrayType52, beanDescription53, objJsonSerializer75);
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod annotatedMethod77 = null;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod annotatedMethod78 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.introspect.AnnotatedMethod annotatedMethod79 = jacksonAnnotationIntrospector2.resolveSetterConflict((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig50, annotatedMethod77, annotatedMethod78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version9);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(featureArray13);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(serializationConfig16);
        org.junit.Assert.assertNull(beanSerializerBuilder19);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(beanPropertyWriterList24);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(featureArray33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(deserializationContext35);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(objectWriter37);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(objectWriter46);
        org.junit.Assert.assertNotNull(featureArray47);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertNotNull(objectMapper49);
        org.junit.Assert.assertNotNull(serializationConfig50);
        org.junit.Assert.assertNotNull(objectMapper51);
        org.junit.Assert.assertNotNull(version58);
        org.junit.Assert.assertNotNull(objectWriter61);
        org.junit.Assert.assertNotNull(featureArray62);
        org.junit.Assert.assertNotNull(objectMapper63);
        org.junit.Assert.assertNotNull(objectMapper64);
        org.junit.Assert.assertNotNull(serializationConfig65);
        org.junit.Assert.assertNotNull(serializerProvider66);
        org.junit.Assert.assertTrue("'" + feature71 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature71.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory72);
        org.junit.Assert.assertNotNull(version73);
        org.junit.Assert.assertNotNull(featureClass74);
        org.junit.Assert.assertNotNull(objJsonSerializer75);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer76);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test157");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setDefaultPrettyPrinter(prettyPrinter8);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature10 = null;
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature11 = null;
        com.fasterxml.jackson.databind.DeserializationFeature[] deserializationFeatureArray12 = new com.fasterxml.jackson.databind.DeserializationFeature[] { deserializationFeature11 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader13 = xmlMapper5.reader(deserializationFeature10, deserializationFeatureArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationFeatureArray12);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test158");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.Module[] moduleArray10 = new com.fasterxml.jackson.databind.Module[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper9.registerModules(moduleArray10);
        com.fasterxml.jackson.databind.MapperFeature mapperFeature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = objectMapper11.isEnabled(mapperFeature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(moduleArray10);
        org.junit.Assert.assertNotNull(objectMapper11);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test159");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector3 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair5 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector3, annotationIntrospector4);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair6 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair2, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair5);
        com.fasterxml.jackson.databind.introspect.Annotated annotated7 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec8 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec8, xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = xmlMapper13.writer(characterEscapes14);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper13.writer(filterProvider16);
        com.fasterxml.jackson.core.ObjectCodec objectCodec18 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec18, xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory21);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes24 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter25 = xmlMapper23.writer(characterEscapes24);
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory29);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(characterEscapes32);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory34 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper31.setNodeFactory(jsonNodeFactory34);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider36 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = xmlMapper31.setFilterProvider(filterProvider36);
        com.fasterxml.jackson.core.JsonParser jsonParser38 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec39 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory40 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory41 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec39, xMLInputFactory40, xMLOutputFactory41);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature43 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory44 = xmlFactory42.disable(feature43);
        com.fasterxml.jackson.core.Version version45 = xmlFactory44.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass46 = xmlFactory44.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor47 = objectMapper37.readValues(jsonParser38, featureClass46);
        boolean boolean48 = xmlMapper23.canSerialize(featureClass46);
        boolean boolean49 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass46);
        com.fasterxml.jackson.databind.JavaType javaType50 = xmlMapper13.constructType((java.lang.reflect.Type) featureClass46);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass51 = pair5.findSerializationKeyType(annotated7, javaType50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(objectWriter25);
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertTrue("'" + feature43 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature43.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory44);
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(featureClass46);
        org.junit.Assert.assertNotNull(featureItor47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(javaType50);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test160");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec11 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory14 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec11, xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.core.Version version15 = xmlFactory14.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory14);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes17 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = xmlMapper16.writer(characterEscapes17);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray19 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper16.disable(featureArray19);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = objectMapper20.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig22 = objectMapper20.getSerializationConfig();
        com.fasterxml.jackson.databind.node.ArrayNode arrayNode23 = objectMapper20.createArrayNode();
        com.fasterxml.jackson.core.ObjectCodec objectCodec24 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec24, xMLInputFactory25, xMLOutputFactory26);
        com.fasterxml.jackson.core.Version version28 = xmlFactory27.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper29 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory27);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes30 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter31 = xmlMapper29.writer(characterEscapes30);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray32 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = xmlMapper29.disable(featureArray32);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = objectMapper33.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig35 = objectMapper33.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = objectMapper33.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec37 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory38 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory39 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec37, xMLInputFactory38, xMLOutputFactory39);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature41 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = xmlFactory40.disable(feature41);
        com.fasterxml.jackson.core.Version version43 = xmlFactory42.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass44 = xmlFactory42.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = serializerProvider36.getUnknownTypeSerializer(featureClass44);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature46 = xmlMapper5.treeToValue((com.fasterxml.jackson.core.TreeNode) arrayNode23, featureClass44);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: Can not deserialize instance of com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature out of START_ARRAY token? at [Source: N/A; line: -1, column: -1]");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(objectWriter18);
        org.junit.Assert.assertNotNull(featureArray19);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(serializationConfig22);
        org.junit.Assert.assertNotNull(arrayNode23);
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(objectWriter31);
        org.junit.Assert.assertNotNull(featureArray32);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(serializationConfig35);
        org.junit.Assert.assertNotNull(serializerProvider36);
        org.junit.Assert.assertTrue("'" + feature41 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature41.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory42);
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(featureClass44);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test161");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper1 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0);
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider2 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper3 = xmlMapper1.setSerializerProvider(defaultSerializerProvider2);
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter4 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec5 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory6 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory7 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory8 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec5, xMLInputFactory6, xMLOutputFactory7);
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory8.setRootValueSeparator("");
        java.io.DataOutput dataOutput11 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = jsonFactory10.createGenerator(dataOutput11);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator14 = jsonGenerator12.setHighestNonEscapedChar((-1));
        boolean boolean15 = jsonGenerator14.canWriteObjectId();
        int int16 = jsonGenerator14.getHighestEscapedChar();
        defaultXmlPrettyPrinter4.writeArrayValueSeparator(jsonGenerator14);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.node.BaseJsonNode baseJsonNode18 = xmlMapper1.valueToTree((java.lang.Object) defaultXmlPrettyPrinter4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(jsonFactory10);
        org.junit.Assert.assertNotNull(jsonGenerator12);
        org.junit.Assert.assertNotNull(jsonGenerator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test162");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper1 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0);
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider2 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper3 = xmlMapper1.setSerializerProvider(defaultSerializerProvider2);
        com.fasterxml.jackson.core.JsonFactory jsonFactory4 = xmlMapper1.getJsonFactory();
        com.fasterxml.jackson.core.JsonParser.Feature feature5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory6 = jsonFactory4.enable(feature5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(jsonFactory4);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test163");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper12.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = objectMapper12.getSerializationConfig();
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod annotatedMethod15 = null;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod annotatedMethod16 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.introspect.AnnotatedMethod annotatedMethod17 = jacksonXmlAnnotationIntrospector0.resolveSetterConflict((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig14, annotatedMethod15, annotatedMethod16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializationConfig14);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test164");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper5.findAndRegisterModules();
        com.fasterxml.jackson.core.JsonFactory jsonFactory11 = xmlMapper5.getJsonFactory();
        com.fasterxml.jackson.core.JsonParser.Feature feature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory13 = jsonFactory11.enable(feature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(jsonFactory11);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test165");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean5 = xmlFactory3.isEnabled(feature4);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlFactory9.disable(feature10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature14 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper13.disable(feature14);
        boolean boolean16 = feature14.enabledByDefault();
        boolean boolean17 = xmlFactory3.isEnabled(feature14);
        com.fasterxml.jackson.core.JsonFactory jsonFactory19 = xmlFactory3.setRootValueSeparator(" ");
        java.io.DataOutput dataOutput20 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlFactory3.createGenerator(dataOutput20);
        byte[] byteArray26 = new byte[] { (byte) 0, (byte) 1, (byte) 1, (byte) -1 };
        // The following exception was thrown during execution in test generation
        try {
            jsonGenerator21.writeBinary(byteArray26, 56320, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No element/attribute name specified when trying to output element");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + feature14 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature14.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(jsonFactory19);
        org.junit.Assert.assertNotNull(jsonGenerator21);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 1, 1, -1]");
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test166");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.core.FormatSchema formatSchema12 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader13 = xmlMapper5.reader(formatSchema12);
        com.fasterxml.jackson.databind.cfg.HandlerInstantiator handlerInstantiator14 = null;
        java.lang.Object obj15 = xmlMapper5.setHandlerInstantiator(handlerInstantiator14);
        java.io.InputStream inputStream16 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray25 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.disable(featureArray25);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = xmlMapper22.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec28 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec28, xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.core.Version version32 = xmlFactory31.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper33 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory31);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper33.writer(characterEscapes34);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray36 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = xmlMapper33.disable(featureArray36);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper37.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig39 = objectMapper37.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = objectMapper37.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec41 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory42 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory43 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory44 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec41, xMLInputFactory42, xMLOutputFactory43);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature45 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = xmlFactory44.disable(feature45);
        com.fasterxml.jackson.core.Version version47 = xmlFactory46.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass48 = xmlFactory46.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = serializerProvider40.getUnknownTypeSerializer(featureClass48);
        java.util.TimeZone timeZone50 = serializerProvider40.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec51 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory52 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory53 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory54 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec51, xMLInputFactory52, xMLOutputFactory53);
        com.fasterxml.jackson.core.Version version55 = xmlFactory54.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper56 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory54);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes57 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter58 = xmlMapper56.writer(characterEscapes57);
        com.fasterxml.jackson.core.ObjectCodec objectCodec59 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory60 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory61 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory62 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec59, xMLInputFactory60, xMLOutputFactory61);
        com.fasterxml.jackson.core.Version version63 = xmlFactory62.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper64 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory62);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes65 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter66 = xmlMapper64.writer(characterEscapes65);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory67 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper68 = xmlMapper64.setNodeFactory(jsonNodeFactory67);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider69 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper70 = xmlMapper64.setFilterProvider(filterProvider69);
        com.fasterxml.jackson.core.JsonParser jsonParser71 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec72 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory73 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory74 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory75 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec72, xMLInputFactory73, xMLOutputFactory74);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature76 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory77 = xmlFactory75.disable(feature76);
        com.fasterxml.jackson.core.Version version78 = xmlFactory77.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass79 = xmlFactory77.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor80 = objectMapper70.readValues(jsonParser71, featureClass79);
        boolean boolean81 = xmlMapper56.canSerialize(featureClass79);
        com.fasterxml.jackson.databind.JavaType javaType82 = serializerProvider40.constructType((java.lang.reflect.Type) featureClass79);
        com.fasterxml.jackson.databind.ObjectReader objectReader83 = xmlMapper27.readerFor(javaType82);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj84 = xmlMapper5.readValue(inputStream16, javaType82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectReader13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(featureArray25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(xmlMapper27);
        org.junit.Assert.assertNotNull(version32);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertNotNull(featureArray36);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(serializationConfig39);
        org.junit.Assert.assertNotNull(serializerProvider40);
        org.junit.Assert.assertTrue("'" + feature45 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature45.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory46);
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(featureClass48);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(timeZone50);
        org.junit.Assert.assertEquals(timeZone50.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version55);
        org.junit.Assert.assertNotNull(objectWriter58);
        org.junit.Assert.assertNotNull(version63);
        org.junit.Assert.assertNotNull(objectWriter66);
        org.junit.Assert.assertNotNull(objectMapper68);
        org.junit.Assert.assertNotNull(objectMapper70);
        org.junit.Assert.assertTrue("'" + feature76 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature76.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory77);
        org.junit.Assert.assertNotNull(version78);
        org.junit.Assert.assertNotNull(featureClass79);
        org.junit.Assert.assertNotNull(featureItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(javaType82);
        org.junit.Assert.assertNotNull(objectReader83);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test167");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor21 = objectMapper11.readValues(jsonParser12, featureClass20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.databind.introspect.Annotated annotated25 = null;
        java.lang.Boolean boolean26 = pair24.isOutputAsCData(annotated25);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector27 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair29 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector27, annotationIntrospector28);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector30 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair32 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector30, annotationIntrospector31);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair29, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair24, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper11.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = objectMapper11.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.InjectableValues injectableValues37 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper11.setInjectableValues(injectableValues37);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature39 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = objectMapper38.configure(deserializationFeature39, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(featureItor21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(pair34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(objectMapper38);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test168");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = serializerProvider12.findNullValueSerializer(beanProperty13);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test169");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        int int23 = xmlMapper18.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues24 = xmlMapper18.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature25 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean27 = feature25.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = xmlMapper18.disable(feature25);
        boolean boolean29 = xmlFactory12.isEnabled(feature25);
        java.io.InputStream inputStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser31 = xmlFactory12.createParser(inputStream30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(injectableValues24);
        org.junit.Assert.assertTrue("'" + feature25 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature25.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test170");
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier0 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier2 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper12.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = objectMapper12.getSerializationConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription15 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder16 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder17 = xmlBeanSerializerModifier2.updateBuilder(serializationConfig14, beanDescription15, beanSerializerBuilder16);
        com.fasterxml.jackson.databind.BeanDescription beanDescription18 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray19 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList20 = new java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList20, beanPropertyWriterArray19);
        java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList22 = xmlBeanSerializerModifier1.changeProperties(serializationConfig14, beanDescription18, (java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList20);
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.Version version27 = xmlFactory26.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory26);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(characterEscapes29);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray31 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper28.disable(featureArray31);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext33 = xmlMapper28.getDeserializationContext();
        com.fasterxml.jackson.core.Version version34 = xmlMapper28.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper28.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = xmlMapper28.enableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec37 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory38 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory39 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec37, xMLInputFactory38, xMLOutputFactory39);
        com.fasterxml.jackson.core.Version version41 = xmlFactory40.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper42 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory40);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes43 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter44 = xmlMapper42.writer(characterEscapes43);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray45 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper46 = xmlMapper42.disable(featureArray45);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper47 = objectMapper46.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig48 = objectMapper46.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper49 = xmlMapper28.setMixInResolver((com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver) serializationConfig48);
        com.fasterxml.jackson.databind.type.ArrayType arrayType50 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription51 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec52 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory53 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory54 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory55 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec52, xMLInputFactory53, xMLOutputFactory54);
        com.fasterxml.jackson.core.Version version56 = xmlFactory55.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper57 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory55);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes58 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter59 = xmlMapper57.writer(characterEscapes58);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray60 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper61 = xmlMapper57.disable(featureArray60);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper62 = objectMapper61.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig63 = objectMapper61.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = objectMapper61.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec65 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory66 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory67 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory68 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec65, xMLInputFactory66, xMLOutputFactory67);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature69 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory70 = xmlFactory68.disable(feature69);
        com.fasterxml.jackson.core.Version version71 = xmlFactory70.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass72 = xmlFactory70.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = serializerProvider64.getUnknownTypeSerializer(featureClass72);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer74 = xmlBeanSerializerModifier1.modifyArraySerializer(serializationConfig48, arrayType50, beanDescription51, objJsonSerializer73);
        com.fasterxml.jackson.databind.type.CollectionType collectionType75 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription76 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec77 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory78 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory79 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory80 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec77, xMLInputFactory78, xMLOutputFactory79);
        com.fasterxml.jackson.core.Version version81 = xmlFactory80.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper82 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory80);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes83 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter84 = xmlMapper82.writer(characterEscapes83);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray85 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper86 = xmlMapper82.disable(featureArray85);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper87 = objectMapper86.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig88 = objectMapper86.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider89 = objectMapper86.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec90 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory91 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory92 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory93 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec90, xMLInputFactory91, xMLOutputFactory92);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature94 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory95 = xmlFactory93.disable(feature94);
        com.fasterxml.jackson.core.Version version96 = xmlFactory95.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass97 = xmlFactory95.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer98 = serializerProvider89.getUnknownTypeSerializer(featureClass97);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer99 = xmlBeanSerializerModifier0.modifyCollectionSerializer(serializationConfig48, collectionType75, beanDescription76, objJsonSerializer98);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializationConfig14);
        org.junit.Assert.assertNull(beanSerializerBuilder17);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(beanPropertyWriterList22);
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(featureArray31);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(deserializationContext33);
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(objectWriter44);
        org.junit.Assert.assertNotNull(featureArray45);
        org.junit.Assert.assertNotNull(objectMapper46);
        org.junit.Assert.assertNotNull(objectMapper47);
        org.junit.Assert.assertNotNull(serializationConfig48);
        org.junit.Assert.assertNotNull(objectMapper49);
        org.junit.Assert.assertNotNull(version56);
        org.junit.Assert.assertNotNull(objectWriter59);
        org.junit.Assert.assertNotNull(featureArray60);
        org.junit.Assert.assertNotNull(objectMapper61);
        org.junit.Assert.assertNotNull(objectMapper62);
        org.junit.Assert.assertNotNull(serializationConfig63);
        org.junit.Assert.assertNotNull(serializerProvider64);
        org.junit.Assert.assertTrue("'" + feature69 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature69.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory70);
        org.junit.Assert.assertNotNull(version71);
        org.junit.Assert.assertNotNull(featureClass72);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer74);
        org.junit.Assert.assertNotNull(version81);
        org.junit.Assert.assertNotNull(objectWriter84);
        org.junit.Assert.assertNotNull(featureArray85);
        org.junit.Assert.assertNotNull(objectMapper86);
        org.junit.Assert.assertNotNull(objectMapper87);
        org.junit.Assert.assertNotNull(serializationConfig88);
        org.junit.Assert.assertNotNull(serializerProvider89);
        org.junit.Assert.assertTrue("'" + feature94 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature94.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory95);
        org.junit.Assert.assertNotNull(version96);
        org.junit.Assert.assertNotNull(featureClass97);
        org.junit.Assert.assertNotNull(objJsonSerializer98);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer99);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test171");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        com.fasterxml.jackson.annotation.JsonInclude.Value value10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper9.setPropertyInclusion(value10);
        com.fasterxml.jackson.core.JsonParser.Feature feature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper9.configure(feature12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(objectMapper11);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test172");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = objectMapper10.writerWithType(javaType11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper10.clearProblemHandlers();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider14 = null;
        objectMapper10.setFilters(filterProvider14);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper13);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test173");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper5.writer(filterProvider8);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass10 = null;
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride11 = xmlMapper5.configOverride(featureClass10);
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.Version version16 = xmlFactory15.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory15);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(characterEscapes18);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray20 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper17.disable(featureArray20);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext22 = xmlMapper17.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping23 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper17.enableDefaultTypingAsProperty(defaultTyping23, "");
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory26 = objectMapper25.getNodeFactory();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = xmlMapper5.writeValueAsString((java.lang.Object) jsonNodeFactory26);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: No serializer found for class com.fasterxml.jackson.databind.node.JsonNodeFactory and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(mutableConfigOverride11);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(featureArray20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(deserializationContext22);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(jsonNodeFactory26);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test174");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = xmlFactory5.getXMLInputFactory();
        com.fasterxml.jackson.core.JsonFactory.Feature feature11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory12 = xmlFactory5.enable(feature11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(xMLInputFactory10);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test175");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.Annotated annotated1 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec2 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec2, xMLInputFactory3, xMLOutputFactory4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper7.writer(characterEscapes8);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray10 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper7.disable(featureArray10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper11.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = objectMapper11.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = objectMapper11.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec15 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec15, xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature19 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = xmlFactory18.disable(feature19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass22 = xmlFactory20.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = serializerProvider14.getUnknownTypeSerializer(featureClass22);
        com.fasterxml.jackson.core.ObjectCodec objectCodec24 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec24, xMLInputFactory25, xMLOutputFactory26);
        com.fasterxml.jackson.core.Version version28 = xmlFactory27.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper29 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory27);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes30 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter31 = xmlMapper29.writer(characterEscapes30);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory32 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = xmlMapper29.setNodeFactory(jsonNodeFactory32);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader35 = xmlMapper29.readerForUpdating((java.lang.Object) xmlFactory34);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass36 = xmlFactory34.getFormatWriteFeatureType();
        com.fasterxml.jackson.databind.JavaType javaType37 = serializerProvider14.constructType((java.lang.reflect.Type) featureClass36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass38 = jacksonXmlAnnotationIntrospector0.findDeserializationType(annotated1, javaType37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(featureArray10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(serializationConfig13);
        org.junit.Assert.assertNotNull(serializerProvider14);
        org.junit.Assert.assertTrue("'" + feature19 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature19.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory20);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(featureClass22);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(objectWriter31);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(objectReader35);
        org.junit.Assert.assertNotNull(featureClass36);
        org.junit.Assert.assertNotNull(javaType37);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test176");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        java.text.DateFormat dateFormat11 = xmlMapper5.getDateFormat();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper5.disableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory21 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.setNodeFactory(jsonNodeFactory21);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper18.findAndRegisterModules();
        com.fasterxml.jackson.core.JsonFactory jsonFactory24 = xmlMapper18.getJsonFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(characterEscapes31);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray33 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = xmlMapper30.disable(featureArray33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper34.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig36 = objectMapper34.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = objectMapper34.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature42 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = xmlFactory41.disable(feature42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass45 = xmlFactory43.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = serializerProvider37.getUnknownTypeSerializer(featureClass45);
        java.util.TimeZone timeZone47 = serializerProvider37.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper53 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory51);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes54 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter55 = xmlMapper53.writer(characterEscapes54);
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.core.Version version60 = xmlFactory59.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper61 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory59);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes62 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter63 = xmlMapper61.writer(characterEscapes62);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory64 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = xmlMapper61.setNodeFactory(jsonNodeFactory64);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider66 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper67 = xmlMapper61.setFilterProvider(filterProvider66);
        com.fasterxml.jackson.core.JsonParser jsonParser68 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec69 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory70 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory71 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec69, xMLInputFactory70, xMLOutputFactory71);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature73 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory74 = xmlFactory72.disable(feature73);
        com.fasterxml.jackson.core.Version version75 = xmlFactory74.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass76 = xmlFactory74.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor77 = objectMapper67.readValues(jsonParser68, featureClass76);
        boolean boolean78 = xmlMapper53.canSerialize(featureClass76);
        com.fasterxml.jackson.databind.BeanProperty beanProperty79 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = serializerProvider37.findKeySerializer(featureClass76, beanProperty79);
        com.fasterxml.jackson.databind.ObjectReader objectReader81 = xmlMapper18.readerWithView(featureClass76);
        com.fasterxml.jackson.core.ObjectCodec objectCodec82 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory83 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory84 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory85 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec82, xMLInputFactory83, xMLOutputFactory84);
        com.fasterxml.jackson.core.Version version86 = xmlFactory85.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper87 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory85);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes88 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter89 = xmlMapper87.writer(characterEscapes88);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray90 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper91 = xmlMapper87.disable(featureArray90);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper92 = objectMapper91.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig93 = objectMapper91.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider94 = objectMapper91.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray95 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper96 = objectMapper91.enable(featureArray95);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper97 = xmlMapper18.disable(featureArray95);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper98 = xmlMapper5.enable(featureArray95);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(dateFormat11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(jsonFactory24);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(featureArray33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(serializationConfig36);
        org.junit.Assert.assertNotNull(serializerProvider37);
        org.junit.Assert.assertTrue("'" + feature42 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature42.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory43);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(featureClass45);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(timeZone47);
        org.junit.Assert.assertEquals(timeZone47.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(objectWriter55);
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(objectWriter63);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertNotNull(objectMapper67);
        org.junit.Assert.assertTrue("'" + feature73 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature73.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory74);
        org.junit.Assert.assertNotNull(version75);
        org.junit.Assert.assertNotNull(featureClass76);
        org.junit.Assert.assertNotNull(featureItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
        org.junit.Assert.assertNotNull(objectReader81);
        org.junit.Assert.assertNotNull(version86);
        org.junit.Assert.assertNotNull(objectWriter89);
        org.junit.Assert.assertNotNull(featureArray90);
        org.junit.Assert.assertNotNull(objectMapper91);
        org.junit.Assert.assertNotNull(objectMapper92);
        org.junit.Assert.assertNotNull(serializationConfig93);
        org.junit.Assert.assertNotNull(serializerProvider94);
        org.junit.Assert.assertNotNull(featureArray95);
        org.junit.Assert.assertNotNull(objectMapper96);
        org.junit.Assert.assertNotNull(objectMapper97);
        org.junit.Assert.assertNotNull(objectMapper98);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test177");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean5 = xmlFactory3.isEnabled(feature4);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlFactory9.disable(feature10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature14 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper13.disable(feature14);
        boolean boolean16 = feature14.enabledByDefault();
        boolean boolean17 = xmlFactory3.isEnabled(feature14);
        com.fasterxml.jackson.core.JsonFactory jsonFactory19 = xmlFactory3.setRootValueSeparator(" ");
        java.io.DataOutput dataOutput20 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlFactory3.createGenerator(dataOutput20);
        // The following exception was thrown during execution in test generation
        try {
            jsonGenerator21.writeNumberField("", (long) 'a');
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonGenerationException; message: Can not write a field name, expecting a value");
        } catch (com.fasterxml.jackson.core.JsonGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + feature14 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature14.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(jsonFactory19);
        org.junit.Assert.assertNotNull(jsonGenerator21);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test178");
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray0 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray1 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray2 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        int int3 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray1, beanPropertyWriterArray2);
        com.fasterxml.jackson.core.ObjectCodec objectCodec4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec4, xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.core.Version version8 = xmlFactory7.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper9.writer(characterEscapes10);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray12 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper9.disable(featureArray12);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = objectMapper13.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig15 = objectMapper13.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = objectMapper13.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature21 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory22 = xmlFactory20.disable(feature21);
        com.fasterxml.jackson.core.Version version23 = xmlFactory22.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass24 = xmlFactory22.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = serializerProvider16.getUnknownTypeSerializer(featureClass24);
        java.util.TimeZone timeZone26 = serializerProvider16.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec27 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory28 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec27, xMLInputFactory28, xMLOutputFactory29);
        com.fasterxml.jackson.core.Version version31 = xmlFactory30.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper32 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory30);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes33 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter34 = xmlMapper32.writer(characterEscapes33);
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory38);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper40.writer(characterEscapes41);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper40.setNodeFactory(jsonNodeFactory43);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider45 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper46 = xmlMapper40.setFilterProvider(filterProvider45);
        com.fasterxml.jackson.core.JsonParser jsonParser47 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature52 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory53 = xmlFactory51.disable(feature52);
        com.fasterxml.jackson.core.Version version54 = xmlFactory53.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass55 = xmlFactory53.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor56 = objectMapper46.readValues(jsonParser47, featureClass55);
        boolean boolean57 = xmlMapper32.canSerialize(featureClass55);
        com.fasterxml.jackson.databind.BeanProperty beanProperty58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = serializerProvider16.findKeySerializer(featureClass55, beanProperty58);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray61 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray62 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        int int63 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray61, beanPropertyWriterArray62);
        boolean boolean64 = objJsonSerializer59.isEmpty(serializerProvider60, (java.lang.Object) beanPropertyWriterArray61);
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray65 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray66 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        int int67 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray65, beanPropertyWriterArray66);
        int int68 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray61, beanPropertyWriterArray65);
        int int69 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray1, beanPropertyWriterArray61);
        int int70 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray0, beanPropertyWriterArray61);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray0);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray1);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(objectWriter11);
        org.junit.Assert.assertNotNull(featureArray12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(serializationConfig15);
        org.junit.Assert.assertNotNull(serializerProvider16);
        org.junit.Assert.assertTrue("'" + feature21 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature21.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(featureClass24);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(timeZone26);
        org.junit.Assert.assertEquals(timeZone26.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(objectWriter34);
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(objectMapper46);
        org.junit.Assert.assertTrue("'" + feature52 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature52.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory53);
        org.junit.Assert.assertNotNull(version54);
        org.junit.Assert.assertNotNull(featureClass55);
        org.junit.Assert.assertNotNull(featureItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray61);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray65);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test179");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setDefaultPrettyPrinter(prettyPrinter8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.enableDefaultTyping();
        java.net.URL uRL11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode12 = objectMapper9.readTree(uRL11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test180");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        java.lang.Class<?> wildcardClass13 = xmlFactory12.getClass();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test181");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        com.fasterxml.jackson.annotation.JsonInclude.Value value10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper9.setPropertyInclusion(value10);
        java.io.File file12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping19 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper18.enableDefaultTypingAsProperty(defaultTyping19, "XML");
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec22, xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.core.Version version26 = xmlFactory25.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory25);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes28 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter29 = xmlMapper27.writer(characterEscapes28);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray30 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper27.disable(featureArray30);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = objectMapper31.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig33 = objectMapper31.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = objectMapper31.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature39 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = xmlFactory38.disable(feature39);
        com.fasterxml.jackson.core.Version version41 = xmlFactory40.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass42 = xmlFactory40.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = serializerProvider34.getUnknownTypeSerializer(featureClass42);
        java.util.TimeZone timeZone44 = serializerProvider34.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec45 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory46 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec45, xMLInputFactory46, xMLOutputFactory47);
        com.fasterxml.jackson.core.Version version49 = xmlFactory48.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper50 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory48);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes51 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter52 = xmlMapper50.writer(characterEscapes51);
        com.fasterxml.jackson.core.ObjectCodec objectCodec53 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec53, xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.core.Version version57 = xmlFactory56.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper58 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory56);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes59 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter60 = xmlMapper58.writer(characterEscapes59);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory61 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper62 = xmlMapper58.setNodeFactory(jsonNodeFactory61);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider63 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper64 = xmlMapper58.setFilterProvider(filterProvider63);
        com.fasterxml.jackson.core.JsonParser jsonParser65 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec66 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory67 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory68 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory69 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec66, xMLInputFactory67, xMLOutputFactory68);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature70 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory71 = xmlFactory69.disable(feature70);
        com.fasterxml.jackson.core.Version version72 = xmlFactory71.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass73 = xmlFactory71.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor74 = objectMapper64.readValues(jsonParser65, featureClass73);
        boolean boolean75 = xmlMapper50.canSerialize(featureClass73);
        com.fasterxml.jackson.databind.BeanProperty beanProperty76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = serializerProvider34.findKeySerializer(featureClass73, beanProperty76);
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride78 = objectMapper21.configOverride(featureClass73);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature79 = xmlMapper9.readValue(file12, featureClass73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(objectWriter29);
        org.junit.Assert.assertNotNull(featureArray30);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(serializationConfig33);
        org.junit.Assert.assertNotNull(serializerProvider34);
        org.junit.Assert.assertTrue("'" + feature39 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature39.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory40);
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(featureClass42);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(timeZone44);
        org.junit.Assert.assertEquals(timeZone44.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version49);
        org.junit.Assert.assertNotNull(objectWriter52);
        org.junit.Assert.assertNotNull(version57);
        org.junit.Assert.assertNotNull(objectWriter60);
        org.junit.Assert.assertNotNull(objectMapper62);
        org.junit.Assert.assertNotNull(objectMapper64);
        org.junit.Assert.assertTrue("'" + feature70 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature70.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory71);
        org.junit.Assert.assertNotNull(version72);
        org.junit.Assert.assertNotNull(featureClass73);
        org.junit.Assert.assertNotNull(featureItor74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertNotNull(mutableConfigOverride78);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test182");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        com.fasterxml.jackson.core.JsonGenerator.Feature feature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory15 = xmlFactory12.configure(feature13, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test183");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.ObjectCodec objectCodec8 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec8, xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = xmlMapper13.writer(characterEscapes14);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray16 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper13.disable(featureArray16);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = objectMapper17.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig19 = objectMapper17.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = objectMapper17.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = objectMapper17.enable(featureArray21);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper5.disable(featureArray21);
        javax.xml.stream.XMLStreamReader xMLStreamReader24 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(characterEscapes31);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray33 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = xmlMapper30.disable(featureArray33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper34.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig36 = objectMapper34.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = objectMapper34.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature42 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = xmlFactory41.disable(feature42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass45 = xmlFactory43.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = serializerProvider37.getUnknownTypeSerializer(featureClass45);
        java.util.TimeZone timeZone47 = serializerProvider37.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper53 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory51);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes54 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter55 = xmlMapper53.writer(characterEscapes54);
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.core.Version version60 = xmlFactory59.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper61 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory59);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes62 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter63 = xmlMapper61.writer(characterEscapes62);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory64 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = xmlMapper61.setNodeFactory(jsonNodeFactory64);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider66 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper67 = xmlMapper61.setFilterProvider(filterProvider66);
        com.fasterxml.jackson.core.JsonParser jsonParser68 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec69 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory70 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory71 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec69, xMLInputFactory70, xMLOutputFactory71);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature73 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory74 = xmlFactory72.disable(feature73);
        com.fasterxml.jackson.core.Version version75 = xmlFactory74.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass76 = xmlFactory74.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor77 = objectMapper67.readValues(jsonParser68, featureClass76);
        boolean boolean78 = xmlMapper53.canSerialize(featureClass76);
        com.fasterxml.jackson.databind.JavaType javaType79 = serializerProvider37.constructType((java.lang.reflect.Type) featureClass76);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature80 = xmlMapper5.readValue(xMLStreamReader24, featureClass76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(featureArray16);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(serializationConfig19);
        org.junit.Assert.assertNotNull(serializerProvider20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(featureArray33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(serializationConfig36);
        org.junit.Assert.assertNotNull(serializerProvider37);
        org.junit.Assert.assertTrue("'" + feature42 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature42.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory43);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(featureClass45);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(timeZone47);
        org.junit.Assert.assertEquals(timeZone47.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(objectWriter55);
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(objectWriter63);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertNotNull(objectMapper67);
        org.junit.Assert.assertTrue("'" + feature73 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature73.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory74);
        org.junit.Assert.assertNotNull(version75);
        org.junit.Assert.assertNotNull(featureClass76);
        org.junit.Assert.assertNotNull(featureItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(javaType79);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test184");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory13 = serializerProvider12.getTypeFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper19.writer(filterProvider22);
        com.fasterxml.jackson.core.ObjectCodec objectCodec24 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec24, xMLInputFactory25, xMLOutputFactory26);
        com.fasterxml.jackson.core.Version version28 = xmlFactory27.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper29 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory27);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes30 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter31 = xmlMapper29.writer(characterEscapes30);
        com.fasterxml.jackson.core.ObjectCodec objectCodec32 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec32, xMLInputFactory33, xMLOutputFactory34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper37 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory35);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes38 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter39 = xmlMapper37.writer(characterEscapes38);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory40 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = xmlMapper37.setNodeFactory(jsonNodeFactory40);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper37.setFilterProvider(filterProvider42);
        com.fasterxml.jackson.core.JsonParser jsonParser44 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec45 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory46 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec45, xMLInputFactory46, xMLOutputFactory47);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature49 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = xmlFactory48.disable(feature49);
        com.fasterxml.jackson.core.Version version51 = xmlFactory50.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass52 = xmlFactory50.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor53 = objectMapper43.readValues(jsonParser44, featureClass52);
        boolean boolean54 = xmlMapper29.canSerialize(featureClass52);
        boolean boolean55 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass52);
        com.fasterxml.jackson.databind.JavaType javaType56 = xmlMapper19.constructType((java.lang.reflect.Type) featureClass52);
        com.fasterxml.jackson.databind.BeanProperty beanProperty57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = serializerProvider12.findKeySerializer(javaType56, beanProperty57);
        com.fasterxml.jackson.core.ObjectCodec objectCodec59 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory60 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory61 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory62 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec59, xMLInputFactory60, xMLOutputFactory61);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature63 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory64 = xmlFactory62.disable(feature63);
        java.lang.String str65 = xmlFactory62.getRootValueSeparator();
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator66 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory67 = xmlFactory62.setInputDecorator(inputDecorator66);
        java.io.DataOutput dataOutput68 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding69 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator70 = jsonFactory67.createGenerator(dataOutput68, jsonEncoding69);
        // The following exception was thrown during execution in test generation
        try {
            serializerProvider12.defaultSerializeNull(jsonGenerator70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No element/attribute name specified when trying to output element");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(typeFactory13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(objectWriter31);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(objectWriter39);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertTrue("'" + feature49 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature49.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory50);
        org.junit.Assert.assertNotNull(version51);
        org.junit.Assert.assertNotNull(featureClass52);
        org.junit.Assert.assertNotNull(featureItor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(javaType56);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertTrue("'" + feature63 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature63.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + " " + "'", str65, " ");
        org.junit.Assert.assertNotNull(jsonFactory67);
        org.junit.Assert.assertNotNull(jsonGenerator70);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test185");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper5.writer();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider11 = null;
        xmlMapper5.setFilters(filterProvider11);
        javax.xml.stream.XMLStreamReader xMLStreamReader13 = null;
        com.fasterxml.jackson.databind.JavaType javaType14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<com.fasterxml.jackson.databind.Module> moduleCollection15 = xmlMapper5.readValue(xMLStreamReader13, javaType14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectWriter10);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test186");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec22, xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.core.Version version26 = xmlFactory25.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory25);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes28 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter29 = xmlMapper27.writer(characterEscapes28);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray30 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper27.disable(featureArray30);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = objectMapper31.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig33 = objectMapper31.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = objectMapper31.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature39 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = xmlFactory38.disable(feature39);
        com.fasterxml.jackson.core.Version version41 = xmlFactory40.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass42 = xmlFactory40.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = serializerProvider34.getUnknownTypeSerializer(featureClass42);
        java.util.TimeZone timeZone44 = serializerProvider34.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec45 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory46 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec45, xMLInputFactory46, xMLOutputFactory47);
        com.fasterxml.jackson.core.Version version49 = xmlFactory48.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper50 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory48);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes51 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter52 = xmlMapper50.writer(characterEscapes51);
        com.fasterxml.jackson.core.ObjectCodec objectCodec53 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec53, xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.core.Version version57 = xmlFactory56.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper58 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory56);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes59 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter60 = xmlMapper58.writer(characterEscapes59);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory61 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper62 = xmlMapper58.setNodeFactory(jsonNodeFactory61);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider63 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper64 = xmlMapper58.setFilterProvider(filterProvider63);
        com.fasterxml.jackson.core.JsonParser jsonParser65 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec66 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory67 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory68 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory69 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec66, xMLInputFactory67, xMLOutputFactory68);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature70 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory71 = xmlFactory69.disable(feature70);
        com.fasterxml.jackson.core.Version version72 = xmlFactory71.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass73 = xmlFactory71.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor74 = objectMapper64.readValues(jsonParser65, featureClass73);
        boolean boolean75 = xmlMapper50.canSerialize(featureClass73);
        com.fasterxml.jackson.databind.BeanProperty beanProperty76 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = serializerProvider34.findKeySerializer(featureClass73, beanProperty76);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider78 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray79 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray80 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        int int81 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray79, beanPropertyWriterArray80);
        boolean boolean82 = objJsonSerializer77.isEmpty(serializerProvider78, (java.lang.Object) beanPropertyWriterArray79);
        com.fasterxml.jackson.databind.BeanProperty beanProperty83 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer84 = serializerProvider12.handleSecondaryContextualization(objJsonSerializer77, beanProperty83);
        boolean boolean85 = wildcardJsonSerializer84.isUnwrappingSerializer();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(objectWriter29);
        org.junit.Assert.assertNotNull(featureArray30);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(serializationConfig33);
        org.junit.Assert.assertNotNull(serializerProvider34);
        org.junit.Assert.assertTrue("'" + feature39 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature39.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory40);
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(featureClass42);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(timeZone44);
        org.junit.Assert.assertEquals(timeZone44.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version49);
        org.junit.Assert.assertNotNull(objectWriter52);
        org.junit.Assert.assertNotNull(version57);
        org.junit.Assert.assertNotNull(objectWriter60);
        org.junit.Assert.assertNotNull(objectMapper62);
        org.junit.Assert.assertNotNull(objectMapper64);
        org.junit.Assert.assertTrue("'" + feature70 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature70.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory71);
        org.junit.Assert.assertNotNull(version72);
        org.junit.Assert.assertNotNull(featureClass73);
        org.junit.Assert.assertNotNull(featureItor74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray79);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test187");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = xmlFactory5.getXMLInputFactory();
        com.fasterxml.jackson.core.JsonFactory jsonFactory12 = xmlFactory5.setRootValueSeparator("");
        com.fasterxml.jackson.core.JsonGenerator.Feature feature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory15 = xmlFactory5.configure(feature13, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(xMLInputFactory10);
        org.junit.Assert.assertNotNull(jsonFactory12);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test188");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper5.writer();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider11 = null;
        xmlMapper5.setFilters(filterProvider11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.disableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray22 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.disable(featureArray22);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext24 = xmlMapper19.getDeserializationContext();
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver25 = xmlMapper19.getSubtypeResolver();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = objectMapper13.setSubtypeResolver(subtypeResolver25);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature27 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader28 = objectMapper13.reader(deserializationFeature27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(featureArray22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(deserializationContext24);
        org.junit.Assert.assertNotNull(subtypeResolver25);
        org.junit.Assert.assertNotNull(objectMapper26);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test189");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper5.writer(filterProvider8);
        com.fasterxml.jackson.core.ObjectCodec objectCodec10 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec10, xMLInputFactory11, xMLOutputFactory12);
        com.fasterxml.jackson.core.Version version14 = xmlFactory13.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory13);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(characterEscapes16);
        com.fasterxml.jackson.core.ObjectCodec objectCodec18 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec18, xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory21);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes24 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter25 = xmlMapper23.writer(characterEscapes24);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory26 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper23.setNodeFactory(jsonNodeFactory26);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider28 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = xmlMapper23.setFilterProvider(filterProvider28);
        com.fasterxml.jackson.core.JsonParser jsonParser30 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature35 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = xmlFactory34.disable(feature35);
        com.fasterxml.jackson.core.Version version37 = xmlFactory36.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass38 = xmlFactory36.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor39 = objectMapper29.readValues(jsonParser30, featureClass38);
        boolean boolean40 = xmlMapper15.canSerialize(featureClass38);
        boolean boolean41 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass38);
        com.fasterxml.jackson.databind.JavaType javaType42 = xmlMapper5.constructType((java.lang.reflect.Type) featureClass38);
        com.fasterxml.jackson.databind.MapperFeature[] mapperFeatureArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper5.enable(mapperFeatureArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(objectWriter25);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertTrue("'" + feature35 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature35.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory36);
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(featureClass38);
        org.junit.Assert.assertNotNull(featureItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(javaType42);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test190");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.enableDefaultTypingAsProperty(defaultTyping10, "XML");
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory23 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader24 = xmlMapper18.reader(jsonNodeFactory23);
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(characterEscapes31);
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory34 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec33, xMLInputFactory34, xMLOutputFactory35);
        com.fasterxml.jackson.core.Version version37 = xmlFactory36.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper38 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory36);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes39 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter40 = xmlMapper38.writer(characterEscapes39);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper38.setNodeFactory(jsonNodeFactory41);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper38.setFilterProvider(filterProvider43);
        com.fasterxml.jackson.core.JsonParser jsonParser45 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature50 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = xmlFactory49.disable(feature50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass53 = xmlFactory51.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor54 = objectMapper44.readValues(jsonParser45, featureClass53);
        boolean boolean55 = xmlMapper30.canSerialize(featureClass53);
        boolean boolean56 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass53);
        com.fasterxml.jackson.databind.jsonschema.JsonSchema jsonSchema57 = xmlMapper18.generateJsonSchema(featureClass53);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper58 = xmlMapper18.findAndRegisterModules();
        com.fasterxml.jackson.core.FormatSchema formatSchema59 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter60 = xmlMapper18.writer(formatSchema59);
        java.lang.String str61 = objectMapper9.writeValueAsString((java.lang.Object) formatSchema59);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectReader24);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(objectWriter40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertTrue("'" + feature50 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature50.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory51);
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(featureClass53);
        org.junit.Assert.assertNotNull(featureItor54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(jsonSchema57);
        org.junit.Assert.assertNotNull(objectMapper58);
        org.junit.Assert.assertNotNull(objectWriter60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "<null/>" + "'", str61, "<null/>");
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test191");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = xmlFactory5.getXMLInputFactory();
        com.fasterxml.jackson.core.JsonFactory jsonFactory12 = xmlFactory5.setRootValueSeparator("");
        java.io.Reader reader13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser14 = xmlFactory5.createJsonParser(reader13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(xMLInputFactory10);
        org.junit.Assert.assertNotNull(jsonFactory12);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test192");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory10 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.reader(jsonNodeFactory10);
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory12);
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory14 = xmlMapper13.getTypeFactory();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper5.setTypeFactory(typeFactory14);
        com.fasterxml.jackson.core.JsonParser jsonParser16 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider25 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter26 = xmlMapper22.writer(filterProvider25);
        com.fasterxml.jackson.core.ObjectCodec objectCodec27 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory28 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec27, xMLInputFactory28, xMLOutputFactory29);
        com.fasterxml.jackson.core.Version version31 = xmlFactory30.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper32 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory30);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes33 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter34 = xmlMapper32.writer(characterEscapes33);
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory38);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper40.writer(characterEscapes41);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper40.setNodeFactory(jsonNodeFactory43);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider45 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper46 = xmlMapper40.setFilterProvider(filterProvider45);
        com.fasterxml.jackson.core.JsonParser jsonParser47 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature52 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory53 = xmlFactory51.disable(feature52);
        com.fasterxml.jackson.core.Version version54 = xmlFactory53.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass55 = xmlFactory53.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor56 = objectMapper46.readValues(jsonParser47, featureClass55);
        boolean boolean57 = xmlMapper32.canSerialize(featureClass55);
        boolean boolean58 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass55);
        com.fasterxml.jackson.databind.JavaType javaType59 = xmlMapper22.constructType((java.lang.reflect.Type) featureClass55);
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.core.TreeCodec> treeCodecItor60 = xmlMapper5.readValues(jsonParser16, javaType59);
        java.io.Reader reader61 = null;
        com.fasterxml.jackson.databind.JavaType javaType62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.GenericDeclaration genericDeclaration63 = xmlMapper5.readValue(reader61, javaType62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
        org.junit.Assert.assertNotNull(typeFactory14);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(objectWriter26);
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(objectWriter34);
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(objectMapper46);
        org.junit.Assert.assertTrue("'" + feature52 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature52.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory53);
        org.junit.Assert.assertNotNull(version54);
        org.junit.Assert.assertNotNull(featureClass55);
        org.junit.Assert.assertNotNull(featureItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(javaType59);
        org.junit.Assert.assertNotNull(treeCodecItor60);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test193");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        boolean boolean13 = xmlFactory12.requiresPropertyOrdering();
        com.fasterxml.jackson.core.JsonGenerator.Feature feature14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory15 = xmlFactory12.enable(feature14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test194");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec22, xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.core.Version version26 = xmlFactory25.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory25);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes28 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter29 = xmlMapper27.writer(characterEscapes28);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray30 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper27.disable(featureArray30);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = objectMapper31.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig33 = objectMapper31.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = objectMapper31.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature39 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = xmlFactory38.disable(feature39);
        com.fasterxml.jackson.core.Version version41 = xmlFactory40.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass42 = xmlFactory40.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = serializerProvider34.getUnknownTypeSerializer(featureClass42);
        java.util.TimeZone timeZone44 = serializerProvider34.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec45 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory46 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec45, xMLInputFactory46, xMLOutputFactory47);
        com.fasterxml.jackson.core.Version version49 = xmlFactory48.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper50 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory48);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes51 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter52 = xmlMapper50.writer(characterEscapes51);
        com.fasterxml.jackson.core.ObjectCodec objectCodec53 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec53, xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.core.Version version57 = xmlFactory56.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper58 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory56);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes59 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter60 = xmlMapper58.writer(characterEscapes59);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory61 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper62 = xmlMapper58.setNodeFactory(jsonNodeFactory61);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider63 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper64 = xmlMapper58.setFilterProvider(filterProvider63);
        com.fasterxml.jackson.core.JsonParser jsonParser65 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec66 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory67 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory68 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory69 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec66, xMLInputFactory67, xMLOutputFactory68);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature70 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory71 = xmlFactory69.disable(feature70);
        com.fasterxml.jackson.core.Version version72 = xmlFactory71.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass73 = xmlFactory71.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor74 = objectMapper64.readValues(jsonParser65, featureClass73);
        boolean boolean75 = xmlMapper50.canSerialize(featureClass73);
        com.fasterxml.jackson.databind.JavaType javaType76 = serializerProvider34.constructType((java.lang.reflect.Type) featureClass73);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = serializerProvider34.getDefaultNullValueSerializer();
        serializerProvider12.setDefaultKeySerializer(objJsonSerializer77);
        java.util.Date date79 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec80 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory81 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory82 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory83 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec80, xMLInputFactory81, xMLOutputFactory82);
        com.fasterxml.jackson.core.JsonFactory jsonFactory85 = xmlFactory83.setRootValueSeparator("");
        java.io.DataOutput dataOutput86 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator87 = jsonFactory85.createGenerator(dataOutput86);
        boolean boolean88 = jsonGenerator87.canWriteTypeId();
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes89 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator90 = jsonGenerator87.setCharacterEscapes(characterEscapes89);
        boolean boolean91 = jsonGenerator87.canWriteBinaryNatively();
        jsonGenerator87.writeOmittedField("hi!");
        com.fasterxml.jackson.core.FormatSchema formatSchema94 = null;
        boolean boolean95 = jsonGenerator87.canUseSchema(formatSchema94);
        // The following exception was thrown during execution in test generation
        try {
            serializerProvider12.defaultSerializeDateValue(date79, jsonGenerator87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(objectWriter29);
        org.junit.Assert.assertNotNull(featureArray30);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(serializationConfig33);
        org.junit.Assert.assertNotNull(serializerProvider34);
        org.junit.Assert.assertTrue("'" + feature39 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature39.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory40);
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(featureClass42);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
        org.junit.Assert.assertNotNull(timeZone44);
        org.junit.Assert.assertEquals(timeZone44.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version49);
        org.junit.Assert.assertNotNull(objectWriter52);
        org.junit.Assert.assertNotNull(version57);
        org.junit.Assert.assertNotNull(objectWriter60);
        org.junit.Assert.assertNotNull(objectMapper62);
        org.junit.Assert.assertNotNull(objectMapper64);
        org.junit.Assert.assertTrue("'" + feature70 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature70.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory71);
        org.junit.Assert.assertNotNull(version72);
        org.junit.Assert.assertNotNull(featureClass73);
        org.junit.Assert.assertNotNull(featureItor74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(javaType76);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertNotNull(jsonFactory85);
        org.junit.Assert.assertNotNull(jsonGenerator87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(jsonGenerator90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test195");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        java.lang.Class<?> wildcardClass13 = serializerProvider12.getSerializationView();
        com.fasterxml.jackson.databind.introspect.Annotated annotated14 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdGenerator<?> wildcardObjectIdGenerator16 = serializerProvider12.objectIdGeneratorInstance(annotated14, objectIdInfo15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNull(wildcardClass13);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test196");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.Module[] moduleArray10 = new com.fasterxml.jackson.databind.Module[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper9.registerModules(moduleArray10);
        java.text.DateFormat dateFormat12 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper9.setDateFormat(dateFormat12);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver14 = objectMapper9.getSubtypeResolver();
        java.io.File file15 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(characterEscapes22);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider24 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter25 = xmlMapper21.writer(filterProvider24);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass26 = null;
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride27 = xmlMapper21.configOverride(featureClass26);
        // The following exception was thrown during execution in test generation
        try {
            objectMapper9.writeValue(file15, (java.lang.Object) featureClass26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(moduleArray10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(subtypeResolver14);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(objectWriter25);
        org.junit.Assert.assertNotNull(mutableConfigOverride27);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test197");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.annotation.JsonInclude.Value value3 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper4 = xmlMapper2.setPropertyInclusion(value3);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper5 = xmlMapper2.findAndRegisterModules();
        com.fasterxml.jackson.databind.jsontype.NamedType namedType6 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType6 };
        objectMapper5.registerSubtypes(namedTypeArray7);
        byte[] byteArray13 = new byte[] { (byte) 10, (byte) 100, (byte) 0, (byte) 100 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode14 = objectMapper5.readTree(byteArray13);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxUnexpectedCharException: Unexpected character 'd' (code 100) in prolog; expected '<'? at [row,col {unknown-source}]: [2,1]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 100, 0, 100]");
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test198");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = xmlFactory5.getXMLInputFactory();
        com.fasterxml.jackson.core.JsonFactory jsonFactory12 = xmlFactory5.setRootValueSeparator("");
        com.fasterxml.jackson.core.JsonFactory.Feature feature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = xmlFactory5.isEnabled(feature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(xMLInputFactory10);
        org.junit.Assert.assertNotNull(jsonFactory12);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test199");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule0 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper1 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(jacksonXmlModule0);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test200");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.enableDefaultTypingAsProperty(defaultTyping10, "XML");
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy13 = objectMapper9.getPropertyNamingStrategy();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = objectMapper9.writer(filterProvider14);
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy16 = objectMapper9.getPropertyNamingStrategy();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature17 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = objectMapper9.writer(serializationFeature17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNull(propertyNamingStrategy13);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNull(propertyNamingStrategy16);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test201");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTyping();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = objectMapper13.enableDefaultTypingAsProperty(defaultTyping14, " ");
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray25 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.disable(featureArray25);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = objectMapper26.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig28 = objectMapper26.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = objectMapper26.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec30 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec30, xMLInputFactory31, xMLOutputFactory32);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature34 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = xmlFactory33.disable(feature34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass37 = xmlFactory35.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = serializerProvider29.getUnknownTypeSerializer(featureClass37);
        java.util.TimeZone timeZone39 = serializerProvider29.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec40 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory41 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec40, xMLInputFactory41, xMLOutputFactory42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper45 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory43);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes46 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter47 = xmlMapper45.writer(characterEscapes46);
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper53 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory51);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes54 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter55 = xmlMapper53.writer(characterEscapes54);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory56 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper57 = xmlMapper53.setNodeFactory(jsonNodeFactory56);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider58 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper59 = xmlMapper53.setFilterProvider(filterProvider58);
        com.fasterxml.jackson.core.JsonParser jsonParser60 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec61 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory62 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory63 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory64 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec61, xMLInputFactory62, xMLOutputFactory63);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature65 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory66 = xmlFactory64.disable(feature65);
        com.fasterxml.jackson.core.Version version67 = xmlFactory66.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass68 = xmlFactory66.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor69 = objectMapper59.readValues(jsonParser60, featureClass68);
        boolean boolean70 = xmlMapper45.canSerialize(featureClass68);
        com.fasterxml.jackson.databind.JavaType javaType71 = serializerProvider29.constructType((java.lang.reflect.Type) featureClass68);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectWriter objectWriter72 = objectMapper16.writerFor(featureClass68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(featureArray25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(serializationConfig28);
        org.junit.Assert.assertNotNull(serializerProvider29);
        org.junit.Assert.assertTrue("'" + feature34 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature34.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory35);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(featureClass37);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(timeZone39);
        org.junit.Assert.assertEquals(timeZone39.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(objectWriter47);
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(objectWriter55);
        org.junit.Assert.assertNotNull(objectMapper57);
        org.junit.Assert.assertNotNull(objectMapper59);
        org.junit.Assert.assertTrue("'" + feature65 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature65.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory66);
        org.junit.Assert.assertNotNull(version67);
        org.junit.Assert.assertNotNull(featureClass68);
        org.junit.Assert.assertNotNull(featureItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(javaType71);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test202");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        java.lang.String str6 = xmlFactory3.getRootValueSeparator();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass7 = xmlFactory3.getFormatReadFeatureType();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory3.getXMLInputFactory();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3, jacksonXmlModule9);
        java.io.Reader reader11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser12 = xmlFactory3.createJsonParser(reader11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertNotNull(featureClass7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test203");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory11 = xmlMapper5.getSerializerFactory();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping12 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTyping(defaultTyping12);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(serializerFactory11);
        org.junit.Assert.assertNotNull(objectMapper13);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test204");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext23 = xmlMapper18.getDeserializationContext();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper18);
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(characterEscapes31);
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory34 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec33, xMLInputFactory34, xMLOutputFactory35);
        com.fasterxml.jackson.core.Version version37 = xmlFactory36.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper38 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory36);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes39 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter40 = xmlMapper38.writer(characterEscapes39);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper38.setNodeFactory(jsonNodeFactory41);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper38.setFilterProvider(filterProvider43);
        com.fasterxml.jackson.core.JsonParser jsonParser45 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature50 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = xmlFactory49.disable(feature50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass53 = xmlFactory51.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor54 = objectMapper44.readValues(jsonParser45, featureClass53);
        boolean boolean55 = xmlMapper30.canSerialize(featureClass53);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference56 = null;
        boolean boolean57 = xmlMapper18.canSerialize(featureClass53, throwableAtomicReference56);
        com.fasterxml.jackson.databind.BeanProperty beanProperty59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = serializerProvider12.findTypedValueSerializer(featureClass53, false, beanProperty59);
        java.lang.Object obj61 = null;
        java.lang.Object obj62 = serializerProvider12.getAttribute(obj61);
        com.fasterxml.jackson.core.ObjectCodec objectCodec63 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory64 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory65 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory66 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec63, xMLInputFactory64, xMLOutputFactory65);
        com.fasterxml.jackson.core.Version version67 = xmlFactory66.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper68 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory66);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes69 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter70 = xmlMapper68.writer(characterEscapes69);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory71 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper72 = xmlMapper68.setNodeFactory(jsonNodeFactory71);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider73 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper74 = xmlMapper68.setFilterProvider(filterProvider73);
        com.fasterxml.jackson.core.JsonParser jsonParser75 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec76 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory77 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory78 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory79 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec76, xMLInputFactory77, xMLOutputFactory78);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature80 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory81 = xmlFactory79.disable(feature80);
        com.fasterxml.jackson.core.Version version82 = xmlFactory81.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass83 = xmlFactory81.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor84 = objectMapper74.readValues(jsonParser75, featureClass83);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider86 = serializerProvider12.setAttribute((java.lang.Object) featureClass83, (java.lang.Object) 57343);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(deserializationContext23);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(objectWriter40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertTrue("'" + feature50 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature50.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory51);
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(featureClass53);
        org.junit.Assert.assertNotNull(featureItor54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(version67);
        org.junit.Assert.assertNotNull(objectWriter70);
        org.junit.Assert.assertNotNull(objectMapper72);
        org.junit.Assert.assertNotNull(objectMapper74);
        org.junit.Assert.assertTrue("'" + feature80 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature80.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory81);
        org.junit.Assert.assertNotNull(version82);
        org.junit.Assert.assertNotNull(featureClass83);
        org.junit.Assert.assertNotNull(featureItor84);
        org.junit.Assert.assertNotNull(serializerProvider86);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test205");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory13 = serializerProvider12.getTypeFactory();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = serializerProvider12.isEnabled(serializationFeature14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(typeFactory13);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test206");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        int int10 = xmlMapper5.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues11 = xmlMapper5.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature12 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean14 = feature12.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper5.disable(feature12);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper5.writer(contextAttributes16);
        byte[] byteArray22 = new byte[] { (byte) 10, (byte) 10, (byte) 1, (byte) 1 };
        com.fasterxml.jackson.core.type.TypeReference typeReference23 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor24 = xmlMapper5.readValue(byteArray22, typeReference23);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxUnexpectedCharException: Illegal character ((CTRL-CHAR, code 1))? at [row,col {unknown-source}]: [3,1]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(injectableValues11);
        org.junit.Assert.assertTrue("'" + feature12 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature12.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 10, 1, 1]");
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test207");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.core.JsonParser jsonParser3 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec4, xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.core.Version version8 = xmlFactory7.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper9.writer(characterEscapes10);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray12 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper9.disable(featureArray12);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper9.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec15 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec15, xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory18);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper20.writer(characterEscapes21);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray23 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper20.disable(featureArray23);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = objectMapper24.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper24.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = objectMapper24.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec28 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec28, xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature32 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = xmlFactory31.disable(feature32);
        com.fasterxml.jackson.core.Version version34 = xmlFactory33.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass35 = xmlFactory33.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = serializerProvider27.getUnknownTypeSerializer(featureClass35);
        java.util.TimeZone timeZone37 = serializerProvider27.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.core.Version version42 = xmlFactory41.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper43 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory41);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes44 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter45 = xmlMapper43.writer(characterEscapes44);
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper51 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory49);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes52 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter53 = xmlMapper51.writer(characterEscapes52);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory54 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = xmlMapper51.setNodeFactory(jsonNodeFactory54);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider56 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper57 = xmlMapper51.setFilterProvider(filterProvider56);
        com.fasterxml.jackson.core.JsonParser jsonParser58 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec59 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory60 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory61 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory62 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec59, xMLInputFactory60, xMLOutputFactory61);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature63 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory64 = xmlFactory62.disable(feature63);
        com.fasterxml.jackson.core.Version version65 = xmlFactory64.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass66 = xmlFactory64.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor67 = objectMapper57.readValues(jsonParser58, featureClass66);
        boolean boolean68 = xmlMapper43.canSerialize(featureClass66);
        com.fasterxml.jackson.databind.JavaType javaType69 = serializerProvider27.constructType((java.lang.reflect.Type) featureClass66);
        com.fasterxml.jackson.databind.ObjectReader objectReader70 = xmlMapper14.readerFor(javaType69);
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.databind.cfg.MapperConfigBase<com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.SerializationConfig>> serializationFeatureMapperConfigBaseItor71 = xmlMapper2.readValues(jsonParser3, javaType69);
        com.fasterxml.jackson.core.ObjectCodec objectCodec72 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory73 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory74 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory75 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec72, xMLInputFactory73, xMLOutputFactory74);
        com.fasterxml.jackson.core.Version version76 = xmlFactory75.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper77 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory75);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes78 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter79 = xmlMapper77.writer(characterEscapes78);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray80 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper81 = xmlMapper77.disable(featureArray80);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext82 = xmlMapper77.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping83 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper85 = xmlMapper77.enableDefaultTypingAsProperty(defaultTyping83, "");
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory86 = objectMapper85.getNodeFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader87 = xmlMapper2.reader(jsonNodeFactory86);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(objectWriter11);
        org.junit.Assert.assertNotNull(featureArray12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(featureArray23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(serializerProvider27);
        org.junit.Assert.assertTrue("'" + feature32 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature32.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory33);
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertNotNull(featureClass35);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(timeZone37);
        org.junit.Assert.assertEquals(timeZone37.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version42);
        org.junit.Assert.assertNotNull(objectWriter45);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(objectWriter53);
        org.junit.Assert.assertNotNull(objectMapper55);
        org.junit.Assert.assertNotNull(objectMapper57);
        org.junit.Assert.assertTrue("'" + feature63 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature63.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory64);
        org.junit.Assert.assertNotNull(version65);
        org.junit.Assert.assertNotNull(featureClass66);
        org.junit.Assert.assertNotNull(featureItor67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(javaType69);
        org.junit.Assert.assertNotNull(objectReader70);
        org.junit.Assert.assertNotNull(serializationFeatureMapperConfigBaseItor71);
        org.junit.Assert.assertNotNull(version76);
        org.junit.Assert.assertNotNull(objectWriter79);
        org.junit.Assert.assertNotNull(featureArray80);
        org.junit.Assert.assertNotNull(objectMapper81);
        org.junit.Assert.assertNotNull(deserializationContext82);
        org.junit.Assert.assertNotNull(objectMapper85);
        org.junit.Assert.assertNotNull(jsonNodeFactory86);
        org.junit.Assert.assertNotNull(objectReader87);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test208");
        com.fasterxml.jackson.core.io.IOContext iOContext0 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.setNodeFactory(jsonNodeFactory11);
        javax.xml.stream.XMLStreamWriter xMLStreamWriter13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator14 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator(iOContext0, 57343, (int) (short) 0, (com.fasterxml.jackson.core.ObjectCodec) xmlMapper8, xMLStreamWriter13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test209");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        java.lang.String str6 = xmlFactory3.getRootValueSeparator();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass7 = xmlFactory3.getFormatReadFeatureType();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory3.getXMLInputFactory();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3, jacksonXmlModule9);
        java.io.DataOutput dataOutput11 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlFactory3.createGenerator(dataOutput11);
        com.fasterxml.jackson.core.JsonParser jsonParser13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonGenerator12.copyCurrentStructure(jsonParser13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertNotNull(featureClass7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonGenerator12);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test210");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper9.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature11 = null;
        com.fasterxml.jackson.databind.SerializationFeature[] serializationFeatureArray12 = new com.fasterxml.jackson.databind.SerializationFeature[] {};
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper10.enable(serializationFeature11, serializationFeatureArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationFeatureArray12);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test211");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper5.findAndRegisterModules();
        com.fasterxml.jackson.core.JsonFactory jsonFactory11 = xmlMapper5.getJsonFactory();
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enable(feature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(jsonFactory11);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test212");
        com.fasterxml.jackson.core.io.IOContext iOContext0 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper12.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = objectMapper12.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = objectMapper12.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray16 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = objectMapper12.enable(featureArray16);
        com.fasterxml.jackson.databind.ObjectReader objectReader18 = objectMapper17.reader();
        javax.xml.stream.XMLStreamWriter xMLStreamWriter19 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator20 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator(iOContext0, (int) (byte) 100, 0, (com.fasterxml.jackson.core.ObjectCodec) objectReader18, xMLStreamWriter19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializationConfig14);
        org.junit.Assert.assertNotNull(serializerProvider15);
        org.junit.Assert.assertNotNull(featureArray16);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(objectReader18);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test213");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        java.lang.Boolean boolean4 = pair2.isOutputAsCData(annotated3);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector5 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair7 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector5, annotationIntrospector6);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector8 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair10 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector8, annotationIntrospector9);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair11 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair7, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair10);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair12 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair2, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair10);
        com.fasterxml.jackson.databind.introspect.Annotated annotated13 = null;
        java.lang.Boolean boolean14 = pair12.isOutputAsAttribute(annotated13);
        pair12.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.introspect.Annotated annotated17 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec18 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec18, xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory21);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes24 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter25 = xmlMapper23.writer(characterEscapes24);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray26 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper23.disable(featureArray26);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = xmlMapper23.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec29 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec29, xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.core.Version version33 = xmlFactory32.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper34 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory32);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes35 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = xmlMapper34.writer(characterEscapes35);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray37 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper34.disable(featureArray37);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper39 = objectMapper38.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig40 = objectMapper38.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = objectMapper38.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec42 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory45 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec42, xMLInputFactory43, xMLOutputFactory44);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature46 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = xmlFactory45.disable(feature46);
        com.fasterxml.jackson.core.Version version48 = xmlFactory47.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass49 = xmlFactory47.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = serializerProvider41.getUnknownTypeSerializer(featureClass49);
        java.util.TimeZone timeZone51 = serializerProvider41.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec52 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory53 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory54 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory55 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec52, xMLInputFactory53, xMLOutputFactory54);
        com.fasterxml.jackson.core.Version version56 = xmlFactory55.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper57 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory55);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes58 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter59 = xmlMapper57.writer(characterEscapes58);
        com.fasterxml.jackson.core.ObjectCodec objectCodec60 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory61 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory62 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory63 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec60, xMLInputFactory61, xMLOutputFactory62);
        com.fasterxml.jackson.core.Version version64 = xmlFactory63.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper65 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory63);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes66 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter67 = xmlMapper65.writer(characterEscapes66);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory68 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper69 = xmlMapper65.setNodeFactory(jsonNodeFactory68);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider70 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper71 = xmlMapper65.setFilterProvider(filterProvider70);
        com.fasterxml.jackson.core.JsonParser jsonParser72 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec73 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory74 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory75 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory76 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec73, xMLInputFactory74, xMLOutputFactory75);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature77 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory78 = xmlFactory76.disable(feature77);
        com.fasterxml.jackson.core.Version version79 = xmlFactory78.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass80 = xmlFactory78.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor81 = objectMapper71.readValues(jsonParser72, featureClass80);
        boolean boolean82 = xmlMapper57.canSerialize(featureClass80);
        com.fasterxml.jackson.databind.JavaType javaType83 = serializerProvider41.constructType((java.lang.reflect.Type) featureClass80);
        com.fasterxml.jackson.databind.ObjectReader objectReader84 = xmlMapper28.readerFor(javaType83);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass85 = pair12.findSerializationContentType(annotated17, javaType83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(pair12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(objectWriter25);
        org.junit.Assert.assertNotNull(featureArray26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(xmlMapper28);
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(featureArray37);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper39);
        org.junit.Assert.assertNotNull(serializationConfig40);
        org.junit.Assert.assertNotNull(serializerProvider41);
        org.junit.Assert.assertTrue("'" + feature46 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature46.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory47);
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(featureClass49);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(timeZone51);
        org.junit.Assert.assertEquals(timeZone51.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version56);
        org.junit.Assert.assertNotNull(objectWriter59);
        org.junit.Assert.assertNotNull(version64);
        org.junit.Assert.assertNotNull(objectWriter67);
        org.junit.Assert.assertNotNull(objectMapper69);
        org.junit.Assert.assertNotNull(objectMapper71);
        org.junit.Assert.assertTrue("'" + feature77 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature77.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory78);
        org.junit.Assert.assertNotNull(version79);
        org.junit.Assert.assertNotNull(featureClass80);
        org.junit.Assert.assertNotNull(featureItor81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(javaType83);
        org.junit.Assert.assertNotNull(objectReader84);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test214");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        byte[] byteArray18 = new byte[] { (byte) 10, (byte) 100, (byte) 10, (byte) 1, (byte) 0 };
        com.fasterxml.jackson.core.ObjectCodec objectCodec19 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory22 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec19, xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.core.Version version23 = xmlFactory22.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory22);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes25 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter26 = xmlMapper24.writer(characterEscapes25);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray27 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = xmlMapper24.disable(featureArray27);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = objectMapper28.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig30 = objectMapper28.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = objectMapper28.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray32 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = objectMapper28.enable(featureArray32);
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider34 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper28.setSerializerProvider(defaultSerializerProvider34);
        com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier xmlBeanDeserializerModifier37 = new com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier(" ");
        com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig38 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec39 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory40 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory41 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec39, xMLInputFactory40, xMLOutputFactory41);
        com.fasterxml.jackson.core.Version version43 = xmlFactory42.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper44 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory42);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes45 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter46 = xmlMapper44.writer(characterEscapes45);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider47 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter48 = xmlMapper44.writer(filterProvider47);
        com.fasterxml.jackson.core.ObjectCodec objectCodec49 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory50 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory51 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory52 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec49, xMLInputFactory50, xMLOutputFactory51);
        com.fasterxml.jackson.core.Version version53 = xmlFactory52.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper54 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory52);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes55 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter56 = xmlMapper54.writer(characterEscapes55);
        com.fasterxml.jackson.core.ObjectCodec objectCodec57 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory58 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory59 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory60 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec57, xMLInputFactory58, xMLOutputFactory59);
        com.fasterxml.jackson.core.Version version61 = xmlFactory60.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper62 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory60);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes63 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter64 = xmlMapper62.writer(characterEscapes63);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory65 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper66 = xmlMapper62.setNodeFactory(jsonNodeFactory65);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider67 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper68 = xmlMapper62.setFilterProvider(filterProvider67);
        com.fasterxml.jackson.core.JsonParser jsonParser69 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec70 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory71 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory72 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory73 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec70, xMLInputFactory71, xMLOutputFactory72);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature74 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory75 = xmlFactory73.disable(feature74);
        com.fasterxml.jackson.core.Version version76 = xmlFactory75.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass77 = xmlFactory75.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor78 = objectMapper68.readValues(jsonParser69, featureClass77);
        boolean boolean79 = xmlMapper54.canSerialize(featureClass77);
        boolean boolean80 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass77);
        com.fasterxml.jackson.databind.JavaType javaType81 = xmlMapper44.constructType((java.lang.reflect.Type) featureClass77);
        boolean boolean82 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType81);
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer83 = null;
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer84 = xmlBeanDeserializerModifier37.modifyKeyDeserializer(deserializationConfig38, javaType81, keyDeserializer83);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference85 = null;
        boolean boolean86 = objectMapper28.canDeserialize(javaType81, throwableAtomicReference85);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.SerializationConfig serializationConfig87 = objectMapper9.readValue(byteArray18, javaType81);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxUnexpectedCharException: Unexpected character 'd' (code 100) in prolog; expected '<'? at [row,col {unknown-source}]: [2,1]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 100, 10, 1, 0]");
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(objectWriter26);
        org.junit.Assert.assertNotNull(featureArray27);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(serializationConfig30);
        org.junit.Assert.assertNotNull(serializerProvider31);
        org.junit.Assert.assertNotNull(featureArray32);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(objectWriter46);
        org.junit.Assert.assertNotNull(objectWriter48);
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(objectWriter56);
        org.junit.Assert.assertNotNull(version61);
        org.junit.Assert.assertNotNull(objectWriter64);
        org.junit.Assert.assertNotNull(objectMapper66);
        org.junit.Assert.assertNotNull(objectMapper68);
        org.junit.Assert.assertTrue("'" + feature74 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature74.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory75);
        org.junit.Assert.assertNotNull(version76);
        org.junit.Assert.assertNotNull(featureClass77);
        org.junit.Assert.assertNotNull(featureItor78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(javaType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(keyDeserializer84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test215");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper12.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = objectMapper12.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = objectMapper12.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature20 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = xmlFactory19.disable(feature20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass23 = xmlFactory21.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = serializerProvider15.getUnknownTypeSerializer(featureClass23);
        java.util.TimeZone timeZone25 = serializerProvider15.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory29);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(characterEscapes32);
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.core.Version version38 = xmlFactory37.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory37);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes40 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = xmlMapper39.writer(characterEscapes40);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper39.setNodeFactory(jsonNodeFactory42);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider44 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper39.setFilterProvider(filterProvider44);
        com.fasterxml.jackson.core.JsonParser jsonParser46 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature51 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory52 = xmlFactory50.disable(feature51);
        com.fasterxml.jackson.core.Version version53 = xmlFactory52.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass54 = xmlFactory52.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor55 = objectMapper45.readValues(jsonParser46, featureClass54);
        boolean boolean56 = xmlMapper31.canSerialize(featureClass54);
        com.fasterxml.jackson.databind.BeanProperty beanProperty57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = serializerProvider15.findKeySerializer(featureClass54, beanProperty57);
        java.lang.Enum[] enumArray60 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray61 = (java.lang.Enum<?>[]) enumArray60;
        java.lang.String[] strArray68 = new java.lang.String[] { "xmlInfo", " ", "<String>XML</String>", " ", "hi!", "xmlInfo" };
        java.lang.String[] strArray69 = jacksonXmlAnnotationIntrospector0.findEnumValues(featureClass54, (java.lang.Enum<?>[]) enumArray60, strArray68);
        java.lang.annotation.Annotation annotation70 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean71 = jacksonXmlAnnotationIntrospector0.isAnnotationBundle(annotation70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializationConfig14);
        org.junit.Assert.assertNotNull(serializerProvider15);
        org.junit.Assert.assertTrue("'" + feature20 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature20.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory21);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(featureClass23);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(timeZone25);
        org.junit.Assert.assertEquals(timeZone25.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(objectWriter41);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertTrue("'" + feature51 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature51.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory52);
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(featureClass54);
        org.junit.Assert.assertNotNull(featureItor55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(enumArray60);
        org.junit.Assert.assertNotNull(wildcardEnumArray61);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test216");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.ObjectCodec objectCodec8 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec8, xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = xmlMapper13.writer(characterEscapes14);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray16 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper13.disable(featureArray16);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = objectMapper17.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig19 = objectMapper17.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = objectMapper17.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = objectMapper17.enable(featureArray21);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper5.disable(featureArray21);
        javax.xml.stream.XMLStreamReader xMLStreamReader24 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(characterEscapes31);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray33 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = xmlMapper30.disable(featureArray33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper34.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig36 = objectMapper34.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = objectMapper34.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature42 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = xmlFactory41.disable(feature42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass45 = xmlFactory43.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = serializerProvider37.getUnknownTypeSerializer(featureClass45);
        java.util.TimeZone timeZone47 = serializerProvider37.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper53 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory51);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes54 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter55 = xmlMapper53.writer(characterEscapes54);
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.core.Version version60 = xmlFactory59.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper61 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory59);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes62 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter63 = xmlMapper61.writer(characterEscapes62);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory64 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = xmlMapper61.setNodeFactory(jsonNodeFactory64);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider66 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper67 = xmlMapper61.setFilterProvider(filterProvider66);
        com.fasterxml.jackson.core.JsonParser jsonParser68 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec69 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory70 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory71 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec69, xMLInputFactory70, xMLOutputFactory71);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature73 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory74 = xmlFactory72.disable(feature73);
        com.fasterxml.jackson.core.Version version75 = xmlFactory74.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass76 = xmlFactory74.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor77 = objectMapper67.readValues(jsonParser68, featureClass76);
        boolean boolean78 = xmlMapper53.canSerialize(featureClass76);
        com.fasterxml.jackson.databind.BeanProperty beanProperty79 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = serializerProvider37.findKeySerializer(featureClass76, beanProperty79);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature81 = xmlMapper5.readValue(xMLStreamReader24, featureClass76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(featureArray16);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(serializationConfig19);
        org.junit.Assert.assertNotNull(serializerProvider20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(featureArray33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(serializationConfig36);
        org.junit.Assert.assertNotNull(serializerProvider37);
        org.junit.Assert.assertTrue("'" + feature42 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature42.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory43);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(featureClass45);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(timeZone47);
        org.junit.Assert.assertEquals(timeZone47.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(objectWriter55);
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(objectWriter63);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertNotNull(objectMapper67);
        org.junit.Assert.assertTrue("'" + feature73 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature73.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory74);
        org.junit.Assert.assertNotNull(version75);
        org.junit.Assert.assertNotNull(featureClass76);
        org.junit.Assert.assertNotNull(featureItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test217");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper5.writer();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enable(serializationFeature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(objectWriter11);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test218");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.Module[] moduleArray10 = new com.fasterxml.jackson.databind.Module[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper9.registerModules(moduleArray10);
        com.fasterxml.jackson.annotation.JsonInclude.Include include12 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper9.setSerializationInclusion(include12);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = objectMapper13.disableDefaultTyping();
        com.fasterxml.jackson.core.FormatSchema formatSchema15 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader16 = objectMapper14.reader(formatSchema15);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(moduleArray10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(objectReader16);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test219");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        int int10 = xmlMapper5.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues11 = xmlMapper5.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature12 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean14 = feature12.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper5.disable(feature12);
        com.fasterxml.jackson.databind.JavaType javaType16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = objectMapper15.writerWithType(javaType16);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory18 = objectMapper15.getSerializerFactory();
        com.fasterxml.jackson.databind.MapperFeature mapperFeature19 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = objectMapper15.configure(mapperFeature19, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(injectableValues11);
        org.junit.Assert.assertTrue("'" + feature12 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature12.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(serializerFactory18);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test220");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper5);
        javax.xml.stream.XMLStreamWriter xMLStreamWriter12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        com.fasterxml.jackson.databind.node.ArrayNode arrayNode23 = objectMapper22.createArrayNode();
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper5.writeValue(xMLStreamWriter12, (java.lang.Object) arrayNode23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(arrayNode23);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test221");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        byte[] byteArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser14 = xmlFactory12.createJsonParser(byteArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test222");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping6 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper5.enableDefaultTypingAsProperty(defaultTyping6, "XML");
        com.fasterxml.jackson.core.ObjectCodec objectCodec9 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec9, xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.core.Version version13 = xmlFactory12.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory12);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes15 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter16 = xmlMapper14.writer(characterEscapes15);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray17 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = xmlMapper14.disable(featureArray17);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = objectMapper18.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig20 = objectMapper18.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = objectMapper18.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec22, xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature26 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = xmlFactory25.disable(feature26);
        com.fasterxml.jackson.core.Version version28 = xmlFactory27.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass29 = xmlFactory27.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = serializerProvider21.getUnknownTypeSerializer(featureClass29);
        java.util.TimeZone timeZone31 = serializerProvider21.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec32 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec32, xMLInputFactory33, xMLOutputFactory34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper37 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory35);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes38 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter39 = xmlMapper37.writer(characterEscapes38);
        com.fasterxml.jackson.core.ObjectCodec objectCodec40 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory41 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec40, xMLInputFactory41, xMLOutputFactory42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper45 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory43);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes46 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter47 = xmlMapper45.writer(characterEscapes46);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory48 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper49 = xmlMapper45.setNodeFactory(jsonNodeFactory48);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider50 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper51 = xmlMapper45.setFilterProvider(filterProvider50);
        com.fasterxml.jackson.core.JsonParser jsonParser52 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec53 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec53, xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature57 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory58 = xmlFactory56.disable(feature57);
        com.fasterxml.jackson.core.Version version59 = xmlFactory58.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass60 = xmlFactory58.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor61 = objectMapper51.readValues(jsonParser52, featureClass60);
        boolean boolean62 = xmlMapper37.canSerialize(featureClass60);
        com.fasterxml.jackson.databind.BeanProperty beanProperty63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = serializerProvider21.findKeySerializer(featureClass60, beanProperty63);
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride65 = objectMapper8.configOverride(featureClass60);
        com.fasterxml.jackson.core.ObjectCodec objectCodec66 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory67 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory68 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory69 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec66, xMLInputFactory67, xMLOutputFactory68);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature70 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory71 = xmlFactory69.disable(feature70);
        java.lang.String str72 = xmlFactory69.getRootValueSeparator();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass73 = xmlFactory69.getFormatReadFeatureType();
        javax.xml.stream.XMLInputFactory xMLInputFactory74 = xmlFactory69.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory75 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory76 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) objectMapper8, xMLInputFactory74, xMLOutputFactory75);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass77 = xmlFactory76.getFormatWriteFeatureType();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(version13);
        org.junit.Assert.assertNotNull(objectWriter16);
        org.junit.Assert.assertNotNull(featureArray17);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(serializationConfig20);
        org.junit.Assert.assertNotNull(serializerProvider21);
        org.junit.Assert.assertTrue("'" + feature26 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature26.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory27);
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(featureClass29);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(timeZone31);
        org.junit.Assert.assertEquals(timeZone31.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(objectWriter39);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(objectWriter47);
        org.junit.Assert.assertNotNull(objectMapper49);
        org.junit.Assert.assertNotNull(objectMapper51);
        org.junit.Assert.assertTrue("'" + feature57 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature57.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory58);
        org.junit.Assert.assertNotNull(version59);
        org.junit.Assert.assertNotNull(featureClass60);
        org.junit.Assert.assertNotNull(featureItor61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertNotNull(mutableConfigOverride65);
        org.junit.Assert.assertTrue("'" + feature70 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature70.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + " " + "'", str72, " ");
        org.junit.Assert.assertNotNull(featureClass73);
        org.junit.Assert.assertNotNull(xMLInputFactory74);
        org.junit.Assert.assertNotNull(featureClass77);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test223");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper4 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test224");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.JsonFactory jsonFactory28 = xmlFactory26.setRootValueSeparator("");
        java.io.DataOutput dataOutput29 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator30 = jsonFactory28.createGenerator(dataOutput29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = serializerProvider12.setAttribute((java.lang.Object) jsonFactory28, (java.lang.Object) ' ');
        com.fasterxml.jackson.databind.BeanProperty beanProperty33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = serializerProvider12.findNullValueSerializer(beanProperty33);
        com.fasterxml.jackson.core.ObjectCodec objectCodec36 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory37 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory38 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec36, xMLInputFactory37, xMLOutputFactory38);
        com.fasterxml.jackson.core.JsonFactory jsonFactory41 = xmlFactory39.setRootValueSeparator("");
        java.io.DataOutput dataOutput42 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator43 = jsonFactory41.createGenerator(dataOutput42);
        jsonGenerator43.writeOmittedField("");
        // The following exception was thrown during execution in test generation
        try {
            serializerProvider12.defaultSerializeDateValue((long) (short) 0, jsonGenerator43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No element/attribute name specified when trying to output element");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(jsonFactory28);
        org.junit.Assert.assertNotNull(jsonGenerator30);
        org.junit.Assert.assertNotNull(serializerProvider32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(jsonFactory41);
        org.junit.Assert.assertNotNull(jsonGenerator43);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test225");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTypingAsProperty(defaultTyping11, "");
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory14 = objectMapper13.getNodeFactory();
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = objectMapper13.disable(deserializationFeature15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(jsonNodeFactory14);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test226");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray13 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = objectMapper9.enable(featureArray13);
        com.fasterxml.jackson.core.Base64Variant base64Variant15 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader16 = objectMapper9.reader(base64Variant15);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(featureArray13);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(objectReader16);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test227");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.ObjectCodec objectCodec11 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory14 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec11, xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.core.Version version15 = xmlFactory14.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory14);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes17 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = xmlMapper16.writer(characterEscapes17);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray19 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper16.disable(featureArray19);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = objectMapper20.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig22 = objectMapper20.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = objectMapper20.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec24 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec24, xMLInputFactory25, xMLOutputFactory26);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature28 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = xmlFactory27.disable(feature28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass31 = xmlFactory29.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = serializerProvider23.getUnknownTypeSerializer(featureClass31);
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory34 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec33, xMLInputFactory34, xMLOutputFactory35);
        com.fasterxml.jackson.core.Version version37 = xmlFactory36.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper38 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory36);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes39 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter40 = xmlMapper38.writer(characterEscapes39);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper38.setNodeFactory(jsonNodeFactory41);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper38.setFilterProvider(filterProvider43);
        com.fasterxml.jackson.core.JsonParser jsonParser45 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature50 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = xmlFactory49.disable(feature50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass53 = xmlFactory51.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor54 = objectMapper44.readValues(jsonParser45, featureClass53);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = xmlMapper5.addMixIn(featureClass31, featureClass53);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature56 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper57 = xmlMapper5.enable(deserializationFeature56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(objectWriter18);
        org.junit.Assert.assertNotNull(featureArray19);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(serializationConfig22);
        org.junit.Assert.assertNotNull(serializerProvider23);
        org.junit.Assert.assertTrue("'" + feature28 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature28.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory29);
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(featureClass31);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(objectWriter40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertTrue("'" + feature50 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature50.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory51);
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(featureClass53);
        org.junit.Assert.assertNotNull(featureItor54);
        org.junit.Assert.assertNotNull(objectMapper55);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test228");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        com.fasterxml.jackson.annotation.JsonInclude.Include include11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper5.setSerializationInclusion(include11);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector13 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector15 = jacksonXmlAnnotationIntrospector13.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(characterEscapes22);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray24 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper21.disable(featureArray24);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = objectMapper25.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig27 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = objectMapper25.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec29 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec29, xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature33 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = xmlFactory32.disable(feature33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass36 = xmlFactory34.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = serializerProvider28.getUnknownTypeSerializer(featureClass36);
        java.util.TimeZone timeZone38 = serializerProvider28.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec39 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory40 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory41 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec39, xMLInputFactory40, xMLOutputFactory41);
        com.fasterxml.jackson.core.Version version43 = xmlFactory42.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper44 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory42);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes45 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter46 = xmlMapper44.writer(characterEscapes45);
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.core.Version version51 = xmlFactory50.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper52 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory50);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes53 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter54 = xmlMapper52.writer(characterEscapes53);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory55 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper56 = xmlMapper52.setNodeFactory(jsonNodeFactory55);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider57 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper58 = xmlMapper52.setFilterProvider(filterProvider57);
        com.fasterxml.jackson.core.JsonParser jsonParser59 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec60 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory61 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory62 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory63 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec60, xMLInputFactory61, xMLOutputFactory62);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature64 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory65 = xmlFactory63.disable(feature64);
        com.fasterxml.jackson.core.Version version66 = xmlFactory65.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass67 = xmlFactory65.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor68 = objectMapper58.readValues(jsonParser59, featureClass67);
        boolean boolean69 = xmlMapper44.canSerialize(featureClass67);
        com.fasterxml.jackson.databind.BeanProperty beanProperty70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = serializerProvider28.findKeySerializer(featureClass67, beanProperty70);
        java.lang.Enum[] enumArray73 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray74 = (java.lang.Enum<?>[]) enumArray73;
        java.lang.String[] strArray81 = new java.lang.String[] { "xmlInfo", " ", "<String>XML</String>", " ", "hi!", "xmlInfo" };
        java.lang.String[] strArray82 = jacksonXmlAnnotationIntrospector13.findEnumValues(featureClass67, (java.lang.Enum<?>[]) enumArray73, strArray81);
        java.lang.Class<?> wildcardClass83 = xmlMapper5.findMixInClassFor(featureClass67);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature84 = null;
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature85 = null;
        com.fasterxml.jackson.databind.SerializationFeature[] serializationFeatureArray86 = new com.fasterxml.jackson.databind.SerializationFeature[] { serializationFeature85 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper87 = xmlMapper5.enable(serializationFeature84, serializationFeatureArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector15);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(featureArray24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(serializationConfig27);
        org.junit.Assert.assertNotNull(serializerProvider28);
        org.junit.Assert.assertTrue("'" + feature33 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature33.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory34);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(featureClass36);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNotNull(timeZone38);
        org.junit.Assert.assertEquals(timeZone38.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(objectWriter46);
        org.junit.Assert.assertNotNull(version51);
        org.junit.Assert.assertNotNull(objectWriter54);
        org.junit.Assert.assertNotNull(objectMapper56);
        org.junit.Assert.assertNotNull(objectMapper58);
        org.junit.Assert.assertTrue("'" + feature64 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature64.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory65);
        org.junit.Assert.assertNotNull(version66);
        org.junit.Assert.assertNotNull(featureClass67);
        org.junit.Assert.assertNotNull(featureItor68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertNotNull(enumArray73);
        org.junit.Assert.assertNotNull(wildcardEnumArray74);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNull(wildcardClass83);
        org.junit.Assert.assertNotNull(serializationFeatureArray86);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test229");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.Version version27 = xmlFactory26.version();
        com.fasterxml.jackson.core.io.OutputDecorator outputDecorator28 = xmlFactory26.getOutputDecorator();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass29 = xmlFactory26.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.BeanProperty beanProperty30 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = serializerProvider12.findPrimaryPropertySerializer(featureClass29, beanProperty30);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNull(outputDecorator28);
        org.junit.Assert.assertNotNull(featureClass29);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test230");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature3 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper5 = xmlMapper2.configure(feature3, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test231");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor21 = objectMapper11.readValues(jsonParser12, featureClass20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.databind.introspect.Annotated annotated25 = null;
        java.lang.Boolean boolean26 = pair24.isOutputAsCData(annotated25);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector27 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair29 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector27, annotationIntrospector28);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector30 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair32 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector30, annotationIntrospector31);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair29, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair24, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper11.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = objectMapper11.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.InjectableValues injectableValues37 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper11.setInjectableValues(injectableValues37);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature39 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader40 = objectMapper11.reader(deserializationFeature39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(featureItor21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(pair34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(objectMapper38);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test232");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper4 = xmlMapper2.setDefaultUseWrapper(false);
        java.io.DataInput dataInput5 = null;
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature7 = xmlMapper4.readValue(dataInput5, featureClass6);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: InputData source not (yet?) support for this format (XML)");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(xmlMapper4);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test233");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper5.writer(filterProvider8);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper5.writer(contextAttributes10);
        com.fasterxml.jackson.databind.MapperFeature mapperFeature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper5.configure(mapperFeature12, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectWriter11);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test234");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.enableDefaultTypingAsProperty(defaultTyping10, "XML");
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray22 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.disable(featureArray22);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = xmlMapper19.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(characterEscapes31);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray33 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = xmlMapper30.disable(featureArray33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper34.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig36 = objectMapper34.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = objectMapper34.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature42 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = xmlFactory41.disable(feature42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass45 = xmlFactory43.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = serializerProvider37.getUnknownTypeSerializer(featureClass45);
        java.util.TimeZone timeZone47 = serializerProvider37.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper53 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory51);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes54 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter55 = xmlMapper53.writer(characterEscapes54);
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.core.Version version60 = xmlFactory59.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper61 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory59);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes62 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter63 = xmlMapper61.writer(characterEscapes62);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory64 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = xmlMapper61.setNodeFactory(jsonNodeFactory64);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider66 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper67 = xmlMapper61.setFilterProvider(filterProvider66);
        com.fasterxml.jackson.core.JsonParser jsonParser68 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec69 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory70 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory71 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec69, xMLInputFactory70, xMLOutputFactory71);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature73 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory74 = xmlFactory72.disable(feature73);
        com.fasterxml.jackson.core.Version version75 = xmlFactory74.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass76 = xmlFactory74.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor77 = objectMapper67.readValues(jsonParser68, featureClass76);
        boolean boolean78 = xmlMapper53.canSerialize(featureClass76);
        com.fasterxml.jackson.databind.JavaType javaType79 = serializerProvider37.constructType((java.lang.reflect.Type) featureClass76);
        com.fasterxml.jackson.databind.ObjectReader objectReader80 = xmlMapper24.readerFor(javaType79);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.SerializationConfig serializationConfig81 = objectMapper12.readValue("xmlInfo", javaType79);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxUnexpectedCharException: Unexpected character 'x' (code 120) in prolog; expected '<'? at [row,col {unknown-source}]: [1,1]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(featureArray22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(xmlMapper24);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(featureArray33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(serializationConfig36);
        org.junit.Assert.assertNotNull(serializerProvider37);
        org.junit.Assert.assertTrue("'" + feature42 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature42.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory43);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(featureClass45);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(timeZone47);
        org.junit.Assert.assertEquals(timeZone47.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(objectWriter55);
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(objectWriter63);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertNotNull(objectMapper67);
        org.junit.Assert.assertTrue("'" + feature73 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature73.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory74);
        org.junit.Assert.assertNotNull(version75);
        org.junit.Assert.assertNotNull(featureClass76);
        org.junit.Assert.assertNotNull(featureItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(javaType79);
        org.junit.Assert.assertNotNull(objectReader80);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test235");
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory0 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper1 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory0);
        java.io.OutputStream outputStream2 = null;
        java.lang.Object obj3 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper1.writeValue(outputStream2, obj3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null OutputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test236");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setDefaultPrettyPrinter(prettyPrinter8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.enableDefaultTyping();
        java.net.URL uRL11 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.PrettyPrinter prettyPrinter13 = objectMapper9.readValue(uRL11, typeReference12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test237");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        com.fasterxml.jackson.annotation.JsonInclude.Value value10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper9.setPropertyInclusion(value10);
        java.io.Reader reader12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode13 = xmlMapper9.readTree(reader12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(objectMapper11);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test238");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.setNodeFactory(jsonNodeFactory11);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader14 = xmlMapper8.readerForUpdating((java.lang.Object) xmlFactory13);
        boolean boolean15 = xmlFactory13.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass16 = xmlFactory13.getFormatReadFeatureType();
        boolean boolean17 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass16);
        java.lang.Enum[] enumArray19 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray20 = (java.lang.Enum<?>[]) enumArray19;
        java.lang.String[] strArray21 = null;
        java.lang.String[] strArray22 = jacksonAnnotationIntrospector2.findEnumValues(featureClass16, (java.lang.Enum<?>[]) enumArray19, strArray21);
        com.fasterxml.jackson.databind.introspect.Annotated annotated23 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo24 = jacksonAnnotationIntrospector2.findObjectIdInfo(annotated23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectReader14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(featureClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(enumArray19);
        org.junit.Assert.assertNotNull(wildcardEnumArray20);
        org.junit.Assert.assertNull(strArray22);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test239");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.readerForUpdating((java.lang.Object) xmlFactory10);
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = xmlFactory10.disable(feature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test240");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.JsonFactory jsonFactory28 = xmlFactory26.setRootValueSeparator("");
        java.io.DataOutput dataOutput29 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator30 = jsonFactory28.createGenerator(dataOutput29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = serializerProvider12.setAttribute((java.lang.Object) jsonFactory28, (java.lang.Object) ' ');
        com.fasterxml.jackson.databind.BeanProperty beanProperty33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = serializerProvider12.findNullValueSerializer(beanProperty33);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector36 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair38 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector36, annotationIntrospector37);
        com.fasterxml.jackson.databind.introspect.Annotated annotated39 = null;
        java.lang.Boolean boolean40 = pair38.isOutputAsCData(annotated39);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector41 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair43 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector41, annotationIntrospector42);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector44 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector45 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair46 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector44, annotationIntrospector45);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair47 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair43, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair46);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair48 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair38, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair46);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector49 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair51 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector49, annotationIntrospector50);
        com.fasterxml.jackson.databind.introspect.Annotated annotated52 = null;
        java.lang.Boolean boolean53 = pair51.isOutputAsCData(annotated52);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector54 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair56 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector54, annotationIntrospector55);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector57 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair59 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector57, annotationIntrospector58);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair60 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair56, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair59);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair61 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair51, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair59);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector62 = com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.create((com.fasterxml.jackson.databind.AnnotationIntrospector) pair46, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair59);
        com.fasterxml.jackson.core.ObjectCodec objectCodec63 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory64 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory65 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory66 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec63, xMLInputFactory64, xMLOutputFactory65);
        com.fasterxml.jackson.core.JsonFactory jsonFactory68 = xmlFactory66.setRootValueSeparator("");
        java.io.DataOutput dataOutput69 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator70 = jsonFactory68.createGenerator(dataOutput69);
        boolean boolean71 = jsonGenerator70.canWriteTypeId();
        jsonGenerator70.writeStartArray((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            serializerProvider12.defaultSerializeField("", (java.lang.Object) pair46, jsonGenerator70);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonGenerationException; message: Can not write a field name, expecting a value");
        } catch (com.fasterxml.jackson.core.JsonGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(jsonFactory28);
        org.junit.Assert.assertNotNull(jsonGenerator30);
        org.junit.Assert.assertNotNull(serializerProvider32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(pair48);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(pair61);
        org.junit.Assert.assertNotNull(annotationIntrospector62);
        org.junit.Assert.assertNotNull(jsonFactory68);
        org.junit.Assert.assertNotNull(jsonGenerator70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test241");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        jacksonXmlAnnotationIntrospector0.setDefaultUseWrapper(false);
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector4 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(true);
        com.fasterxml.jackson.databind.introspect.Annotated annotated5 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory6 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory7 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory6, xMLOutputFactory7);
        com.fasterxml.jackson.core.JsonParser jsonParser9 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec10 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec10, xMLInputFactory11, xMLOutputFactory12);
        com.fasterxml.jackson.core.Version version14 = xmlFactory13.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory13);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(characterEscapes16);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray18 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.disable(featureArray18);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = xmlMapper15.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec21 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory22 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec21, xMLInputFactory22, xMLOutputFactory23);
        com.fasterxml.jackson.core.Version version25 = xmlFactory24.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper26 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory24);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes27 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter28 = xmlMapper26.writer(characterEscapes27);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray29 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper30 = xmlMapper26.disable(featureArray29);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = objectMapper30.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig32 = objectMapper30.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = objectMapper30.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature38 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = xmlFactory37.disable(feature38);
        com.fasterxml.jackson.core.Version version40 = xmlFactory39.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass41 = xmlFactory39.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = serializerProvider33.getUnknownTypeSerializer(featureClass41);
        java.util.TimeZone timeZone43 = serializerProvider33.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.core.Version version48 = xmlFactory47.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper49 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory47);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes50 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter51 = xmlMapper49.writer(characterEscapes50);
        com.fasterxml.jackson.core.ObjectCodec objectCodec52 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory53 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory54 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory55 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec52, xMLInputFactory53, xMLOutputFactory54);
        com.fasterxml.jackson.core.Version version56 = xmlFactory55.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper57 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory55);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes58 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter59 = xmlMapper57.writer(characterEscapes58);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory60 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper61 = xmlMapper57.setNodeFactory(jsonNodeFactory60);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider62 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper63 = xmlMapper57.setFilterProvider(filterProvider62);
        com.fasterxml.jackson.core.JsonParser jsonParser64 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec65 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory66 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory67 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory68 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec65, xMLInputFactory66, xMLOutputFactory67);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature69 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory70 = xmlFactory68.disable(feature69);
        com.fasterxml.jackson.core.Version version71 = xmlFactory70.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass72 = xmlFactory70.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor73 = objectMapper63.readValues(jsonParser64, featureClass72);
        boolean boolean74 = xmlMapper49.canSerialize(featureClass72);
        com.fasterxml.jackson.databind.JavaType javaType75 = serializerProvider33.constructType((java.lang.reflect.Type) featureClass72);
        com.fasterxml.jackson.databind.ObjectReader objectReader76 = xmlMapper20.readerFor(javaType75);
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.databind.cfg.MapperConfigBase<com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.SerializationConfig>> serializationFeatureMapperConfigBaseItor77 = xmlMapper8.readValues(jsonParser9, javaType75);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass78 = jacksonAnnotationIntrospector4.findSerializationContentType(annotated5, javaType75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector4);
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(featureArray18);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(xmlMapper20);
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(objectWriter28);
        org.junit.Assert.assertNotNull(featureArray29);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(serializationConfig32);
        org.junit.Assert.assertNotNull(serializerProvider33);
        org.junit.Assert.assertTrue("'" + feature38 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature38.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory39);
        org.junit.Assert.assertNotNull(version40);
        org.junit.Assert.assertNotNull(featureClass41);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(timeZone43);
        org.junit.Assert.assertEquals(timeZone43.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(objectWriter51);
        org.junit.Assert.assertNotNull(version56);
        org.junit.Assert.assertNotNull(objectWriter59);
        org.junit.Assert.assertNotNull(objectMapper61);
        org.junit.Assert.assertNotNull(objectMapper63);
        org.junit.Assert.assertTrue("'" + feature69 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature69.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory70);
        org.junit.Assert.assertNotNull(version71);
        org.junit.Assert.assertNotNull(featureClass72);
        org.junit.Assert.assertNotNull(featureItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(javaType75);
        org.junit.Assert.assertNotNull(objectReader76);
        org.junit.Assert.assertNotNull(serializationFeatureMapperConfigBaseItor77);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test242");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext3 = xmlMapper2.getDeserializationContext();
        com.fasterxml.jackson.core.Version version4 = xmlMapper2.version();
        java.io.DataInput dataInput5 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.core.Version version10 = xmlFactory9.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory9);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper11.writer(characterEscapes12);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray14 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper11.disable(featureArray14);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = objectMapper15.enableDefaultTypingAsProperty(defaultTyping16, "XML");
        com.fasterxml.jackson.core.ObjectCodec objectCodec19 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory22 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec19, xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.core.Version version23 = xmlFactory22.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory22);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes25 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter26 = xmlMapper24.writer(characterEscapes25);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray27 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = xmlMapper24.disable(featureArray27);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext29 = xmlMapper24.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping30 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper24.enableDefaultTypingAsProperty(defaultTyping30, "");
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory33 = objectMapper32.getNodeFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.core.Version version38 = xmlFactory37.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory37);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes40 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = xmlMapper39.writer(characterEscapes40);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray42 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper39.disable(featureArray42);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = objectMapper43.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig45 = objectMapper43.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = objectMapper43.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature51 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory52 = xmlFactory50.disable(feature51);
        com.fasterxml.jackson.core.Version version53 = xmlFactory52.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass54 = xmlFactory52.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = serializerProvider46.getUnknownTypeSerializer(featureClass54);
        java.util.TimeZone timeZone56 = serializerProvider46.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec57 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory58 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory59 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory60 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec57, xMLInputFactory58, xMLOutputFactory59);
        com.fasterxml.jackson.core.Version version61 = xmlFactory60.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper62 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory60);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes63 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter64 = xmlMapper62.writer(characterEscapes63);
        com.fasterxml.jackson.core.ObjectCodec objectCodec65 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory66 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory67 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory68 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec65, xMLInputFactory66, xMLOutputFactory67);
        com.fasterxml.jackson.core.Version version69 = xmlFactory68.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper70 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory68);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes71 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter72 = xmlMapper70.writer(characterEscapes71);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory73 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper74 = xmlMapper70.setNodeFactory(jsonNodeFactory73);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider75 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper76 = xmlMapper70.setFilterProvider(filterProvider75);
        com.fasterxml.jackson.core.JsonParser jsonParser77 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec78 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory79 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory80 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory81 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec78, xMLInputFactory79, xMLOutputFactory80);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature82 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory83 = xmlFactory81.disable(feature82);
        com.fasterxml.jackson.core.Version version84 = xmlFactory83.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass85 = xmlFactory83.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor86 = objectMapper76.readValues(jsonParser77, featureClass85);
        boolean boolean87 = xmlMapper62.canSerialize(featureClass85);
        com.fasterxml.jackson.databind.JavaType javaType88 = serializerProvider46.constructType((java.lang.reflect.Type) featureClass85);
        boolean boolean89 = objectMapper32.canDeserialize(javaType88);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference90 = null;
        boolean boolean91 = objectMapper15.canDeserialize(javaType88, throwableAtomicReference90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.RandomAccess randomAccess92 = xmlMapper2.readValue(dataInput5, javaType88);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: InputData source not (yet?) support for this format (XML)");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deserializationContext3);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(version10);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(featureArray14);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(objectWriter26);
        org.junit.Assert.assertNotNull(featureArray27);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertNotNull(deserializationContext29);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(jsonNodeFactory33);
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(objectWriter41);
        org.junit.Assert.assertNotNull(featureArray42);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(serializationConfig45);
        org.junit.Assert.assertNotNull(serializerProvider46);
        org.junit.Assert.assertTrue("'" + feature51 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature51.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory52);
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(featureClass54);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertNotNull(timeZone56);
        org.junit.Assert.assertEquals(timeZone56.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version61);
        org.junit.Assert.assertNotNull(objectWriter64);
        org.junit.Assert.assertNotNull(version69);
        org.junit.Assert.assertNotNull(objectWriter72);
        org.junit.Assert.assertNotNull(objectMapper74);
        org.junit.Assert.assertNotNull(objectMapper76);
        org.junit.Assert.assertTrue("'" + feature82 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature82.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory83);
        org.junit.Assert.assertNotNull(version84);
        org.junit.Assert.assertNotNull(featureClass85);
        org.junit.Assert.assertNotNull(featureItor86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(javaType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test243");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory11 = xmlMapper5.getSerializerFactory();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode13 = xmlMapper5.readTree(" ");
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxEOFException: Unexpected EOF in prolog? at [row,col {unknown-source}]: [1,1]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(serializerFactory11);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test244");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass8 = xmlFactory5.getFormatReadFeatureType();
        boolean boolean9 = xmlFactory5.requiresPropertyOrdering();
        boolean boolean10 = xmlFactory5.canHandleBinaryNatively();
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(featureClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test245");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray13 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = objectMapper9.enable(featureArray13);
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider15 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = objectMapper9.setSerializerProvider(defaultSerializerProvider15);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext17 = objectMapper9.getDeserializationContext();
        com.fasterxml.jackson.databind.introspect.Annotated annotated18 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo19 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdGenerator<?> wildcardObjectIdGenerator20 = deserializationContext17.objectIdGeneratorInstance(annotated18, objectIdInfo19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(featureArray13);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(deserializationContext17);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test246");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector3 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair5 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector3, annotationIntrospector4);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair6 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair2, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair5);
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec7, xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.Version version11 = xmlFactory10.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory10);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = xmlMapper12.writer(characterEscapes13);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray15 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper12.disable(featureArray15);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext17 = xmlMapper12.getDeserializationContext();
        com.fasterxml.jackson.core.Version version18 = xmlMapper12.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper12.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig20 = xmlMapper12.getSerializationConfig();
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod annotatedMethod21 = null;
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod annotatedMethod22 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.introspect.AnnotatedMethod annotatedMethod23 = pair5.resolveSetterConflict((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig20, annotatedMethod21, annotatedMethod22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter14);
        org.junit.Assert.assertNotNull(featureArray15);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(deserializationContext17);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(serializationConfig20);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test247");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        com.fasterxml.jackson.annotation.JsonInclude.Value value10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper9.setPropertyInclusion(value10);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature12 = null;
        com.fasterxml.jackson.databind.SerializationFeature[] serializationFeatureArray13 = new com.fasterxml.jackson.databind.SerializationFeature[] {};
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper9.enable(serializationFeature12, serializationFeatureArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(serializationFeatureArray13);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test248");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper1 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0);
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider2 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper3 = xmlMapper1.setSerializerProvider(defaultSerializerProvider2);
        com.fasterxml.jackson.core.JsonFactory jsonFactory4 = xmlMapper1.getJsonFactory();
        byte[] byteArray5 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader7 = xmlMapper1.readValue(byteArray5, typeReference6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(jsonFactory4);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test249");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.JsonFactory jsonFactory28 = xmlFactory26.setRootValueSeparator("");
        java.io.DataOutput dataOutput29 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator30 = jsonFactory28.createGenerator(dataOutput29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = serializerProvider12.setAttribute((java.lang.Object) jsonFactory28, (java.lang.Object) ' ');
        com.fasterxml.jackson.databind.BeanProperty beanProperty33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = serializerProvider12.findNullValueSerializer(beanProperty33);
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory38);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper40.writer(characterEscapes41);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider43 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter44 = xmlMapper40.writer(filterProvider43);
        com.fasterxml.jackson.databind.node.ArrayNode arrayNode45 = xmlMapper40.createArrayNode();
        java.lang.Object obj46 = serializerProvider12.getAttribute((java.lang.Object) xmlMapper40);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator48 = null;
        // The following exception was thrown during execution in test generation
        try {
            serializerProvider12.defaultSerializeDateValue((long) 'a', jsonGenerator48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(jsonFactory28);
        org.junit.Assert.assertNotNull(jsonGenerator30);
        org.junit.Assert.assertNotNull(serializerProvider32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertNotNull(objectWriter44);
        org.junit.Assert.assertNotNull(arrayNode45);
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test250");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper1 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0);
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature2 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper4 = xmlMapper1.configure(feature2, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test251");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper12.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = objectMapper12.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = objectMapper12.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature20 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = xmlFactory19.disable(feature20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass23 = xmlFactory21.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = serializerProvider15.getUnknownTypeSerializer(featureClass23);
        java.util.TimeZone timeZone25 = serializerProvider15.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory29);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(characterEscapes32);
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.core.Version version38 = xmlFactory37.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory37);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes40 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = xmlMapper39.writer(characterEscapes40);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper39.setNodeFactory(jsonNodeFactory42);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider44 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper39.setFilterProvider(filterProvider44);
        com.fasterxml.jackson.core.JsonParser jsonParser46 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature51 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory52 = xmlFactory50.disable(feature51);
        com.fasterxml.jackson.core.Version version53 = xmlFactory52.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass54 = xmlFactory52.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor55 = objectMapper45.readValues(jsonParser46, featureClass54);
        boolean boolean56 = xmlMapper31.canSerialize(featureClass54);
        com.fasterxml.jackson.databind.BeanProperty beanProperty57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = serializerProvider15.findKeySerializer(featureClass54, beanProperty57);
        java.lang.Enum[] enumArray60 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray61 = (java.lang.Enum<?>[]) enumArray60;
        java.lang.String[] strArray68 = new java.lang.String[] { "xmlInfo", " ", "<String>XML</String>", " ", "hi!", "xmlInfo" };
        java.lang.String[] strArray69 = jacksonXmlAnnotationIntrospector0.findEnumValues(featureClass54, (java.lang.Enum<?>[]) enumArray60, strArray68);
        com.fasterxml.jackson.databind.introspect.Annotated annotated70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = jacksonXmlAnnotationIntrospector0.findFilterId(annotated70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializationConfig14);
        org.junit.Assert.assertNotNull(serializerProvider15);
        org.junit.Assert.assertTrue("'" + feature20 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature20.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory21);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(featureClass23);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(timeZone25);
        org.junit.Assert.assertEquals(timeZone25.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(objectWriter41);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertTrue("'" + feature51 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature51.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory52);
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(featureClass54);
        org.junit.Assert.assertNotNull(featureItor55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(enumArray60);
        org.junit.Assert.assertNotNull(wildcardEnumArray61);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test252");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.Annotated annotated1 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec2 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec2, xMLInputFactory3, xMLOutputFactory4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper7.writer(characterEscapes8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper7.writer(filterProvider10);
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.Version version16 = xmlFactory15.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory15);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(characterEscapes18);
        com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory23 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec20, xMLInputFactory21, xMLOutputFactory22);
        com.fasterxml.jackson.core.Version version24 = xmlFactory23.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory23);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes26 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter27 = xmlMapper25.writer(characterEscapes26);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory28 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = xmlMapper25.setNodeFactory(jsonNodeFactory28);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider30 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper25.setFilterProvider(filterProvider30);
        com.fasterxml.jackson.core.JsonParser jsonParser32 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory34 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec33, xMLInputFactory34, xMLOutputFactory35);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature37 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = xmlFactory36.disable(feature37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass40 = xmlFactory38.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor41 = objectMapper31.readValues(jsonParser32, featureClass40);
        boolean boolean42 = xmlMapper17.canSerialize(featureClass40);
        boolean boolean43 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass40);
        com.fasterxml.jackson.databind.JavaType javaType44 = xmlMapper7.constructType((java.lang.reflect.Type) featureClass40);
        boolean boolean45 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass46 = jacksonXmlAnnotationIntrospector0.findSerializationKeyType(annotated1, javaType44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectWriter11);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(objectWriter27);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertTrue("'" + feature37 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature37.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory38);
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(featureClass40);
        org.junit.Assert.assertNotNull(featureItor41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(javaType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test253");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTypingAsProperty(defaultTyping11, "");
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory14 = objectMapper13.getNodeFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec15 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec15, xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory18);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper20.writer(characterEscapes21);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray23 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper20.disable(featureArray23);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = objectMapper24.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper24.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = objectMapper24.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec28 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec28, xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature32 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = xmlFactory31.disable(feature32);
        com.fasterxml.jackson.core.Version version34 = xmlFactory33.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass35 = xmlFactory33.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = serializerProvider27.getUnknownTypeSerializer(featureClass35);
        java.util.TimeZone timeZone37 = serializerProvider27.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.core.Version version42 = xmlFactory41.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper43 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory41);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes44 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter45 = xmlMapper43.writer(characterEscapes44);
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper51 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory49);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes52 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter53 = xmlMapper51.writer(characterEscapes52);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory54 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = xmlMapper51.setNodeFactory(jsonNodeFactory54);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider56 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper57 = xmlMapper51.setFilterProvider(filterProvider56);
        com.fasterxml.jackson.core.JsonParser jsonParser58 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec59 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory60 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory61 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory62 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec59, xMLInputFactory60, xMLOutputFactory61);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature63 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory64 = xmlFactory62.disable(feature63);
        com.fasterxml.jackson.core.Version version65 = xmlFactory64.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass66 = xmlFactory64.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor67 = objectMapper57.readValues(jsonParser58, featureClass66);
        boolean boolean68 = xmlMapper43.canSerialize(featureClass66);
        com.fasterxml.jackson.databind.JavaType javaType69 = serializerProvider27.constructType((java.lang.reflect.Type) featureClass66);
        boolean boolean70 = objectMapper13.canDeserialize(javaType69);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature71 = null;
        com.fasterxml.jackson.databind.SerializationFeature[] serializationFeatureArray72 = new com.fasterxml.jackson.databind.SerializationFeature[] {};
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper73 = objectMapper13.disable(serializationFeature71, serializationFeatureArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(jsonNodeFactory14);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(featureArray23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(serializerProvider27);
        org.junit.Assert.assertTrue("'" + feature32 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature32.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory33);
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertNotNull(featureClass35);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(timeZone37);
        org.junit.Assert.assertEquals(timeZone37.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version42);
        org.junit.Assert.assertNotNull(objectWriter45);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(objectWriter53);
        org.junit.Assert.assertNotNull(objectMapper55);
        org.junit.Assert.assertNotNull(objectMapper57);
        org.junit.Assert.assertTrue("'" + feature63 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature63.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory64);
        org.junit.Assert.assertNotNull(version65);
        org.junit.Assert.assertNotNull(featureClass66);
        org.junit.Assert.assertNotNull(featureItor67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(javaType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(serializationFeatureArray72);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test254");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.readerForUpdating((java.lang.Object) xmlFactory10);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = xmlMapper5.copy();
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext13 = xmlMapper5.getDeserializationContext();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
        org.junit.Assert.assertNotNull(xmlMapper12);
        org.junit.Assert.assertNotNull(deserializationContext13);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test255");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature8 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper7.disable(feature8);
        java.io.DataInput dataInput10 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec11 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory14 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec11, xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.core.Version version15 = xmlFactory14.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory14);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes17 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = xmlMapper16.writer(characterEscapes17);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray19 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper16.disable(featureArray19);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = objectMapper20.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig22 = objectMapper20.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = objectMapper20.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec24 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec24, xMLInputFactory25, xMLOutputFactory26);
        com.fasterxml.jackson.core.Version version28 = xmlFactory27.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper29 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory27);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes30 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter31 = xmlMapper29.writer(characterEscapes30);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray32 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = xmlMapper29.disable(featureArray32);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext34 = xmlMapper29.getDeserializationContext();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper29);
        com.fasterxml.jackson.core.ObjectCodec objectCodec36 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory37 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory38 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec36, xMLInputFactory37, xMLOutputFactory38);
        com.fasterxml.jackson.core.Version version40 = xmlFactory39.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper41 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory39);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes42 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter43 = xmlMapper41.writer(characterEscapes42);
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.core.Version version48 = xmlFactory47.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper49 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory47);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes50 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter51 = xmlMapper49.writer(characterEscapes50);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory52 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper53 = xmlMapper49.setNodeFactory(jsonNodeFactory52);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider54 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = xmlMapper49.setFilterProvider(filterProvider54);
        com.fasterxml.jackson.core.JsonParser jsonParser56 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec57 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory58 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory59 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory60 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec57, xMLInputFactory58, xMLOutputFactory59);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature61 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory62 = xmlFactory60.disable(feature61);
        com.fasterxml.jackson.core.Version version63 = xmlFactory62.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass64 = xmlFactory62.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor65 = objectMapper55.readValues(jsonParser56, featureClass64);
        boolean boolean66 = xmlMapper41.canSerialize(featureClass64);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference67 = null;
        boolean boolean68 = xmlMapper29.canSerialize(featureClass64, throwableAtomicReference67);
        com.fasterxml.jackson.databind.BeanProperty beanProperty70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = serializerProvider23.findTypedValueSerializer(featureClass64, false, beanProperty70);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature72 = objectMapper9.readValue(dataInput10, featureClass64);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: InputData source not (yet?) support for this format (XML)");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertTrue("'" + feature8 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature8.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(objectWriter18);
        org.junit.Assert.assertNotNull(featureArray19);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(serializationConfig22);
        org.junit.Assert.assertNotNull(serializerProvider23);
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(objectWriter31);
        org.junit.Assert.assertNotNull(featureArray32);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(deserializationContext34);
        org.junit.Assert.assertNotNull(version40);
        org.junit.Assert.assertNotNull(objectWriter43);
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(objectWriter51);
        org.junit.Assert.assertNotNull(objectMapper53);
        org.junit.Assert.assertNotNull(objectMapper55);
        org.junit.Assert.assertTrue("'" + feature61 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature61.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory62);
        org.junit.Assert.assertNotNull(version63);
        org.junit.Assert.assertNotNull(featureClass64);
        org.junit.Assert.assertNotNull(featureItor65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test256");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory13 = serializerProvider12.getTypeFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory22 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.setNodeFactory(jsonNodeFactory22);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader25 = xmlMapper19.readerForUpdating((java.lang.Object) xmlFactory24);
        boolean boolean26 = xmlFactory24.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass27 = xmlFactory24.getFormatReadFeatureType();
        boolean boolean28 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass27);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = serializerProvider12.getUnknownTypeSerializer(featureClass27);
        java.util.Date date30 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.core.JsonFactory jsonFactory36 = xmlFactory34.setRootValueSeparator("");
        java.io.DataOutput dataOutput37 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator38 = jsonFactory36.createGenerator(dataOutput37);
        boolean boolean39 = jsonGenerator38.canWriteTypeId();
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes40 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator41 = jsonGenerator38.setCharacterEscapes(characterEscapes40);
        // The following exception was thrown during execution in test generation
        try {
            serializerProvider12.defaultSerializeDateValue(date30, jsonGenerator41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(typeFactory13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(objectReader25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(featureClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(jsonFactory36);
        org.junit.Assert.assertNotNull(jsonGenerator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(jsonGenerator41);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test257");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping6 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper5.enableDefaultTypingAsProperty(defaultTyping6, "XML");
        com.fasterxml.jackson.core.ObjectCodec objectCodec9 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec9, xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.core.Version version13 = xmlFactory12.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory12);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes15 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter16 = xmlMapper14.writer(characterEscapes15);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray17 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = xmlMapper14.disable(featureArray17);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = objectMapper18.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig20 = objectMapper18.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = objectMapper18.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec22, xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature26 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = xmlFactory25.disable(feature26);
        com.fasterxml.jackson.core.Version version28 = xmlFactory27.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass29 = xmlFactory27.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = serializerProvider21.getUnknownTypeSerializer(featureClass29);
        java.util.TimeZone timeZone31 = serializerProvider21.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec32 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec32, xMLInputFactory33, xMLOutputFactory34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper37 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory35);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes38 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter39 = xmlMapper37.writer(characterEscapes38);
        com.fasterxml.jackson.core.ObjectCodec objectCodec40 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory41 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec40, xMLInputFactory41, xMLOutputFactory42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper45 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory43);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes46 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter47 = xmlMapper45.writer(characterEscapes46);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory48 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper49 = xmlMapper45.setNodeFactory(jsonNodeFactory48);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider50 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper51 = xmlMapper45.setFilterProvider(filterProvider50);
        com.fasterxml.jackson.core.JsonParser jsonParser52 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec53 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec53, xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature57 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory58 = xmlFactory56.disable(feature57);
        com.fasterxml.jackson.core.Version version59 = xmlFactory58.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass60 = xmlFactory58.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor61 = objectMapper51.readValues(jsonParser52, featureClass60);
        boolean boolean62 = xmlMapper37.canSerialize(featureClass60);
        com.fasterxml.jackson.databind.BeanProperty beanProperty63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = serializerProvider21.findKeySerializer(featureClass60, beanProperty63);
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride65 = objectMapper8.configOverride(featureClass60);
        com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig66 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper67 = objectMapper8.setConfig(deserializationConfig66);
        com.fasterxml.jackson.core.ObjectCodec objectCodec68 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory69 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory70 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory71 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec68, xMLInputFactory69, xMLOutputFactory70);
        com.fasterxml.jackson.core.Version version72 = xmlFactory71.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper73 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory71);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes74 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter75 = xmlMapper73.writer(characterEscapes74);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray76 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper77 = xmlMapper73.disable(featureArray76);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper78 = objectMapper67.disable(featureArray76);
        java.io.Reader reader79 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray81 = objectMapper67.readValue(reader79, typeReference80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(version13);
        org.junit.Assert.assertNotNull(objectWriter16);
        org.junit.Assert.assertNotNull(featureArray17);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(serializationConfig20);
        org.junit.Assert.assertNotNull(serializerProvider21);
        org.junit.Assert.assertTrue("'" + feature26 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature26.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory27);
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(featureClass29);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(timeZone31);
        org.junit.Assert.assertEquals(timeZone31.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(objectWriter39);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(objectWriter47);
        org.junit.Assert.assertNotNull(objectMapper49);
        org.junit.Assert.assertNotNull(objectMapper51);
        org.junit.Assert.assertTrue("'" + feature57 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature57.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory58);
        org.junit.Assert.assertNotNull(version59);
        org.junit.Assert.assertNotNull(featureClass60);
        org.junit.Assert.assertNotNull(featureItor61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertNotNull(mutableConfigOverride65);
        org.junit.Assert.assertNotNull(objectMapper67);
        org.junit.Assert.assertNotNull(version72);
        org.junit.Assert.assertNotNull(objectWriter75);
        org.junit.Assert.assertNotNull(featureArray76);
        org.junit.Assert.assertNotNull(objectMapper77);
        org.junit.Assert.assertNotNull(objectMapper78);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test258");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper5);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = xmlMapper5.isEnabled(serializationFeature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test259");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.core.ObjectCodec objectCodec1 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory2 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory3 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory4 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec1, xMLInputFactory2, xMLOutputFactory3);
        com.fasterxml.jackson.core.Version version5 = xmlFactory4.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory4);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(characterEscapes7);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray9 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper6.disable(featureArray9);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext11 = xmlMapper6.getDeserializationContext();
        com.fasterxml.jackson.core.Version version12 = xmlMapper6.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper6.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper6.enableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec15 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec15, xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory18);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper20.writer(characterEscapes21);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray23 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper20.disable(featureArray23);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = objectMapper24.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper24.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper6.setMixInResolver((com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver) serializationConfig26);
        com.fasterxml.jackson.databind.introspect.AnnotatedMember annotatedMember28 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec29 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec29, xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.core.Version version33 = xmlFactory32.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper34 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory32);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes35 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = xmlMapper34.writer(characterEscapes35);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray37 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper34.disable(featureArray37);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper39 = objectMapper38.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig40 = objectMapper38.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider41 = objectMapper38.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec42 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory45 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec42, xMLInputFactory43, xMLOutputFactory44);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature46 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = xmlFactory45.disable(feature46);
        com.fasterxml.jackson.core.Version version48 = xmlFactory47.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass49 = xmlFactory47.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer50 = serializerProvider41.getUnknownTypeSerializer(featureClass49);
        com.fasterxml.jackson.core.ObjectCodec objectCodec51 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory52 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory53 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory54 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec51, xMLInputFactory52, xMLOutputFactory53);
        com.fasterxml.jackson.core.Version version55 = xmlFactory54.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper56 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory54);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes57 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter58 = xmlMapper56.writer(characterEscapes57);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory59 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper60 = xmlMapper56.setNodeFactory(jsonNodeFactory59);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory61 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader62 = xmlMapper56.readerForUpdating((java.lang.Object) xmlFactory61);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass63 = xmlFactory61.getFormatWriteFeatureType();
        com.fasterxml.jackson.databind.JavaType javaType64 = serializerProvider41.constructType((java.lang.reflect.Type) featureClass63);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?> wildcardTypeResolverBuilder65 = jacksonXmlAnnotationIntrospector0.findPropertyTypeResolver((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig26, annotatedMember28, javaType64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(featureArray9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(deserializationContext11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(featureArray23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(featureArray37);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper39);
        org.junit.Assert.assertNotNull(serializationConfig40);
        org.junit.Assert.assertNotNull(serializerProvider41);
        org.junit.Assert.assertTrue("'" + feature46 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature46.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory47);
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(featureClass49);
        org.junit.Assert.assertNotNull(objJsonSerializer50);
        org.junit.Assert.assertNotNull(version55);
        org.junit.Assert.assertNotNull(objectWriter58);
        org.junit.Assert.assertNotNull(objectMapper60);
        org.junit.Assert.assertNotNull(objectReader62);
        org.junit.Assert.assertNotNull(featureClass63);
        org.junit.Assert.assertNotNull(javaType64);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test260");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.annotation.JsonInclude.Value value3 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper4 = xmlMapper2.setPropertyInclusion(value3);
        com.fasterxml.jackson.databind.MapperFeature mapperFeature5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper7 = xmlMapper2.configure(mapperFeature5, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper4);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test261");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        java.io.OutputStream outputStream12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory21 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.setNodeFactory(jsonNodeFactory21);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory23 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader24 = xmlMapper18.readerForUpdating((java.lang.Object) xmlFactory23);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper18);
        // The following exception was thrown during execution in test generation
        try {
            objectMapper9.writeValue(outputStream12, (java.lang.Object) xmlMapper18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null OutputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectReader24);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test262");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.ObjectCodec objectCodec8 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec8, xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = xmlMapper13.writer(characterEscapes14);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray16 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper13.disable(featureArray16);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = objectMapper17.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig19 = objectMapper17.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider20 = objectMapper17.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = objectMapper17.enable(featureArray21);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper5.disable(featureArray21);
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory24 = objectMapper23.getTypeFactory();
        java.io.Reader reader25 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory29);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(characterEscapes32);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper31.writer(filterProvider34);
        com.fasterxml.jackson.core.ObjectCodec objectCodec36 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory37 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory38 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec36, xMLInputFactory37, xMLOutputFactory38);
        com.fasterxml.jackson.core.Version version40 = xmlFactory39.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper41 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory39);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes42 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter43 = xmlMapper41.writer(characterEscapes42);
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.core.Version version48 = xmlFactory47.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper49 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory47);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes50 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter51 = xmlMapper49.writer(characterEscapes50);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory52 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper53 = xmlMapper49.setNodeFactory(jsonNodeFactory52);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider54 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = xmlMapper49.setFilterProvider(filterProvider54);
        com.fasterxml.jackson.core.JsonParser jsonParser56 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec57 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory58 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory59 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory60 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec57, xMLInputFactory58, xMLOutputFactory59);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature61 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory62 = xmlFactory60.disable(feature61);
        com.fasterxml.jackson.core.Version version63 = xmlFactory62.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass64 = xmlFactory62.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor65 = objectMapper55.readValues(jsonParser56, featureClass64);
        boolean boolean66 = xmlMapper41.canSerialize(featureClass64);
        boolean boolean67 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass64);
        com.fasterxml.jackson.databind.JavaType javaType68 = xmlMapper31.constructType((java.lang.reflect.Type) featureClass64);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader69 = objectMapper23.readValue(reader25, javaType68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(featureArray16);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(serializationConfig19);
        org.junit.Assert.assertNotNull(serializerProvider20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(typeFactory24);
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertNotNull(version40);
        org.junit.Assert.assertNotNull(objectWriter43);
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(objectWriter51);
        org.junit.Assert.assertNotNull(objectMapper53);
        org.junit.Assert.assertNotNull(objectMapper55);
        org.junit.Assert.assertTrue("'" + feature61 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature61.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory62);
        org.junit.Assert.assertNotNull(version63);
        org.junit.Assert.assertNotNull(featureClass64);
        org.junit.Assert.assertNotNull(featureItor65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(javaType68);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test263");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper5.writer(filterProvider8);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass10 = null;
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride11 = xmlMapper5.configOverride(featureClass10);
        com.fasterxml.jackson.core.Version version12 = xmlMapper5.version();
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = xmlMapper5.writer(characterEscapes13);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(mutableConfigOverride11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertNotNull(objectWriter14);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test264");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.enableDefaultTypingAsProperty(defaultTyping10, "XML");
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy13 = objectMapper9.getPropertyNamingStrategy();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = objectMapper9.writer(filterProvider14);
        java.io.InputStream inputStream16 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider25 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter26 = xmlMapper22.writer(filterProvider25);
        com.fasterxml.jackson.core.ObjectCodec objectCodec27 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory28 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec27, xMLInputFactory28, xMLOutputFactory29);
        com.fasterxml.jackson.core.Version version31 = xmlFactory30.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper32 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory30);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes33 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter34 = xmlMapper32.writer(characterEscapes33);
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory38);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper40.writer(characterEscapes41);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper40.setNodeFactory(jsonNodeFactory43);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider45 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper46 = xmlMapper40.setFilterProvider(filterProvider45);
        com.fasterxml.jackson.core.JsonParser jsonParser47 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature52 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory53 = xmlFactory51.disable(feature52);
        com.fasterxml.jackson.core.Version version54 = xmlFactory53.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass55 = xmlFactory53.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor56 = objectMapper46.readValues(jsonParser47, featureClass55);
        boolean boolean57 = xmlMapper32.canSerialize(featureClass55);
        boolean boolean58 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass55);
        com.fasterxml.jackson.databind.JavaType javaType59 = xmlMapper22.constructType((java.lang.reflect.Type) featureClass55);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Iterable<com.fasterxml.jackson.databind.Module> moduleIterable60 = objectMapper9.readValue(inputStream16, javaType59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNull(propertyNamingStrategy13);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(objectWriter26);
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(objectWriter34);
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(objectMapper46);
        org.junit.Assert.assertTrue("'" + feature52 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature52.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory53);
        org.junit.Assert.assertNotNull(version54);
        org.junit.Assert.assertNotNull(featureClass55);
        org.junit.Assert.assertNotNull(featureItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(javaType59);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test265");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        jacksonXmlAnnotationIntrospector0.setDefaultUseWrapper(false);
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector4 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(true);
        com.fasterxml.jackson.databind.introspect.Annotated annotated5 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.core.Version version10 = xmlFactory9.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory9);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper11.writer(characterEscapes12);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray14 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper11.disable(featureArray14);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = xmlMapper11.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray25 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.disable(featureArray25);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = objectMapper26.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig28 = objectMapper26.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider29 = objectMapper26.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec30 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec30, xMLInputFactory31, xMLOutputFactory32);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature34 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = xmlFactory33.disable(feature34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass37 = xmlFactory35.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = serializerProvider29.getUnknownTypeSerializer(featureClass37);
        java.util.TimeZone timeZone39 = serializerProvider29.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec40 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory41 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec40, xMLInputFactory41, xMLOutputFactory42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper45 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory43);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes46 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter47 = xmlMapper45.writer(characterEscapes46);
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper53 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory51);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes54 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter55 = xmlMapper53.writer(characterEscapes54);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory56 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper57 = xmlMapper53.setNodeFactory(jsonNodeFactory56);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider58 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper59 = xmlMapper53.setFilterProvider(filterProvider58);
        com.fasterxml.jackson.core.JsonParser jsonParser60 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec61 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory62 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory63 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory64 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec61, xMLInputFactory62, xMLOutputFactory63);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature65 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory66 = xmlFactory64.disable(feature65);
        com.fasterxml.jackson.core.Version version67 = xmlFactory66.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass68 = xmlFactory66.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor69 = objectMapper59.readValues(jsonParser60, featureClass68);
        boolean boolean70 = xmlMapper45.canSerialize(featureClass68);
        com.fasterxml.jackson.databind.JavaType javaType71 = serializerProvider29.constructType((java.lang.reflect.Type) featureClass68);
        com.fasterxml.jackson.databind.ObjectReader objectReader72 = xmlMapper16.readerFor(javaType71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass73 = jacksonAnnotationIntrospector4.findDeserializationKeyType(annotated5, javaType71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector4);
        org.junit.Assert.assertNotNull(version10);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(featureArray14);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(xmlMapper16);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(featureArray25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(serializationConfig28);
        org.junit.Assert.assertNotNull(serializerProvider29);
        org.junit.Assert.assertTrue("'" + feature34 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature34.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory35);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(featureClass37);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(timeZone39);
        org.junit.Assert.assertEquals(timeZone39.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(objectWriter47);
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(objectWriter55);
        org.junit.Assert.assertNotNull(objectMapper57);
        org.junit.Assert.assertNotNull(objectMapper59);
        org.junit.Assert.assertTrue("'" + feature65 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature65.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory66);
        org.junit.Assert.assertNotNull(version67);
        org.junit.Assert.assertNotNull(featureClass68);
        org.junit.Assert.assertNotNull(featureItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(javaType71);
        org.junit.Assert.assertNotNull(objectReader72);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test266");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec22, xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.core.Version version26 = xmlFactory25.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory25);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes28 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter29 = xmlMapper27.writer(characterEscapes28);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory30 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper27.setNodeFactory(jsonNodeFactory30);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader33 = xmlMapper27.readerForUpdating((java.lang.Object) xmlFactory32);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass34 = xmlFactory32.getFormatWriteFeatureType();
        com.fasterxml.jackson.databind.JavaType javaType35 = serializerProvider12.constructType((java.lang.reflect.Type) featureClass34);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass36 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty37 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = serializerProvider12.findPrimaryPropertySerializer(featureClass36, beanProperty37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(objectWriter29);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(objectReader33);
        org.junit.Assert.assertNotNull(featureClass34);
        org.junit.Assert.assertNotNull(javaType35);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test267");
        com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier xmlBeanDeserializerModifier1 = new com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier(" ");
        com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig2 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper8.writer(filterProvider11);
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.ObjectCodec objectCodec21 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory22 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec21, xMLInputFactory22, xMLOutputFactory23);
        com.fasterxml.jackson.core.Version version25 = xmlFactory24.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper26 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory24);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes27 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter28 = xmlMapper26.writer(characterEscapes27);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory29 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper30 = xmlMapper26.setNodeFactory(jsonNodeFactory29);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider31 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper26.setFilterProvider(filterProvider31);
        com.fasterxml.jackson.core.JsonParser jsonParser33 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature38 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = xmlFactory37.disable(feature38);
        com.fasterxml.jackson.core.Version version40 = xmlFactory39.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass41 = xmlFactory39.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor42 = objectMapper32.readValues(jsonParser33, featureClass41);
        boolean boolean43 = xmlMapper18.canSerialize(featureClass41);
        boolean boolean44 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass41);
        com.fasterxml.jackson.databind.JavaType javaType45 = xmlMapper8.constructType((java.lang.reflect.Type) featureClass41);
        boolean boolean46 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType45);
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer47 = null;
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer48 = xmlBeanDeserializerModifier1.modifyKeyDeserializer(deserializationConfig2, javaType45, keyDeserializer47);
        boolean boolean49 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType45);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(objectWriter28);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertTrue("'" + feature38 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature38.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory39);
        org.junit.Assert.assertNotNull(version40);
        org.junit.Assert.assertNotNull(featureClass41);
        org.junit.Assert.assertNotNull(featureItor42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(javaType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(keyDeserializer48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test268");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper5.writer(filterProvider8);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = xmlMapper5.isEnabled(serializationFeature10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectWriter9);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test269");
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory0 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper1 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory0);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature2 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_DECLARATION;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory4 = xmlFactory0.configure(feature2, true);
        java.io.OutputStream outputStream5 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator7 = xmlFactory0.createGenerator(outputStream5, jsonEncoding6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null OutputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature2 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_DECLARATION + "'", feature2.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_DECLARATION));
        org.junit.Assert.assertNotNull(xmlFactory4);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test270");
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory0 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper1 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory0);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature2 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_DECLARATION;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory4 = xmlFactory0.configure(feature2, true);
        int int5 = feature2.getMask();
        org.junit.Assert.assertTrue("'" + feature2 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_DECLARATION + "'", feature2.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_DECLARATION));
        org.junit.Assert.assertNotNull(xmlFactory4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test271");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext12 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.JsonParser jsonParser13 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray22 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.disable(featureArray22);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = objectMapper23.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig25 = objectMapper23.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = objectMapper23.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec27 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory28 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec27, xMLInputFactory28, xMLOutputFactory29);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature31 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = xmlFactory30.disable(feature31);
        com.fasterxml.jackson.core.Version version33 = xmlFactory32.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass34 = xmlFactory32.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = serializerProvider26.getUnknownTypeSerializer(featureClass34);
        com.fasterxml.jackson.core.ObjectCodec objectCodec36 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory37 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory38 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec36, xMLInputFactory37, xMLOutputFactory38);
        com.fasterxml.jackson.core.Version version40 = xmlFactory39.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper41 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory39);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes42 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter43 = xmlMapper41.writer(characterEscapes42);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory44 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper41.setNodeFactory(jsonNodeFactory44);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader47 = xmlMapper41.readerForUpdating((java.lang.Object) xmlFactory46);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass48 = xmlFactory46.getFormatWriteFeatureType();
        com.fasterxml.jackson.databind.JavaType javaType49 = serializerProvider26.constructType((java.lang.reflect.Type) featureClass48);
        com.fasterxml.jackson.databind.MappingIterator<java.text.DateFormat> dateFormatItor50 = xmlMapper5.readValues(jsonParser13, javaType49);
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature51 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper52 = xmlMapper5.disable(feature51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(deserializationContext12);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(featureArray22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(serializationConfig25);
        org.junit.Assert.assertNotNull(serializerProvider26);
        org.junit.Assert.assertTrue("'" + feature31 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature31.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory32);
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(featureClass34);
        org.junit.Assert.assertNotNull(objJsonSerializer35);
        org.junit.Assert.assertNotNull(version40);
        org.junit.Assert.assertNotNull(objectWriter43);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertNotNull(objectReader47);
        org.junit.Assert.assertNotNull(featureClass48);
        org.junit.Assert.assertNotNull(javaType49);
        org.junit.Assert.assertNotNull(dateFormatItor50);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test272");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.core.ObjectCodec objectCodec1 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory2 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory3 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory4 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec1, xMLInputFactory2, xMLOutputFactory3);
        com.fasterxml.jackson.core.Version version5 = xmlFactory4.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory4);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(characterEscapes7);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray9 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper6.disable(featureArray9);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper10.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig12 = objectMapper10.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = objectMapper10.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray14 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = objectMapper10.enable(featureArray14);
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = objectMapper10.setSerializerProvider(defaultSerializerProvider16);
        com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier xmlBeanDeserializerModifier19 = new com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier(" ");
        com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig20 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec21 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory22 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec21, xMLInputFactory22, xMLOutputFactory23);
        com.fasterxml.jackson.core.Version version25 = xmlFactory24.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper26 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory24);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes27 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter28 = xmlMapper26.writer(characterEscapes27);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper26.writer(filterProvider29);
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory34);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes37 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter38 = xmlMapper36.writer(characterEscapes37);
        com.fasterxml.jackson.core.ObjectCodec objectCodec39 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory40 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory41 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec39, xMLInputFactory40, xMLOutputFactory41);
        com.fasterxml.jackson.core.Version version43 = xmlFactory42.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper44 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory42);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes45 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter46 = xmlMapper44.writer(characterEscapes45);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory47 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper48 = xmlMapper44.setNodeFactory(jsonNodeFactory47);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider49 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper50 = xmlMapper44.setFilterProvider(filterProvider49);
        com.fasterxml.jackson.core.JsonParser jsonParser51 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec52 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory53 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory54 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory55 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec52, xMLInputFactory53, xMLOutputFactory54);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature56 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory57 = xmlFactory55.disable(feature56);
        com.fasterxml.jackson.core.Version version58 = xmlFactory57.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass59 = xmlFactory57.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor60 = objectMapper50.readValues(jsonParser51, featureClass59);
        boolean boolean61 = xmlMapper36.canSerialize(featureClass59);
        boolean boolean62 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass59);
        com.fasterxml.jackson.databind.JavaType javaType63 = xmlMapper26.constructType((java.lang.reflect.Type) featureClass59);
        boolean boolean64 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType63);
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer65 = null;
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer66 = xmlBeanDeserializerModifier19.modifyKeyDeserializer(deserializationConfig20, javaType63, keyDeserializer65);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference67 = null;
        boolean boolean68 = objectMapper10.canDeserialize(javaType63, throwableAtomicReference67);
        boolean boolean69 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType63);
        com.fasterxml.jackson.core.ObjectCodec objectCodec70 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory71 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory72 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory73 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec70, xMLInputFactory71, xMLOutputFactory72);
        com.fasterxml.jackson.core.Version version74 = xmlFactory73.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper75 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory73);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes76 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter77 = xmlMapper75.writer(characterEscapes76);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray78 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper79 = xmlMapper75.disable(featureArray78);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping80 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper82 = objectMapper79.enableDefaultTypingAsProperty(defaultTyping80, "XML");
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy83 = objectMapper79.getPropertyNamingStrategy();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider84 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter85 = objectMapper79.writer(filterProvider84);
        com.fasterxml.jackson.core.ObjectCodec objectCodec86 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory87 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory88 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory89 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec86, xMLInputFactory87, xMLOutputFactory88);
        com.fasterxml.jackson.core.Version version90 = xmlFactory89.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper91 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory89);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes92 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter93 = xmlMapper91.writer(characterEscapes92);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray94 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper95 = xmlMapper91.disable(featureArray94);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper96 = objectMapper95.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig97 = objectMapper95.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper98 = objectMapper79.setConfig(serializationConfig97);
        javax.xml.namespace.QName qName99 = xmlRootNameLookup0.findRootName(javaType63, (com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig97);
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(featureArray9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(serializationConfig12);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(featureArray14);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(objectWriter28);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(objectWriter38);
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(objectWriter46);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertNotNull(objectMapper50);
        org.junit.Assert.assertTrue("'" + feature56 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature56.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory57);
        org.junit.Assert.assertNotNull(version58);
        org.junit.Assert.assertNotNull(featureClass59);
        org.junit.Assert.assertNotNull(featureItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(javaType63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(keyDeserializer66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(version74);
        org.junit.Assert.assertNotNull(objectWriter77);
        org.junit.Assert.assertNotNull(featureArray78);
        org.junit.Assert.assertNotNull(objectMapper79);
        org.junit.Assert.assertNotNull(objectMapper82);
        org.junit.Assert.assertNull(propertyNamingStrategy83);
        org.junit.Assert.assertNotNull(objectWriter85);
        org.junit.Assert.assertNotNull(version90);
        org.junit.Assert.assertNotNull(objectWriter93);
        org.junit.Assert.assertNotNull(featureArray94);
        org.junit.Assert.assertNotNull(objectMapper95);
        org.junit.Assert.assertNotNull(objectMapper96);
        org.junit.Assert.assertNotNull(serializationConfig97);
        org.junit.Assert.assertNotNull(objectMapper98);
        org.junit.Assert.assertNotNull(qName99);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test273");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.annotation.JsonInclude.Value value3 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper4 = xmlMapper2.setPropertyInclusion(value3);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper5 = xmlMapper2.findAndRegisterModules();
        com.fasterxml.jackson.databind.InjectableValues injectableValues6 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper7 = objectMapper5.setInjectableValues(injectableValues6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = objectMapper7.writer(characterEscapes8);
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertNotNull(objectWriter9);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test274");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.enableDefaultTypingAsProperty(defaultTyping10, "XML");
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy13 = objectMapper9.getPropertyNamingStrategy();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = objectMapper9.writer(filterProvider14);
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(characterEscapes22);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray24 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper21.disable(featureArray24);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = objectMapper25.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig27 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = objectMapper9.setConfig(serializationConfig27);
        com.fasterxml.jackson.databind.MapperFeature mapperFeature29 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = objectMapper9.configure(mapperFeature29, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNull(propertyNamingStrategy13);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(featureArray24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(serializationConfig27);
        org.junit.Assert.assertNotNull(objectMapper28);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test275");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.annotation.JsonInclude.Value value3 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper4 = xmlMapper2.setPropertyInclusion(value3);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper5 = xmlMapper2.findAndRegisterModules();
        com.fasterxml.jackson.databind.InjectableValues injectableValues6 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper7 = objectMapper5.setInjectableValues(injectableValues6);
        com.fasterxml.jackson.core.ObjectCodec objectCodec8 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec8, xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = xmlMapper13.writer(characterEscapes14);
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(characterEscapes22);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper21.setNodeFactory(jsonNodeFactory24);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider26 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper21.setFilterProvider(filterProvider26);
        com.fasterxml.jackson.core.JsonParser jsonParser28 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec29 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec29, xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature33 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = xmlFactory32.disable(feature33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass36 = xmlFactory34.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor37 = objectMapper27.readValues(jsonParser28, featureClass36);
        boolean boolean38 = xmlMapper13.canSerialize(featureClass36);
        boolean boolean39 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass36);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper40 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper5.acceptJsonFormatVisitor(featureClass36, jsonFormatVisitorWrapper40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertTrue("'" + feature33 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature33.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory34);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(featureClass36);
        org.junit.Assert.assertNotNull(featureItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test276");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        com.fasterxml.jackson.core.ObjectCodec objectCodec10 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec10, xMLInputFactory11, xMLOutputFactory12);
        com.fasterxml.jackson.core.Version version14 = xmlFactory13.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory13);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(characterEscapes16);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper15.writer(filterProvider18);
        com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory23 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec20, xMLInputFactory21, xMLOutputFactory22);
        com.fasterxml.jackson.core.Version version24 = xmlFactory23.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory23);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes26 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter27 = xmlMapper25.writer(characterEscapes26);
        com.fasterxml.jackson.core.ObjectCodec objectCodec28 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec28, xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.core.Version version32 = xmlFactory31.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper33 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory31);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper33.writer(characterEscapes34);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory36 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = xmlMapper33.setNodeFactory(jsonNodeFactory36);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider38 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper39 = xmlMapper33.setFilterProvider(filterProvider38);
        com.fasterxml.jackson.core.JsonParser jsonParser40 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec41 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory42 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory43 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory44 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec41, xMLInputFactory42, xMLOutputFactory43);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature45 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = xmlFactory44.disable(feature45);
        com.fasterxml.jackson.core.Version version47 = xmlFactory46.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass48 = xmlFactory46.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor49 = objectMapper39.readValues(jsonParser40, featureClass48);
        boolean boolean50 = xmlMapper25.canSerialize(featureClass48);
        boolean boolean51 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass48);
        com.fasterxml.jackson.databind.JavaType javaType52 = xmlMapper15.constructType((java.lang.reflect.Type) featureClass48);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper53 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper9.acceptJsonFormatVisitor(javaType52, jsonFormatVisitorWrapper53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(objectWriter27);
        org.junit.Assert.assertNotNull(version32);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(objectMapper39);
        org.junit.Assert.assertTrue("'" + feature45 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature45.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory46);
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(featureClass48);
        org.junit.Assert.assertNotNull(featureItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(javaType52);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test277");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        com.fasterxml.jackson.annotation.JsonInclude.Include include11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper5.setSerializationInclusion(include11);
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = objectMapper22.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig24 = objectMapper22.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = objectMapper22.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature30 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = xmlFactory29.disable(feature30);
        com.fasterxml.jackson.core.Version version32 = xmlFactory31.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass33 = xmlFactory31.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = serializerProvider25.getUnknownTypeSerializer(featureClass33);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector35 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector37 = jacksonXmlAnnotationIntrospector35.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.core.Version version42 = xmlFactory41.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper43 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory41);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes44 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter45 = xmlMapper43.writer(characterEscapes44);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory46 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper47 = xmlMapper43.setNodeFactory(jsonNodeFactory46);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader49 = xmlMapper43.readerForUpdating((java.lang.Object) xmlFactory48);
        boolean boolean50 = xmlFactory48.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass51 = xmlFactory48.getFormatReadFeatureType();
        boolean boolean52 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass51);
        java.lang.Enum[] enumArray54 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray55 = (java.lang.Enum<?>[]) enumArray54;
        java.lang.String[] strArray56 = null;
        java.lang.String[] strArray57 = jacksonAnnotationIntrospector37.findEnumValues(featureClass51, (java.lang.Enum<?>[]) enumArray54, strArray56);
        com.fasterxml.jackson.annotation.JsonFormat.Value value58 = serializerProvider25.getDefaultPropertyFormat(featureClass51);
        com.fasterxml.jackson.databind.ObjectReader objectReader59 = objectMapper12.reader(featureClass51);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(serializationConfig24);
        org.junit.Assert.assertNotNull(serializerProvider25);
        org.junit.Assert.assertTrue("'" + feature30 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature30.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory31);
        org.junit.Assert.assertNotNull(version32);
        org.junit.Assert.assertNotNull(featureClass33);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector37);
        org.junit.Assert.assertNotNull(version42);
        org.junit.Assert.assertNotNull(objectWriter45);
        org.junit.Assert.assertNotNull(objectMapper47);
        org.junit.Assert.assertNotNull(objectReader49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(featureClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(enumArray54);
        org.junit.Assert.assertNotNull(wildcardEnumArray55);
        org.junit.Assert.assertNull(strArray57);
        org.junit.Assert.assertNotNull(value58);
        org.junit.Assert.assertNotNull(objectReader59);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test278");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor21 = objectMapper11.readValues(jsonParser12, featureClass20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.databind.introspect.Annotated annotated25 = null;
        java.lang.Boolean boolean26 = pair24.isOutputAsCData(annotated25);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector27 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair29 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector27, annotationIntrospector28);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector30 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair32 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector30, annotationIntrospector31);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair29, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair24, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper11.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod annotatedMethod36 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean37 = pair33.hasAnySetterAnnotation(annotatedMethod36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(featureItor21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(pair34);
        org.junit.Assert.assertNotNull(objectMapper35);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test279");
        com.fasterxml.jackson.core.io.IOContext iOContext0 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext13 = xmlMapper8.getDeserializationContext();
        com.fasterxml.jackson.core.Version version14 = xmlMapper8.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = xmlMapper8.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper8.enableDefaultTyping();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping17 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = objectMapper16.enableDefaultTypingAsProperty(defaultTyping17, " ");
        javax.xml.stream.XMLStreamReader xMLStreamReader20 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser fromXmlParser21 = new com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser(iOContext0, 10, 0, (com.fasterxml.jackson.core.ObjectCodec) objectMapper16, xMLStreamReader20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(deserializationContext13);
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(objectMapper19);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test280");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor21 = objectMapper11.readValues(jsonParser12, featureClass20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.databind.introspect.Annotated annotated25 = null;
        java.lang.Boolean boolean26 = pair24.isOutputAsCData(annotated25);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector27 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair29 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector27, annotationIntrospector28);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector30 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair32 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector30, annotationIntrospector31);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair29, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair24, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper11.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = objectMapper11.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.InjectableValues injectableValues37 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper11.setInjectableValues(injectableValues37);
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter39 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec40 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory41 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec40, xMLInputFactory41, xMLOutputFactory42);
        com.fasterxml.jackson.core.JsonFactory jsonFactory45 = xmlFactory43.setRootValueSeparator("");
        java.io.DataOutput dataOutput46 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator47 = jsonFactory45.createGenerator(dataOutput46);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator49 = jsonGenerator47.setHighestNonEscapedChar((-1));
        boolean boolean50 = jsonGenerator49.canWriteObjectId();
        int int51 = jsonGenerator49.getHighestEscapedChar();
        defaultXmlPrettyPrinter39.writeArrayValueSeparator(jsonGenerator49);
        com.fasterxml.jackson.core.ObjectCodec objectCodec53 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec53, xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.core.JsonFactory jsonFactory58 = xmlFactory56.setRootValueSeparator("");
        java.io.DataOutput dataOutput59 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator60 = jsonFactory58.createGenerator(dataOutput59);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator62 = jsonGenerator60.setHighestNonEscapedChar((-1));
        defaultXmlPrettyPrinter39.beforeObjectEntries(jsonGenerator62);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator64 = null;
        defaultXmlPrettyPrinter39.beforeArrayValues(jsonGenerator64);
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter66 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec67 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory68 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory69 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory70 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec67, xMLInputFactory68, xMLOutputFactory69);
        com.fasterxml.jackson.core.JsonFactory jsonFactory72 = xmlFactory70.setRootValueSeparator("");
        java.io.DataOutput dataOutput73 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator74 = jsonFactory72.createGenerator(dataOutput73);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator76 = jsonGenerator74.setHighestNonEscapedChar((-1));
        boolean boolean77 = jsonGenerator76.canWriteObjectId();
        int int78 = jsonGenerator76.getHighestEscapedChar();
        defaultXmlPrettyPrinter66.writeArrayValueSeparator(jsonGenerator76);
        defaultXmlPrettyPrinter39.writeObjectFieldValueSeparator(jsonGenerator76);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper81 = objectMapper11.setDefaultPrettyPrinter((com.fasterxml.jackson.core.PrettyPrinter) defaultXmlPrettyPrinter39);
        org.codehaus.stax2.XMLStreamWriter2 xMLStreamWriter2_82 = null;
        // The following exception was thrown during execution in test generation
        try {
            defaultXmlPrettyPrinter39.writeLeafNullElement(xMLStreamWriter2_82, "", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(featureItor21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(pair34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(jsonFactory45);
        org.junit.Assert.assertNotNull(jsonGenerator47);
        org.junit.Assert.assertNotNull(jsonGenerator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(jsonFactory58);
        org.junit.Assert.assertNotNull(jsonGenerator60);
        org.junit.Assert.assertNotNull(jsonGenerator62);
        org.junit.Assert.assertNotNull(jsonFactory72);
        org.junit.Assert.assertNotNull(jsonGenerator74);
        org.junit.Assert.assertNotNull(jsonGenerator76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(objectMapper81);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test281");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.ObjectCodec objectCodec4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec4, xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature8 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = xmlFactory7.disable(feature8);
        boolean boolean10 = feature8.enabledByDefault();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.configure(feature8, false);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass13 = xmlFactory12.getFormatWriteFeatureType();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule14 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory12, jacksonXmlModule14);
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(characterEscapes22);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper21.setNodeFactory(jsonNodeFactory24);
        com.fasterxml.jackson.databind.Module[] moduleArray26 = new com.fasterxml.jackson.databind.Module[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = objectMapper25.registerModules(moduleArray26);
        com.fasterxml.jackson.annotation.JsonInclude.Include include28 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = objectMapper25.setSerializationInclusion(include28);
        com.fasterxml.jackson.core.ObjectCodec objectCodec30 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec30, xMLInputFactory31, xMLOutputFactory32);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature34 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = xmlFactory33.disable(feature34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass37 = xmlFactory35.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.jsonschema.JsonSchema jsonSchema38 = objectMapper25.generateJsonSchema(featureClass37);
        com.fasterxml.jackson.core.ObjectCodec objectCodec39 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory40 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory41 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec39, xMLInputFactory40, xMLOutputFactory41);
        com.fasterxml.jackson.core.Version version43 = xmlFactory42.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper44 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory42);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes45 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter46 = xmlMapper44.writer(characterEscapes45);
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.core.Version version51 = xmlFactory50.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper52 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory50);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes53 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter54 = xmlMapper52.writer(characterEscapes53);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory55 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper56 = xmlMapper52.setNodeFactory(jsonNodeFactory55);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider57 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper58 = xmlMapper52.setFilterProvider(filterProvider57);
        com.fasterxml.jackson.core.JsonParser jsonParser59 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec60 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory61 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory62 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory63 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec60, xMLInputFactory61, xMLOutputFactory62);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature64 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory65 = xmlFactory63.disable(feature64);
        com.fasterxml.jackson.core.Version version66 = xmlFactory65.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass67 = xmlFactory65.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor68 = objectMapper58.readValues(jsonParser59, featureClass67);
        boolean boolean69 = xmlMapper44.canSerialize(featureClass67);
        boolean boolean70 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass67);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.module.SimpleModule simpleModule71 = jacksonXmlModule14.addAbstractTypeMapping(featureClass37, featureClass67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Can not add mapping from class to itself");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature8 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature8.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(featureClass13);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(moduleArray26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertTrue("'" + feature34 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature34.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory35);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(featureClass37);
        org.junit.Assert.assertNotNull(jsonSchema38);
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(objectWriter46);
        org.junit.Assert.assertNotNull(version51);
        org.junit.Assert.assertNotNull(objectWriter54);
        org.junit.Assert.assertNotNull(objectMapper56);
        org.junit.Assert.assertNotNull(objectMapper58);
        org.junit.Assert.assertTrue("'" + feature64 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature64.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory65);
        org.junit.Assert.assertNotNull(version66);
        org.junit.Assert.assertNotNull(featureClass67);
        org.junit.Assert.assertNotNull(featureItor68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test282");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper4 = xmlMapper2.setDefaultUseWrapper(false);
        com.fasterxml.jackson.databind.MapperFeature mapperFeature5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper7 = xmlMapper4.configure(mapperFeature5, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(xmlMapper4);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test283");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        java.text.DateFormat dateFormat11 = xmlMapper5.getDateFormat();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature12 = null;
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature13 = null;
        com.fasterxml.jackson.databind.SerializationFeature[] serializationFeatureArray14 = new com.fasterxml.jackson.databind.SerializationFeature[] { serializationFeature13 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper5.disable(serializationFeature12, serializationFeatureArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(dateFormat11);
        org.junit.Assert.assertNotNull(serializationFeatureArray14);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test284");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.core.ObjectCodec objectCodec4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec4, xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.core.Version version8 = xmlFactory7.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper9.writer(characterEscapes10);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray12 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper9.disable(featureArray12);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext14 = xmlMapper9.getDeserializationContext();
        com.fasterxml.jackson.core.Version version15 = xmlMapper9.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter16 = xmlMapper9.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig17 = xmlMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription18 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec19 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory22 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec19, xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.core.Version version23 = xmlFactory22.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory22);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes25 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter26 = xmlMapper24.writer(characterEscapes25);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray27 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = xmlMapper24.disable(featureArray27);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = objectMapper28.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig30 = objectMapper28.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = objectMapper28.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec32 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec32, xMLInputFactory33, xMLOutputFactory34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper37 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory35);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes38 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter39 = xmlMapper37.writer(characterEscapes38);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray40 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = xmlMapper37.disable(featureArray40);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext42 = xmlMapper37.getDeserializationContext();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper37);
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.core.Version version48 = xmlFactory47.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper49 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory47);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes50 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter51 = xmlMapper49.writer(characterEscapes50);
        com.fasterxml.jackson.core.ObjectCodec objectCodec52 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory53 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory54 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory55 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec52, xMLInputFactory53, xMLOutputFactory54);
        com.fasterxml.jackson.core.Version version56 = xmlFactory55.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper57 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory55);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes58 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter59 = xmlMapper57.writer(characterEscapes58);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory60 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper61 = xmlMapper57.setNodeFactory(jsonNodeFactory60);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider62 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper63 = xmlMapper57.setFilterProvider(filterProvider62);
        com.fasterxml.jackson.core.JsonParser jsonParser64 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec65 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory66 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory67 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory68 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec65, xMLInputFactory66, xMLOutputFactory67);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature69 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory70 = xmlFactory68.disable(feature69);
        com.fasterxml.jackson.core.Version version71 = xmlFactory70.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass72 = xmlFactory70.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor73 = objectMapper63.readValues(jsonParser64, featureClass72);
        boolean boolean74 = xmlMapper49.canSerialize(featureClass72);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference75 = null;
        boolean boolean76 = xmlMapper37.canSerialize(featureClass72, throwableAtomicReference75);
        com.fasterxml.jackson.databind.BeanProperty beanProperty78 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer79 = serializerProvider31.findTypedValueSerializer(featureClass72, false, beanProperty78);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = serializerProvider31.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer81 = xmlBeanSerializerModifier3.modifySerializer(serializationConfig17, beanDescription18, objJsonSerializer80);
        com.fasterxml.jackson.databind.introspect.AnnotatedClass annotatedClass82 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray83 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList84 = new java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList84, beanPropertyWriterArray83);
        // The following exception was thrown during execution in test generation
        try {
            jacksonXmlAnnotationIntrospector0.findAndAddVirtualProperties((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig17, annotatedClass82, (java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(objectWriter11);
        org.junit.Assert.assertNotNull(featureArray12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(deserializationContext14);
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(objectWriter16);
        org.junit.Assert.assertNotNull(serializationConfig17);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(objectWriter26);
        org.junit.Assert.assertNotNull(featureArray27);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(serializationConfig30);
        org.junit.Assert.assertNotNull(serializerProvider31);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(objectWriter39);
        org.junit.Assert.assertNotNull(featureArray40);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(deserializationContext42);
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(objectWriter51);
        org.junit.Assert.assertNotNull(version56);
        org.junit.Assert.assertNotNull(objectWriter59);
        org.junit.Assert.assertNotNull(objectMapper61);
        org.junit.Assert.assertNotNull(objectMapper63);
        org.junit.Assert.assertTrue("'" + feature69 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature69.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory70);
        org.junit.Assert.assertNotNull(version71);
        org.junit.Assert.assertNotNull(featureClass72);
        org.junit.Assert.assertNotNull(featureItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer79);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer81);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test285");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        java.lang.Boolean boolean4 = pair2.isOutputAsCData(annotated3);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector5 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair7 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector5, annotationIntrospector6);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector8 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair10 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector8, annotationIntrospector9);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair11 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair7, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair10);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair12 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair2, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair10);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair14 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair12, annotationIntrospector13);
        pair14.setDefaultUseWrapper(false);
        com.fasterxml.jackson.databind.introspect.Annotated annotated17 = null;
        java.lang.String str18 = pair14.findNamespace(annotated17);
        com.fasterxml.jackson.databind.introspect.Annotated annotated19 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory23 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec20, xMLInputFactory21, xMLOutputFactory22);
        com.fasterxml.jackson.core.Version version24 = xmlFactory23.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory23);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes26 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter27 = xmlMapper25.writer(characterEscapes26);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray28 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = xmlMapper25.disable(featureArray28);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext30 = xmlMapper25.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping31 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = xmlMapper25.enableDefaultTypingAsProperty(defaultTyping31, "");
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory34 = objectMapper33.getNodeFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory38);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper40.writer(characterEscapes41);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray43 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper40.disable(featureArray43);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = objectMapper44.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig46 = objectMapper44.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider47 = objectMapper44.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature52 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory53 = xmlFactory51.disable(feature52);
        com.fasterxml.jackson.core.Version version54 = xmlFactory53.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass55 = xmlFactory53.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer56 = serializerProvider47.getUnknownTypeSerializer(featureClass55);
        java.util.TimeZone timeZone57 = serializerProvider47.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec58 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory59 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory60 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory61 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec58, xMLInputFactory59, xMLOutputFactory60);
        com.fasterxml.jackson.core.Version version62 = xmlFactory61.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper63 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory61);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes64 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter65 = xmlMapper63.writer(characterEscapes64);
        com.fasterxml.jackson.core.ObjectCodec objectCodec66 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory67 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory68 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory69 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec66, xMLInputFactory67, xMLOutputFactory68);
        com.fasterxml.jackson.core.Version version70 = xmlFactory69.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper71 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory69);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes72 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter73 = xmlMapper71.writer(characterEscapes72);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory74 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper75 = xmlMapper71.setNodeFactory(jsonNodeFactory74);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider76 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper77 = xmlMapper71.setFilterProvider(filterProvider76);
        com.fasterxml.jackson.core.JsonParser jsonParser78 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec79 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory80 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory81 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory82 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec79, xMLInputFactory80, xMLOutputFactory81);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature83 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory84 = xmlFactory82.disable(feature83);
        com.fasterxml.jackson.core.Version version85 = xmlFactory84.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass86 = xmlFactory84.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor87 = objectMapper77.readValues(jsonParser78, featureClass86);
        boolean boolean88 = xmlMapper63.canSerialize(featureClass86);
        com.fasterxml.jackson.databind.JavaType javaType89 = serializerProvider47.constructType((java.lang.reflect.Type) featureClass86);
        boolean boolean90 = objectMapper33.canDeserialize(javaType89);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass91 = pair14.findDeserializationContentType(annotated19, javaType89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(pair12);
        org.junit.Assert.assertNotNull(pair14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(objectWriter27);
        org.junit.Assert.assertNotNull(featureArray28);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(deserializationContext30);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(jsonNodeFactory34);
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertNotNull(featureArray43);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertNotNull(serializationConfig46);
        org.junit.Assert.assertNotNull(serializerProvider47);
        org.junit.Assert.assertTrue("'" + feature52 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature52.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory53);
        org.junit.Assert.assertNotNull(version54);
        org.junit.Assert.assertNotNull(featureClass55);
        org.junit.Assert.assertNotNull(objJsonSerializer56);
        org.junit.Assert.assertNotNull(timeZone57);
        org.junit.Assert.assertEquals(timeZone57.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version62);
        org.junit.Assert.assertNotNull(objectWriter65);
        org.junit.Assert.assertNotNull(version70);
        org.junit.Assert.assertNotNull(objectWriter73);
        org.junit.Assert.assertNotNull(objectMapper75);
        org.junit.Assert.assertNotNull(objectMapper77);
        org.junit.Assert.assertTrue("'" + feature83 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature83.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory84);
        org.junit.Assert.assertNotNull(version85);
        org.junit.Assert.assertNotNull(featureClass86);
        org.junit.Assert.assertNotNull(featureItor87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(javaType89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test286");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader11 = objectMapper9.reader(deserializationFeature10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test287");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector3 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair5 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector3, annotationIntrospector4);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair6 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair2, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair5);
        com.fasterxml.jackson.databind.introspect.Annotated annotated7 = null;
        java.lang.Boolean boolean8 = pair2.isOutputAsAttribute(annotated7);
        com.fasterxml.jackson.core.ObjectCodec objectCodec9 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec9, xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.core.Version version13 = xmlFactory12.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory12);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes15 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter16 = xmlMapper14.writer(characterEscapes15);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray17 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = xmlMapper14.disable(featureArray17);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = objectMapper18.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig20 = objectMapper18.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = objectMapper18.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec22, xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature26 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = xmlFactory25.disable(feature26);
        com.fasterxml.jackson.core.Version version28 = xmlFactory27.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass29 = xmlFactory27.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = serializerProvider21.getUnknownTypeSerializer(featureClass29);
        java.util.TimeZone timeZone31 = serializerProvider21.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec32 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec32, xMLInputFactory33, xMLOutputFactory34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper37 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory35);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes38 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter39 = xmlMapper37.writer(characterEscapes38);
        com.fasterxml.jackson.core.ObjectCodec objectCodec40 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory41 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec40, xMLInputFactory41, xMLOutputFactory42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper45 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory43);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes46 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter47 = xmlMapper45.writer(characterEscapes46);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory48 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper49 = xmlMapper45.setNodeFactory(jsonNodeFactory48);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider50 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper51 = xmlMapper45.setFilterProvider(filterProvider50);
        com.fasterxml.jackson.core.JsonParser jsonParser52 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec53 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec53, xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature57 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory58 = xmlFactory56.disable(feature57);
        com.fasterxml.jackson.core.Version version59 = xmlFactory58.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass60 = xmlFactory58.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor61 = objectMapper51.readValues(jsonParser52, featureClass60);
        boolean boolean62 = xmlMapper37.canSerialize(featureClass60);
        com.fasterxml.jackson.databind.BeanProperty beanProperty63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = serializerProvider21.findKeySerializer(featureClass60, beanProperty63);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector65 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector67 = jacksonXmlAnnotationIntrospector65.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec68 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory69 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory70 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory71 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec68, xMLInputFactory69, xMLOutputFactory70);
        com.fasterxml.jackson.core.Version version72 = xmlFactory71.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper73 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory71);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes74 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter75 = xmlMapper73.writer(characterEscapes74);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory76 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper77 = xmlMapper73.setNodeFactory(jsonNodeFactory76);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory78 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader79 = xmlMapper73.readerForUpdating((java.lang.Object) xmlFactory78);
        boolean boolean80 = xmlFactory78.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass81 = xmlFactory78.getFormatReadFeatureType();
        boolean boolean82 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass81);
        java.lang.Enum[] enumArray84 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray85 = (java.lang.Enum<?>[]) enumArray84;
        java.lang.String[] strArray86 = null;
        java.lang.String[] strArray87 = jacksonAnnotationIntrospector67.findEnumValues(featureClass81, (java.lang.Enum<?>[]) enumArray84, strArray86);
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!" };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray90 = pair2.findEnumValues(featureClass60, (java.lang.Enum<?>[]) enumArray84, strArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(version13);
        org.junit.Assert.assertNotNull(objectWriter16);
        org.junit.Assert.assertNotNull(featureArray17);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(serializationConfig20);
        org.junit.Assert.assertNotNull(serializerProvider21);
        org.junit.Assert.assertTrue("'" + feature26 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature26.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory27);
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(featureClass29);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(timeZone31);
        org.junit.Assert.assertEquals(timeZone31.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(objectWriter39);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(objectWriter47);
        org.junit.Assert.assertNotNull(objectMapper49);
        org.junit.Assert.assertNotNull(objectMapper51);
        org.junit.Assert.assertTrue("'" + feature57 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature57.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory58);
        org.junit.Assert.assertNotNull(version59);
        org.junit.Assert.assertNotNull(featureClass60);
        org.junit.Assert.assertNotNull(featureItor61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector67);
        org.junit.Assert.assertNotNull(version72);
        org.junit.Assert.assertNotNull(objectWriter75);
        org.junit.Assert.assertNotNull(objectMapper77);
        org.junit.Assert.assertNotNull(objectReader79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(featureClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(enumArray84);
        org.junit.Assert.assertNotNull(wildcardEnumArray85);
        org.junit.Assert.assertNull(strArray87);
        org.junit.Assert.assertNotNull(strArray89);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test288");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory10 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.reader(jsonNodeFactory10);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = xmlMapper5.copy();
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper12.enable(deserializationFeature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
        org.junit.Assert.assertNotNull(xmlMapper12);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test289");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory10 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.reader(jsonNodeFactory10);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = xmlMapper5.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper5.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper14.enable(serializationFeature15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
        org.junit.Assert.assertNotNull(xmlMapper12);
        org.junit.Assert.assertNotNull(xmlMapper14);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test290");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper12.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = objectMapper12.getSerializationConfig();
        com.fasterxml.jackson.databind.introspect.AnnotatedClass annotatedClass15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.core.ObjectCodec objectCodec18 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec18, xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory21);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes24 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter25 = xmlMapper23.writer(characterEscapes24);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray26 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper23.disable(featureArray26);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = objectMapper27.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig29 = objectMapper27.getSerializationConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription30 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder31 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder32 = xmlBeanSerializerModifier17.updateBuilder(serializationConfig29, beanDescription30, beanSerializerBuilder31);
        com.fasterxml.jackson.databind.BeanDescription beanDescription33 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray34 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList35 = new java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList35, beanPropertyWriterArray34);
        java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList37 = xmlBeanSerializerModifier16.changeProperties(serializationConfig29, beanDescription33, (java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList35);
        // The following exception was thrown during execution in test generation
        try {
            jacksonAnnotationIntrospector2.findAndAddVirtualProperties((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig14, annotatedClass15, (java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializationConfig14);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(objectWriter25);
        org.junit.Assert.assertNotNull(featureArray26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertNotNull(serializationConfig29);
        org.junit.Assert.assertNull(beanSerializerBuilder32);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(beanPropertyWriterList37);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test291");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        com.fasterxml.jackson.annotation.JsonInclude.Value value10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper9.setPropertyInclusion(value10);
        java.io.File file12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = xmlMapper18.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec24 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec24, xMLInputFactory25, xMLOutputFactory26);
        com.fasterxml.jackson.core.Version version28 = xmlFactory27.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper29 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory27);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes30 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter31 = xmlMapper29.writer(characterEscapes30);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray32 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = xmlMapper29.disable(featureArray32);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = objectMapper33.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig35 = objectMapper33.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = objectMapper33.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec37 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory38 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory39 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec37, xMLInputFactory38, xMLOutputFactory39);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature41 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = xmlFactory40.disable(feature41);
        com.fasterxml.jackson.core.Version version43 = xmlFactory42.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass44 = xmlFactory42.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = serializerProvider36.getUnknownTypeSerializer(featureClass44);
        java.util.TimeZone timeZone46 = serializerProvider36.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.core.Version version51 = xmlFactory50.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper52 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory50);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes53 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter54 = xmlMapper52.writer(characterEscapes53);
        com.fasterxml.jackson.core.ObjectCodec objectCodec55 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory56 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory57 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory58 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec55, xMLInputFactory56, xMLOutputFactory57);
        com.fasterxml.jackson.core.Version version59 = xmlFactory58.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper60 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory58);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes61 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter62 = xmlMapper60.writer(characterEscapes61);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory63 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper64 = xmlMapper60.setNodeFactory(jsonNodeFactory63);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider65 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper66 = xmlMapper60.setFilterProvider(filterProvider65);
        com.fasterxml.jackson.core.JsonParser jsonParser67 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec68 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory69 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory70 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory71 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec68, xMLInputFactory69, xMLOutputFactory70);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature72 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory73 = xmlFactory71.disable(feature72);
        com.fasterxml.jackson.core.Version version74 = xmlFactory73.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass75 = xmlFactory73.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor76 = objectMapper66.readValues(jsonParser67, featureClass75);
        boolean boolean77 = xmlMapper52.canSerialize(featureClass75);
        com.fasterxml.jackson.databind.JavaType javaType78 = serializerProvider36.constructType((java.lang.reflect.Type) featureClass75);
        com.fasterxml.jackson.databind.ObjectReader objectReader79 = xmlMapper23.readerFor(javaType78);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.AnnotatedElement annotatedElement80 = xmlMapper9.readValue(file12, javaType78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(xmlMapper23);
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(objectWriter31);
        org.junit.Assert.assertNotNull(featureArray32);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(serializationConfig35);
        org.junit.Assert.assertNotNull(serializerProvider36);
        org.junit.Assert.assertTrue("'" + feature41 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature41.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory42);
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(featureClass44);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
        org.junit.Assert.assertNotNull(timeZone46);
        org.junit.Assert.assertEquals(timeZone46.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version51);
        org.junit.Assert.assertNotNull(objectWriter54);
        org.junit.Assert.assertNotNull(version59);
        org.junit.Assert.assertNotNull(objectWriter62);
        org.junit.Assert.assertNotNull(objectMapper64);
        org.junit.Assert.assertNotNull(objectMapper66);
        org.junit.Assert.assertTrue("'" + feature72 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature72.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory73);
        org.junit.Assert.assertNotNull(version74);
        org.junit.Assert.assertNotNull(featureClass75);
        org.junit.Assert.assertNotNull(featureItor76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(javaType78);
        org.junit.Assert.assertNotNull(objectReader79);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test292");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor21 = objectMapper11.readValues(jsonParser12, featureClass20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.databind.introspect.Annotated annotated25 = null;
        java.lang.Boolean boolean26 = pair24.isOutputAsCData(annotated25);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector27 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair29 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector27, annotationIntrospector28);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector30 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair32 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector30, annotationIntrospector31);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair29, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair24, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper11.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = objectMapper11.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.InjectableValues injectableValues37 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper11.setInjectableValues(injectableValues37);
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter39 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec40 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory41 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec40, xMLInputFactory41, xMLOutputFactory42);
        com.fasterxml.jackson.core.JsonFactory jsonFactory45 = xmlFactory43.setRootValueSeparator("");
        java.io.DataOutput dataOutput46 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator47 = jsonFactory45.createGenerator(dataOutput46);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator49 = jsonGenerator47.setHighestNonEscapedChar((-1));
        boolean boolean50 = jsonGenerator49.canWriteObjectId();
        int int51 = jsonGenerator49.getHighestEscapedChar();
        defaultXmlPrettyPrinter39.writeArrayValueSeparator(jsonGenerator49);
        com.fasterxml.jackson.core.ObjectCodec objectCodec53 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec53, xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.core.JsonFactory jsonFactory58 = xmlFactory56.setRootValueSeparator("");
        java.io.DataOutput dataOutput59 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator60 = jsonFactory58.createGenerator(dataOutput59);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator62 = jsonGenerator60.setHighestNonEscapedChar((-1));
        defaultXmlPrettyPrinter39.beforeObjectEntries(jsonGenerator62);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator64 = null;
        defaultXmlPrettyPrinter39.beforeArrayValues(jsonGenerator64);
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter66 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec67 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory68 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory69 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory70 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec67, xMLInputFactory68, xMLOutputFactory69);
        com.fasterxml.jackson.core.JsonFactory jsonFactory72 = xmlFactory70.setRootValueSeparator("");
        java.io.DataOutput dataOutput73 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator74 = jsonFactory72.createGenerator(dataOutput73);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator76 = jsonGenerator74.setHighestNonEscapedChar((-1));
        boolean boolean77 = jsonGenerator76.canWriteObjectId();
        int int78 = jsonGenerator76.getHighestEscapedChar();
        defaultXmlPrettyPrinter66.writeArrayValueSeparator(jsonGenerator76);
        defaultXmlPrettyPrinter39.writeObjectFieldValueSeparator(jsonGenerator76);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper81 = objectMapper11.setDefaultPrettyPrinter((com.fasterxml.jackson.core.PrettyPrinter) defaultXmlPrettyPrinter39);
        org.codehaus.stax2.XMLStreamWriter2 xMLStreamWriter2_82 = null;
        // The following exception was thrown during execution in test generation
        try {
            defaultXmlPrettyPrinter39.writeLeafElement(xMLStreamWriter2_82, "unknown", "", (long) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(featureItor21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(pair34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(jsonFactory45);
        org.junit.Assert.assertNotNull(jsonGenerator47);
        org.junit.Assert.assertNotNull(jsonGenerator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(jsonFactory58);
        org.junit.Assert.assertNotNull(jsonGenerator60);
        org.junit.Assert.assertNotNull(jsonGenerator62);
        org.junit.Assert.assertNotNull(jsonFactory72);
        org.junit.Assert.assertNotNull(jsonGenerator74);
        org.junit.Assert.assertNotNull(jsonGenerator76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(objectMapper81);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test293");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setDefaultPrettyPrinter(prettyPrinter8);
        java.lang.Iterable<com.fasterxml.jackson.databind.Module> moduleIterable10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper9.registerModules(moduleIterable10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test294");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.setNodeFactory(jsonNodeFactory11);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader14 = xmlMapper8.readerForUpdating((java.lang.Object) xmlFactory13);
        boolean boolean15 = xmlFactory13.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass16 = xmlFactory13.getFormatReadFeatureType();
        boolean boolean17 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass16);
        java.lang.Enum[] enumArray19 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray20 = (java.lang.Enum<?>[]) enumArray19;
        java.lang.String[] strArray21 = null;
        java.lang.String[] strArray22 = jacksonAnnotationIntrospector2.findEnumValues(featureClass16, (java.lang.Enum<?>[]) enumArray19, strArray21);
        com.fasterxml.jackson.databind.introspect.Annotated annotated23 = null;
        com.fasterxml.jackson.annotation.JsonInclude.Include include24 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.JsonInclude.Include include25 = jacksonAnnotationIntrospector2.findSerializationInclusionForContent(annotated23, include24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectReader14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(featureClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(enumArray19);
        org.junit.Assert.assertNotNull(wildcardEnumArray20);
        org.junit.Assert.assertNull(strArray22);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test295");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper12.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = objectMapper12.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = objectMapper12.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature20 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = xmlFactory19.disable(feature20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass23 = xmlFactory21.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = serializerProvider15.getUnknownTypeSerializer(featureClass23);
        java.util.TimeZone timeZone25 = serializerProvider15.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory29);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(characterEscapes32);
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.core.Version version38 = xmlFactory37.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory37);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes40 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = xmlMapper39.writer(characterEscapes40);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper39.setNodeFactory(jsonNodeFactory42);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider44 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper39.setFilterProvider(filterProvider44);
        com.fasterxml.jackson.core.JsonParser jsonParser46 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature51 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory52 = xmlFactory50.disable(feature51);
        com.fasterxml.jackson.core.Version version53 = xmlFactory52.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass54 = xmlFactory52.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor55 = objectMapper45.readValues(jsonParser46, featureClass54);
        boolean boolean56 = xmlMapper31.canSerialize(featureClass54);
        com.fasterxml.jackson.databind.BeanProperty beanProperty57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = serializerProvider15.findKeySerializer(featureClass54, beanProperty57);
        java.lang.Enum[] enumArray60 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray61 = (java.lang.Enum<?>[]) enumArray60;
        java.lang.String[] strArray68 = new java.lang.String[] { "xmlInfo", " ", "<String>XML</String>", " ", "hi!", "xmlInfo" };
        java.lang.String[] strArray69 = jacksonXmlAnnotationIntrospector0.findEnumValues(featureClass54, (java.lang.Enum<?>[]) enumArray60, strArray68);
        com.fasterxml.jackson.databind.introspect.AnnotatedClass annotatedClass70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = jacksonXmlAnnotationIntrospector0.findValueInstantiator(annotatedClass70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializationConfig14);
        org.junit.Assert.assertNotNull(serializerProvider15);
        org.junit.Assert.assertTrue("'" + feature20 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature20.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory21);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(featureClass23);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(timeZone25);
        org.junit.Assert.assertEquals(timeZone25.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(objectWriter41);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertTrue("'" + feature51 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature51.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory52);
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(featureClass54);
        org.junit.Assert.assertNotNull(featureItor55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(enumArray60);
        org.junit.Assert.assertNotNull(wildcardEnumArray61);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test296");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext3 = xmlMapper2.getDeserializationContext();
        com.fasterxml.jackson.databind.introspect.Annotated annotated4 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec5 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory6 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory7 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory8 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec5, xMLInputFactory6, xMLOutputFactory7);
        com.fasterxml.jackson.core.Version version9 = xmlFactory8.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory8);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper10.writer(characterEscapes11);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray13 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.disable(featureArray13);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory15 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader16 = xmlMapper10.reader(jsonNodeFactory15);
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(characterEscapes31);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory33 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = xmlMapper30.setNodeFactory(jsonNodeFactory33);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider35 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = xmlMapper30.setFilterProvider(filterProvider35);
        com.fasterxml.jackson.core.JsonParser jsonParser37 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature42 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = xmlFactory41.disable(feature42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass45 = xmlFactory43.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor46 = objectMapper36.readValues(jsonParser37, featureClass45);
        boolean boolean47 = xmlMapper22.canSerialize(featureClass45);
        boolean boolean48 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass45);
        com.fasterxml.jackson.databind.jsonschema.JsonSchema jsonSchema49 = xmlMapper10.generateJsonSchema(featureClass45);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper50 = xmlMapper10.findAndRegisterModules();
        com.fasterxml.jackson.core.ObjectCodec objectCodec51 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory52 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory53 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory54 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec51, xMLInputFactory52, xMLOutputFactory53);
        com.fasterxml.jackson.core.Version version55 = xmlFactory54.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper56 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory54);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes57 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter58 = xmlMapper56.writer(characterEscapes57);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory59 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper60 = xmlMapper56.setNodeFactory(jsonNodeFactory59);
        com.fasterxml.jackson.databind.Module[] moduleArray61 = new com.fasterxml.jackson.databind.Module[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper62 = objectMapper60.registerModules(moduleArray61);
        com.fasterxml.jackson.annotation.JsonInclude.Include include63 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper64 = objectMapper60.setSerializationInclusion(include63);
        com.fasterxml.jackson.core.ObjectCodec objectCodec65 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory66 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory67 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory68 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec65, xMLInputFactory66, xMLOutputFactory67);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature69 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory70 = xmlFactory68.disable(feature69);
        com.fasterxml.jackson.core.Version version71 = xmlFactory70.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass72 = xmlFactory70.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.jsonschema.JsonSchema jsonSchema73 = objectMapper60.generateJsonSchema(featureClass72);
        com.fasterxml.jackson.databind.ObjectReader objectReader74 = xmlMapper10.readerWithView(featureClass72);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter75 = deserializationContext3.converterInstance(annotated4, (java.lang.Object) featureClass72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Class com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature; expected Class<Converter>");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deserializationContext3);
        org.junit.Assert.assertNotNull(version9);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(featureArray13);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(objectReader16);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertTrue("'" + feature42 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature42.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory43);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(featureClass45);
        org.junit.Assert.assertNotNull(featureItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(jsonSchema49);
        org.junit.Assert.assertNotNull(objectMapper50);
        org.junit.Assert.assertNotNull(version55);
        org.junit.Assert.assertNotNull(objectWriter58);
        org.junit.Assert.assertNotNull(objectMapper60);
        org.junit.Assert.assertNotNull(moduleArray61);
        org.junit.Assert.assertNotNull(objectMapper62);
        org.junit.Assert.assertNotNull(objectMapper64);
        org.junit.Assert.assertTrue("'" + feature69 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature69.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory70);
        org.junit.Assert.assertNotNull(version71);
        org.junit.Assert.assertNotNull(featureClass72);
        org.junit.Assert.assertNotNull(jsonSchema73);
        org.junit.Assert.assertNotNull(objectReader74);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test297");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        com.fasterxml.jackson.core.JsonFactory.Feature feature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory14 = xmlFactory3.disable(feature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test298");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean5 = xmlFactory3.isEnabled(feature4);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlFactory9.disable(feature10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature14 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper13.disable(feature14);
        boolean boolean16 = feature14.enabledByDefault();
        boolean boolean17 = xmlFactory3.isEnabled(feature14);
        com.fasterxml.jackson.core.JsonFactory jsonFactory19 = xmlFactory3.setRootValueSeparator(" ");
        java.lang.String str20 = xmlFactory3.getXMLTextElementName();
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + feature14 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature14.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(jsonFactory19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test299");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper5.writer(filterProvider8);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass10 = null;
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride11 = xmlMapper5.configOverride(featureClass10);
        javax.xml.stream.XMLStreamReader xMLStreamReader12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = objectMapper22.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig24 = objectMapper22.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = objectMapper22.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature30 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = xmlFactory29.disable(feature30);
        com.fasterxml.jackson.core.Version version32 = xmlFactory31.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass33 = xmlFactory31.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = serializerProvider25.getUnknownTypeSerializer(featureClass33);
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory38);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper40.writer(characterEscapes41);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper40.setNodeFactory(jsonNodeFactory43);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory45 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader46 = xmlMapper40.readerForUpdating((java.lang.Object) xmlFactory45);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass47 = xmlFactory45.getFormatWriteFeatureType();
        com.fasterxml.jackson.databind.JavaType javaType48 = serializerProvider25.constructType((java.lang.reflect.Type) featureClass47);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder49 = xmlMapper5.readValue(xMLStreamReader12, javaType48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(mutableConfigOverride11);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(serializationConfig24);
        org.junit.Assert.assertNotNull(serializerProvider25);
        org.junit.Assert.assertTrue("'" + feature30 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature30.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory31);
        org.junit.Assert.assertNotNull(version32);
        org.junit.Assert.assertNotNull(featureClass33);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(objectReader46);
        org.junit.Assert.assertNotNull(featureClass47);
        org.junit.Assert.assertNotNull(javaType48);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test300");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        int int10 = xmlMapper5.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues11 = xmlMapper5.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature12 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean14 = feature12.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper5.disable(feature12);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature16 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader17 = objectMapper15.reader(deserializationFeature16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(injectableValues11);
        org.junit.Assert.assertTrue("'" + feature12 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature12.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objectMapper15);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test301");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature8 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper7.disable(feature8);
        int int10 = feature8.getMask();
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertTrue("'" + feature8 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature8.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test302");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = xmlMapper5.getSerializationConfig();
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper5.configure(feature14, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(serializationConfig13);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test303");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean5 = xmlFactory3.isEnabled(feature4);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlFactory9.disable(feature10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature14 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper13.disable(feature14);
        boolean boolean16 = feature14.enabledByDefault();
        boolean boolean17 = xmlFactory3.isEnabled(feature14);
        com.fasterxml.jackson.core.JsonFactory jsonFactory19 = xmlFactory3.setRootValueSeparator(" ");
        java.io.DataOutput dataOutput20 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlFactory3.createGenerator(dataOutput20);
        boolean boolean22 = jsonGenerator21.canWriteTypeId();
        // The following exception was thrown during execution in test generation
        try {
            jsonGenerator21.writeEmbeddedObject((java.lang.Object) (byte) 1);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonGenerationException; message: No native support for writing embedded objects of type java.lang.Byte");
        } catch (com.fasterxml.jackson.core.JsonGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + feature14 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature14.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(jsonFactory19);
        org.junit.Assert.assertNotNull(jsonGenerator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test304");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        com.fasterxml.jackson.core.JsonParser.Feature feature8 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory5.configure(feature8, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test305");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        java.text.DateFormat dateFormat11 = xmlMapper5.getDateFormat();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper5.disableDefaultTyping();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping13 = null;
        com.fasterxml.jackson.annotation.JsonTypeInfo.As as14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = objectMapper12.enableDefaultTyping(defaultTyping13, as14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: includeAs can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(dateFormat11);
        org.junit.Assert.assertNotNull(objectMapper12);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test306");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.enableDefaultTypingAsProperty(defaultTyping10, "XML");
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy13 = objectMapper9.getPropertyNamingStrategy();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = objectMapper9.writer(filterProvider14);
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(characterEscapes22);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray24 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper21.disable(featureArray24);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = objectMapper25.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig27 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = objectMapper9.setConfig(serializationConfig27);
        com.fasterxml.jackson.core.FormatSchema formatSchema29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = objectMapper9.writer(formatSchema29);
        java.util.List<com.fasterxml.jackson.databind.Module> moduleList31 = com.fasterxml.jackson.databind.ObjectMapper.findModules();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = objectMapper9.registerModules((java.lang.Iterable<com.fasterxml.jackson.databind.Module>) moduleList31);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNull(propertyNamingStrategy13);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(featureArray24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(serializationConfig27);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(moduleList31);
        org.junit.Assert.assertNotNull(objectMapper32);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test307");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode11 = xmlMapper5.readTree("hi!");
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxUnexpectedCharException: Unexpected character 'h' (code 104) in prolog; expected '<'? at [row,col {unknown-source}]: [1,1]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test308");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory13 = serializerProvider12.getTypeFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory22 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.setNodeFactory(jsonNodeFactory22);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader25 = xmlMapper19.readerForUpdating((java.lang.Object) xmlFactory24);
        boolean boolean26 = xmlFactory24.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass27 = xmlFactory24.getFormatReadFeatureType();
        boolean boolean28 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass27);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = serializerProvider12.getUnknownTypeSerializer(featureClass27);
        com.fasterxml.jackson.core.ObjectCodec objectCodec30 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec30, xMLInputFactory31, xMLOutputFactory32);
        com.fasterxml.jackson.core.Version version34 = xmlFactory33.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper35 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory33);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping36 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper35.enableDefaultTypingAsProperty(defaultTyping36, "XML");
        com.fasterxml.jackson.core.ObjectCodec objectCodec39 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory40 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory41 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec39, xMLInputFactory40, xMLOutputFactory41);
        com.fasterxml.jackson.core.Version version43 = xmlFactory42.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper44 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory42);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes45 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter46 = xmlMapper44.writer(characterEscapes45);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray47 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper48 = xmlMapper44.disable(featureArray47);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper49 = objectMapper48.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig50 = objectMapper48.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = objectMapper48.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec52 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory53 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory54 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory55 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec52, xMLInputFactory53, xMLOutputFactory54);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature56 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory57 = xmlFactory55.disable(feature56);
        com.fasterxml.jackson.core.Version version58 = xmlFactory57.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass59 = xmlFactory57.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = serializerProvider51.getUnknownTypeSerializer(featureClass59);
        java.util.TimeZone timeZone61 = serializerProvider51.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec62 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory63 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory64 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory65 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec62, xMLInputFactory63, xMLOutputFactory64);
        com.fasterxml.jackson.core.Version version66 = xmlFactory65.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper67 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory65);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes68 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter69 = xmlMapper67.writer(characterEscapes68);
        com.fasterxml.jackson.core.ObjectCodec objectCodec70 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory71 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory72 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory73 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec70, xMLInputFactory71, xMLOutputFactory72);
        com.fasterxml.jackson.core.Version version74 = xmlFactory73.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper75 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory73);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes76 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter77 = xmlMapper75.writer(characterEscapes76);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory78 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper79 = xmlMapper75.setNodeFactory(jsonNodeFactory78);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider80 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper81 = xmlMapper75.setFilterProvider(filterProvider80);
        com.fasterxml.jackson.core.JsonParser jsonParser82 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec83 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory84 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory85 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory86 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec83, xMLInputFactory84, xMLOutputFactory85);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature87 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory88 = xmlFactory86.disable(feature87);
        com.fasterxml.jackson.core.Version version89 = xmlFactory88.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass90 = xmlFactory88.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor91 = objectMapper81.readValues(jsonParser82, featureClass90);
        boolean boolean92 = xmlMapper67.canSerialize(featureClass90);
        com.fasterxml.jackson.databind.BeanProperty beanProperty93 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer94 = serializerProvider51.findKeySerializer(featureClass90, beanProperty93);
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride95 = objectMapper38.configOverride(featureClass90);
        com.fasterxml.jackson.databind.BeanProperty beanProperty97 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer98 = serializerProvider12.findTypedValueSerializer(featureClass90, false, beanProperty97);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(typeFactory13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(objectReader25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(featureClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(objectWriter46);
        org.junit.Assert.assertNotNull(featureArray47);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertNotNull(objectMapper49);
        org.junit.Assert.assertNotNull(serializationConfig50);
        org.junit.Assert.assertNotNull(serializerProvider51);
        org.junit.Assert.assertTrue("'" + feature56 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature56.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory57);
        org.junit.Assert.assertNotNull(version58);
        org.junit.Assert.assertNotNull(featureClass59);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertNotNull(timeZone61);
        org.junit.Assert.assertEquals(timeZone61.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version66);
        org.junit.Assert.assertNotNull(objectWriter69);
        org.junit.Assert.assertNotNull(version74);
        org.junit.Assert.assertNotNull(objectWriter77);
        org.junit.Assert.assertNotNull(objectMapper79);
        org.junit.Assert.assertNotNull(objectMapper81);
        org.junit.Assert.assertTrue("'" + feature87 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature87.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory88);
        org.junit.Assert.assertNotNull(version89);
        org.junit.Assert.assertNotNull(featureClass90);
        org.junit.Assert.assertNotNull(featureItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer94);
        org.junit.Assert.assertNotNull(mutableConfigOverride95);
        org.junit.Assert.assertNotNull(objJsonSerializer98);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test309");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.readerForUpdating((java.lang.Object) xmlFactory10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper5);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper5.enable(serializationFeature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test310");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        java.lang.String str11 = objectMapper9.writeValueAsString((java.lang.Object) "XML");
        com.fasterxml.jackson.databind.MapperFeature mapperFeature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = objectMapper9.configure(mapperFeature12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "<String>XML</String>" + "'", str11, "<String>XML</String>");
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test311");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        java.lang.String str6 = xmlFactory3.getRootValueSeparator();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass7 = xmlFactory3.getFormatReadFeatureType();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory3.getXMLInputFactory();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3, jacksonXmlModule9);
        java.io.DataOutput dataOutput11 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlFactory3.createGenerator(dataOutput11);
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory21 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.setNodeFactory(jsonNodeFactory21);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper18.findAndRegisterModules();
        com.fasterxml.jackson.core.JsonFactory jsonFactory24 = xmlMapper18.getJsonFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(characterEscapes31);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray33 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = xmlMapper30.disable(featureArray33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper34.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig36 = objectMapper34.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = objectMapper34.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature42 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = xmlFactory41.disable(feature42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass45 = xmlFactory43.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = serializerProvider37.getUnknownTypeSerializer(featureClass45);
        java.util.TimeZone timeZone47 = serializerProvider37.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper53 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory51);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes54 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter55 = xmlMapper53.writer(characterEscapes54);
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.core.Version version60 = xmlFactory59.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper61 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory59);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes62 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter63 = xmlMapper61.writer(characterEscapes62);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory64 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = xmlMapper61.setNodeFactory(jsonNodeFactory64);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider66 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper67 = xmlMapper61.setFilterProvider(filterProvider66);
        com.fasterxml.jackson.core.JsonParser jsonParser68 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec69 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory70 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory71 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec69, xMLInputFactory70, xMLOutputFactory71);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature73 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory74 = xmlFactory72.disable(feature73);
        com.fasterxml.jackson.core.Version version75 = xmlFactory74.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass76 = xmlFactory74.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor77 = objectMapper67.readValues(jsonParser68, featureClass76);
        boolean boolean78 = xmlMapper53.canSerialize(featureClass76);
        com.fasterxml.jackson.databind.BeanProperty beanProperty79 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = serializerProvider37.findKeySerializer(featureClass76, beanProperty79);
        com.fasterxml.jackson.databind.ObjectReader objectReader81 = xmlMapper18.readerWithView(featureClass76);
        // The following exception was thrown during execution in test generation
        try {
            jsonGenerator12.writeTypeId((java.lang.Object) objectReader81);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonGenerationException; message: No native support for writing Type Ids");
        } catch (com.fasterxml.jackson.core.JsonGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertNotNull(featureClass7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonGenerator12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(jsonFactory24);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(featureArray33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(serializationConfig36);
        org.junit.Assert.assertNotNull(serializerProvider37);
        org.junit.Assert.assertTrue("'" + feature42 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature42.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory43);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(featureClass45);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(timeZone47);
        org.junit.Assert.assertEquals(timeZone47.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(objectWriter55);
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(objectWriter63);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertNotNull(objectMapper67);
        org.junit.Assert.assertTrue("'" + feature73 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature73.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory74);
        org.junit.Assert.assertNotNull(version75);
        org.junit.Assert.assertNotNull(featureClass76);
        org.junit.Assert.assertNotNull(featureItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
        org.junit.Assert.assertNotNull(objectReader81);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test312");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 0 };
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.JsonParser jsonParser16 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray25 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.disable(featureArray25);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = xmlMapper22.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec28 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec28, xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.core.Version version32 = xmlFactory31.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper33 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory31);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper33.writer(characterEscapes34);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray36 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = xmlMapper33.disable(featureArray36);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper37.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig39 = objectMapper37.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider40 = objectMapper37.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec41 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory42 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory43 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory44 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec41, xMLInputFactory42, xMLOutputFactory43);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature45 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = xmlFactory44.disable(feature45);
        com.fasterxml.jackson.core.Version version47 = xmlFactory46.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass48 = xmlFactory46.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = serializerProvider40.getUnknownTypeSerializer(featureClass48);
        java.util.TimeZone timeZone50 = serializerProvider40.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec51 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory52 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory53 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory54 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec51, xMLInputFactory52, xMLOutputFactory53);
        com.fasterxml.jackson.core.Version version55 = xmlFactory54.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper56 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory54);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes57 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter58 = xmlMapper56.writer(characterEscapes57);
        com.fasterxml.jackson.core.ObjectCodec objectCodec59 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory60 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory61 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory62 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec59, xMLInputFactory60, xMLOutputFactory61);
        com.fasterxml.jackson.core.Version version63 = xmlFactory62.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper64 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory62);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes65 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter66 = xmlMapper64.writer(characterEscapes65);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory67 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper68 = xmlMapper64.setNodeFactory(jsonNodeFactory67);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider69 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper70 = xmlMapper64.setFilterProvider(filterProvider69);
        com.fasterxml.jackson.core.JsonParser jsonParser71 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec72 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory73 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory74 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory75 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec72, xMLInputFactory73, xMLOutputFactory74);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature76 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory77 = xmlFactory75.disable(feature76);
        com.fasterxml.jackson.core.Version version78 = xmlFactory77.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass79 = xmlFactory77.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor80 = objectMapper70.readValues(jsonParser71, featureClass79);
        boolean boolean81 = xmlMapper56.canSerialize(featureClass79);
        com.fasterxml.jackson.databind.JavaType javaType82 = serializerProvider40.constructType((java.lang.reflect.Type) featureClass79);
        com.fasterxml.jackson.databind.ObjectReader objectReader83 = xmlMapper27.readerFor(javaType82);
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.databind.cfg.MapperConfigBase<com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.SerializationConfig>> serializationFeatureMapperConfigBaseItor84 = xmlMapper15.readValues(jsonParser16, javaType82);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil annotationUtil85 = objectMapper9.readValue(byteArray12, javaType82);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxUnexpectedCharException: Illegal character ((CTRL-CHAR, code 1))? at [row,col {unknown-source}]: [1,1]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 0]");
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(featureArray25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(xmlMapper27);
        org.junit.Assert.assertNotNull(version32);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertNotNull(featureArray36);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(serializationConfig39);
        org.junit.Assert.assertNotNull(serializerProvider40);
        org.junit.Assert.assertTrue("'" + feature45 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature45.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory46);
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(featureClass48);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertNotNull(timeZone50);
        org.junit.Assert.assertEquals(timeZone50.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version55);
        org.junit.Assert.assertNotNull(objectWriter58);
        org.junit.Assert.assertNotNull(version63);
        org.junit.Assert.assertNotNull(objectWriter66);
        org.junit.Assert.assertNotNull(objectMapper68);
        org.junit.Assert.assertNotNull(objectMapper70);
        org.junit.Assert.assertTrue("'" + feature76 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature76.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory77);
        org.junit.Assert.assertNotNull(version78);
        org.junit.Assert.assertNotNull(featureClass79);
        org.junit.Assert.assertNotNull(featureItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(javaType82);
        org.junit.Assert.assertNotNull(objectReader83);
        org.junit.Assert.assertNotNull(serializationFeatureMapperConfigBaseItor84);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test313");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper4 = xmlMapper2.setDefaultUseWrapper(false);
        com.fasterxml.jackson.core.FormatSchema formatSchema5 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter6 = xmlMapper2.writer(formatSchema5);
        org.junit.Assert.assertNotNull(xmlMapper4);
        org.junit.Assert.assertNotNull(objectWriter6);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test314");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.enableDefaultTypingAsProperty(defaultTyping10, "XML");
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy13 = objectMapper9.getPropertyNamingStrategy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray22 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.disable(featureArray22);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = objectMapper9.disable(featureArray22);
        com.fasterxml.jackson.core.JsonFactory.Feature feature25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = objectMapper9.isEnabled(feature25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNull(propertyNamingStrategy13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(featureArray22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(objectMapper24);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test315");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.Module[] moduleArray10 = new com.fasterxml.jackson.databind.Module[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper9.registerModules(moduleArray10);
        com.fasterxml.jackson.annotation.JsonInclude.Include include12 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper9.setSerializationInclusion(include12);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = objectMapper13.disableDefaultTyping();
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = objectMapper14.disable(deserializationFeature15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(moduleArray10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper14);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test316");
        com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder xmlTypeResolverBuilder0 = new com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder();
        com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder2 = xmlTypeResolverBuilder0.typeIdVisibility(false);
        com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig3 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec4, xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.core.Version version8 = xmlFactory7.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper9.writer(characterEscapes10);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray12 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper9.disable(featureArray12);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper9.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec15 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec15, xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory18);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper20.writer(characterEscapes21);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray23 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper20.disable(featureArray23);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = objectMapper24.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper24.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = objectMapper24.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec28 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec28, xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature32 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = xmlFactory31.disable(feature32);
        com.fasterxml.jackson.core.Version version34 = xmlFactory33.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass35 = xmlFactory33.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = serializerProvider27.getUnknownTypeSerializer(featureClass35);
        java.util.TimeZone timeZone37 = serializerProvider27.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.core.Version version42 = xmlFactory41.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper43 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory41);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes44 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter45 = xmlMapper43.writer(characterEscapes44);
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper51 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory49);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes52 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter53 = xmlMapper51.writer(characterEscapes52);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory54 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = xmlMapper51.setNodeFactory(jsonNodeFactory54);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider56 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper57 = xmlMapper51.setFilterProvider(filterProvider56);
        com.fasterxml.jackson.core.JsonParser jsonParser58 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec59 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory60 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory61 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory62 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec59, xMLInputFactory60, xMLOutputFactory61);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature63 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory64 = xmlFactory62.disable(feature63);
        com.fasterxml.jackson.core.Version version65 = xmlFactory64.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass66 = xmlFactory64.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor67 = objectMapper57.readValues(jsonParser58, featureClass66);
        boolean boolean68 = xmlMapper43.canSerialize(featureClass66);
        com.fasterxml.jackson.databind.JavaType javaType69 = serializerProvider27.constructType((java.lang.reflect.Type) featureClass66);
        com.fasterxml.jackson.databind.ObjectReader objectReader70 = xmlMapper14.readerFor(javaType69);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray71 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        java.util.ArrayList<com.fasterxml.jackson.databind.jsontype.NamedType> namedTypeList72 = new java.util.ArrayList<com.fasterxml.jackson.databind.jsontype.NamedType>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>) namedTypeList72, namedTypeArray71);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeDeserializer typeDeserializer74 = stdTypeResolverBuilder2.buildTypeDeserializer(deserializationConfig3, javaType69, (java.util.Collection<com.fasterxml.jackson.databind.jsontype.NamedType>) namedTypeList72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(stdTypeResolverBuilder2);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(objectWriter11);
        org.junit.Assert.assertNotNull(featureArray12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(featureArray23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(serializerProvider27);
        org.junit.Assert.assertTrue("'" + feature32 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature32.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory33);
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertNotNull(featureClass35);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(timeZone37);
        org.junit.Assert.assertEquals(timeZone37.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version42);
        org.junit.Assert.assertNotNull(objectWriter45);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(objectWriter53);
        org.junit.Assert.assertNotNull(objectMapper55);
        org.junit.Assert.assertNotNull(objectMapper57);
        org.junit.Assert.assertTrue("'" + feature63 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature63.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory64);
        org.junit.Assert.assertNotNull(version65);
        org.junit.Assert.assertNotNull(featureClass66);
        org.junit.Assert.assertNotNull(featureItor67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(javaType69);
        org.junit.Assert.assertNotNull(objectReader70);
        org.junit.Assert.assertNotNull(namedTypeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test317");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTyping();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider14 = null;
        xmlMapper5.setFilters(filterProvider14);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig16 = xmlMapper5.getSerializationConfig();
        java.io.Reader reader17 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec18 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec18, xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature22 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory23 = xmlFactory21.disable(feature22);
        com.fasterxml.jackson.core.Version version24 = xmlFactory23.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass25 = xmlFactory23.getFormatReadFeatureType();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature26 = xmlMapper5.readValue(reader17, featureClass25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializationConfig16);
        org.junit.Assert.assertTrue("'" + feature22 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature22.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory23);
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(featureClass25);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test318");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper5.writer(filterProvider8);
        com.fasterxml.jackson.databind.node.ArrayNode arrayNode10 = xmlMapper5.createArrayNode();
        byte[] byteArray12 = new byte[] { (byte) 100 };
        com.fasterxml.jackson.databind.JavaType javaType15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.text.Format format16 = xmlMapper5.readValue(byteArray12, 1, 56320, javaType15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(arrayNode10);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test319");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.setNodeFactory(jsonNodeFactory11);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader14 = xmlMapper8.readerForUpdating((java.lang.Object) xmlFactory13);
        boolean boolean15 = xmlFactory13.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass16 = xmlFactory13.getFormatReadFeatureType();
        boolean boolean17 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass16);
        java.lang.Enum[] enumArray19 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray20 = (java.lang.Enum<?>[]) enumArray19;
        java.lang.String[] strArray21 = null;
        java.lang.String[] strArray22 = jacksonAnnotationIntrospector2.findEnumValues(featureClass16, (java.lang.Enum<?>[]) enumArray19, strArray21);
        com.fasterxml.jackson.databind.introspect.AnnotatedMember annotatedMember23 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty referenceProperty24 = jacksonAnnotationIntrospector2.findReferenceType(annotatedMember23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectReader14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(featureClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(enumArray19);
        org.junit.Assert.assertNotNull(wildcardEnumArray20);
        org.junit.Assert.assertNull(strArray22);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test320");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setDefaultPrettyPrinter(prettyPrinter8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.enableDefaultTyping();
        java.io.Reader reader11 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.JacksonAnnotationValue<com.fasterxml.jackson.annotation.JsonFormat> jsonFormatJacksonAnnotationValue13 = objectMapper9.readValue(reader11, typeReference12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test321");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory13 = serializerProvider12.getTypeFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory22 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.setNodeFactory(jsonNodeFactory22);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader25 = xmlMapper19.readerForUpdating((java.lang.Object) xmlFactory24);
        boolean boolean26 = xmlFactory24.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass27 = xmlFactory24.getFormatReadFeatureType();
        boolean boolean28 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass27);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = serializerProvider12.getUnknownTypeSerializer(featureClass27);
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter31 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec32 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec32, xMLInputFactory33, xMLOutputFactory34);
        com.fasterxml.jackson.core.JsonFactory jsonFactory37 = xmlFactory35.setRootValueSeparator("");
        java.io.DataOutput dataOutput38 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator39 = jsonFactory37.createGenerator(dataOutput38);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator41 = jsonGenerator39.setHighestNonEscapedChar((-1));
        boolean boolean42 = jsonGenerator41.canWriteObjectId();
        int int43 = jsonGenerator41.getHighestEscapedChar();
        defaultXmlPrettyPrinter31.writeArrayValueSeparator(jsonGenerator41);
        com.fasterxml.jackson.core.ObjectCodec objectCodec45 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory46 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec45, xMLInputFactory46, xMLOutputFactory47);
        com.fasterxml.jackson.core.JsonFactory jsonFactory50 = xmlFactory48.setRootValueSeparator("");
        java.io.DataOutput dataOutput51 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator52 = jsonFactory50.createGenerator(dataOutput51);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator54 = jsonGenerator52.setHighestNonEscapedChar((-1));
        defaultXmlPrettyPrinter31.beforeObjectEntries(jsonGenerator54);
        // The following exception was thrown during execution in test generation
        try {
            serializerProvider12.defaultSerializeDateKey((long) 0, jsonGenerator54);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonGenerationException; message: Can not write a field name, expecting a value");
        } catch (com.fasterxml.jackson.core.JsonGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(typeFactory13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(objectReader25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(featureClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(jsonFactory37);
        org.junit.Assert.assertNotNull(jsonGenerator39);
        org.junit.Assert.assertNotNull(jsonGenerator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(jsonFactory50);
        org.junit.Assert.assertNotNull(jsonGenerator52);
        org.junit.Assert.assertNotNull(jsonGenerator54);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test322");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        int int10 = xmlMapper5.mixInCount();
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter11 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.JsonFactory jsonFactory17 = xmlFactory15.setRootValueSeparator("");
        java.io.DataOutput dataOutput18 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator19 = jsonFactory17.createGenerator(dataOutput18);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = jsonGenerator19.setHighestNonEscapedChar((-1));
        boolean boolean22 = jsonGenerator21.canWriteObjectId();
        int int23 = jsonGenerator21.getHighestEscapedChar();
        defaultXmlPrettyPrinter11.writeArrayValueSeparator(jsonGenerator21);
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.JsonFactory jsonFactory30 = xmlFactory28.setRootValueSeparator("");
        java.io.DataOutput dataOutput31 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator32 = jsonFactory30.createGenerator(dataOutput31);
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator33 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory34 = jsonFactory30.setInputDecorator(inputDecorator33);
        java.io.DataOutput dataOutput35 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator36 = jsonFactory34.createGenerator(dataOutput35);
        defaultXmlPrettyPrinter11.writeStartArray(jsonGenerator36);
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.core.Version version42 = xmlFactory41.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper43 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory41);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes44 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter45 = xmlMapper43.writer(characterEscapes44);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray46 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper47 = xmlMapper43.disable(featureArray46);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext48 = xmlMapper43.getDeserializationContext();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper43);
        com.fasterxml.jackson.core.ObjectCodec objectCodec50 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory51 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory52 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory53 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec50, xMLInputFactory51, xMLOutputFactory52);
        com.fasterxml.jackson.core.Version version54 = xmlFactory53.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper55 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory53);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes56 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter57 = xmlMapper55.writer(characterEscapes56);
        com.fasterxml.jackson.core.ObjectCodec objectCodec58 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory59 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory60 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory61 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec58, xMLInputFactory59, xMLOutputFactory60);
        com.fasterxml.jackson.core.Version version62 = xmlFactory61.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper63 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory61);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes64 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter65 = xmlMapper63.writer(characterEscapes64);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory66 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper67 = xmlMapper63.setNodeFactory(jsonNodeFactory66);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider68 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper69 = xmlMapper63.setFilterProvider(filterProvider68);
        com.fasterxml.jackson.core.JsonParser jsonParser70 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec71 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory72 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory73 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory74 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec71, xMLInputFactory72, xMLOutputFactory73);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature75 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory76 = xmlFactory74.disable(feature75);
        com.fasterxml.jackson.core.Version version77 = xmlFactory76.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass78 = xmlFactory76.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor79 = objectMapper69.readValues(jsonParser70, featureClass78);
        boolean boolean80 = xmlMapper55.canSerialize(featureClass78);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference81 = null;
        boolean boolean82 = xmlMapper43.canSerialize(featureClass78, throwableAtomicReference81);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter83 = xmlMapper43.writerWithDefaultPrettyPrinter();
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper5.writeValue(jsonGenerator36, (java.lang.Object) objectWriter83);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: No serializer found for class com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.fasterxml.jackson.databind.ObjectWriter[\"config\"]->com.fasterxml.jackson.databind.SerializationConfig[\"defaultPrettyPrinter\"])");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(jsonFactory17);
        org.junit.Assert.assertNotNull(jsonGenerator19);
        org.junit.Assert.assertNotNull(jsonGenerator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(jsonFactory30);
        org.junit.Assert.assertNotNull(jsonGenerator32);
        org.junit.Assert.assertNotNull(jsonFactory34);
        org.junit.Assert.assertNotNull(jsonGenerator36);
        org.junit.Assert.assertNotNull(version42);
        org.junit.Assert.assertNotNull(objectWriter45);
        org.junit.Assert.assertNotNull(featureArray46);
        org.junit.Assert.assertNotNull(objectMapper47);
        org.junit.Assert.assertNotNull(deserializationContext48);
        org.junit.Assert.assertNotNull(version54);
        org.junit.Assert.assertNotNull(objectWriter57);
        org.junit.Assert.assertNotNull(version62);
        org.junit.Assert.assertNotNull(objectWriter65);
        org.junit.Assert.assertNotNull(objectMapper67);
        org.junit.Assert.assertNotNull(objectMapper69);
        org.junit.Assert.assertTrue("'" + feature75 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature75.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory76);
        org.junit.Assert.assertNotNull(version77);
        org.junit.Assert.assertNotNull(featureClass78);
        org.junit.Assert.assertNotNull(featureItor79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(objectWriter83);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test323");
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory0 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper1 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory0);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature2 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_DECLARATION;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory4 = xmlFactory0.configure(feature2, true);
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = xmlFactory0.disable(feature5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature2 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_DECLARATION + "'", feature2.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_DECLARATION));
        org.junit.Assert.assertNotNull(xmlFactory4);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test324");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.readerForUpdating((java.lang.Object) xmlFactory10);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = xmlMapper5.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = objectMapper22.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig24 = objectMapper22.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = objectMapper22.getSerializerProviderInstance();
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory26 = serializerProvider25.getTypeFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec27 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory28 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec27, xMLInputFactory28, xMLOutputFactory29);
        com.fasterxml.jackson.core.Version version31 = xmlFactory30.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper32 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory30);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes33 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter34 = xmlMapper32.writer(characterEscapes33);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory35 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = xmlMapper32.setNodeFactory(jsonNodeFactory35);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader38 = xmlMapper32.readerForUpdating((java.lang.Object) xmlFactory37);
        boolean boolean39 = xmlFactory37.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass40 = xmlFactory37.getFormatReadFeatureType();
        boolean boolean41 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass40);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = serializerProvider25.getUnknownTypeSerializer(featureClass40);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper43 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper12.acceptJsonFormatVisitor(featureClass40, jsonFormatVisitorWrapper43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
        org.junit.Assert.assertNotNull(xmlMapper12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(serializationConfig24);
        org.junit.Assert.assertNotNull(serializerProvider25);
        org.junit.Assert.assertNotNull(typeFactory26);
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(objectWriter34);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(objectReader38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(featureClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test325");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor21 = objectMapper11.readValues(jsonParser12, featureClass20);
        com.fasterxml.jackson.core.JsonParser.Feature feature22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = objectMapper11.isEnabled(feature22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(featureItor21);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test326");
        com.fasterxml.jackson.core.io.IOContext iOContext0 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper8.enableDefaultTypingAsProperty(defaultTyping9, "XML");
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.Version version16 = xmlFactory15.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory15);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(characterEscapes18);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray20 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper17.disable(featureArray20);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = objectMapper21.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig23 = objectMapper21.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = objectMapper21.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature29 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = xmlFactory28.disable(feature29);
        com.fasterxml.jackson.core.Version version31 = xmlFactory30.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass32 = xmlFactory30.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = serializerProvider24.getUnknownTypeSerializer(featureClass32);
        java.util.TimeZone timeZone34 = serializerProvider24.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory38);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper40.writer(characterEscapes41);
        com.fasterxml.jackson.core.ObjectCodec objectCodec43 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory44 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory45 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec43, xMLInputFactory44, xMLOutputFactory45);
        com.fasterxml.jackson.core.Version version47 = xmlFactory46.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper48 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory46);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes49 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter50 = xmlMapper48.writer(characterEscapes49);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory51 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper52 = xmlMapper48.setNodeFactory(jsonNodeFactory51);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider53 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper54 = xmlMapper48.setFilterProvider(filterProvider53);
        com.fasterxml.jackson.core.JsonParser jsonParser55 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature60 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory61 = xmlFactory59.disable(feature60);
        com.fasterxml.jackson.core.Version version62 = xmlFactory61.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass63 = xmlFactory61.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor64 = objectMapper54.readValues(jsonParser55, featureClass63);
        boolean boolean65 = xmlMapper40.canSerialize(featureClass63);
        com.fasterxml.jackson.databind.BeanProperty beanProperty66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = serializerProvider24.findKeySerializer(featureClass63, beanProperty66);
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride68 = objectMapper11.configOverride(featureClass63);
        com.fasterxml.jackson.core.ObjectCodec objectCodec69 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory70 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory71 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec69, xMLInputFactory70, xMLOutputFactory71);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature73 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory74 = xmlFactory72.disable(feature73);
        java.lang.String str75 = xmlFactory72.getRootValueSeparator();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass76 = xmlFactory72.getFormatReadFeatureType();
        javax.xml.stream.XMLInputFactory xMLInputFactory77 = xmlFactory72.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory78 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory79 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) objectMapper11, xMLInputFactory77, xMLOutputFactory78);
        javax.xml.stream.XMLInputFactory xMLInputFactory80 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper81 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory80);
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory82 = xmlMapper81.getTypeFactory();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper83 = objectMapper11.setTypeFactory(typeFactory82);
        javax.xml.stream.XMLStreamWriter xMLStreamWriter84 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator85 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator(iOContext0, 55296, (int) (byte) 10, (com.fasterxml.jackson.core.ObjectCodec) objectMapper83, xMLStreamWriter84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(featureArray20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(serializationConfig23);
        org.junit.Assert.assertNotNull(serializerProvider24);
        org.junit.Assert.assertTrue("'" + feature29 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature29.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory30);
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(featureClass32);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(timeZone34);
        org.junit.Assert.assertEquals(timeZone34.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(objectWriter50);
        org.junit.Assert.assertNotNull(objectMapper52);
        org.junit.Assert.assertNotNull(objectMapper54);
        org.junit.Assert.assertTrue("'" + feature60 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature60.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory61);
        org.junit.Assert.assertNotNull(version62);
        org.junit.Assert.assertNotNull(featureClass63);
        org.junit.Assert.assertNotNull(featureItor64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertNotNull(mutableConfigOverride68);
        org.junit.Assert.assertTrue("'" + feature73 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature73.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + " " + "'", str75, " ");
        org.junit.Assert.assertNotNull(featureClass76);
        org.junit.Assert.assertNotNull(xMLInputFactory77);
        org.junit.Assert.assertNotNull(typeFactory82);
        org.junit.Assert.assertNotNull(objectMapper83);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test327");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray22 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.disable(featureArray22);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = objectMapper23.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig25 = objectMapper23.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper5.setMixInResolver((com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver) serializationConfig25);
        com.fasterxml.jackson.core.ObjectCodec objectCodec27 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory28 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec27, xMLInputFactory28, xMLOutputFactory29);
        com.fasterxml.jackson.core.Version version31 = xmlFactory30.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper32 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory30);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes33 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter34 = xmlMapper32.writer(characterEscapes33);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory35 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = xmlMapper32.setNodeFactory(jsonNodeFactory35);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = xmlMapper32.findAndRegisterModules();
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.core.Version version42 = xmlFactory41.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper43 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory41);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes44 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter45 = xmlMapper43.writer(characterEscapes44);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray46 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper47 = xmlMapper43.disable(featureArray46);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper48 = objectMapper47.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig49 = objectMapper47.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = objectMapper47.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec51 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory52 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory53 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory54 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec51, xMLInputFactory52, xMLOutputFactory53);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature55 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = xmlFactory54.disable(feature55);
        com.fasterxml.jackson.core.Version version57 = xmlFactory56.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass58 = xmlFactory56.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = serializerProvider50.getUnknownTypeSerializer(featureClass58);
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride60 = objectMapper37.configOverride(featureClass58);
        com.fasterxml.jackson.databind.ObjectReader objectReader61 = xmlMapper5.readerFor(featureClass58);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(featureArray22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(serializationConfig25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(objectWriter34);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(version42);
        org.junit.Assert.assertNotNull(objectWriter45);
        org.junit.Assert.assertNotNull(featureArray46);
        org.junit.Assert.assertNotNull(objectMapper47);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertNotNull(serializationConfig49);
        org.junit.Assert.assertNotNull(serializerProvider50);
        org.junit.Assert.assertTrue("'" + feature55 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature55.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory56);
        org.junit.Assert.assertNotNull(version57);
        org.junit.Assert.assertNotNull(featureClass58);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertNotNull(mutableConfigOverride60);
        org.junit.Assert.assertNotNull(objectReader61);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test328");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTyping();
        com.fasterxml.jackson.core.JsonParser.Feature feature14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper5.configure(feature14, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper13);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test329");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper12.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = objectMapper12.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = objectMapper12.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature20 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = xmlFactory19.disable(feature20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass23 = xmlFactory21.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = serializerProvider15.getUnknownTypeSerializer(featureClass23);
        java.util.TimeZone timeZone25 = serializerProvider15.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory29);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(characterEscapes32);
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.core.Version version38 = xmlFactory37.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory37);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes40 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = xmlMapper39.writer(characterEscapes40);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper39.setNodeFactory(jsonNodeFactory42);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider44 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper39.setFilterProvider(filterProvider44);
        com.fasterxml.jackson.core.JsonParser jsonParser46 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature51 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory52 = xmlFactory50.disable(feature51);
        com.fasterxml.jackson.core.Version version53 = xmlFactory52.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass54 = xmlFactory52.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor55 = objectMapper45.readValues(jsonParser46, featureClass54);
        boolean boolean56 = xmlMapper31.canSerialize(featureClass54);
        com.fasterxml.jackson.databind.BeanProperty beanProperty57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = serializerProvider15.findKeySerializer(featureClass54, beanProperty57);
        java.lang.Enum[] enumArray60 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray61 = (java.lang.Enum<?>[]) enumArray60;
        java.lang.String[] strArray68 = new java.lang.String[] { "xmlInfo", " ", "<String>XML</String>", " ", "hi!", "xmlInfo" };
        java.lang.String[] strArray69 = jacksonXmlAnnotationIntrospector0.findEnumValues(featureClass54, (java.lang.Enum<?>[]) enumArray60, strArray68);
        com.fasterxml.jackson.databind.introspect.AnnotatedClass annotatedClass70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray71 = jacksonXmlAnnotationIntrospector0.findSerializationPropertyOrder(annotatedClass70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializationConfig14);
        org.junit.Assert.assertNotNull(serializerProvider15);
        org.junit.Assert.assertTrue("'" + feature20 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature20.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory21);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(featureClass23);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(timeZone25);
        org.junit.Assert.assertEquals(timeZone25.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(objectWriter41);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertTrue("'" + feature51 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature51.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory52);
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(featureClass54);
        org.junit.Assert.assertNotNull(featureItor55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(enumArray60);
        org.junit.Assert.assertNotNull(wildcardEnumArray61);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test330");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.readerForUpdating((java.lang.Object) xmlFactory10);
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonGenerator jsonGenerator13 = xmlFactory10.createJsonGenerator(outputStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null OutputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test331");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = xmlMapper5.getSerializationConfig();
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper5.enable(feature14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(serializationConfig13);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test332");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.core.ObjectCodec objectCodec1 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory2 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory3 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory4 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec1, xMLInputFactory2, xMLOutputFactory3);
        com.fasterxml.jackson.core.Version version5 = xmlFactory4.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory4);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(characterEscapes7);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray9 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper6.disable(featureArray9);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper10.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig12 = objectMapper10.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = objectMapper10.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray22 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.disable(featureArray22);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext24 = xmlMapper19.getDeserializationContext();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper19);
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory29);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(characterEscapes32);
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.core.Version version38 = xmlFactory37.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory37);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes40 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = xmlMapper39.writer(characterEscapes40);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper39.setNodeFactory(jsonNodeFactory42);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider44 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper39.setFilterProvider(filterProvider44);
        com.fasterxml.jackson.core.JsonParser jsonParser46 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature51 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory52 = xmlFactory50.disable(feature51);
        com.fasterxml.jackson.core.Version version53 = xmlFactory52.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass54 = xmlFactory52.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor55 = objectMapper45.readValues(jsonParser46, featureClass54);
        boolean boolean56 = xmlMapper31.canSerialize(featureClass54);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference57 = null;
        boolean boolean58 = xmlMapper19.canSerialize(featureClass54, throwableAtomicReference57);
        com.fasterxml.jackson.databind.BeanProperty beanProperty60 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = serializerProvider13.findTypedValueSerializer(featureClass54, false, beanProperty60);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = serializerProvider13.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = objJsonSerializer62.unwrappingSerializer(nameTransformer63);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.module.SimpleModule simpleModule65 = jacksonXmlModule0.addSerializer(objJsonSerializer62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: JsonSerializer of type com.fasterxml.jackson.databind.ser.impl.FailingSerializer does not define valid handledType() -- must either register with method that takes type argument  or make serializer extend 'com.fasterxml.jackson.databind.ser.std.StdSerializer'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(featureArray9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(serializationConfig12);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(featureArray22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(deserializationContext24);
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(objectWriter41);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertTrue("'" + feature51 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature51.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory52);
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(featureClass54);
        org.junit.Assert.assertNotNull(featureItor55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test333");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTyping();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = objectMapper13.enableDefaultTypingAsProperty(defaultTyping14, " ");
        com.fasterxml.jackson.annotation.PropertyAccessor propertyAccessor17 = null;
        com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility visibility18 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = objectMapper13.setVisibility(propertyAccessor17, visibility18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper16);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test334");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory13 = serializerProvider12.getTypeFactory();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = serializerProvider12.handleSecondaryContextualization(objJsonSerializer14, beanProperty15);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(typeFactory13);
        org.junit.Assert.assertNull(wildcardJsonSerializer16);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test335");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        java.text.DateFormat dateFormat11 = xmlMapper5.getDateFormat();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper5.disableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory21 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.setNodeFactory(jsonNodeFactory21);
        com.fasterxml.jackson.databind.Module[] moduleArray23 = new com.fasterxml.jackson.databind.Module[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = objectMapper22.registerModules(moduleArray23);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = objectMapper12.registerModules(moduleArray23);
        com.fasterxml.jackson.core.JsonParser jsonParser26 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec27 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory28 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec27, xMLInputFactory28, xMLOutputFactory29);
        com.fasterxml.jackson.core.Version version31 = xmlFactory30.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper32 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory30);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes33 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter34 = xmlMapper32.writer(characterEscapes33);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray35 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = xmlMapper32.disable(featureArray35);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = objectMapper36.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig38 = objectMapper36.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider39 = objectMapper36.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray40 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = objectMapper36.enable(featureArray40);
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = objectMapper36.setSerializerProvider(defaultSerializerProvider42);
        com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier xmlBeanDeserializerModifier45 = new com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier(" ");
        com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig46 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.core.Version version51 = xmlFactory50.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper52 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory50);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes53 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter54 = xmlMapper52.writer(characterEscapes53);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider55 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter56 = xmlMapper52.writer(filterProvider55);
        com.fasterxml.jackson.core.ObjectCodec objectCodec57 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory58 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory59 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory60 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec57, xMLInputFactory58, xMLOutputFactory59);
        com.fasterxml.jackson.core.Version version61 = xmlFactory60.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper62 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory60);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes63 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter64 = xmlMapper62.writer(characterEscapes63);
        com.fasterxml.jackson.core.ObjectCodec objectCodec65 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory66 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory67 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory68 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec65, xMLInputFactory66, xMLOutputFactory67);
        com.fasterxml.jackson.core.Version version69 = xmlFactory68.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper70 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory68);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes71 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter72 = xmlMapper70.writer(characterEscapes71);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory73 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper74 = xmlMapper70.setNodeFactory(jsonNodeFactory73);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider75 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper76 = xmlMapper70.setFilterProvider(filterProvider75);
        com.fasterxml.jackson.core.JsonParser jsonParser77 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec78 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory79 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory80 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory81 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec78, xMLInputFactory79, xMLOutputFactory80);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature82 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory83 = xmlFactory81.disable(feature82);
        com.fasterxml.jackson.core.Version version84 = xmlFactory83.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass85 = xmlFactory83.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor86 = objectMapper76.readValues(jsonParser77, featureClass85);
        boolean boolean87 = xmlMapper62.canSerialize(featureClass85);
        boolean boolean88 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass85);
        com.fasterxml.jackson.databind.JavaType javaType89 = xmlMapper52.constructType((java.lang.reflect.Type) featureClass85);
        boolean boolean90 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType89);
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer91 = null;
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer92 = xmlBeanDeserializerModifier45.modifyKeyDeserializer(deserializationConfig46, javaType89, keyDeserializer91);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference93 = null;
        boolean boolean94 = objectMapper36.canDeserialize(javaType89, throwableAtomicReference93);
        boolean boolean95 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType89);
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.databind.jsontype.NamedType[]> namedTypeArrayItor96 = objectMapper12.readValues(jsonParser26, javaType89);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass97 = null;
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass98 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper99 = objectMapper12.addMixIn(featureClass97, featureClass98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(dateFormat11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(moduleArray23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(objectWriter34);
        org.junit.Assert.assertNotNull(featureArray35);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(serializationConfig38);
        org.junit.Assert.assertNotNull(serializerProvider39);
        org.junit.Assert.assertNotNull(featureArray40);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(version51);
        org.junit.Assert.assertNotNull(objectWriter54);
        org.junit.Assert.assertNotNull(objectWriter56);
        org.junit.Assert.assertNotNull(version61);
        org.junit.Assert.assertNotNull(objectWriter64);
        org.junit.Assert.assertNotNull(version69);
        org.junit.Assert.assertNotNull(objectWriter72);
        org.junit.Assert.assertNotNull(objectMapper74);
        org.junit.Assert.assertNotNull(objectMapper76);
        org.junit.Assert.assertTrue("'" + feature82 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature82.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory83);
        org.junit.Assert.assertNotNull(version84);
        org.junit.Assert.assertNotNull(featureClass85);
        org.junit.Assert.assertNotNull(featureItor86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(javaType89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(keyDeserializer92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(namedTypeArrayItor96);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test336");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        java.text.DateFormat dateFormat11 = xmlMapper5.getDateFormat();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper5.disableDefaultTyping();
        com.fasterxml.jackson.core.JsonParser jsonParser13 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray22 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.disable(featureArray22);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = xmlMapper19.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(characterEscapes31);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray33 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = xmlMapper30.disable(featureArray33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper34.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig36 = objectMapper34.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = objectMapper34.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature42 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = xmlFactory41.disable(feature42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass45 = xmlFactory43.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = serializerProvider37.getUnknownTypeSerializer(featureClass45);
        java.util.TimeZone timeZone47 = serializerProvider37.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper53 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory51);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes54 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter55 = xmlMapper53.writer(characterEscapes54);
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.core.Version version60 = xmlFactory59.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper61 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory59);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes62 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter63 = xmlMapper61.writer(characterEscapes62);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory64 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = xmlMapper61.setNodeFactory(jsonNodeFactory64);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider66 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper67 = xmlMapper61.setFilterProvider(filterProvider66);
        com.fasterxml.jackson.core.JsonParser jsonParser68 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec69 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory70 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory71 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec69, xMLInputFactory70, xMLOutputFactory71);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature73 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory74 = xmlFactory72.disable(feature73);
        com.fasterxml.jackson.core.Version version75 = xmlFactory74.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass76 = xmlFactory74.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor77 = objectMapper67.readValues(jsonParser68, featureClass76);
        boolean boolean78 = xmlMapper53.canSerialize(featureClass76);
        com.fasterxml.jackson.databind.JavaType javaType79 = serializerProvider37.constructType((java.lang.reflect.Type) featureClass76);
        com.fasterxml.jackson.databind.ObjectReader objectReader80 = xmlMapper24.readerFor(javaType79);
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.core.FormatFeature> formatFeatureItor81 = objectMapper12.readValues(jsonParser13, (com.fasterxml.jackson.core.type.ResolvedType) javaType79);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(dateFormat11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(featureArray22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(xmlMapper24);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(featureArray33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(serializationConfig36);
        org.junit.Assert.assertNotNull(serializerProvider37);
        org.junit.Assert.assertTrue("'" + feature42 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature42.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory43);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(featureClass45);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(timeZone47);
        org.junit.Assert.assertEquals(timeZone47.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(objectWriter55);
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(objectWriter63);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertNotNull(objectMapper67);
        org.junit.Assert.assertTrue("'" + feature73 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature73.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory74);
        org.junit.Assert.assertNotNull(version75);
        org.junit.Assert.assertNotNull(featureClass76);
        org.junit.Assert.assertNotNull(featureItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(javaType79);
        org.junit.Assert.assertNotNull(objectReader80);
        org.junit.Assert.assertNotNull(formatFeatureItor81);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test337");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext3 = xmlMapper2.getDeserializationContext();
        com.fasterxml.jackson.core.Version version4 = xmlMapper2.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec5 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory6 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory7 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory8 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec5, xMLInputFactory6, xMLOutputFactory7);
        com.fasterxml.jackson.core.Version version9 = xmlFactory8.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory8);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper10.writer(characterEscapes11);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray13 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.disable(featureArray13);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper10.copy();
        java.text.DateFormat dateFormat16 = xmlMapper10.getDateFormat();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.node.ObjectNode objectNode17 = xmlMapper2.valueToTree((java.lang.Object) xmlMapper10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No serializer found for class com.ctc.wstx.api.WstxInputProperties$ParsingMode and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.fasterxml.jackson.dataformat.xml.XmlMapper[\"factory\"]->com.fasterxml.jackson.dataformat.xml.XmlFactory[\"xmlinputFactory\"]->com.ctc.wstx.stax.WstxInputFactory[\"config\"]->com.ctc.wstx.api.ReaderConfig[\"inputParsingMode\"])");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deserializationContext3);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(version9);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(featureArray13);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(dateFormat16);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test338");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper5.writer(filterProvider8);
        com.fasterxml.jackson.databind.node.ArrayNode arrayNode10 = xmlMapper5.createArrayNode();
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter11 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.JsonFactory jsonFactory17 = xmlFactory15.setRootValueSeparator("");
        java.io.DataOutput dataOutput18 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator19 = jsonFactory17.createGenerator(dataOutput18);
        boolean boolean20 = jsonGenerator19.canWriteTypeId();
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes21 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator22 = jsonGenerator19.setCharacterEscapes(characterEscapes21);
        defaultXmlPrettyPrinter11.writeArrayValueSeparator(jsonGenerator22);
        com.fasterxml.jackson.databind.JsonNode jsonNode24 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper5.writeTree(jsonGenerator22, jsonNode24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(arrayNode10);
        org.junit.Assert.assertNotNull(jsonFactory17);
        org.junit.Assert.assertNotNull(jsonGenerator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(jsonGenerator22);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test339");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper12.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = objectMapper12.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = objectMapper12.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature20 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = xmlFactory19.disable(feature20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass23 = xmlFactory21.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = serializerProvider15.getUnknownTypeSerializer(featureClass23);
        java.util.TimeZone timeZone25 = serializerProvider15.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory29);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(characterEscapes32);
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.core.Version version38 = xmlFactory37.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory37);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes40 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = xmlMapper39.writer(characterEscapes40);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper39.setNodeFactory(jsonNodeFactory42);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider44 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper39.setFilterProvider(filterProvider44);
        com.fasterxml.jackson.core.JsonParser jsonParser46 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature51 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory52 = xmlFactory50.disable(feature51);
        com.fasterxml.jackson.core.Version version53 = xmlFactory52.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass54 = xmlFactory52.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor55 = objectMapper45.readValues(jsonParser46, featureClass54);
        boolean boolean56 = xmlMapper31.canSerialize(featureClass54);
        com.fasterxml.jackson.databind.BeanProperty beanProperty57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = serializerProvider15.findKeySerializer(featureClass54, beanProperty57);
        java.lang.Enum[] enumArray60 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray61 = (java.lang.Enum<?>[]) enumArray60;
        java.lang.String[] strArray68 = new java.lang.String[] { "xmlInfo", " ", "<String>XML</String>", " ", "hi!", "xmlInfo" };
        java.lang.String[] strArray69 = jacksonXmlAnnotationIntrospector0.findEnumValues(featureClass54, (java.lang.Enum<?>[]) enumArray60, strArray68);
        com.fasterxml.jackson.databind.introspect.Annotated annotated70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = jacksonXmlAnnotationIntrospector0.findContentSerializer(annotated70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializationConfig14);
        org.junit.Assert.assertNotNull(serializerProvider15);
        org.junit.Assert.assertTrue("'" + feature20 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature20.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory21);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(featureClass23);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(timeZone25);
        org.junit.Assert.assertEquals(timeZone25.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(objectWriter41);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertTrue("'" + feature51 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature51.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory52);
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(featureClass54);
        org.junit.Assert.assertNotNull(featureItor55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(enumArray60);
        org.junit.Assert.assertNotNull(wildcardEnumArray61);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test340");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.readerForUpdating((java.lang.Object) xmlFactory10);
        com.fasterxml.jackson.annotation.PropertyAccessor propertyAccessor12 = null;
        com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility visibility13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper5.setVisibility(propertyAccessor12, visibility13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test341");
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier0 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.core.ObjectCodec objectCodec1 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory2 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory3 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory4 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec1, xMLInputFactory2, xMLOutputFactory3);
        com.fasterxml.jackson.core.Version version5 = xmlFactory4.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory4);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(characterEscapes7);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray9 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper6.disable(featureArray9);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext11 = xmlMapper6.getDeserializationContext();
        com.fasterxml.jackson.core.Version version12 = xmlMapper6.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper6.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = xmlMapper6.getSerializationConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription15 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(characterEscapes22);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray24 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper21.disable(featureArray24);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = objectMapper25.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig27 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = objectMapper25.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec29 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec29, xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.core.Version version33 = xmlFactory32.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper34 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory32);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes35 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = xmlMapper34.writer(characterEscapes35);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray37 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper34.disable(featureArray37);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext39 = xmlMapper34.getDeserializationContext();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper34);
        com.fasterxml.jackson.core.ObjectCodec objectCodec41 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory42 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory43 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory44 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec41, xMLInputFactory42, xMLOutputFactory43);
        com.fasterxml.jackson.core.Version version45 = xmlFactory44.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper46 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory44);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes47 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter48 = xmlMapper46.writer(characterEscapes47);
        com.fasterxml.jackson.core.ObjectCodec objectCodec49 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory50 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory51 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory52 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec49, xMLInputFactory50, xMLOutputFactory51);
        com.fasterxml.jackson.core.Version version53 = xmlFactory52.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper54 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory52);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes55 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter56 = xmlMapper54.writer(characterEscapes55);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory57 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper58 = xmlMapper54.setNodeFactory(jsonNodeFactory57);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider59 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper60 = xmlMapper54.setFilterProvider(filterProvider59);
        com.fasterxml.jackson.core.JsonParser jsonParser61 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec62 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory63 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory64 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory65 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec62, xMLInputFactory63, xMLOutputFactory64);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature66 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory67 = xmlFactory65.disable(feature66);
        com.fasterxml.jackson.core.Version version68 = xmlFactory67.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass69 = xmlFactory67.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor70 = objectMapper60.readValues(jsonParser61, featureClass69);
        boolean boolean71 = xmlMapper46.canSerialize(featureClass69);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference72 = null;
        boolean boolean73 = xmlMapper34.canSerialize(featureClass69, throwableAtomicReference72);
        com.fasterxml.jackson.databind.BeanProperty beanProperty75 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = serializerProvider28.findTypedValueSerializer(featureClass69, false, beanProperty75);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = serializerProvider28.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer78 = xmlBeanSerializerModifier0.modifySerializer(serializationConfig14, beanDescription15, objJsonSerializer77);
        boolean boolean79 = wildcardJsonSerializer78.isUnwrappingSerializer();
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(featureArray9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(deserializationContext11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(serializationConfig14);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(featureArray24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(serializationConfig27);
        org.junit.Assert.assertNotNull(serializerProvider28);
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(featureArray37);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(deserializationContext39);
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(objectWriter48);
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(objectWriter56);
        org.junit.Assert.assertNotNull(objectMapper58);
        org.junit.Assert.assertNotNull(objectMapper60);
        org.junit.Assert.assertTrue("'" + feature66 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature66.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory67);
        org.junit.Assert.assertNotNull(version68);
        org.junit.Assert.assertNotNull(featureClass69);
        org.junit.Assert.assertNotNull(featureItor70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
        org.junit.Assert.assertNotNull(objJsonSerializer77);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test342");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean5 = xmlFactory3.isEnabled(feature4);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlFactory9.disable(feature10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature14 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper13.disable(feature14);
        boolean boolean16 = feature14.enabledByDefault();
        boolean boolean17 = xmlFactory3.isEnabled(feature14);
        com.fasterxml.jackson.core.JsonFactory jsonFactory19 = xmlFactory3.setRootValueSeparator(" ");
        java.io.InputStream inputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser21 = jsonFactory19.createJsonParser(inputStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + feature14 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature14.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(jsonFactory19);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test343");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = objectMapper22.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig24 = objectMapper22.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = objectMapper22.getSerializerProviderInstance();
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory26 = serializerProvider25.getTypeFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec27 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory28 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec27, xMLInputFactory28, xMLOutputFactory29);
        com.fasterxml.jackson.core.Version version31 = xmlFactory30.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper32 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory30);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes33 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter34 = xmlMapper32.writer(characterEscapes33);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory35 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = xmlMapper32.setNodeFactory(jsonNodeFactory35);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader38 = xmlMapper32.readerForUpdating((java.lang.Object) xmlFactory37);
        boolean boolean39 = xmlFactory37.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass40 = xmlFactory37.getFormatReadFeatureType();
        boolean boolean41 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass40);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = serializerProvider25.getUnknownTypeSerializer(featureClass40);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer43 = serializerProvider12.findValueSerializer(featureClass40);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(serializationConfig24);
        org.junit.Assert.assertNotNull(serializerProvider25);
        org.junit.Assert.assertNotNull(typeFactory26);
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(objectWriter34);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(objectReader38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(featureClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(objJsonSerializer43);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test344");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper4 = xmlMapper2.setDefaultUseWrapper(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec5 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory6 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory7 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory8 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec5, xMLInputFactory6, xMLOutputFactory7);
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory8.setRootValueSeparator("");
        java.io.DataOutput dataOutput11 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = jsonFactory10.createGenerator(dataOutput11);
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator13 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory14 = jsonFactory10.setInputDecorator(inputDecorator13);
        java.io.DataOutput dataOutput15 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = jsonFactory14.createGenerator(dataOutput15);
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray25 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.disable(featureArray25);
        com.fasterxml.jackson.databind.node.ArrayNode arrayNode27 = objectMapper26.createArrayNode();
        xmlMapper2.writeTree(jsonGenerator16, (com.fasterxml.jackson.databind.JsonNode) arrayNode27);
        com.fasterxml.jackson.core.ObjectCodec objectCodec29 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec29, xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.core.Version version33 = xmlFactory32.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper34 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory32);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes35 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = xmlMapper34.writer(characterEscapes35);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray37 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper34.disable(featureArray37);
        int int39 = xmlMapper34.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues40 = xmlMapper34.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature41 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean43 = feature41.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper34.disable(feature41);
        com.fasterxml.jackson.databind.JavaType javaType45 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter46 = objectMapper44.writerWithType(javaType45);
        // The following exception was thrown during execution in test generation
        try {
            jsonGenerator16.writeObjectRef((java.lang.Object) objectWriter46);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonGenerationException; message: No native support for writing Object Ids");
        } catch (com.fasterxml.jackson.core.JsonGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(xmlMapper4);
        org.junit.Assert.assertNotNull(jsonFactory10);
        org.junit.Assert.assertNotNull(jsonGenerator12);
        org.junit.Assert.assertNotNull(jsonFactory14);
        org.junit.Assert.assertNotNull(jsonGenerator16);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(featureArray25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(arrayNode27);
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(featureArray37);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(injectableValues40);
        org.junit.Assert.assertTrue("'" + feature41 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature41.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(objectWriter46);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test345");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper5.findAndRegisterModules();
        com.fasterxml.jackson.core.JsonFactory jsonFactory11 = xmlMapper5.getJsonFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.Version version16 = xmlFactory15.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory15);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(characterEscapes18);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray20 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper17.disable(featureArray20);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = objectMapper21.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig23 = objectMapper21.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = objectMapper21.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature29 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = xmlFactory28.disable(feature29);
        com.fasterxml.jackson.core.Version version31 = xmlFactory30.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass32 = xmlFactory30.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = serializerProvider24.getUnknownTypeSerializer(featureClass32);
        java.util.TimeZone timeZone34 = serializerProvider24.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory38);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper40.writer(characterEscapes41);
        com.fasterxml.jackson.core.ObjectCodec objectCodec43 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory44 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory45 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec43, xMLInputFactory44, xMLOutputFactory45);
        com.fasterxml.jackson.core.Version version47 = xmlFactory46.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper48 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory46);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes49 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter50 = xmlMapper48.writer(characterEscapes49);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory51 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper52 = xmlMapper48.setNodeFactory(jsonNodeFactory51);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider53 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper54 = xmlMapper48.setFilterProvider(filterProvider53);
        com.fasterxml.jackson.core.JsonParser jsonParser55 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature60 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory61 = xmlFactory59.disable(feature60);
        com.fasterxml.jackson.core.Version version62 = xmlFactory61.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass63 = xmlFactory61.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor64 = objectMapper54.readValues(jsonParser55, featureClass63);
        boolean boolean65 = xmlMapper40.canSerialize(featureClass63);
        com.fasterxml.jackson.databind.BeanProperty beanProperty66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = serializerProvider24.findKeySerializer(featureClass63, beanProperty66);
        com.fasterxml.jackson.databind.ObjectReader objectReader68 = xmlMapper5.readerWithView(featureClass63);
        com.fasterxml.jackson.core.ObjectCodec objectCodec69 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory70 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory71 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec69, xMLInputFactory70, xMLOutputFactory71);
        com.fasterxml.jackson.core.JsonFactory jsonFactory74 = xmlFactory72.setRootValueSeparator("");
        java.io.DataOutput dataOutput75 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator76 = jsonFactory74.createGenerator(dataOutput75);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator78 = jsonGenerator76.setHighestNonEscapedChar((-1));
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes79 = jsonGenerator76.getCharacterEscapes();
        boolean boolean80 = jsonGenerator76.canWriteBinaryNatively();
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter81 = jsonGenerator76.getPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec82 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory83 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory84 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory85 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec82, xMLInputFactory83, xMLOutputFactory84);
        com.fasterxml.jackson.core.Version version86 = xmlFactory85.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper87 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory85);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes88 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter89 = xmlMapper87.writer(characterEscapes88);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray90 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper91 = xmlMapper87.disable(featureArray90);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory92 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader93 = xmlMapper87.reader(jsonNodeFactory92);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper94 = xmlMapper87.copy();
        com.fasterxml.jackson.databind.node.ObjectNode objectNode95 = xmlMapper94.createObjectNode();
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper5.writeTree(jsonGenerator76, (com.fasterxml.jackson.databind.JsonNode) objectNode95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(jsonFactory11);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(featureArray20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(serializationConfig23);
        org.junit.Assert.assertNotNull(serializerProvider24);
        org.junit.Assert.assertTrue("'" + feature29 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature29.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory30);
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(featureClass32);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(timeZone34);
        org.junit.Assert.assertEquals(timeZone34.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(objectWriter50);
        org.junit.Assert.assertNotNull(objectMapper52);
        org.junit.Assert.assertNotNull(objectMapper54);
        org.junit.Assert.assertTrue("'" + feature60 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature60.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory61);
        org.junit.Assert.assertNotNull(version62);
        org.junit.Assert.assertNotNull(featureClass63);
        org.junit.Assert.assertNotNull(featureItor64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertNotNull(objectReader68);
        org.junit.Assert.assertNotNull(jsonFactory74);
        org.junit.Assert.assertNotNull(jsonGenerator76);
        org.junit.Assert.assertNotNull(jsonGenerator78);
        org.junit.Assert.assertNull(characterEscapes79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(prettyPrinter81);
        org.junit.Assert.assertNotNull(version86);
        org.junit.Assert.assertNotNull(objectWriter89);
        org.junit.Assert.assertNotNull(featureArray90);
        org.junit.Assert.assertNotNull(objectMapper91);
        org.junit.Assert.assertNotNull(objectReader93);
        org.junit.Assert.assertNotNull(xmlMapper94);
        org.junit.Assert.assertNotNull(objectNode95);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test346");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.JsonFactory jsonFactory28 = xmlFactory26.setRootValueSeparator("");
        java.io.DataOutput dataOutput29 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator30 = jsonFactory28.createGenerator(dataOutput29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = serializerProvider12.setAttribute((java.lang.Object) jsonFactory28, (java.lang.Object) ' ');
        com.fasterxml.jackson.databind.BeanProperty beanProperty33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = serializerProvider12.findNullValueSerializer(beanProperty33);
        java.lang.Class<?> wildcardClass35 = serializerProvider12.getActiveView();
        com.fasterxml.jackson.core.ObjectCodec objectCodec36 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory37 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory38 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec36, xMLInputFactory37, xMLOutputFactory38);
        com.fasterxml.jackson.core.Version version40 = xmlFactory39.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper41 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory39);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes42 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter43 = xmlMapper41.writer(characterEscapes42);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray44 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper41.disable(featureArray44);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper46 = objectMapper45.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig47 = objectMapper45.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = objectMapper45.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec49 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory50 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory51 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory52 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec49, xMLInputFactory50, xMLOutputFactory51);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature53 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory54 = xmlFactory52.disable(feature53);
        com.fasterxml.jackson.core.Version version55 = xmlFactory54.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass56 = xmlFactory54.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = serializerProvider48.getUnknownTypeSerializer(featureClass56);
        java.util.TimeZone timeZone58 = serializerProvider48.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec59 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory60 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory61 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory62 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec59, xMLInputFactory60, xMLOutputFactory61);
        com.fasterxml.jackson.core.Version version63 = xmlFactory62.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper64 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory62);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes65 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter66 = xmlMapper64.writer(characterEscapes65);
        com.fasterxml.jackson.core.ObjectCodec objectCodec67 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory68 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory69 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory70 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec67, xMLInputFactory68, xMLOutputFactory69);
        com.fasterxml.jackson.core.Version version71 = xmlFactory70.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper72 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory70);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes73 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter74 = xmlMapper72.writer(characterEscapes73);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory75 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper76 = xmlMapper72.setNodeFactory(jsonNodeFactory75);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider77 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper78 = xmlMapper72.setFilterProvider(filterProvider77);
        com.fasterxml.jackson.core.JsonParser jsonParser79 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec80 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory81 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory82 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory83 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec80, xMLInputFactory81, xMLOutputFactory82);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature84 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory85 = xmlFactory83.disable(feature84);
        com.fasterxml.jackson.core.Version version86 = xmlFactory85.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass87 = xmlFactory85.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor88 = objectMapper78.readValues(jsonParser79, featureClass87);
        boolean boolean89 = xmlMapper64.canSerialize(featureClass87);
        com.fasterxml.jackson.databind.BeanProperty beanProperty90 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer91 = serializerProvider48.findKeySerializer(featureClass87, beanProperty90);
        com.fasterxml.jackson.annotation.JsonInclude.Value value92 = serializerProvider12.getDefaultPropertyInclusion(featureClass87);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(jsonFactory28);
        org.junit.Assert.assertNotNull(jsonGenerator30);
        org.junit.Assert.assertNotNull(serializerProvider32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNull(wildcardClass35);
        org.junit.Assert.assertNotNull(version40);
        org.junit.Assert.assertNotNull(objectWriter43);
        org.junit.Assert.assertNotNull(featureArray44);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertNotNull(objectMapper46);
        org.junit.Assert.assertNotNull(serializationConfig47);
        org.junit.Assert.assertNotNull(serializerProvider48);
        org.junit.Assert.assertTrue("'" + feature53 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature53.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory54);
        org.junit.Assert.assertNotNull(version55);
        org.junit.Assert.assertNotNull(featureClass56);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(timeZone58);
        org.junit.Assert.assertEquals(timeZone58.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version63);
        org.junit.Assert.assertNotNull(objectWriter66);
        org.junit.Assert.assertNotNull(version71);
        org.junit.Assert.assertNotNull(objectWriter74);
        org.junit.Assert.assertNotNull(objectMapper76);
        org.junit.Assert.assertNotNull(objectMapper78);
        org.junit.Assert.assertTrue("'" + feature84 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature84.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory85);
        org.junit.Assert.assertNotNull(version86);
        org.junit.Assert.assertNotNull(featureClass87);
        org.junit.Assert.assertNotNull(featureItor88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer91);
        org.junit.Assert.assertNotNull(value92);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test347");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        int int10 = xmlMapper5.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues11 = xmlMapper5.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature12 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean14 = feature12.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper5.disable(feature12);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature16 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = objectMapper15.configure(serializationFeature16, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(injectableValues11);
        org.junit.Assert.assertTrue("'" + feature12 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature12.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objectMapper15);
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test348");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor21 = objectMapper11.readValues(jsonParser12, featureClass20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.databind.introspect.Annotated annotated25 = null;
        java.lang.Boolean boolean26 = pair24.isOutputAsCData(annotated25);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector27 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair29 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector27, annotationIntrospector28);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector30 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair32 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector30, annotationIntrospector31);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair29, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair24, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper11.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = objectMapper11.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.InjectableValues injectableValues37 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper11.setInjectableValues(injectableValues37);
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter39 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec40 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory41 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec40, xMLInputFactory41, xMLOutputFactory42);
        com.fasterxml.jackson.core.JsonFactory jsonFactory45 = xmlFactory43.setRootValueSeparator("");
        java.io.DataOutput dataOutput46 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator47 = jsonFactory45.createGenerator(dataOutput46);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator49 = jsonGenerator47.setHighestNonEscapedChar((-1));
        boolean boolean50 = jsonGenerator49.canWriteObjectId();
        int int51 = jsonGenerator49.getHighestEscapedChar();
        defaultXmlPrettyPrinter39.writeArrayValueSeparator(jsonGenerator49);
        com.fasterxml.jackson.core.ObjectCodec objectCodec53 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec53, xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.core.JsonFactory jsonFactory58 = xmlFactory56.setRootValueSeparator("");
        java.io.DataOutput dataOutput59 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator60 = jsonFactory58.createGenerator(dataOutput59);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator62 = jsonGenerator60.setHighestNonEscapedChar((-1));
        defaultXmlPrettyPrinter39.beforeObjectEntries(jsonGenerator62);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator64 = null;
        defaultXmlPrettyPrinter39.beforeArrayValues(jsonGenerator64);
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter66 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec67 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory68 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory69 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory70 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec67, xMLInputFactory68, xMLOutputFactory69);
        com.fasterxml.jackson.core.JsonFactory jsonFactory72 = xmlFactory70.setRootValueSeparator("");
        java.io.DataOutput dataOutput73 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator74 = jsonFactory72.createGenerator(dataOutput73);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator76 = jsonGenerator74.setHighestNonEscapedChar((-1));
        boolean boolean77 = jsonGenerator76.canWriteObjectId();
        int int78 = jsonGenerator76.getHighestEscapedChar();
        defaultXmlPrettyPrinter66.writeArrayValueSeparator(jsonGenerator76);
        defaultXmlPrettyPrinter39.writeObjectFieldValueSeparator(jsonGenerator76);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper81 = objectMapper11.setDefaultPrettyPrinter((com.fasterxml.jackson.core.PrettyPrinter) defaultXmlPrettyPrinter39);
        com.fasterxml.jackson.core.ObjectCodec objectCodec82 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory83 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory84 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory85 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec82, xMLInputFactory83, xMLOutputFactory84);
        com.fasterxml.jackson.core.JsonFactory jsonFactory87 = xmlFactory85.setRootValueSeparator("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = objectMapper81.writeValueAsString((java.lang.Object) jsonFactory87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(featureItor21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(pair34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(jsonFactory45);
        org.junit.Assert.assertNotNull(jsonGenerator47);
        org.junit.Assert.assertNotNull(jsonGenerator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(jsonFactory58);
        org.junit.Assert.assertNotNull(jsonGenerator60);
        org.junit.Assert.assertNotNull(jsonGenerator62);
        org.junit.Assert.assertNotNull(jsonFactory72);
        org.junit.Assert.assertNotNull(jsonGenerator74);
        org.junit.Assert.assertNotNull(jsonGenerator76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(objectMapper81);
        org.junit.Assert.assertNotNull(jsonFactory87);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test349");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider2 = xmlSerializerProvider1.copy();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: DefaultSerializerProvider sub-class not overriding copy()");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test350");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.JsonFactory jsonFactory28 = xmlFactory26.setRootValueSeparator("");
        java.io.DataOutput dataOutput29 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator30 = jsonFactory28.createGenerator(dataOutput29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = serializerProvider12.setAttribute((java.lang.Object) jsonFactory28, (java.lang.Object) ' ');
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory34 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec33, xMLInputFactory34, xMLOutputFactory35);
        com.fasterxml.jackson.core.Version version37 = xmlFactory36.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper38 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory36);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes39 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter40 = xmlMapper38.writer(characterEscapes39);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray41 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper38.disable(featureArray41);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = objectMapper42.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig44 = objectMapper42.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider45 = objectMapper42.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature50 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = xmlFactory49.disable(feature50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass53 = xmlFactory51.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer54 = serializerProvider45.getUnknownTypeSerializer(featureClass53);
        java.util.TimeZone timeZone55 = serializerProvider45.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.core.Version version60 = xmlFactory59.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper61 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory59);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes62 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter63 = xmlMapper61.writer(characterEscapes62);
        com.fasterxml.jackson.core.ObjectCodec objectCodec64 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory65 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory66 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory67 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec64, xMLInputFactory65, xMLOutputFactory66);
        com.fasterxml.jackson.core.Version version68 = xmlFactory67.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper69 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory67);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes70 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter71 = xmlMapper69.writer(characterEscapes70);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory72 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper73 = xmlMapper69.setNodeFactory(jsonNodeFactory72);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider74 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper75 = xmlMapper69.setFilterProvider(filterProvider74);
        com.fasterxml.jackson.core.JsonParser jsonParser76 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec77 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory78 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory79 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory80 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec77, xMLInputFactory78, xMLOutputFactory79);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature81 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory82 = xmlFactory80.disable(feature81);
        com.fasterxml.jackson.core.Version version83 = xmlFactory82.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass84 = xmlFactory82.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor85 = objectMapper75.readValues(jsonParser76, featureClass84);
        boolean boolean86 = xmlMapper61.canSerialize(featureClass84);
        com.fasterxml.jackson.databind.BeanProperty beanProperty87 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer88 = serializerProvider45.findKeySerializer(featureClass84, beanProperty87);
        com.fasterxml.jackson.databind.BeanProperty beanProperty89 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer90 = serializerProvider32.handlePrimaryContextualization(objJsonSerializer88, beanProperty89);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(jsonFactory28);
        org.junit.Assert.assertNotNull(jsonGenerator30);
        org.junit.Assert.assertNotNull(serializerProvider32);
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(objectWriter40);
        org.junit.Assert.assertNotNull(featureArray41);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(serializationConfig44);
        org.junit.Assert.assertNotNull(serializerProvider45);
        org.junit.Assert.assertTrue("'" + feature50 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature50.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory51);
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(featureClass53);
        org.junit.Assert.assertNotNull(objJsonSerializer54);
        org.junit.Assert.assertNotNull(timeZone55);
        org.junit.Assert.assertEquals(timeZone55.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(objectWriter63);
        org.junit.Assert.assertNotNull(version68);
        org.junit.Assert.assertNotNull(objectWriter71);
        org.junit.Assert.assertNotNull(objectMapper73);
        org.junit.Assert.assertNotNull(objectMapper75);
        org.junit.Assert.assertTrue("'" + feature81 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature81.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory82);
        org.junit.Assert.assertNotNull(version83);
        org.junit.Assert.assertNotNull(featureClass84);
        org.junit.Assert.assertNotNull(featureItor85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer88);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer90);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test351");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.JsonFactory jsonFactory28 = xmlFactory26.setRootValueSeparator("");
        java.io.DataOutput dataOutput29 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator30 = jsonFactory28.createGenerator(dataOutput29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = serializerProvider12.setAttribute((java.lang.Object) jsonFactory28, (java.lang.Object) ' ');
        com.fasterxml.jackson.databind.BeanProperty beanProperty33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = serializerProvider12.findNullValueSerializer(beanProperty33);
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory38);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper40.writer(characterEscapes41);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider43 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter44 = xmlMapper40.writer(filterProvider43);
        com.fasterxml.jackson.databind.node.ArrayNode arrayNode45 = xmlMapper40.createArrayNode();
        java.lang.Object obj46 = serializerProvider12.getAttribute((java.lang.Object) xmlMapper40);
        com.fasterxml.jackson.databind.node.ArrayNode arrayNode47 = xmlMapper40.createArrayNode();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(jsonFactory28);
        org.junit.Assert.assertNotNull(jsonGenerator30);
        org.junit.Assert.assertNotNull(serializerProvider32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertNotNull(objectWriter44);
        org.junit.Assert.assertNotNull(arrayNode45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(arrayNode47);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test352");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = xmlFactory5.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory10);
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper13.disable(feature14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(xMLInputFactory10);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test353");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = objectMapper10.writerWithType(javaType11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper10.clearProblemHandlers();
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = objectMapper10.disable(deserializationFeature14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper13);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test354");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.setNodeFactory(jsonNodeFactory11);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader14 = xmlMapper8.readerForUpdating((java.lang.Object) xmlFactory13);
        boolean boolean15 = xmlFactory13.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass16 = xmlFactory13.getFormatReadFeatureType();
        boolean boolean17 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass16);
        java.lang.Enum[] enumArray19 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray20 = (java.lang.Enum<?>[]) enumArray19;
        java.lang.String[] strArray21 = null;
        java.lang.String[] strArray22 = jacksonAnnotationIntrospector2.findEnumValues(featureClass16, (java.lang.Enum<?>[]) enumArray19, strArray21);
        com.fasterxml.jackson.databind.introspect.Annotated annotated23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = jacksonAnnotationIntrospector2.findNullSerializer(annotated23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectReader14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(featureClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(enumArray19);
        org.junit.Assert.assertNotNull(wildcardEnumArray20);
        org.junit.Assert.assertNull(strArray22);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test355");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTypingAsProperty(defaultTyping11, "");
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = objectMapper13.setFilterProvider(filterProvider14);
        com.fasterxml.jackson.core.JsonParser.Feature feature16 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = objectMapper13.configure(feature16, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper15);
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test356");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.core.FormatSchema formatSchema12 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader13 = xmlMapper5.reader(formatSchema12);
        com.fasterxml.jackson.databind.cfg.HandlerInstantiator handlerInstantiator14 = null;
        java.lang.Object obj15 = xmlMapper5.setHandlerInstantiator(handlerInstantiator14);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector16 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair18 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector16, annotationIntrospector17);
        com.fasterxml.jackson.databind.introspect.Annotated annotated19 = null;
        java.lang.Boolean boolean20 = pair18.isOutputAsCData(annotated19);
        com.fasterxml.jackson.databind.introspect.Annotated annotated21 = null;
        java.lang.Boolean boolean22 = pair18.isOutputAsText(annotated21);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper5.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) pair18);
        com.fasterxml.jackson.databind.introspect.Annotated annotated24 = null;
        com.fasterxml.jackson.annotation.JsonInclude.Include include25 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.JsonInclude.Include include26 = pair18.findSerializationInclusionForContent(annotated24, include25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectReader13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(objectMapper23);
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test357");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = xmlFactory5.getXMLInputFactory();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser13 = xmlFactory5.createJsonParser(file12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(xMLInputFactory10);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test358");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper12.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = objectMapper12.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = objectMapper12.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature20 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = xmlFactory19.disable(feature20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass23 = xmlFactory21.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = serializerProvider15.getUnknownTypeSerializer(featureClass23);
        java.util.TimeZone timeZone25 = serializerProvider15.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory29);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(characterEscapes32);
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.core.Version version38 = xmlFactory37.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory37);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes40 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = xmlMapper39.writer(characterEscapes40);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper39.setNodeFactory(jsonNodeFactory42);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider44 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper39.setFilterProvider(filterProvider44);
        com.fasterxml.jackson.core.JsonParser jsonParser46 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature51 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory52 = xmlFactory50.disable(feature51);
        com.fasterxml.jackson.core.Version version53 = xmlFactory52.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass54 = xmlFactory52.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor55 = objectMapper45.readValues(jsonParser46, featureClass54);
        boolean boolean56 = xmlMapper31.canSerialize(featureClass54);
        com.fasterxml.jackson.databind.BeanProperty beanProperty57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = serializerProvider15.findKeySerializer(featureClass54, beanProperty57);
        java.lang.Enum[] enumArray60 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray61 = (java.lang.Enum<?>[]) enumArray60;
        java.lang.String[] strArray68 = new java.lang.String[] { "xmlInfo", " ", "<String>XML</String>", " ", "hi!", "xmlInfo" };
        java.lang.String[] strArray69 = jacksonXmlAnnotationIntrospector0.findEnumValues(featureClass54, (java.lang.Enum<?>[]) enumArray60, strArray68);
        com.fasterxml.jackson.databind.introspect.Annotated annotated70 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.PropertyName propertyName71 = jacksonXmlAnnotationIntrospector0.findNameForDeserialization(annotated70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializationConfig14);
        org.junit.Assert.assertNotNull(serializerProvider15);
        org.junit.Assert.assertTrue("'" + feature20 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature20.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory21);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(featureClass23);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(timeZone25);
        org.junit.Assert.assertEquals(timeZone25.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(objectWriter41);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertTrue("'" + feature51 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature51.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory52);
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(featureClass54);
        org.junit.Assert.assertNotNull(featureItor55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(enumArray60);
        org.junit.Assert.assertNotNull(wildcardEnumArray61);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test359");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass8 = xmlFactory5.getFormatReadFeatureType();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        xmlFactory5.setXMLOutputFactory(xMLOutputFactory9);
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(featureClass8);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test360");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        int int10 = xmlMapper5.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues11 = xmlMapper5.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature12 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean14 = feature12.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper5.disable(feature12);
        com.fasterxml.jackson.databind.JavaType javaType16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = objectMapper15.writerWithType(javaType16);
        com.fasterxml.jackson.core.ObjectCodec objectCodec18 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec18, xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory21);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes24 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter25 = xmlMapper23.writer(characterEscapes24);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray26 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper23.disable(featureArray26);
        int int28 = xmlMapper23.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues29 = xmlMapper23.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature30 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean32 = feature30.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = xmlMapper23.disable(feature30);
        com.fasterxml.jackson.databind.JavaType javaType34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = objectMapper33.writerWithType(javaType34);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory36 = objectMapper33.getSerializerFactory();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = objectMapper15.setSerializerFactory(serializerFactory36);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass38 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec39 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory40 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory41 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec39, xMLInputFactory40, xMLOutputFactory41);
        com.fasterxml.jackson.core.Version version43 = xmlFactory42.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper44 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory42);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes45 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter46 = xmlMapper44.writer(characterEscapes45);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray47 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper48 = xmlMapper44.disable(featureArray47);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper49 = objectMapper48.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig50 = objectMapper48.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider51 = objectMapper48.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec52 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory53 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory54 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory55 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec52, xMLInputFactory53, xMLOutputFactory54);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature56 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory57 = xmlFactory55.disable(feature56);
        com.fasterxml.jackson.core.Version version58 = xmlFactory57.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass59 = xmlFactory57.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = serializerProvider51.getUnknownTypeSerializer(featureClass59);
        com.fasterxml.jackson.core.ObjectCodec objectCodec61 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory62 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory63 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory64 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec61, xMLInputFactory62, xMLOutputFactory63);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature65 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory66 = xmlFactory64.disable(feature65);
        com.fasterxml.jackson.core.Version version67 = xmlFactory66.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper68 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory66);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass69 = xmlFactory66.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.BeanProperty beanProperty71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer72 = serializerProvider51.findTypedValueSerializer(featureClass69, false, beanProperty71);
        // The following exception was thrown during execution in test generation
        try {
            objectMapper15.addMixInAnnotations(featureClass38, featureClass69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(injectableValues11);
        org.junit.Assert.assertTrue("'" + feature12 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature12.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(objectWriter25);
        org.junit.Assert.assertNotNull(featureArray26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(injectableValues29);
        org.junit.Assert.assertTrue("'" + feature30 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature30.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertNotNull(serializerFactory36);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(objectWriter46);
        org.junit.Assert.assertNotNull(featureArray47);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertNotNull(objectMapper49);
        org.junit.Assert.assertNotNull(serializationConfig50);
        org.junit.Assert.assertNotNull(serializerProvider51);
        org.junit.Assert.assertTrue("'" + feature56 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature56.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory57);
        org.junit.Assert.assertNotNull(version58);
        org.junit.Assert.assertNotNull(featureClass59);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertTrue("'" + feature65 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature65.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory66);
        org.junit.Assert.assertNotNull(version67);
        org.junit.Assert.assertNotNull(featureClass69);
        org.junit.Assert.assertNotNull(objJsonSerializer72);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test361");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.Version version27 = xmlFactory26.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory26);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(characterEscapes29);
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory34);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes37 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter38 = xmlMapper36.writer(characterEscapes37);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory39 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper36.setNodeFactory(jsonNodeFactory39);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper36.setFilterProvider(filterProvider41);
        com.fasterxml.jackson.core.JsonParser jsonParser43 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature48 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = xmlFactory47.disable(feature48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass51 = xmlFactory49.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor52 = objectMapper42.readValues(jsonParser43, featureClass51);
        boolean boolean53 = xmlMapper28.canSerialize(featureClass51);
        com.fasterxml.jackson.databind.JavaType javaType54 = serializerProvider12.constructType((java.lang.reflect.Type) featureClass51);
        com.fasterxml.jackson.core.ObjectCodec objectCodec55 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory56 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory57 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory58 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec55, xMLInputFactory56, xMLOutputFactory57);
        com.fasterxml.jackson.core.Version version59 = xmlFactory58.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper60 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory58);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes61 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter62 = xmlMapper60.writer(characterEscapes61);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray63 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper64 = xmlMapper60.disable(featureArray63);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = objectMapper64.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig66 = objectMapper64.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = objectMapper64.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec68 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory69 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory70 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory71 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec68, xMLInputFactory69, xMLOutputFactory70);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature72 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory73 = xmlFactory71.disable(feature72);
        com.fasterxml.jackson.core.Version version74 = xmlFactory73.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass75 = xmlFactory73.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = serializerProvider67.getUnknownTypeSerializer(featureClass75);
        java.util.TimeZone timeZone77 = serializerProvider67.getTimeZone();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer78 = serializerProvider67.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty79 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = serializerProvider12.handlePrimaryContextualization(objJsonSerializer78, beanProperty79);
        com.fasterxml.jackson.core.ObjectCodec objectCodec82 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory83 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory84 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory85 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec82, xMLInputFactory83, xMLOutputFactory84);
        com.fasterxml.jackson.core.JsonFactory jsonFactory87 = xmlFactory85.setRootValueSeparator("");
        java.io.DataOutput dataOutput88 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator89 = jsonFactory87.createGenerator(dataOutput88);
        boolean boolean90 = jsonGenerator89.canWriteTypeId();
        // The following exception was thrown during execution in test generation
        try {
            serializerProvider12.defaultSerializeValue((java.lang.Object) 57343, jsonGenerator89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No element/attribute name specified when trying to output element");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(objectWriter38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertTrue("'" + feature48 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature48.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory49);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(featureClass51);
        org.junit.Assert.assertNotNull(featureItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(javaType54);
        org.junit.Assert.assertNotNull(version59);
        org.junit.Assert.assertNotNull(objectWriter62);
        org.junit.Assert.assertNotNull(featureArray63);
        org.junit.Assert.assertNotNull(objectMapper64);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertNotNull(serializationConfig66);
        org.junit.Assert.assertNotNull(serializerProvider67);
        org.junit.Assert.assertTrue("'" + feature72 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature72.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory73);
        org.junit.Assert.assertNotNull(version74);
        org.junit.Assert.assertNotNull(featureClass75);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
        org.junit.Assert.assertNotNull(timeZone77);
        org.junit.Assert.assertEquals(timeZone77.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(objJsonSerializer78);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNotNull(jsonFactory87);
        org.junit.Assert.assertNotNull(jsonGenerator89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test362");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector3 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair5 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector3, annotationIntrospector4);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair6 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair2, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair5);
        pair6.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector9 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair11 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector9, annotationIntrospector10);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector12 = com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.create((com.fasterxml.jackson.databind.AnnotationIntrospector) pair6, annotationIntrospector10);
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = objectMapper22.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig24 = objectMapper22.getSerializationConfig();
        com.fasterxml.jackson.databind.introspect.Annotated annotated25 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory29);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(characterEscapes32);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray34 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper31.disable(featureArray34);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = objectMapper35.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig37 = objectMapper35.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider38 = objectMapper35.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray39 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = objectMapper35.enable(featureArray39);
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = objectMapper35.setSerializerProvider(defaultSerializerProvider41);
        com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier xmlBeanDeserializerModifier44 = new com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier(" ");
        com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig45 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper51 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory49);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes52 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter53 = xmlMapper51.writer(characterEscapes52);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider54 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter55 = xmlMapper51.writer(filterProvider54);
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.core.Version version60 = xmlFactory59.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper61 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory59);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes62 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter63 = xmlMapper61.writer(characterEscapes62);
        com.fasterxml.jackson.core.ObjectCodec objectCodec64 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory65 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory66 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory67 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec64, xMLInputFactory65, xMLOutputFactory66);
        com.fasterxml.jackson.core.Version version68 = xmlFactory67.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper69 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory67);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes70 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter71 = xmlMapper69.writer(characterEscapes70);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory72 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper73 = xmlMapper69.setNodeFactory(jsonNodeFactory72);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider74 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper75 = xmlMapper69.setFilterProvider(filterProvider74);
        com.fasterxml.jackson.core.JsonParser jsonParser76 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec77 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory78 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory79 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory80 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec77, xMLInputFactory78, xMLOutputFactory79);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature81 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory82 = xmlFactory80.disable(feature81);
        com.fasterxml.jackson.core.Version version83 = xmlFactory82.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass84 = xmlFactory82.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor85 = objectMapper75.readValues(jsonParser76, featureClass84);
        boolean boolean86 = xmlMapper61.canSerialize(featureClass84);
        boolean boolean87 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass84);
        com.fasterxml.jackson.databind.JavaType javaType88 = xmlMapper51.constructType((java.lang.reflect.Type) featureClass84);
        boolean boolean89 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType88);
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer90 = null;
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer91 = xmlBeanDeserializerModifier44.modifyKeyDeserializer(deserializationConfig45, javaType88, keyDeserializer90);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference92 = null;
        boolean boolean93 = objectMapper35.canDeserialize(javaType88, throwableAtomicReference92);
        boolean boolean94 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType88);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType95 = pair6.refineDeserializationType((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig24, annotated25, javaType88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationIntrospector12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(serializationConfig24);
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(featureArray34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(serializationConfig37);
        org.junit.Assert.assertNotNull(serializerProvider38);
        org.junit.Assert.assertNotNull(featureArray39);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(objectWriter53);
        org.junit.Assert.assertNotNull(objectWriter55);
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(objectWriter63);
        org.junit.Assert.assertNotNull(version68);
        org.junit.Assert.assertNotNull(objectWriter71);
        org.junit.Assert.assertNotNull(objectMapper73);
        org.junit.Assert.assertNotNull(objectMapper75);
        org.junit.Assert.assertTrue("'" + feature81 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature81.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory82);
        org.junit.Assert.assertNotNull(version83);
        org.junit.Assert.assertNotNull(featureClass84);
        org.junit.Assert.assertNotNull(featureItor85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(javaType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(keyDeserializer91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test363");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        boolean boolean13 = xmlFactory12.requiresPropertyOrdering();
        boolean boolean14 = xmlFactory12.canUseCharArrays();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test364");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.readerForUpdating((java.lang.Object) xmlFactory10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper5);
        com.fasterxml.jackson.core.Version version13 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping14 = null;
        com.fasterxml.jackson.annotation.JsonTypeInfo.As as15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper5.enableDefaultTyping(defaultTyping14, as15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: includeAs can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
        org.junit.Assert.assertNotNull(version13);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test365");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper9.clearProblemHandlers();
        com.fasterxml.jackson.databind.MapperFeature mapperFeature11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = objectMapper10.isEnabled(mapperFeature11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(objectMapper10);
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test366");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.readerForUpdating((java.lang.Object) xmlFactory10);
        com.fasterxml.jackson.core.JsonParser.Feature feature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory13 = xmlFactory10.disable(feature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test367");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.ObjectCodec objectCodec4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec4, xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature8 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = xmlFactory7.disable(feature8);
        boolean boolean10 = feature8.enabledByDefault();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.configure(feature8, false);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass13 = xmlFactory12.getFormatWriteFeatureType();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule14 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory12, jacksonXmlModule14);
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping22 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper21.enableDefaultTypingAsProperty(defaultTyping22, "XML");
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(characterEscapes31);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray33 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = xmlMapper30.disable(featureArray33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper34.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig36 = objectMapper34.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = objectMapper34.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature42 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = xmlFactory41.disable(feature42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass45 = xmlFactory43.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = serializerProvider37.getUnknownTypeSerializer(featureClass45);
        java.util.TimeZone timeZone47 = serializerProvider37.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper53 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory51);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes54 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter55 = xmlMapper53.writer(characterEscapes54);
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.core.Version version60 = xmlFactory59.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper61 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory59);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes62 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter63 = xmlMapper61.writer(characterEscapes62);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory64 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = xmlMapper61.setNodeFactory(jsonNodeFactory64);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider66 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper67 = xmlMapper61.setFilterProvider(filterProvider66);
        com.fasterxml.jackson.core.JsonParser jsonParser68 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec69 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory70 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory71 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec69, xMLInputFactory70, xMLOutputFactory71);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature73 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory74 = xmlFactory72.disable(feature73);
        com.fasterxml.jackson.core.Version version75 = xmlFactory74.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass76 = xmlFactory74.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor77 = objectMapper67.readValues(jsonParser68, featureClass76);
        boolean boolean78 = xmlMapper53.canSerialize(featureClass76);
        com.fasterxml.jackson.databind.BeanProperty beanProperty79 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = serializerProvider37.findKeySerializer(featureClass76, beanProperty79);
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride81 = objectMapper24.configOverride(featureClass76);
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer82 = null;
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule83 = jacksonXmlModule14.addKeyDeserializer(featureClass76, keyDeserializer82);
        java.lang.Object obj84 = simpleModule83.getTypeId();
        org.junit.Assert.assertTrue("'" + feature8 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature8.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(featureClass13);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(featureArray33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(serializationConfig36);
        org.junit.Assert.assertNotNull(serializerProvider37);
        org.junit.Assert.assertTrue("'" + feature42 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature42.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory43);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(featureClass45);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(timeZone47);
        org.junit.Assert.assertEquals(timeZone47.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(objectWriter55);
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(objectWriter63);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertNotNull(objectMapper67);
        org.junit.Assert.assertTrue("'" + feature73 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature73.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory74);
        org.junit.Assert.assertNotNull(version75);
        org.junit.Assert.assertNotNull(featureClass76);
        org.junit.Assert.assertNotNull(featureItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
        org.junit.Assert.assertNotNull(mutableConfigOverride81);
        org.junit.Assert.assertNotNull(simpleModule83);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "com.fasterxml.jackson.dataformat.xml.JacksonXmlModule" + "'", obj84, "com.fasterxml.jackson.dataformat.xml.JacksonXmlModule");
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test368");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTyping();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider14 = null;
        xmlMapper5.setFilters(filterProvider14);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig16 = xmlMapper5.getSerializationConfig();
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray25 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.disable(featureArray25);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory27 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader28 = xmlMapper22.reader(jsonNodeFactory27);
        com.fasterxml.jackson.core.ObjectCodec objectCodec29 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec29, xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.core.Version version33 = xmlFactory32.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper34 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory32);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes35 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = xmlMapper34.writer(characterEscapes35);
        com.fasterxml.jackson.core.ObjectCodec objectCodec37 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory38 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory39 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec37, xMLInputFactory38, xMLOutputFactory39);
        com.fasterxml.jackson.core.Version version41 = xmlFactory40.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper42 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory40);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes43 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter44 = xmlMapper42.writer(characterEscapes43);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory45 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper46 = xmlMapper42.setNodeFactory(jsonNodeFactory45);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider47 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper48 = xmlMapper42.setFilterProvider(filterProvider47);
        com.fasterxml.jackson.core.JsonParser jsonParser49 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec50 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory51 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory52 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory53 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec50, xMLInputFactory51, xMLOutputFactory52);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature54 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory55 = xmlFactory53.disable(feature54);
        com.fasterxml.jackson.core.Version version56 = xmlFactory55.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass57 = xmlFactory55.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor58 = objectMapper48.readValues(jsonParser49, featureClass57);
        boolean boolean59 = xmlMapper34.canSerialize(featureClass57);
        boolean boolean60 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass57);
        com.fasterxml.jackson.databind.jsonschema.JsonSchema jsonSchema61 = xmlMapper22.generateJsonSchema(featureClass57);
        com.fasterxml.jackson.databind.ObjectReader objectReader62 = xmlMapper5.readerFor(featureClass57);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature63 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper64 = xmlMapper5.enable(serializationFeature63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializationConfig16);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(featureArray25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(objectReader28);
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(objectWriter44);
        org.junit.Assert.assertNotNull(objectMapper46);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertTrue("'" + feature54 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature54.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory55);
        org.junit.Assert.assertNotNull(version56);
        org.junit.Assert.assertNotNull(featureClass57);
        org.junit.Assert.assertNotNull(featureItor58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(jsonSchema61);
        org.junit.Assert.assertNotNull(objectReader62);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test369");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        com.fasterxml.jackson.annotation.JsonInclude.Value value10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper9.setPropertyInclusion(value10);
        com.fasterxml.jackson.databind.ObjectReader objectReader12 = xmlMapper9.reader();
        com.fasterxml.jackson.core.JsonParser jsonParser13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.node.ContainerNode<com.fasterxml.jackson.databind.node.ArrayNode> arrayNodeContainerNode14 = xmlMapper9.readTree(jsonParser13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectReader12);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test370");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setDefaultPrettyPrinter(prettyPrinter8);
        com.fasterxml.jackson.core.ObjectCodec objectCodec10 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec10, xMLInputFactory11, xMLOutputFactory12);
        com.fasterxml.jackson.core.Version version14 = xmlFactory13.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory13);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(characterEscapes16);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray18 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.disable(featureArray18);
        int int20 = xmlMapper15.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues21 = xmlMapper15.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature22 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean24 = feature22.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.disable(feature22);
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory29);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(characterEscapes32);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray34 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper31.disable(featureArray34);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext36 = xmlMapper31.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping37 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper39 = xmlMapper31.enableDefaultTypingAsProperty(defaultTyping37, "");
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory40 = objectMapper39.getNodeFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader41 = objectMapper25.reader(jsonNodeFactory40);
        com.fasterxml.jackson.databind.ObjectReader objectReader42 = xmlMapper5.reader(jsonNodeFactory40);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(featureArray18);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(injectableValues21);
        org.junit.Assert.assertTrue("'" + feature22 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature22.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(featureArray34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(deserializationContext36);
        org.junit.Assert.assertNotNull(objectMapper39);
        org.junit.Assert.assertNotNull(jsonNodeFactory40);
        org.junit.Assert.assertNotNull(objectReader41);
        org.junit.Assert.assertNotNull(objectReader42);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test371");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor21 = objectMapper11.readValues(jsonParser12, featureClass20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.databind.introspect.Annotated annotated25 = null;
        java.lang.Boolean boolean26 = pair24.isOutputAsCData(annotated25);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector27 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair29 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector27, annotationIntrospector28);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector30 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair32 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector30, annotationIntrospector31);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair29, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair24, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper11.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = objectMapper35.clearProblemHandlers();
        com.fasterxml.jackson.core.ObjectCodec objectCodec37 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory38 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory39 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec37, xMLInputFactory38, xMLOutputFactory39);
        com.fasterxml.jackson.core.Version version41 = xmlFactory40.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper42 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory40);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes43 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter44 = xmlMapper42.writer(characterEscapes43);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray45 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper46 = xmlMapper42.disable(featureArray45);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper47 = objectMapper46.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig48 = objectMapper46.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper49 = objectMapper36.setMixInResolver((com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver) serializationConfig48);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = objectMapper36.getSerializerProviderInstance();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(featureItor21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(pair34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(objectWriter44);
        org.junit.Assert.assertNotNull(featureArray45);
        org.junit.Assert.assertNotNull(objectMapper46);
        org.junit.Assert.assertNotNull(objectMapper47);
        org.junit.Assert.assertNotNull(serializationConfig48);
        org.junit.Assert.assertNotNull(objectMapper49);
        org.junit.Assert.assertNotNull(serializerProvider50);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test372");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.databind.InjectableValues injectableValues12 = objectMapper11.getInjectableValues();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature13 = null;
        com.fasterxml.jackson.databind.SerializationFeature[] serializationFeatureArray14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = objectMapper11.disable(serializationFeature13, serializationFeatureArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNull(injectableValues12);
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test373");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        java.text.DateFormat dateFormat11 = xmlMapper5.getDateFormat();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper5.disableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = xmlMapper18.copy();
        java.text.DateFormat dateFormat24 = xmlMapper18.getDateFormat();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter25 = objectMapper12.writer(dateFormat24);
        com.fasterxml.jackson.core.JsonGenerator.Feature feature26 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = objectMapper12.configure(feature26, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(dateFormat11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(xmlMapper23);
        org.junit.Assert.assertNotNull(dateFormat24);
        org.junit.Assert.assertNotNull(objectWriter25);
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test374");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.enableDefaultTypingAsProperty(defaultTyping10, "XML");
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy13 = objectMapper9.getPropertyNamingStrategy();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = objectMapper9.writer(filterProvider14);
        java.io.DataOutput dataOutput16 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray25 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.disable(featureArray25);
        int int27 = xmlMapper22.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues28 = xmlMapper22.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature29 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean31 = feature29.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper22.disable(feature29);
        // The following exception was thrown during execution in test generation
        try {
            objectMapper9.writeValue(dataOutput16, (java.lang.Object) objectMapper32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNull(propertyNamingStrategy13);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(featureArray25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(injectableValues28);
        org.junit.Assert.assertTrue("'" + feature29 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature29.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objectMapper32);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test375");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper5);
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = xmlFactory11.getCodec();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(objectCodec12);
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test376");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.FormatSchema formatSchema6 = null;
        boolean boolean7 = xmlFactory3.canUseSchema(formatSchema6);
        com.fasterxml.jackson.core.JsonParser.Feature feature8 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory9 = xmlFactory3.disable(feature8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test377");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper5.writer(filterProvider8);
        com.fasterxml.jackson.core.ObjectCodec objectCodec10 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec10, xMLInputFactory11, xMLOutputFactory12);
        com.fasterxml.jackson.core.Version version14 = xmlFactory13.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory13);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(characterEscapes16);
        com.fasterxml.jackson.core.ObjectCodec objectCodec18 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec18, xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory21);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes24 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter25 = xmlMapper23.writer(characterEscapes24);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory26 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper23.setNodeFactory(jsonNodeFactory26);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider28 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = xmlMapper23.setFilterProvider(filterProvider28);
        com.fasterxml.jackson.core.JsonParser jsonParser30 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature35 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = xmlFactory34.disable(feature35);
        com.fasterxml.jackson.core.Version version37 = xmlFactory36.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass38 = xmlFactory36.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor39 = objectMapper29.readValues(jsonParser30, featureClass38);
        boolean boolean40 = xmlMapper15.canSerialize(featureClass38);
        boolean boolean41 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass38);
        com.fasterxml.jackson.databind.JavaType javaType42 = xmlMapper5.constructType((java.lang.reflect.Type) featureClass38);
        java.util.List<com.fasterxml.jackson.databind.Module> moduleList43 = com.fasterxml.jackson.databind.ObjectMapper.findModules();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper5.registerModules((java.lang.Iterable<com.fasterxml.jackson.databind.Module>) moduleList43);
        java.io.InputStream inputStream45 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature50 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = xmlFactory49.disable(feature50);
        java.lang.String str52 = xmlFactory49.getRootValueSeparator();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass53 = xmlFactory49.getFormatReadFeatureType();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature54 = xmlMapper5.readValue(inputStream45, featureClass53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(objectWriter25);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertTrue("'" + feature35 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature35.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory36);
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(featureClass38);
        org.junit.Assert.assertNotNull(featureItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(javaType42);
        org.junit.Assert.assertNotNull(moduleList43);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertTrue("'" + feature50 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature50.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + " " + "'", str52, " ");
        org.junit.Assert.assertNotNull(featureClass53);
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test378");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor21 = objectMapper11.readValues(jsonParser12, featureClass20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.databind.introspect.Annotated annotated25 = null;
        java.lang.Boolean boolean26 = pair24.isOutputAsCData(annotated25);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector27 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair29 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector27, annotationIntrospector28);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector30 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair32 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector30, annotationIntrospector31);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair29, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair24, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper11.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = objectMapper11.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector37 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector39 = jacksonXmlAnnotationIntrospector37.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec40 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory41 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec40, xMLInputFactory41, xMLOutputFactory42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper45 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory43);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes46 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter47 = xmlMapper45.writer(characterEscapes46);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory48 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper49 = xmlMapper45.setNodeFactory(jsonNodeFactory48);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader51 = xmlMapper45.readerForUpdating((java.lang.Object) xmlFactory50);
        boolean boolean52 = xmlFactory50.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass53 = xmlFactory50.getFormatReadFeatureType();
        boolean boolean54 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass53);
        java.lang.Enum[] enumArray56 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray57 = (java.lang.Enum<?>[]) enumArray56;
        java.lang.String[] strArray58 = null;
        java.lang.String[] strArray59 = jacksonAnnotationIntrospector39.findEnumValues(featureClass53, (java.lang.Enum<?>[]) enumArray56, strArray58);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsonschema.JsonSchema jsonSchema60 = objectMapper11.generateJsonSchema(featureClass53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(featureItor21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(pair34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector39);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(objectWriter47);
        org.junit.Assert.assertNotNull(objectMapper49);
        org.junit.Assert.assertNotNull(objectReader51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(featureClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(enumArray56);
        org.junit.Assert.assertNotNull(wildcardEnumArray57);
        org.junit.Assert.assertNull(strArray59);
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test379");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.Module[] moduleArray10 = new com.fasterxml.jackson.databind.Module[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper9.registerModules(moduleArray10);
        java.text.DateFormat dateFormat12 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper9.setDateFormat(dateFormat12);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver14 = objectMapper9.getSubtypeResolver();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider15 = null;
        objectMapper9.setFilters(filterProvider15);
        java.net.URL uRL17 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec18 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec18, xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory21);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes24 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter25 = xmlMapper23.writer(characterEscapes24);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray26 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper23.disable(featureArray26);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory28 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader29 = xmlMapper23.reader(jsonNodeFactory28);
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory30);
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory32 = xmlMapper31.getTypeFactory();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = xmlMapper23.setTypeFactory(typeFactory32);
        com.fasterxml.jackson.core.JsonParser jsonParser34 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory38);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper40.writer(characterEscapes41);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider43 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter44 = xmlMapper40.writer(filterProvider43);
        com.fasterxml.jackson.core.ObjectCodec objectCodec45 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory46 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec45, xMLInputFactory46, xMLOutputFactory47);
        com.fasterxml.jackson.core.Version version49 = xmlFactory48.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper50 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory48);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes51 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter52 = xmlMapper50.writer(characterEscapes51);
        com.fasterxml.jackson.core.ObjectCodec objectCodec53 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec53, xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.core.Version version57 = xmlFactory56.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper58 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory56);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes59 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter60 = xmlMapper58.writer(characterEscapes59);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory61 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper62 = xmlMapper58.setNodeFactory(jsonNodeFactory61);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider63 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper64 = xmlMapper58.setFilterProvider(filterProvider63);
        com.fasterxml.jackson.core.JsonParser jsonParser65 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec66 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory67 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory68 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory69 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec66, xMLInputFactory67, xMLOutputFactory68);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature70 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory71 = xmlFactory69.disable(feature70);
        com.fasterxml.jackson.core.Version version72 = xmlFactory71.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass73 = xmlFactory71.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor74 = objectMapper64.readValues(jsonParser65, featureClass73);
        boolean boolean75 = xmlMapper50.canSerialize(featureClass73);
        boolean boolean76 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass73);
        com.fasterxml.jackson.databind.JavaType javaType77 = xmlMapper40.constructType((java.lang.reflect.Type) featureClass73);
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.core.TreeCodec> treeCodecItor78 = xmlMapper23.readValues(jsonParser34, javaType77);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializable.Base base79 = objectMapper9.readValue(uRL17, javaType77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(moduleArray10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(subtypeResolver14);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(objectWriter25);
        org.junit.Assert.assertNotNull(featureArray26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(objectReader29);
        org.junit.Assert.assertNotNull(typeFactory32);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertNotNull(objectWriter44);
        org.junit.Assert.assertNotNull(version49);
        org.junit.Assert.assertNotNull(objectWriter52);
        org.junit.Assert.assertNotNull(version57);
        org.junit.Assert.assertNotNull(objectWriter60);
        org.junit.Assert.assertNotNull(objectMapper62);
        org.junit.Assert.assertNotNull(objectMapper64);
        org.junit.Assert.assertTrue("'" + feature70 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature70.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory71);
        org.junit.Assert.assertNotNull(version72);
        org.junit.Assert.assertNotNull(featureClass73);
        org.junit.Assert.assertNotNull(featureItor74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(javaType77);
        org.junit.Assert.assertNotNull(treeCodecItor78);
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test380");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        java.io.DataInput dataInput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser9 = xmlFactory5.createParser(dataInput8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: InputData source not (yet?) support for this format (XML)");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test381");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.ObjectCodec objectCodec11 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory14 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec11, xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.core.Version version15 = xmlFactory14.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory14);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes17 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = xmlMapper16.writer(characterEscapes17);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray19 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper16.disable(featureArray19);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = objectMapper20.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig22 = objectMapper20.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider23 = objectMapper20.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec24 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec24, xMLInputFactory25, xMLOutputFactory26);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature28 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = xmlFactory27.disable(feature28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass31 = xmlFactory29.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = serializerProvider23.getUnknownTypeSerializer(featureClass31);
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory34 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec33, xMLInputFactory34, xMLOutputFactory35);
        com.fasterxml.jackson.core.Version version37 = xmlFactory36.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper38 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory36);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes39 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter40 = xmlMapper38.writer(characterEscapes39);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper38.setNodeFactory(jsonNodeFactory41);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper38.setFilterProvider(filterProvider43);
        com.fasterxml.jackson.core.JsonParser jsonParser45 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature50 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = xmlFactory49.disable(feature50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass53 = xmlFactory51.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor54 = objectMapper44.readValues(jsonParser45, featureClass53);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = xmlMapper5.addMixIn(featureClass31, featureClass53);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature56 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper57 = objectMapper55.disable(deserializationFeature56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(objectWriter18);
        org.junit.Assert.assertNotNull(featureArray19);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(serializationConfig22);
        org.junit.Assert.assertNotNull(serializerProvider23);
        org.junit.Assert.assertTrue("'" + feature28 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature28.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory29);
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(featureClass31);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(objectWriter40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertTrue("'" + feature50 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature50.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory51);
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(featureClass53);
        org.junit.Assert.assertNotNull(featureItor54);
        org.junit.Assert.assertNotNull(objectMapper55);
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test382");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.ObjectCodec objectCodec4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec4, xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature8 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = xmlFactory7.disable(feature8);
        boolean boolean10 = feature8.enabledByDefault();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.configure(feature8, false);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass13 = xmlFactory12.getFormatWriteFeatureType();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule14 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory12, jacksonXmlModule14);
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping22 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper21.enableDefaultTypingAsProperty(defaultTyping22, "XML");
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(characterEscapes31);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray33 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = xmlMapper30.disable(featureArray33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper34.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig36 = objectMapper34.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = objectMapper34.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature42 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = xmlFactory41.disable(feature42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass45 = xmlFactory43.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = serializerProvider37.getUnknownTypeSerializer(featureClass45);
        java.util.TimeZone timeZone47 = serializerProvider37.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper53 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory51);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes54 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter55 = xmlMapper53.writer(characterEscapes54);
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.core.Version version60 = xmlFactory59.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper61 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory59);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes62 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter63 = xmlMapper61.writer(characterEscapes62);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory64 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = xmlMapper61.setNodeFactory(jsonNodeFactory64);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider66 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper67 = xmlMapper61.setFilterProvider(filterProvider66);
        com.fasterxml.jackson.core.JsonParser jsonParser68 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec69 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory70 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory71 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec69, xMLInputFactory70, xMLOutputFactory71);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature73 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory74 = xmlFactory72.disable(feature73);
        com.fasterxml.jackson.core.Version version75 = xmlFactory74.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass76 = xmlFactory74.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor77 = objectMapper67.readValues(jsonParser68, featureClass76);
        boolean boolean78 = xmlMapper53.canSerialize(featureClass76);
        com.fasterxml.jackson.databind.BeanProperty beanProperty79 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = serializerProvider37.findKeySerializer(featureClass76, beanProperty79);
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride81 = objectMapper24.configOverride(featureClass76);
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer82 = null;
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule83 = jacksonXmlModule14.addKeyDeserializer(featureClass76, keyDeserializer82);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper84 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(jacksonXmlModule14);
        org.junit.Assert.assertTrue("'" + feature8 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature8.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(featureClass13);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(featureArray33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(serializationConfig36);
        org.junit.Assert.assertNotNull(serializerProvider37);
        org.junit.Assert.assertTrue("'" + feature42 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature42.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory43);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(featureClass45);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(timeZone47);
        org.junit.Assert.assertEquals(timeZone47.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(objectWriter55);
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(objectWriter63);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertNotNull(objectMapper67);
        org.junit.Assert.assertTrue("'" + feature73 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature73.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory74);
        org.junit.Assert.assertNotNull(version75);
        org.junit.Assert.assertNotNull(featureClass76);
        org.junit.Assert.assertNotNull(featureItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
        org.junit.Assert.assertNotNull(mutableConfigOverride81);
        org.junit.Assert.assertNotNull(simpleModule83);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test383");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        int int23 = xmlMapper18.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues24 = xmlMapper18.getInjectableValues();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature25 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean27 = feature25.enabledIn((int) (byte) 10);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = xmlMapper18.disable(feature25);
        boolean boolean29 = xmlFactory12.isEnabled(feature25);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass30 = xmlFactory12.getFormatWriteFeatureType();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(injectableValues24);
        org.junit.Assert.assertTrue("'" + feature25 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature25.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(featureClass30);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test384");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper5.writer();
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter11 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.JsonFactory jsonFactory17 = xmlFactory15.setRootValueSeparator("");
        java.io.DataOutput dataOutput18 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator19 = jsonFactory17.createGenerator(dataOutput18);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = jsonGenerator19.setHighestNonEscapedChar((-1));
        boolean boolean22 = jsonGenerator21.canWriteObjectId();
        int int23 = jsonGenerator21.getHighestEscapedChar();
        defaultXmlPrettyPrinter11.writeArrayValueSeparator(jsonGenerator21);
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.JsonFactory jsonFactory30 = xmlFactory28.setRootValueSeparator("");
        java.io.DataOutput dataOutput31 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator32 = jsonFactory30.createGenerator(dataOutput31);
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator33 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory34 = jsonFactory30.setInputDecorator(inputDecorator33);
        java.io.DataOutput dataOutput35 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator36 = jsonFactory34.createGenerator(dataOutput35);
        defaultXmlPrettyPrinter11.writeStartArray(jsonGenerator36);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper5.setDefaultPrettyPrinter((com.fasterxml.jackson.core.PrettyPrinter) defaultXmlPrettyPrinter11);
        org.codehaus.stax2.XMLStreamWriter2 xMLStreamWriter2_39 = null;
        // The following exception was thrown during execution in test generation
        try {
            defaultXmlPrettyPrinter11.writeLeafElement(xMLStreamWriter2_39, "JSON", "hi!", 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(jsonFactory17);
        org.junit.Assert.assertNotNull(jsonGenerator19);
        org.junit.Assert.assertNotNull(jsonGenerator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(jsonFactory30);
        org.junit.Assert.assertNotNull(jsonGenerator32);
        org.junit.Assert.assertNotNull(jsonFactory34);
        org.junit.Assert.assertNotNull(jsonGenerator36);
        org.junit.Assert.assertNotNull(objectMapper38);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test385");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper5.writer(filterProvider8);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass10 = null;
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride11 = xmlMapper5.configOverride(featureClass10);
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode13 = xmlMapper5.readTree(file12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(mutableConfigOverride11);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test386");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper5.writer();
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter11 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.JsonFactory jsonFactory17 = xmlFactory15.setRootValueSeparator("");
        java.io.DataOutput dataOutput18 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator19 = jsonFactory17.createGenerator(dataOutput18);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = jsonGenerator19.setHighestNonEscapedChar((-1));
        boolean boolean22 = jsonGenerator21.canWriteObjectId();
        int int23 = jsonGenerator21.getHighestEscapedChar();
        defaultXmlPrettyPrinter11.writeArrayValueSeparator(jsonGenerator21);
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.JsonFactory jsonFactory30 = xmlFactory28.setRootValueSeparator("");
        java.io.DataOutput dataOutput31 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator32 = jsonFactory30.createGenerator(dataOutput31);
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator33 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory34 = jsonFactory30.setInputDecorator(inputDecorator33);
        java.io.DataOutput dataOutput35 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator36 = jsonFactory34.createGenerator(dataOutput35);
        defaultXmlPrettyPrinter11.writeStartArray(jsonGenerator36);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper5.setDefaultPrettyPrinter((com.fasterxml.jackson.core.PrettyPrinter) defaultXmlPrettyPrinter11);
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter39 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec40 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory41 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec40, xMLInputFactory41, xMLOutputFactory42);
        com.fasterxml.jackson.core.JsonFactory jsonFactory45 = xmlFactory43.setRootValueSeparator("");
        java.io.DataOutput dataOutput46 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator47 = jsonFactory45.createGenerator(dataOutput46);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator49 = jsonGenerator47.setHighestNonEscapedChar((-1));
        boolean boolean50 = jsonGenerator49.canWriteObjectId();
        int int51 = jsonGenerator49.getHighestEscapedChar();
        defaultXmlPrettyPrinter39.writeArrayValueSeparator(jsonGenerator49);
        com.fasterxml.jackson.core.ObjectCodec objectCodec53 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec53, xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.core.JsonFactory jsonFactory58 = xmlFactory56.setRootValueSeparator("");
        java.io.DataOutput dataOutput59 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator60 = jsonFactory58.createGenerator(dataOutput59);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator62 = jsonGenerator60.setHighestNonEscapedChar((-1));
        defaultXmlPrettyPrinter39.beforeObjectEntries(jsonGenerator62);
        com.fasterxml.jackson.core.ObjectCodec objectCodec64 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory65 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory66 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory67 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec64, xMLInputFactory65, xMLOutputFactory66);
        com.fasterxml.jackson.core.JsonFactory jsonFactory69 = xmlFactory67.setRootValueSeparator("");
        java.io.DataOutput dataOutput70 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator71 = jsonFactory69.createGenerator(dataOutput70);
        boolean boolean72 = jsonGenerator71.canWriteTypeId();
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes73 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator74 = jsonGenerator71.setCharacterEscapes(characterEscapes73);
        boolean boolean75 = jsonGenerator71.canWriteBinaryNatively();
        jsonGenerator71.writeOmittedField("hi!");
        defaultXmlPrettyPrinter39.beforeArrayValues(jsonGenerator71);
        long[] longArray84 = new long[] { 10, '4', (-1), (short) 100, 56319 };
        jsonGenerator71.writeArray(longArray84, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            defaultXmlPrettyPrinter11.writeStartObject(jsonGenerator71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No element/attribute name specified when trying to output element");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(jsonFactory17);
        org.junit.Assert.assertNotNull(jsonGenerator19);
        org.junit.Assert.assertNotNull(jsonGenerator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(jsonFactory30);
        org.junit.Assert.assertNotNull(jsonGenerator32);
        org.junit.Assert.assertNotNull(jsonFactory34);
        org.junit.Assert.assertNotNull(jsonGenerator36);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(jsonFactory45);
        org.junit.Assert.assertNotNull(jsonGenerator47);
        org.junit.Assert.assertNotNull(jsonGenerator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(jsonFactory58);
        org.junit.Assert.assertNotNull(jsonGenerator60);
        org.junit.Assert.assertNotNull(jsonGenerator62);
        org.junit.Assert.assertNotNull(jsonFactory69);
        org.junit.Assert.assertNotNull(jsonGenerator71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(jsonGenerator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(longArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray84), "[10, 52, -1, 100, 56319]");
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test387");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray13 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = objectMapper9.enable(featureArray13);
        java.io.DataOutput dataOutput15 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        // The following exception was thrown during execution in test generation
        try {
            objectMapper9.writeValue(dataOutput15, (java.lang.Object) xmlSerializerProvider17);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: (was java.lang.NullPointerException) (through reference chain: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider[\"locale\"])");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(featureArray13);
        org.junit.Assert.assertNotNull(objectMapper14);
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test388");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext12 = xmlMapper5.getDeserializationContext();
        java.io.Writer writer13 = null;
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter14 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec15 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec15, xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.core.JsonFactory jsonFactory20 = xmlFactory18.setRootValueSeparator("");
        java.io.DataOutput dataOutput21 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator22 = jsonFactory20.createGenerator(dataOutput21);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator24 = jsonGenerator22.setHighestNonEscapedChar((-1));
        boolean boolean25 = jsonGenerator24.canWriteObjectId();
        int int26 = jsonGenerator24.getHighestEscapedChar();
        defaultXmlPrettyPrinter14.writeArrayValueSeparator(jsonGenerator24);
        com.fasterxml.jackson.core.ObjectCodec objectCodec28 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec28, xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.core.JsonFactory jsonFactory33 = xmlFactory31.setRootValueSeparator("");
        java.io.DataOutput dataOutput34 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator35 = jsonFactory33.createGenerator(dataOutput34);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator37 = jsonGenerator35.setHighestNonEscapedChar((-1));
        defaultXmlPrettyPrinter14.beforeObjectEntries(jsonGenerator37);
        com.fasterxml.jackson.core.ObjectCodec objectCodec39 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory40 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory41 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec39, xMLInputFactory40, xMLOutputFactory41);
        com.fasterxml.jackson.core.JsonFactory jsonFactory44 = xmlFactory42.setRootValueSeparator("");
        java.io.DataOutput dataOutput45 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator46 = jsonFactory44.createGenerator(dataOutput45);
        boolean boolean47 = jsonGenerator46.canWriteTypeId();
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes48 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator49 = jsonGenerator46.setCharacterEscapes(characterEscapes48);
        boolean boolean50 = jsonGenerator46.canWriteBinaryNatively();
        jsonGenerator46.writeOmittedField("hi!");
        defaultXmlPrettyPrinter14.beforeArrayValues(jsonGenerator46);
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper5.writeValue(writer13, (java.lang.Object) defaultXmlPrettyPrinter14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null Writer is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(deserializationContext12);
        org.junit.Assert.assertNotNull(jsonFactory20);
        org.junit.Assert.assertNotNull(jsonGenerator22);
        org.junit.Assert.assertNotNull(jsonGenerator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(jsonFactory33);
        org.junit.Assert.assertNotNull(jsonGenerator35);
        org.junit.Assert.assertNotNull(jsonGenerator37);
        org.junit.Assert.assertNotNull(jsonFactory44);
        org.junit.Assert.assertNotNull(jsonGenerator46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(jsonGenerator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test389");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.Version version27 = xmlFactory26.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory26);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(characterEscapes29);
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory34);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes37 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter38 = xmlMapper36.writer(characterEscapes37);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory39 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper36.setNodeFactory(jsonNodeFactory39);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper36.setFilterProvider(filterProvider41);
        com.fasterxml.jackson.core.JsonParser jsonParser43 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature48 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = xmlFactory47.disable(feature48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass51 = xmlFactory49.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor52 = objectMapper42.readValues(jsonParser43, featureClass51);
        boolean boolean53 = xmlMapper28.canSerialize(featureClass51);
        com.fasterxml.jackson.databind.JavaType javaType54 = serializerProvider12.constructType((java.lang.reflect.Type) featureClass51);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = serializerProvider12.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.MapperFeature mapperFeature56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = serializerProvider12.isEnabled(mapperFeature56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(objectWriter38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertTrue("'" + feature48 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature48.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory49);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(featureClass51);
        org.junit.Assert.assertNotNull(featureItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(javaType54);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test390");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec11 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory14 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec11, xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.core.Version version15 = xmlFactory14.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory14);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes17 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = xmlMapper16.writer(characterEscapes17);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper16.writer(filterProvider19);
        com.fasterxml.jackson.core.ObjectCodec objectCodec21 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory22 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec21, xMLInputFactory22, xMLOutputFactory23);
        com.fasterxml.jackson.core.Version version25 = xmlFactory24.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper26 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory24);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes27 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter28 = xmlMapper26.writer(characterEscapes27);
        com.fasterxml.jackson.core.ObjectCodec objectCodec29 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec29, xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.core.Version version33 = xmlFactory32.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper34 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory32);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes35 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = xmlMapper34.writer(characterEscapes35);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory37 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper34.setNodeFactory(jsonNodeFactory37);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider39 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper34.setFilterProvider(filterProvider39);
        com.fasterxml.jackson.core.JsonParser jsonParser41 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec42 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory45 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec42, xMLInputFactory43, xMLOutputFactory44);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature46 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = xmlFactory45.disable(feature46);
        com.fasterxml.jackson.core.Version version48 = xmlFactory47.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass49 = xmlFactory47.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor50 = objectMapper40.readValues(jsonParser41, featureClass49);
        boolean boolean51 = xmlMapper26.canSerialize(featureClass49);
        boolean boolean52 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass49);
        com.fasterxml.jackson.databind.JavaType javaType53 = xmlMapper16.constructType((java.lang.reflect.Type) featureClass49);
        java.util.List<com.fasterxml.jackson.databind.Module> moduleList54 = com.fasterxml.jackson.databind.ObjectMapper.findModules();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = xmlMapper16.registerModules((java.lang.Iterable<com.fasterxml.jackson.databind.Module>) moduleList54);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper56 = xmlMapper5.registerModules((java.lang.Iterable<com.fasterxml.jackson.databind.Module>) moduleList54);
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter57 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec58 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory59 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory60 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory61 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec58, xMLInputFactory59, xMLOutputFactory60);
        com.fasterxml.jackson.core.JsonFactory jsonFactory63 = xmlFactory61.setRootValueSeparator("");
        java.io.DataOutput dataOutput64 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator65 = jsonFactory63.createGenerator(dataOutput64);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator67 = jsonGenerator65.setHighestNonEscapedChar((-1));
        boolean boolean68 = jsonGenerator67.canWriteObjectId();
        int int69 = jsonGenerator67.getHighestEscapedChar();
        defaultXmlPrettyPrinter57.writeArrayValueSeparator(jsonGenerator67);
        com.fasterxml.jackson.core.ObjectCodec objectCodec71 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory72 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory73 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory74 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec71, xMLInputFactory72, xMLOutputFactory73);
        com.fasterxml.jackson.core.JsonFactory jsonFactory76 = xmlFactory74.setRootValueSeparator("");
        java.io.DataOutput dataOutput77 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator78 = jsonFactory76.createGenerator(dataOutput77);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator80 = jsonGenerator78.setHighestNonEscapedChar((-1));
        defaultXmlPrettyPrinter57.beforeObjectEntries(jsonGenerator80);
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter82 = defaultXmlPrettyPrinter57.createInstance();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter83 = objectMapper56.writer((com.fasterxml.jackson.core.PrettyPrinter) defaultXmlPrettyPrinter57);
        org.codehaus.stax2.XMLStreamWriter2 xMLStreamWriter2_84 = null;
        // The following exception was thrown during execution in test generation
        try {
            defaultXmlPrettyPrinter57.writeLeafNullElement(xMLStreamWriter2_84, "XML", "xmlInfo");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(objectWriter18);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(objectWriter28);
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertTrue("'" + feature46 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature46.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory47);
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(featureClass49);
        org.junit.Assert.assertNotNull(featureItor50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(javaType53);
        org.junit.Assert.assertNotNull(moduleList54);
        org.junit.Assert.assertNotNull(objectMapper55);
        org.junit.Assert.assertNotNull(objectMapper56);
        org.junit.Assert.assertNotNull(jsonFactory63);
        org.junit.Assert.assertNotNull(jsonGenerator65);
        org.junit.Assert.assertNotNull(jsonGenerator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(jsonFactory76);
        org.junit.Assert.assertNotNull(jsonGenerator78);
        org.junit.Assert.assertNotNull(jsonGenerator80);
        org.junit.Assert.assertNotNull(defaultXmlPrettyPrinter82);
        org.junit.Assert.assertNotNull(objectWriter83);
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test391");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext23 = xmlMapper18.getDeserializationContext();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper18);
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(characterEscapes31);
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory34 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec33, xMLInputFactory34, xMLOutputFactory35);
        com.fasterxml.jackson.core.Version version37 = xmlFactory36.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper38 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory36);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes39 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter40 = xmlMapper38.writer(characterEscapes39);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper38.setNodeFactory(jsonNodeFactory41);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper38.setFilterProvider(filterProvider43);
        com.fasterxml.jackson.core.JsonParser jsonParser45 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature50 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = xmlFactory49.disable(feature50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass53 = xmlFactory51.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor54 = objectMapper44.readValues(jsonParser45, featureClass53);
        boolean boolean55 = xmlMapper30.canSerialize(featureClass53);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference56 = null;
        boolean boolean57 = xmlMapper18.canSerialize(featureClass53, throwableAtomicReference56);
        com.fasterxml.jackson.databind.BeanProperty beanProperty59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = serializerProvider12.findTypedValueSerializer(featureClass53, false, beanProperty59);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer61 = serializerProvider12.getDefaultNullKeySerializer();
        com.fasterxml.jackson.core.ObjectCodec objectCodec62 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory63 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory64 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory65 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec62, xMLInputFactory63, xMLOutputFactory64);
        com.fasterxml.jackson.core.Version version66 = xmlFactory65.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper67 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory65);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes68 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter69 = xmlMapper67.writer(characterEscapes68);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray70 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper71 = xmlMapper67.disable(featureArray70);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext72 = xmlMapper67.getDeserializationContext();
        com.fasterxml.jackson.core.Version version73 = xmlMapper67.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter74 = xmlMapper67.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper75 = xmlMapper67.enableDefaultTyping();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider76 = null;
        xmlMapper67.setFilters(filterProvider76);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig78 = xmlMapper67.getSerializationConfig();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector79 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector80 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair81 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector79, annotationIntrospector80);
        com.fasterxml.jackson.databind.introspect.Annotated annotated82 = null;
        java.lang.Boolean boolean83 = pair81.isOutputAsCData(annotated82);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector84 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector85 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair86 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector84, annotationIntrospector85);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector87 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector88 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair89 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector87, annotationIntrospector88);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair90 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair86, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair89);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair91 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair81, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair89);
        com.fasterxml.jackson.databind.introspect.Annotated annotated92 = null;
        java.lang.String str93 = pair89.findNamespace(annotated92);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider94 = serializerProvider12.setAttribute((java.lang.Object) serializationConfig78, (java.lang.Object) str93);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig95 = serializerProvider94.getConfig();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(deserializationContext23);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(objectWriter40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertTrue("'" + feature50 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature50.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory51);
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(featureClass53);
        org.junit.Assert.assertNotNull(featureItor54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertNotNull(objJsonSerializer61);
        org.junit.Assert.assertNotNull(version66);
        org.junit.Assert.assertNotNull(objectWriter69);
        org.junit.Assert.assertNotNull(featureArray70);
        org.junit.Assert.assertNotNull(objectMapper71);
        org.junit.Assert.assertNotNull(deserializationContext72);
        org.junit.Assert.assertNotNull(version73);
        org.junit.Assert.assertNotNull(objectWriter74);
        org.junit.Assert.assertNotNull(objectMapper75);
        org.junit.Assert.assertNotNull(serializationConfig78);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(pair91);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNotNull(serializerProvider94);
        org.junit.Assert.assertNotNull(serializationConfig95);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test392");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector2 = jacksonXmlAnnotationIntrospector0.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper12.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig14 = objectMapper12.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = objectMapper12.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature20 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = xmlFactory19.disable(feature20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass23 = xmlFactory21.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer24 = serializerProvider15.getUnknownTypeSerializer(featureClass23);
        java.util.TimeZone timeZone25 = serializerProvider15.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory29);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(characterEscapes32);
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.core.Version version38 = xmlFactory37.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory37);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes40 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = xmlMapper39.writer(characterEscapes40);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper39.setNodeFactory(jsonNodeFactory42);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider44 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper39.setFilterProvider(filterProvider44);
        com.fasterxml.jackson.core.JsonParser jsonParser46 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature51 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory52 = xmlFactory50.disable(feature51);
        com.fasterxml.jackson.core.Version version53 = xmlFactory52.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass54 = xmlFactory52.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor55 = objectMapper45.readValues(jsonParser46, featureClass54);
        boolean boolean56 = xmlMapper31.canSerialize(featureClass54);
        com.fasterxml.jackson.databind.BeanProperty beanProperty57 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer58 = serializerProvider15.findKeySerializer(featureClass54, beanProperty57);
        java.lang.Enum[] enumArray60 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray61 = (java.lang.Enum<?>[]) enumArray60;
        java.lang.String[] strArray68 = new java.lang.String[] { "xmlInfo", " ", "<String>XML</String>", " ", "hi!", "xmlInfo" };
        java.lang.String[] strArray69 = jacksonXmlAnnotationIntrospector0.findEnumValues(featureClass54, (java.lang.Enum<?>[]) enumArray60, strArray68);
        com.fasterxml.jackson.databind.introspect.Annotated annotated70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Integer int71 = jacksonXmlAnnotationIntrospector0.findPropertyIndex(annotated70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(serializationConfig14);
        org.junit.Assert.assertNotNull(serializerProvider15);
        org.junit.Assert.assertTrue("'" + feature20 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature20.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory21);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(featureClass23);
        org.junit.Assert.assertNotNull(objJsonSerializer24);
        org.junit.Assert.assertNotNull(timeZone25);
        org.junit.Assert.assertEquals(timeZone25.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(objectWriter41);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertTrue("'" + feature51 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature51.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory52);
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(featureClass54);
        org.junit.Assert.assertNotNull(featureItor55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer58);
        org.junit.Assert.assertNotNull(enumArray60);
        org.junit.Assert.assertNotNull(wildcardEnumArray61);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test393");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean5 = xmlFactory3.isEnabled(feature4);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlFactory9.disable(feature10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature14 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper13.disable(feature14);
        boolean boolean16 = feature14.enabledByDefault();
        boolean boolean17 = xmlFactory3.isEnabled(feature14);
        com.fasterxml.jackson.core.JsonFactory jsonFactory19 = xmlFactory3.setRootValueSeparator(" ");
        java.io.DataOutput dataOutput20 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlFactory3.createGenerator(dataOutput20);
        java.io.InputStream inputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int24 = jsonGenerator21.writeBinary(inputStream22, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Operation not supported by generator of type com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + feature14 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature14.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(jsonFactory19);
        org.junit.Assert.assertNotNull(jsonGenerator21);
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test394");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.ObjectCodec objectCodec4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec4, xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature8 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = xmlFactory7.disable(feature8);
        boolean boolean10 = feature8.enabledByDefault();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.configure(feature8, false);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass13 = xmlFactory12.getFormatWriteFeatureType();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule14 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory12, jacksonXmlModule14);
        com.fasterxml.jackson.core.Version version16 = jacksonXmlModule14.version();
        org.junit.Assert.assertTrue("'" + feature8 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature8.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(featureClass13);
        org.junit.Assert.assertNotNull(version16);
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test395");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping6 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper5.enableDefaultTypingAsProperty(defaultTyping6, "XML");
        com.fasterxml.jackson.core.ObjectCodec objectCodec9 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec9, xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.core.Version version13 = xmlFactory12.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory12);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes15 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter16 = xmlMapper14.writer(characterEscapes15);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray17 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = xmlMapper14.disable(featureArray17);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = objectMapper18.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig20 = objectMapper18.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = objectMapper18.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec22, xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature26 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = xmlFactory25.disable(feature26);
        com.fasterxml.jackson.core.Version version28 = xmlFactory27.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass29 = xmlFactory27.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = serializerProvider21.getUnknownTypeSerializer(featureClass29);
        java.util.TimeZone timeZone31 = serializerProvider21.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec32 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec32, xMLInputFactory33, xMLOutputFactory34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper37 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory35);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes38 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter39 = xmlMapper37.writer(characterEscapes38);
        com.fasterxml.jackson.core.ObjectCodec objectCodec40 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory41 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec40, xMLInputFactory41, xMLOutputFactory42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper45 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory43);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes46 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter47 = xmlMapper45.writer(characterEscapes46);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory48 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper49 = xmlMapper45.setNodeFactory(jsonNodeFactory48);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider50 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper51 = xmlMapper45.setFilterProvider(filterProvider50);
        com.fasterxml.jackson.core.JsonParser jsonParser52 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec53 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec53, xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature57 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory58 = xmlFactory56.disable(feature57);
        com.fasterxml.jackson.core.Version version59 = xmlFactory58.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass60 = xmlFactory58.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor61 = objectMapper51.readValues(jsonParser52, featureClass60);
        boolean boolean62 = xmlMapper37.canSerialize(featureClass60);
        com.fasterxml.jackson.databind.BeanProperty beanProperty63 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = serializerProvider21.findKeySerializer(featureClass60, beanProperty63);
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride65 = objectMapper8.configOverride(featureClass60);
        com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig66 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper67 = objectMapper8.setConfig(deserializationConfig66);
        com.fasterxml.jackson.core.ObjectCodec objectCodec68 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory69 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory70 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory71 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec68, xMLInputFactory69, xMLOutputFactory70);
        com.fasterxml.jackson.core.Version version72 = xmlFactory71.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper73 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory71);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes74 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter75 = xmlMapper73.writer(characterEscapes74);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray76 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper77 = xmlMapper73.disable(featureArray76);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper78 = xmlMapper73.copy();
        java.text.DateFormat dateFormat79 = xmlMapper73.getDateFormat();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper80 = objectMapper67.setDateFormat(dateFormat79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(version13);
        org.junit.Assert.assertNotNull(objectWriter16);
        org.junit.Assert.assertNotNull(featureArray17);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(serializationConfig20);
        org.junit.Assert.assertNotNull(serializerProvider21);
        org.junit.Assert.assertTrue("'" + feature26 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature26.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory27);
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(featureClass29);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(timeZone31);
        org.junit.Assert.assertEquals(timeZone31.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(objectWriter39);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(objectWriter47);
        org.junit.Assert.assertNotNull(objectMapper49);
        org.junit.Assert.assertNotNull(objectMapper51);
        org.junit.Assert.assertTrue("'" + feature57 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature57.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory58);
        org.junit.Assert.assertNotNull(version59);
        org.junit.Assert.assertNotNull(featureClass60);
        org.junit.Assert.assertNotNull(featureItor61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertNotNull(mutableConfigOverride65);
        org.junit.Assert.assertNotNull(objectMapper67);
        org.junit.Assert.assertNotNull(version72);
        org.junit.Assert.assertNotNull(objectWriter75);
        org.junit.Assert.assertNotNull(featureArray76);
        org.junit.Assert.assertNotNull(objectMapper77);
        org.junit.Assert.assertNotNull(xmlMapper78);
        org.junit.Assert.assertNotNull(dateFormat79);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test396");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        int int10 = xmlMapper5.mixInCount();
        com.fasterxml.jackson.core.JsonParser.Feature feature11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.configure(feature11, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test397");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        java.lang.Boolean boolean4 = pair2.isOutputAsCData(annotated3);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector5 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair7 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector5, annotationIntrospector6);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector8 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair10 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector8, annotationIntrospector9);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair11 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair7, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair10);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair12 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair2, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair10);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector13 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair15 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector13, annotationIntrospector14);
        com.fasterxml.jackson.databind.introspect.Annotated annotated16 = null;
        java.lang.Boolean boolean17 = pair15.isOutputAsCData(annotated16);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector18 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair20 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector18, annotationIntrospector19);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector21 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair23 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector21, annotationIntrospector22);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair20, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair15, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair23);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector26 = com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.create((com.fasterxml.jackson.databind.AnnotationIntrospector) pair10, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair23);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector27 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair29 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector27, annotationIntrospector28);
        com.fasterxml.jackson.databind.introspect.Annotated annotated30 = null;
        java.lang.Boolean boolean31 = pair29.isOutputAsCData(annotated30);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector32, annotationIntrospector33);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector35 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair37 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector35, annotationIntrospector36);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair38 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair34, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair37);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair39 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair29, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair37);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair41 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair39, annotationIntrospector40);
        pair41.setDefaultUseWrapper(false);
        com.fasterxml.jackson.databind.introspect.Annotated annotated44 = null;
        java.lang.String str45 = pair41.findNamespace(annotated44);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair46 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair23, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair41);
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.core.Version version51 = xmlFactory50.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper52 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory50);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes53 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter54 = xmlMapper52.writer(characterEscapes53);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray55 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper56 = xmlMapper52.disable(featureArray55);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping57 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper59 = objectMapper56.enableDefaultTypingAsProperty(defaultTyping57, "XML");
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy60 = objectMapper56.getPropertyNamingStrategy();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider61 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter62 = objectMapper56.writer(filterProvider61);
        com.fasterxml.jackson.core.ObjectCodec objectCodec63 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory64 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory65 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory66 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec63, xMLInputFactory64, xMLOutputFactory65);
        com.fasterxml.jackson.core.Version version67 = xmlFactory66.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper68 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory66);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes69 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter70 = xmlMapper68.writer(characterEscapes69);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray71 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper72 = xmlMapper68.disable(featureArray71);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper73 = objectMapper72.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig74 = objectMapper72.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper75 = objectMapper56.setConfig(serializationConfig74);
        com.fasterxml.jackson.databind.introspect.AnnotatedClass annotatedClass76 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier77 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier78 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.core.ObjectCodec objectCodec79 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory80 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory81 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory82 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec79, xMLInputFactory80, xMLOutputFactory81);
        com.fasterxml.jackson.core.Version version83 = xmlFactory82.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper84 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory82);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes85 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter86 = xmlMapper84.writer(characterEscapes85);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray87 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper88 = xmlMapper84.disable(featureArray87);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper89 = objectMapper88.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig90 = objectMapper88.getSerializationConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription91 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder92 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder93 = xmlBeanSerializerModifier78.updateBuilder(serializationConfig90, beanDescription91, beanSerializerBuilder92);
        com.fasterxml.jackson.databind.BeanDescription beanDescription94 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray95 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList96 = new java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>();
        boolean boolean97 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList96, beanPropertyWriterArray95);
        java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList98 = xmlBeanSerializerModifier77.changeProperties(serializationConfig90, beanDescription94, (java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList96);
        // The following exception was thrown during execution in test generation
        try {
            pair23.findAndAddVirtualProperties((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig74, annotatedClass76, (java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(pair12);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(pair25);
        org.junit.Assert.assertNotNull(annotationIntrospector26);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(pair39);
        org.junit.Assert.assertNotNull(pair41);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(version51);
        org.junit.Assert.assertNotNull(objectWriter54);
        org.junit.Assert.assertNotNull(featureArray55);
        org.junit.Assert.assertNotNull(objectMapper56);
        org.junit.Assert.assertNotNull(objectMapper59);
        org.junit.Assert.assertNull(propertyNamingStrategy60);
        org.junit.Assert.assertNotNull(objectWriter62);
        org.junit.Assert.assertNotNull(version67);
        org.junit.Assert.assertNotNull(objectWriter70);
        org.junit.Assert.assertNotNull(featureArray71);
        org.junit.Assert.assertNotNull(objectMapper72);
        org.junit.Assert.assertNotNull(objectMapper73);
        org.junit.Assert.assertNotNull(serializationConfig74);
        org.junit.Assert.assertNotNull(objectMapper75);
        org.junit.Assert.assertNotNull(version83);
        org.junit.Assert.assertNotNull(objectWriter86);
        org.junit.Assert.assertNotNull(featureArray87);
        org.junit.Assert.assertNotNull(objectMapper88);
        org.junit.Assert.assertNotNull(objectMapper89);
        org.junit.Assert.assertNotNull(serializationConfig90);
        org.junit.Assert.assertNull(beanSerializerBuilder93);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(beanPropertyWriterList98);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test398");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.ObjectCodec objectCodec4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec4, xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature8 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = xmlFactory7.disable(feature8);
        boolean boolean10 = feature8.enabledByDefault();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.configure(feature8, false);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass13 = xmlFactory12.getFormatWriteFeatureType();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule14 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory12, jacksonXmlModule14);
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping22 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper21.enableDefaultTypingAsProperty(defaultTyping22, "XML");
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(characterEscapes31);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray33 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = xmlMapper30.disable(featureArray33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper34.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig36 = objectMapper34.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = objectMapper34.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature42 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = xmlFactory41.disable(feature42);
        com.fasterxml.jackson.core.Version version44 = xmlFactory43.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass45 = xmlFactory43.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer46 = serializerProvider37.getUnknownTypeSerializer(featureClass45);
        java.util.TimeZone timeZone47 = serializerProvider37.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper53 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory51);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes54 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter55 = xmlMapper53.writer(characterEscapes54);
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.core.Version version60 = xmlFactory59.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper61 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory59);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes62 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter63 = xmlMapper61.writer(characterEscapes62);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory64 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = xmlMapper61.setNodeFactory(jsonNodeFactory64);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider66 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper67 = xmlMapper61.setFilterProvider(filterProvider66);
        com.fasterxml.jackson.core.JsonParser jsonParser68 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec69 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory70 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory71 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec69, xMLInputFactory70, xMLOutputFactory71);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature73 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory74 = xmlFactory72.disable(feature73);
        com.fasterxml.jackson.core.Version version75 = xmlFactory74.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass76 = xmlFactory74.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor77 = objectMapper67.readValues(jsonParser68, featureClass76);
        boolean boolean78 = xmlMapper53.canSerialize(featureClass76);
        com.fasterxml.jackson.databind.BeanProperty beanProperty79 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = serializerProvider37.findKeySerializer(featureClass76, beanProperty79);
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride81 = objectMapper24.configOverride(featureClass76);
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer82 = null;
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule83 = jacksonXmlModule14.addKeyDeserializer(featureClass76, keyDeserializer82);
        com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver simpleAbstractTypeResolver84 = null;
        simpleModule83.setAbstractTypes(simpleAbstractTypeResolver84);
        org.junit.Assert.assertTrue("'" + feature8 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature8.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(featureClass13);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(featureArray33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(serializationConfig36);
        org.junit.Assert.assertNotNull(serializerProvider37);
        org.junit.Assert.assertTrue("'" + feature42 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature42.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory43);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(featureClass45);
        org.junit.Assert.assertNotNull(objJsonSerializer46);
        org.junit.Assert.assertNotNull(timeZone47);
        org.junit.Assert.assertEquals(timeZone47.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(objectWriter55);
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(objectWriter63);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertNotNull(objectMapper67);
        org.junit.Assert.assertTrue("'" + feature73 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature73.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory74);
        org.junit.Assert.assertNotNull(version75);
        org.junit.Assert.assertNotNull(featureClass76);
        org.junit.Assert.assertNotNull(featureItor77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
        org.junit.Assert.assertNotNull(mutableConfigOverride81);
        org.junit.Assert.assertNotNull(simpleModule83);
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test399");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = xmlSerializerProvider1.getGenerator();
        com.fasterxml.jackson.core.ObjectCodec objectCodec4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec4, xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.core.JsonFactory jsonFactory9 = xmlFactory7.setRootValueSeparator("");
        java.io.DataOutput dataOutput10 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator11 = jsonFactory9.createGenerator(dataOutput10);
        boolean boolean12 = jsonGenerator11.canWriteTypeId();
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes13 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator14 = jsonGenerator11.setCharacterEscapes(characterEscapes13);
        java.util.List<com.fasterxml.jackson.databind.Module> moduleList15 = com.fasterxml.jackson.databind.ObjectMapper.findModules();
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator14, (java.lang.Object) moduleList15, typeSerializer16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(xmlRootNameLookup2);
        org.junit.Assert.assertNull(jsonGenerator3);
        org.junit.Assert.assertNotNull(jsonFactory9);
        org.junit.Assert.assertNotNull(jsonGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(jsonGenerator14);
        org.junit.Assert.assertNotNull(moduleList15);
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test400");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.Module[] moduleArray10 = new com.fasterxml.jackson.databind.Module[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper9.registerModules(moduleArray10);
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.Version version16 = xmlFactory15.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory15);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(characterEscapes18);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray20 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper17.disable(featureArray20);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = objectMapper21.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig23 = objectMapper21.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = objectMapper21.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature29 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = xmlFactory28.disable(feature29);
        com.fasterxml.jackson.core.Version version31 = xmlFactory30.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass32 = xmlFactory30.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = serializerProvider24.getUnknownTypeSerializer(featureClass32);
        java.util.TimeZone timeZone34 = serializerProvider24.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.JsonFactory jsonFactory40 = xmlFactory38.setRootValueSeparator("");
        java.io.DataOutput dataOutput41 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator42 = jsonFactory40.createGenerator(dataOutput41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = serializerProvider24.setAttribute((java.lang.Object) jsonFactory40, (java.lang.Object) ' ');
        boolean boolean46 = serializerProvider44.hasSerializationFeatures(100);
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.core.Version version51 = xmlFactory50.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper52 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory50);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes53 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter54 = xmlMapper52.writer(characterEscapes53);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray55 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper56 = xmlMapper52.disable(featureArray55);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper57 = objectMapper56.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig58 = objectMapper56.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider59 = objectMapper56.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec60 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory61 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory62 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory63 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec60, xMLInputFactory61, xMLOutputFactory62);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature64 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory65 = xmlFactory63.disable(feature64);
        com.fasterxml.jackson.core.Version version66 = xmlFactory65.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass67 = xmlFactory65.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer68 = serializerProvider59.getUnknownTypeSerializer(featureClass67);
        boolean boolean69 = objJsonSerializer68.isUnwrappingSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer71 = serializerProvider44.handleSecondaryContextualization(objJsonSerializer68, beanProperty70);
        java.util.TimeZone timeZone72 = serializerProvider44.getTimeZone();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper73 = objectMapper11.setTimeZone(timeZone72);
        com.fasterxml.jackson.core.ObjectCodec objectCodec74 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory75 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory76 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory77 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec74, xMLInputFactory75, xMLOutputFactory76);
        com.fasterxml.jackson.core.Version version78 = xmlFactory77.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper79 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory77);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes80 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter81 = xmlMapper79.writer(characterEscapes80);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray82 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper83 = xmlMapper79.disable(featureArray82);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext84 = xmlMapper79.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping85 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper87 = xmlMapper79.enableDefaultTypingAsProperty(defaultTyping85, "");
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory88 = objectMapper87.getNodeFactory();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper89 = objectMapper73.setNodeFactory(jsonNodeFactory88);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(moduleArray10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(featureArray20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(serializationConfig23);
        org.junit.Assert.assertNotNull(serializerProvider24);
        org.junit.Assert.assertTrue("'" + feature29 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature29.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory30);
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(featureClass32);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(timeZone34);
        org.junit.Assert.assertEquals(timeZone34.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(jsonFactory40);
        org.junit.Assert.assertNotNull(jsonGenerator42);
        org.junit.Assert.assertNotNull(serializerProvider44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(version51);
        org.junit.Assert.assertNotNull(objectWriter54);
        org.junit.Assert.assertNotNull(featureArray55);
        org.junit.Assert.assertNotNull(objectMapper56);
        org.junit.Assert.assertNotNull(objectMapper57);
        org.junit.Assert.assertNotNull(serializationConfig58);
        org.junit.Assert.assertNotNull(serializerProvider59);
        org.junit.Assert.assertTrue("'" + feature64 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature64.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory65);
        org.junit.Assert.assertNotNull(version66);
        org.junit.Assert.assertNotNull(featureClass67);
        org.junit.Assert.assertNotNull(objJsonSerializer68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer71);
        org.junit.Assert.assertNotNull(timeZone72);
        org.junit.Assert.assertEquals(timeZone72.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(objectMapper73);
        org.junit.Assert.assertNotNull(version78);
        org.junit.Assert.assertNotNull(objectWriter81);
        org.junit.Assert.assertNotNull(featureArray82);
        org.junit.Assert.assertNotNull(objectMapper83);
        org.junit.Assert.assertNotNull(deserializationContext84);
        org.junit.Assert.assertNotNull(objectMapper87);
        org.junit.Assert.assertNotNull(jsonNodeFactory88);
        org.junit.Assert.assertNotNull(objectMapper89);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test401");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTyping();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = objectMapper13.enableDefaultTypingAsProperty(defaultTyping14, " ");
        java.io.Reader reader17 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode18 = objectMapper13.readTree(reader17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper16);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test402");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        java.lang.String str6 = xmlFactory3.getRootValueSeparator();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass7 = xmlFactory3.getFormatReadFeatureType();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory3.getXMLInputFactory();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3, jacksonXmlModule9);
        com.fasterxml.jackson.core.Version version11 = xmlFactory3.version();
        com.fasterxml.jackson.core.JsonParser.Feature feature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = xmlFactory3.isEnabled(feature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertNotNull(featureClass7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(version11);
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test403");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.core.ObjectCodec objectCodec2 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec2, xMLInputFactory3, xMLOutputFactory4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper7.writer(characterEscapes8);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray10 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper7.disable(featureArray10);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory12 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader13 = xmlMapper7.reader(jsonNodeFactory12);
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec22, xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.core.Version version26 = xmlFactory25.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory25);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes28 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter29 = xmlMapper27.writer(characterEscapes28);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory30 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper27.setNodeFactory(jsonNodeFactory30);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider32 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = xmlMapper27.setFilterProvider(filterProvider32);
        com.fasterxml.jackson.core.JsonParser jsonParser34 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature39 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = xmlFactory38.disable(feature39);
        com.fasterxml.jackson.core.Version version41 = xmlFactory40.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass42 = xmlFactory40.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor43 = objectMapper33.readValues(jsonParser34, featureClass42);
        boolean boolean44 = xmlMapper19.canSerialize(featureClass42);
        boolean boolean45 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass42);
        com.fasterxml.jackson.databind.jsonschema.JsonSchema jsonSchema46 = xmlMapper7.generateJsonSchema(featureClass42);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference47 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean48 = xmlSerializerProvider1.hasSerializerFor(featureClass42, throwableAtomicReference47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(featureArray10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectReader13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(objectWriter29);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertTrue("'" + feature39 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature39.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory40);
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(featureClass42);
        org.junit.Assert.assertNotNull(featureItor43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(jsonSchema46);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test404");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        com.fasterxml.jackson.annotation.JsonInclude.Include include11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper5.setSerializationInclusion(include11);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector13 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector15 = jacksonXmlAnnotationIntrospector13.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(characterEscapes22);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray24 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper21.disable(featureArray24);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = objectMapper25.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig27 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider28 = objectMapper25.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec29 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec29, xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature33 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = xmlFactory32.disable(feature33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass36 = xmlFactory34.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer37 = serializerProvider28.getUnknownTypeSerializer(featureClass36);
        java.util.TimeZone timeZone38 = serializerProvider28.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec39 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory40 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory41 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec39, xMLInputFactory40, xMLOutputFactory41);
        com.fasterxml.jackson.core.Version version43 = xmlFactory42.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper44 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory42);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes45 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter46 = xmlMapper44.writer(characterEscapes45);
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.core.Version version51 = xmlFactory50.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper52 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory50);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes53 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter54 = xmlMapper52.writer(characterEscapes53);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory55 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper56 = xmlMapper52.setNodeFactory(jsonNodeFactory55);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider57 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper58 = xmlMapper52.setFilterProvider(filterProvider57);
        com.fasterxml.jackson.core.JsonParser jsonParser59 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec60 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory61 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory62 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory63 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec60, xMLInputFactory61, xMLOutputFactory62);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature64 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory65 = xmlFactory63.disable(feature64);
        com.fasterxml.jackson.core.Version version66 = xmlFactory65.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass67 = xmlFactory65.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor68 = objectMapper58.readValues(jsonParser59, featureClass67);
        boolean boolean69 = xmlMapper44.canSerialize(featureClass67);
        com.fasterxml.jackson.databind.BeanProperty beanProperty70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = serializerProvider28.findKeySerializer(featureClass67, beanProperty70);
        java.lang.Enum[] enumArray73 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray74 = (java.lang.Enum<?>[]) enumArray73;
        java.lang.String[] strArray81 = new java.lang.String[] { "xmlInfo", " ", "<String>XML</String>", " ", "hi!", "xmlInfo" };
        java.lang.String[] strArray82 = jacksonXmlAnnotationIntrospector13.findEnumValues(featureClass67, (java.lang.Enum<?>[]) enumArray73, strArray81);
        java.lang.Class<?> wildcardClass83 = xmlMapper5.findMixInClassFor(featureClass67);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature84 = null;
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature85 = null;
        com.fasterxml.jackson.databind.DeserializationFeature[] deserializationFeatureArray86 = new com.fasterxml.jackson.databind.DeserializationFeature[] { deserializationFeature85 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper87 = xmlMapper5.enable(deserializationFeature84, deserializationFeatureArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector15);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(featureArray24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(serializationConfig27);
        org.junit.Assert.assertNotNull(serializerProvider28);
        org.junit.Assert.assertTrue("'" + feature33 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature33.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory34);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(featureClass36);
        org.junit.Assert.assertNotNull(objJsonSerializer37);
        org.junit.Assert.assertNotNull(timeZone38);
        org.junit.Assert.assertEquals(timeZone38.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(objectWriter46);
        org.junit.Assert.assertNotNull(version51);
        org.junit.Assert.assertNotNull(objectWriter54);
        org.junit.Assert.assertNotNull(objectMapper56);
        org.junit.Assert.assertNotNull(objectMapper58);
        org.junit.Assert.assertTrue("'" + feature64 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature64.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory65);
        org.junit.Assert.assertNotNull(version66);
        org.junit.Assert.assertNotNull(featureClass67);
        org.junit.Assert.assertNotNull(featureItor68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
        org.junit.Assert.assertNotNull(enumArray73);
        org.junit.Assert.assertNotNull(wildcardEnumArray74);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNull(wildcardClass83);
        org.junit.Assert.assertNotNull(deserializationFeatureArray86);
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test405");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = xmlFactory5.getXMLInputFactory();
        xmlFactory5.setXMLTextElementName("");
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = xmlFactory5.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(xMLInputFactory10);
        org.junit.Assert.assertNotNull(xMLInputFactory13);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test406");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        com.fasterxml.jackson.annotation.JsonInclude.Include include11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper5.setSerializationInclusion(include11);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper5.enableDefaultTyping(defaultTyping13);
        com.fasterxml.jackson.core.ObjectCodec objectCodec15 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec15, xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory18);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper20.writer(characterEscapes21);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray23 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper20.disable(featureArray23);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = xmlMapper20.copy();
        com.fasterxml.jackson.annotation.JsonInclude.Include include26 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper20.setSerializationInclusion(include26);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass28 = null;
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride29 = objectMapper27.configOverride(featureClass28);
        com.fasterxml.jackson.core.ObjectCodec objectCodec30 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec30, xMLInputFactory31, xMLOutputFactory32);
        com.fasterxml.jackson.core.Version version34 = xmlFactory33.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper35 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory33);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes36 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter37 = xmlMapper35.writer(characterEscapes36);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray38 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper39 = xmlMapper35.disable(featureArray38);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = objectMapper39.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig41 = objectMapper39.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider42 = objectMapper39.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec43 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory44 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory45 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec43, xMLInputFactory44, xMLOutputFactory45);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature47 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = xmlFactory46.disable(feature47);
        com.fasterxml.jackson.core.Version version49 = xmlFactory48.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass50 = xmlFactory48.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = serializerProvider42.getUnknownTypeSerializer(featureClass50);
        com.fasterxml.jackson.core.ObjectCodec objectCodec52 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory53 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory54 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory55 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec52, xMLInputFactory53, xMLOutputFactory54);
        com.fasterxml.jackson.core.Version version56 = xmlFactory55.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper57 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory55);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes58 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter59 = xmlMapper57.writer(characterEscapes58);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory60 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper61 = xmlMapper57.setNodeFactory(jsonNodeFactory60);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory62 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader63 = xmlMapper57.readerForUpdating((java.lang.Object) xmlFactory62);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass64 = xmlFactory62.getFormatWriteFeatureType();
        com.fasterxml.jackson.databind.JavaType javaType65 = serializerProvider42.constructType((java.lang.reflect.Type) featureClass64);
        com.fasterxml.jackson.core.ObjectCodec objectCodec66 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory67 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory68 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory69 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec66, xMLInputFactory67, xMLOutputFactory68);
        com.fasterxml.jackson.core.Version version70 = xmlFactory69.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper71 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory69);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes72 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter73 = xmlMapper71.writer(characterEscapes72);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider74 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter75 = xmlMapper71.writer(filterProvider74);
        com.fasterxml.jackson.databind.node.ArrayNode arrayNode76 = xmlMapper71.createArrayNode();
        com.fasterxml.jackson.core.ObjectCodec objectCodec77 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory78 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory79 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory80 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec77, xMLInputFactory78, xMLOutputFactory79);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature81 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory82 = xmlFactory80.disable(feature81);
        com.fasterxml.jackson.core.Version version83 = xmlFactory82.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper84 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory82);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass85 = xmlFactory82.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectReader objectReader86 = xmlMapper71.reader(featureClass85);
        com.fasterxml.jackson.databind.BeanProperty beanProperty87 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer88 = serializerProvider42.findValueSerializer(featureClass85, beanProperty87);
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory89 = serializerProvider42.getTypeFactory();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper90 = objectMapper27.setTypeFactory(typeFactory89);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper91 = objectMapper14.setTypeFactory(typeFactory89);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(featureArray23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(xmlMapper25);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(mutableConfigOverride29);
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertNotNull(objectWriter37);
        org.junit.Assert.assertNotNull(featureArray38);
        org.junit.Assert.assertNotNull(objectMapper39);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(serializationConfig41);
        org.junit.Assert.assertNotNull(serializerProvider42);
        org.junit.Assert.assertTrue("'" + feature47 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature47.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory48);
        org.junit.Assert.assertNotNull(version49);
        org.junit.Assert.assertNotNull(featureClass50);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(version56);
        org.junit.Assert.assertNotNull(objectWriter59);
        org.junit.Assert.assertNotNull(objectMapper61);
        org.junit.Assert.assertNotNull(objectReader63);
        org.junit.Assert.assertNotNull(featureClass64);
        org.junit.Assert.assertNotNull(javaType65);
        org.junit.Assert.assertNotNull(version70);
        org.junit.Assert.assertNotNull(objectWriter73);
        org.junit.Assert.assertNotNull(objectWriter75);
        org.junit.Assert.assertNotNull(arrayNode76);
        org.junit.Assert.assertTrue("'" + feature81 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature81.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory82);
        org.junit.Assert.assertNotNull(version83);
        org.junit.Assert.assertNotNull(featureClass85);
        org.junit.Assert.assertNotNull(objectReader86);
        org.junit.Assert.assertNotNull(objJsonSerializer88);
        org.junit.Assert.assertNotNull(typeFactory89);
        org.junit.Assert.assertNotNull(objectMapper90);
        org.junit.Assert.assertNotNull(objectMapper91);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test407");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTypingAsProperty(defaultTyping11, "");
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory14 = objectMapper13.getNodeFactory();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = objectMapper13.disable(serializationFeature15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(jsonNodeFactory14);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test408");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper5.writer();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider11 = null;
        xmlMapper5.setFilters(filterProvider11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.disableDefaultTyping();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper5.setSerializerFactory(serializerFactory14);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper5.setDefaultPrettyPrinter(prettyPrinter16);
        com.fasterxml.jackson.core.ObjectCodec objectCodec18 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec18, xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature22 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory23 = xmlFactory21.disable(feature22);
        com.fasterxml.jackson.core.Version version24 = xmlFactory23.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory23);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass26 = xmlFactory23.getFormatReadFeatureType();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = xmlMapper5.canSerialize(featureClass26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertTrue("'" + feature22 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature22.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory23);
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(featureClass26);
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test409");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean5 = xmlFactory3.isEnabled(feature4);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlFactory9.disable(feature10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature14 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper13.disable(feature14);
        boolean boolean16 = feature14.enabledByDefault();
        boolean boolean17 = xmlFactory3.isEnabled(feature14);
        com.fasterxml.jackson.core.JsonFactory jsonFactory19 = xmlFactory3.setRootValueSeparator(" ");
        java.io.DataOutput dataOutput20 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = xmlFactory3.createGenerator(dataOutput20);
        com.fasterxml.jackson.core.JsonParser jsonParser22 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonGenerator21.copyCurrentEvent(jsonParser22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + feature14 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature14.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(jsonFactory19);
        org.junit.Assert.assertNotNull(jsonGenerator21);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test410");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean5 = xmlFactory3.isEnabled(feature4);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlFactory9.disable(feature10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature14 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper13.disable(feature14);
        boolean boolean16 = feature14.enabledByDefault();
        boolean boolean17 = xmlFactory3.isEnabled(feature14);
        boolean boolean19 = feature14.enabledIn((int) (short) 100);
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + feature14 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature14.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test411");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec22, xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory25, jacksonXmlModule26);
        com.fasterxml.jackson.core.ObjectCodec objectCodec28 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec28, xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.core.Version version32 = xmlFactory31.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper33 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory31);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper33.writer(characterEscapes34);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray36 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = xmlMapper33.disable(featureArray36);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext38 = xmlMapper33.getDeserializationContext();
        com.fasterxml.jackson.core.Version version39 = xmlMapper33.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter40 = xmlMapper33.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = xmlMapper33.enableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec42 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory45 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec42, xMLInputFactory43, xMLOutputFactory44);
        com.fasterxml.jackson.core.Version version46 = xmlFactory45.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper47 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory45);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes48 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter49 = xmlMapper47.writer(characterEscapes48);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray50 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper51 = xmlMapper47.disable(featureArray50);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper52 = objectMapper51.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig53 = objectMapper51.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper54 = xmlMapper33.setMixInResolver((com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver) serializationConfig53);
        com.fasterxml.jackson.core.ObjectCodec objectCodec55 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory56 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory57 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory58 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec55, xMLInputFactory56, xMLOutputFactory57);
        com.fasterxml.jackson.core.Version version59 = xmlFactory58.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper60 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory58);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes61 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter62 = xmlMapper60.writer(characterEscapes61);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray63 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper64 = xmlMapper60.disable(featureArray63);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = objectMapper64.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig66 = objectMapper64.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = objectMapper64.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec68 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory69 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory70 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory71 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec68, xMLInputFactory69, xMLOutputFactory70);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature72 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory73 = xmlFactory71.disable(feature72);
        com.fasterxml.jackson.core.Version version74 = xmlFactory73.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass75 = xmlFactory73.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = serializerProvider67.getUnknownTypeSerializer(featureClass75);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter77 = objectMapper54.writerWithView(featureClass75);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter78 = xmlMapper27.writerWithView(featureClass75);
        com.fasterxml.jackson.databind.BeanProperty beanProperty79 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = serializerProvider12.findPrimaryPropertySerializer(featureClass75, beanProperty79);
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory81 = serializerProvider12.getTypeFactory();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(version32);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertNotNull(featureArray36);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(deserializationContext38);
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(objectWriter40);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(objectWriter49);
        org.junit.Assert.assertNotNull(featureArray50);
        org.junit.Assert.assertNotNull(objectMapper51);
        org.junit.Assert.assertNotNull(objectMapper52);
        org.junit.Assert.assertNotNull(serializationConfig53);
        org.junit.Assert.assertNotNull(objectMapper54);
        org.junit.Assert.assertNotNull(version59);
        org.junit.Assert.assertNotNull(objectWriter62);
        org.junit.Assert.assertNotNull(featureArray63);
        org.junit.Assert.assertNotNull(objectMapper64);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertNotNull(serializationConfig66);
        org.junit.Assert.assertNotNull(serializerProvider67);
        org.junit.Assert.assertTrue("'" + feature72 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature72.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory73);
        org.junit.Assert.assertNotNull(version74);
        org.junit.Assert.assertNotNull(featureClass75);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
        org.junit.Assert.assertNotNull(objectWriter77);
        org.junit.Assert.assertNotNull(objectWriter78);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
        org.junit.Assert.assertNotNull(typeFactory81);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test412");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.Version version27 = xmlFactory26.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory26);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(characterEscapes29);
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory34);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes37 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter38 = xmlMapper36.writer(characterEscapes37);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory39 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper36.setNodeFactory(jsonNodeFactory39);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper36.setFilterProvider(filterProvider41);
        com.fasterxml.jackson.core.JsonParser jsonParser43 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature48 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = xmlFactory47.disable(feature48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass51 = xmlFactory49.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor52 = objectMapper42.readValues(jsonParser43, featureClass51);
        boolean boolean53 = xmlMapper28.canSerialize(featureClass51);
        com.fasterxml.jackson.databind.JavaType javaType54 = serializerProvider12.constructType((java.lang.reflect.Type) featureClass51);
        java.lang.Object obj56 = null;
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = serializerProvider12.setAttribute((java.lang.Object) 0L, obj56);
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter59 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec60 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory61 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory62 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory63 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec60, xMLInputFactory61, xMLOutputFactory62);
        com.fasterxml.jackson.core.JsonFactory jsonFactory65 = xmlFactory63.setRootValueSeparator("");
        java.io.DataOutput dataOutput66 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator67 = jsonFactory65.createGenerator(dataOutput66);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator69 = jsonGenerator67.setHighestNonEscapedChar((-1));
        boolean boolean70 = jsonGenerator69.canWriteObjectId();
        int int71 = jsonGenerator69.getHighestEscapedChar();
        defaultXmlPrettyPrinter59.writeArrayValueSeparator(jsonGenerator69);
        // The following exception was thrown during execution in test generation
        try {
            serializerProvider12.defaultSerializeDateValue((long) (short) 100, jsonGenerator69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No element/attribute name specified when trying to output element");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(objectWriter38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertTrue("'" + feature48 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature48.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory49);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(featureClass51);
        org.junit.Assert.assertNotNull(featureItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(javaType54);
        org.junit.Assert.assertNotNull(serializerProvider57);
        org.junit.Assert.assertNotNull(jsonFactory65);
        org.junit.Assert.assertNotNull(jsonGenerator67);
        org.junit.Assert.assertNotNull(jsonGenerator69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test413");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper5.findAndRegisterModules();
        com.fasterxml.jackson.core.JsonFactory jsonFactory11 = xmlMapper5.getJsonFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.Version version16 = xmlFactory15.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory15);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(characterEscapes18);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray20 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper17.disable(featureArray20);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = objectMapper21.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig23 = objectMapper21.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = objectMapper21.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature29 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = xmlFactory28.disable(feature29);
        com.fasterxml.jackson.core.Version version31 = xmlFactory30.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass32 = xmlFactory30.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = serializerProvider24.getUnknownTypeSerializer(featureClass32);
        java.util.TimeZone timeZone34 = serializerProvider24.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory38);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper40.writer(characterEscapes41);
        com.fasterxml.jackson.core.ObjectCodec objectCodec43 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory44 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory45 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec43, xMLInputFactory44, xMLOutputFactory45);
        com.fasterxml.jackson.core.Version version47 = xmlFactory46.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper48 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory46);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes49 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter50 = xmlMapper48.writer(characterEscapes49);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory51 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper52 = xmlMapper48.setNodeFactory(jsonNodeFactory51);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider53 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper54 = xmlMapper48.setFilterProvider(filterProvider53);
        com.fasterxml.jackson.core.JsonParser jsonParser55 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature60 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory61 = xmlFactory59.disable(feature60);
        com.fasterxml.jackson.core.Version version62 = xmlFactory61.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass63 = xmlFactory61.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor64 = objectMapper54.readValues(jsonParser55, featureClass63);
        boolean boolean65 = xmlMapper40.canSerialize(featureClass63);
        com.fasterxml.jackson.databind.BeanProperty beanProperty66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = serializerProvider24.findKeySerializer(featureClass63, beanProperty66);
        com.fasterxml.jackson.databind.ObjectReader objectReader68 = xmlMapper5.readerWithView(featureClass63);
        com.fasterxml.jackson.core.ObjectCodec objectCodec69 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory70 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory71 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec69, xMLInputFactory70, xMLOutputFactory71);
        com.fasterxml.jackson.core.Version version73 = xmlFactory72.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper74 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory72);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes75 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter76 = xmlMapper74.writer(characterEscapes75);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray77 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper78 = xmlMapper74.disable(featureArray77);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper79 = objectMapper78.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig80 = objectMapper78.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = objectMapper78.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray82 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper83 = objectMapper78.enable(featureArray82);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper84 = xmlMapper5.disable(featureArray82);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter85 = objectMapper84.writerWithDefaultPrettyPrinter();
        java.io.DataOutput dataOutput86 = null;
        java.lang.Object obj87 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper84.writeValue(dataOutput86, obj87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(jsonFactory11);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(featureArray20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(serializationConfig23);
        org.junit.Assert.assertNotNull(serializerProvider24);
        org.junit.Assert.assertTrue("'" + feature29 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature29.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory30);
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(featureClass32);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(timeZone34);
        org.junit.Assert.assertEquals(timeZone34.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(objectWriter50);
        org.junit.Assert.assertNotNull(objectMapper52);
        org.junit.Assert.assertNotNull(objectMapper54);
        org.junit.Assert.assertTrue("'" + feature60 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature60.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory61);
        org.junit.Assert.assertNotNull(version62);
        org.junit.Assert.assertNotNull(featureClass63);
        org.junit.Assert.assertNotNull(featureItor64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertNotNull(objectReader68);
        org.junit.Assert.assertNotNull(version73);
        org.junit.Assert.assertNotNull(objectWriter76);
        org.junit.Assert.assertNotNull(featureArray77);
        org.junit.Assert.assertNotNull(objectMapper78);
        org.junit.Assert.assertNotNull(objectMapper79);
        org.junit.Assert.assertNotNull(serializationConfig80);
        org.junit.Assert.assertNotNull(serializerProvider81);
        org.junit.Assert.assertNotNull(featureArray82);
        org.junit.Assert.assertNotNull(objectMapper83);
        org.junit.Assert.assertNotNull(objectMapper84);
        org.junit.Assert.assertNotNull(objectWriter85);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test414");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.Module[] moduleArray10 = new com.fasterxml.jackson.databind.Module[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper9.registerModules(moduleArray10);
        com.fasterxml.jackson.annotation.JsonInclude.Include include12 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper9.setSerializationInclusion(include12);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector14 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector16 = jacksonXmlAnnotationIntrospector14.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory25 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.setNodeFactory(jsonNodeFactory25);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader28 = xmlMapper22.readerForUpdating((java.lang.Object) xmlFactory27);
        boolean boolean29 = xmlFactory27.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass30 = xmlFactory27.getFormatReadFeatureType();
        boolean boolean31 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass30);
        java.lang.Enum[] enumArray33 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray34 = (java.lang.Enum<?>[]) enumArray33;
        java.lang.String[] strArray35 = null;
        java.lang.String[] strArray36 = jacksonAnnotationIntrospector16.findEnumValues(featureClass30, (java.lang.Enum<?>[]) enumArray33, strArray35);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = objectMapper13.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) jacksonAnnotationIntrospector16);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(moduleArray10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector16);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(objectReader28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(featureClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(enumArray33);
        org.junit.Assert.assertNotNull(wildcardEnumArray34);
        org.junit.Assert.assertNull(strArray36);
        org.junit.Assert.assertNotNull(objectMapper37);
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test415");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper9.disable(deserializationFeature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test416");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper5.findAndRegisterModules();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = objectMapper10.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder xmlTypeResolverBuilder12 = new com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper10.setDefaultTyping((com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder>) xmlTypeResolverBuilder12);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = objectMapper10.configure(serializationFeature14, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializerProvider11);
        org.junit.Assert.assertNotNull(objectMapper13);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test417");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.readerForUpdating((java.lang.Object) xmlFactory10);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = xmlMapper5.copy();
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = xmlMapper12.writer(characterEscapes13);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
        org.junit.Assert.assertNotNull(xmlMapper12);
        org.junit.Assert.assertNotNull(objectWriter14);
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test418");
        com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder xmlTypeResolverBuilder0 = new com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder();
        com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder2 = xmlTypeResolverBuilder0.typeProperty("hi!");
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = xmlMapper8.copy();
        com.fasterxml.jackson.annotation.JsonInclude.Include include14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper8.setSerializationInclusion(include14);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector16 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector18 = jacksonXmlAnnotationIntrospector16.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec19 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory22 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec19, xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.core.Version version23 = xmlFactory22.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory22);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes25 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter26 = xmlMapper24.writer(characterEscapes25);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray27 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = xmlMapper24.disable(featureArray27);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = objectMapper28.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig30 = objectMapper28.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = objectMapper28.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec32 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec32, xMLInputFactory33, xMLOutputFactory34);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature36 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = xmlFactory35.disable(feature36);
        com.fasterxml.jackson.core.Version version38 = xmlFactory37.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass39 = xmlFactory37.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = serializerProvider31.getUnknownTypeSerializer(featureClass39);
        java.util.TimeZone timeZone41 = serializerProvider31.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec42 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory45 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec42, xMLInputFactory43, xMLOutputFactory44);
        com.fasterxml.jackson.core.Version version46 = xmlFactory45.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper47 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory45);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes48 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter49 = xmlMapper47.writer(characterEscapes48);
        com.fasterxml.jackson.core.ObjectCodec objectCodec50 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory51 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory52 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory53 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec50, xMLInputFactory51, xMLOutputFactory52);
        com.fasterxml.jackson.core.Version version54 = xmlFactory53.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper55 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory53);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes56 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter57 = xmlMapper55.writer(characterEscapes56);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory58 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper59 = xmlMapper55.setNodeFactory(jsonNodeFactory58);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider60 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper61 = xmlMapper55.setFilterProvider(filterProvider60);
        com.fasterxml.jackson.core.JsonParser jsonParser62 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec63 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory64 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory65 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory66 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec63, xMLInputFactory64, xMLOutputFactory65);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature67 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory68 = xmlFactory66.disable(feature67);
        com.fasterxml.jackson.core.Version version69 = xmlFactory68.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass70 = xmlFactory68.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor71 = objectMapper61.readValues(jsonParser62, featureClass70);
        boolean boolean72 = xmlMapper47.canSerialize(featureClass70);
        com.fasterxml.jackson.databind.BeanProperty beanProperty73 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer74 = serializerProvider31.findKeySerializer(featureClass70, beanProperty73);
        java.lang.Enum[] enumArray76 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray77 = (java.lang.Enum<?>[]) enumArray76;
        java.lang.String[] strArray84 = new java.lang.String[] { "xmlInfo", " ", "<String>XML</String>", " ", "hi!", "xmlInfo" };
        java.lang.String[] strArray85 = jacksonXmlAnnotationIntrospector16.findEnumValues(featureClass70, (java.lang.Enum<?>[]) enumArray76, strArray84);
        java.lang.Class<?> wildcardClass86 = xmlMapper8.findMixInClassFor(featureClass70);
        com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder87 = stdTypeResolverBuilder2.defaultImpl(featureClass70);
        java.lang.String str88 = stdTypeResolverBuilder2.getTypeProperty();
        org.junit.Assert.assertNotNull(stdTypeResolverBuilder2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(xmlMapper13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector18);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(objectWriter26);
        org.junit.Assert.assertNotNull(featureArray27);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(serializationConfig30);
        org.junit.Assert.assertNotNull(serializerProvider31);
        org.junit.Assert.assertTrue("'" + feature36 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature36.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory37);
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(featureClass39);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(timeZone41);
        org.junit.Assert.assertEquals(timeZone41.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(objectWriter49);
        org.junit.Assert.assertNotNull(version54);
        org.junit.Assert.assertNotNull(objectWriter57);
        org.junit.Assert.assertNotNull(objectMapper59);
        org.junit.Assert.assertNotNull(objectMapper61);
        org.junit.Assert.assertTrue("'" + feature67 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature67.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory68);
        org.junit.Assert.assertNotNull(version69);
        org.junit.Assert.assertNotNull(featureClass70);
        org.junit.Assert.assertNotNull(featureItor71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer74);
        org.junit.Assert.assertNotNull(enumArray76);
        org.junit.Assert.assertNotNull(wildcardEnumArray77);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNull(wildcardClass86);
        org.junit.Assert.assertNotNull(stdTypeResolverBuilder87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi_" + "'", str88, "hi_");
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test419");
        com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier xmlBeanDeserializerModifier1 = new com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier(" ");
        com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig2 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper8.writer(filterProvider11);
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.ObjectCodec objectCodec21 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory22 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec21, xMLInputFactory22, xMLOutputFactory23);
        com.fasterxml.jackson.core.Version version25 = xmlFactory24.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper26 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory24);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes27 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter28 = xmlMapper26.writer(characterEscapes27);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory29 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper30 = xmlMapper26.setNodeFactory(jsonNodeFactory29);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider31 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper26.setFilterProvider(filterProvider31);
        com.fasterxml.jackson.core.JsonParser jsonParser33 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature38 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = xmlFactory37.disable(feature38);
        com.fasterxml.jackson.core.Version version40 = xmlFactory39.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass41 = xmlFactory39.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor42 = objectMapper32.readValues(jsonParser33, featureClass41);
        boolean boolean43 = xmlMapper18.canSerialize(featureClass41);
        boolean boolean44 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass41);
        com.fasterxml.jackson.databind.JavaType javaType45 = xmlMapper8.constructType((java.lang.reflect.Type) featureClass41);
        boolean boolean46 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType45);
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer47 = null;
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer48 = xmlBeanDeserializerModifier1.modifyKeyDeserializer(deserializationConfig2, javaType45, keyDeserializer47);
        com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig49 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription50 = null;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition[] beanPropertyDefinitionArray51 = new com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition[] {};
        java.util.ArrayList<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition> beanPropertyDefinitionList52 = new java.util.ArrayList<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>) beanPropertyDefinitionList52, beanPropertyDefinitionArray51);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition> beanPropertyDefinitionList54 = xmlBeanDeserializerModifier1.updateProperties(deserializationConfig49, beanDescription50, (java.util.List<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition>) beanPropertyDefinitionList52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(objectWriter28);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertTrue("'" + feature38 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature38.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory39);
        org.junit.Assert.assertNotNull(version40);
        org.junit.Assert.assertNotNull(featureClass41);
        org.junit.Assert.assertNotNull(featureItor42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(javaType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(keyDeserializer48);
        org.junit.Assert.assertNotNull(beanPropertyDefinitionArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test420");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature8 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper7.disable(feature8);
        com.fasterxml.jackson.core.ObjectCodec objectCodec10 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec10, xMLInputFactory11, xMLOutputFactory12);
        com.fasterxml.jackson.core.Version version14 = xmlFactory13.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory13);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(characterEscapes16);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setNodeFactory(jsonNodeFactory18);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider20 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper15.setFilterProvider(filterProvider20);
        com.fasterxml.jackson.core.JsonParser jsonParser22 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature27 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = xmlFactory26.disable(feature27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass30 = xmlFactory28.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor31 = objectMapper21.readValues(jsonParser22, featureClass30);
        boolean boolean32 = objectMapper9.canSerialize(featureClass30);
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory33 = objectMapper9.getTypeFactory();
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertTrue("'" + feature8 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature8.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertTrue("'" + feature27 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature27.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory28);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(featureClass30);
        org.junit.Assert.assertNotNull(featureItor31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(typeFactory33);
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test421");
        com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder xmlTypeResolverBuilder0 = new com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder();
        com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder2 = xmlTypeResolverBuilder0.typeProperty("hi!");
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = xmlMapper8.copy();
        com.fasterxml.jackson.annotation.JsonInclude.Include include14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper8.setSerializationInclusion(include14);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector16 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector18 = jacksonXmlAnnotationIntrospector16.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec19 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory22 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec19, xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.core.Version version23 = xmlFactory22.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory22);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes25 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter26 = xmlMapper24.writer(characterEscapes25);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray27 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = xmlMapper24.disable(featureArray27);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = objectMapper28.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig30 = objectMapper28.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = objectMapper28.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec32 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec32, xMLInputFactory33, xMLOutputFactory34);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature36 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = xmlFactory35.disable(feature36);
        com.fasterxml.jackson.core.Version version38 = xmlFactory37.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass39 = xmlFactory37.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = serializerProvider31.getUnknownTypeSerializer(featureClass39);
        java.util.TimeZone timeZone41 = serializerProvider31.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec42 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory45 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec42, xMLInputFactory43, xMLOutputFactory44);
        com.fasterxml.jackson.core.Version version46 = xmlFactory45.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper47 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory45);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes48 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter49 = xmlMapper47.writer(characterEscapes48);
        com.fasterxml.jackson.core.ObjectCodec objectCodec50 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory51 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory52 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory53 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec50, xMLInputFactory51, xMLOutputFactory52);
        com.fasterxml.jackson.core.Version version54 = xmlFactory53.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper55 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory53);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes56 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter57 = xmlMapper55.writer(characterEscapes56);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory58 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper59 = xmlMapper55.setNodeFactory(jsonNodeFactory58);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider60 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper61 = xmlMapper55.setFilterProvider(filterProvider60);
        com.fasterxml.jackson.core.JsonParser jsonParser62 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec63 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory64 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory65 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory66 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec63, xMLInputFactory64, xMLOutputFactory65);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature67 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory68 = xmlFactory66.disable(feature67);
        com.fasterxml.jackson.core.Version version69 = xmlFactory68.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass70 = xmlFactory68.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor71 = objectMapper61.readValues(jsonParser62, featureClass70);
        boolean boolean72 = xmlMapper47.canSerialize(featureClass70);
        com.fasterxml.jackson.databind.BeanProperty beanProperty73 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer74 = serializerProvider31.findKeySerializer(featureClass70, beanProperty73);
        java.lang.Enum[] enumArray76 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray77 = (java.lang.Enum<?>[]) enumArray76;
        java.lang.String[] strArray84 = new java.lang.String[] { "xmlInfo", " ", "<String>XML</String>", " ", "hi!", "xmlInfo" };
        java.lang.String[] strArray85 = jacksonXmlAnnotationIntrospector16.findEnumValues(featureClass70, (java.lang.Enum<?>[]) enumArray76, strArray84);
        java.lang.Class<?> wildcardClass86 = xmlMapper8.findMixInClassFor(featureClass70);
        com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder87 = stdTypeResolverBuilder2.defaultImpl(featureClass70);
        java.lang.String str88 = stdTypeResolverBuilder87.getTypeProperty();
        org.junit.Assert.assertNotNull(stdTypeResolverBuilder2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(xmlMapper13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector18);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(objectWriter26);
        org.junit.Assert.assertNotNull(featureArray27);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(serializationConfig30);
        org.junit.Assert.assertNotNull(serializerProvider31);
        org.junit.Assert.assertTrue("'" + feature36 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature36.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory37);
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(featureClass39);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(timeZone41);
        org.junit.Assert.assertEquals(timeZone41.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(objectWriter49);
        org.junit.Assert.assertNotNull(version54);
        org.junit.Assert.assertNotNull(objectWriter57);
        org.junit.Assert.assertNotNull(objectMapper59);
        org.junit.Assert.assertNotNull(objectMapper61);
        org.junit.Assert.assertTrue("'" + feature67 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature67.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory68);
        org.junit.Assert.assertNotNull(version69);
        org.junit.Assert.assertNotNull(featureClass70);
        org.junit.Assert.assertNotNull(featureItor71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer74);
        org.junit.Assert.assertNotNull(enumArray76);
        org.junit.Assert.assertNotNull(wildcardEnumArray77);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNull(wildcardClass86);
        org.junit.Assert.assertNotNull(stdTypeResolverBuilder87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi_" + "'", str88, "hi_");
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test422");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        int int10 = xmlMapper5.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues11 = xmlMapper5.getInjectableValues();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory12 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.setSerializerFactory(serializerFactory12);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory14 = xmlMapper5.getFactory();
        javax.xml.stream.XMLStreamReader xMLStreamReader15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser fromXmlParser16 = xmlFactory14.createParser(xMLStreamReader15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(injectableValues11);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(xmlFactory14);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test423");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.enableDefaultTypingAsProperty(defaultTyping10, "XML");
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = objectMapper12.writer(contextAttributes13);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter14);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test424");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        int int10 = xmlMapper5.mixInCount();
        com.fasterxml.jackson.databind.InjectableValues injectableValues11 = xmlMapper5.getInjectableValues();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = xmlMapper5.getSerializerProviderInstance();
        java.io.File file13 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper5.writeValue(file13, (java.lang.Object) objectWriter21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(injectableValues11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test425");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector1 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector(false);
        com.fasterxml.jackson.databind.introspect.Annotated annotated2 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup3 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.core.ObjectCodec objectCodec4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec4, xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.core.Version version8 = xmlFactory7.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper9.writer(characterEscapes10);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray12 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper9.disable(featureArray12);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper9.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec15 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec15, xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory18);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper20.writer(characterEscapes21);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray23 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper20.disable(featureArray23);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = objectMapper24.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper24.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = objectMapper24.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec28 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec28, xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature32 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = xmlFactory31.disable(feature32);
        com.fasterxml.jackson.core.Version version34 = xmlFactory33.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass35 = xmlFactory33.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = serializerProvider27.getUnknownTypeSerializer(featureClass35);
        java.util.TimeZone timeZone37 = serializerProvider27.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec38 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec38, xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.core.Version version42 = xmlFactory41.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper43 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory41);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes44 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter45 = xmlMapper43.writer(characterEscapes44);
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper51 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory49);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes52 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter53 = xmlMapper51.writer(characterEscapes52);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory54 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = xmlMapper51.setNodeFactory(jsonNodeFactory54);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider56 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper57 = xmlMapper51.setFilterProvider(filterProvider56);
        com.fasterxml.jackson.core.JsonParser jsonParser58 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec59 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory60 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory61 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory62 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec59, xMLInputFactory60, xMLOutputFactory61);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature63 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory64 = xmlFactory62.disable(feature63);
        com.fasterxml.jackson.core.Version version65 = xmlFactory64.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass66 = xmlFactory64.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor67 = objectMapper57.readValues(jsonParser58, featureClass66);
        boolean boolean68 = xmlMapper43.canSerialize(featureClass66);
        com.fasterxml.jackson.databind.JavaType javaType69 = serializerProvider27.constructType((java.lang.reflect.Type) featureClass66);
        com.fasterxml.jackson.databind.ObjectReader objectReader70 = xmlMapper14.readerFor(javaType69);
        com.fasterxml.jackson.core.ObjectCodec objectCodec71 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory72 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory73 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory74 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec71, xMLInputFactory72, xMLOutputFactory73);
        com.fasterxml.jackson.core.Version version75 = xmlFactory74.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper76 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory74);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes77 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter78 = xmlMapper76.writer(characterEscapes77);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray79 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper80 = xmlMapper76.disable(featureArray79);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext81 = xmlMapper76.getDeserializationContext();
        com.fasterxml.jackson.core.Version version82 = xmlMapper76.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter83 = xmlMapper76.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper84 = xmlMapper76.enableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec85 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory86 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory87 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory88 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec85, xMLInputFactory86, xMLOutputFactory87);
        com.fasterxml.jackson.core.Version version89 = xmlFactory88.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper90 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory88);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes91 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter92 = xmlMapper90.writer(characterEscapes91);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray93 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper94 = xmlMapper90.disable(featureArray93);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper95 = objectMapper94.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig96 = objectMapper94.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper97 = xmlMapper76.setMixInResolver((com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver) serializationConfig96);
        javax.xml.namespace.QName qName98 = xmlRootNameLookup3.findRootName(javaType69, (com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig96);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass99 = jacksonXmlAnnotationIntrospector1.findDeserializationType(annotated2, javaType69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(objectWriter11);
        org.junit.Assert.assertNotNull(featureArray12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(featureArray23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(serializerProvider27);
        org.junit.Assert.assertTrue("'" + feature32 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature32.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory33);
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertNotNull(featureClass35);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(timeZone37);
        org.junit.Assert.assertEquals(timeZone37.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version42);
        org.junit.Assert.assertNotNull(objectWriter45);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(objectWriter53);
        org.junit.Assert.assertNotNull(objectMapper55);
        org.junit.Assert.assertNotNull(objectMapper57);
        org.junit.Assert.assertTrue("'" + feature63 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature63.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory64);
        org.junit.Assert.assertNotNull(version65);
        org.junit.Assert.assertNotNull(featureClass66);
        org.junit.Assert.assertNotNull(featureItor67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(javaType69);
        org.junit.Assert.assertNotNull(objectReader70);
        org.junit.Assert.assertNotNull(version75);
        org.junit.Assert.assertNotNull(objectWriter78);
        org.junit.Assert.assertNotNull(featureArray79);
        org.junit.Assert.assertNotNull(objectMapper80);
        org.junit.Assert.assertNotNull(deserializationContext81);
        org.junit.Assert.assertNotNull(version82);
        org.junit.Assert.assertNotNull(objectWriter83);
        org.junit.Assert.assertNotNull(objectMapper84);
        org.junit.Assert.assertNotNull(version89);
        org.junit.Assert.assertNotNull(objectWriter92);
        org.junit.Assert.assertNotNull(featureArray93);
        org.junit.Assert.assertNotNull(objectMapper94);
        org.junit.Assert.assertNotNull(objectMapper95);
        org.junit.Assert.assertNotNull(serializationConfig96);
        org.junit.Assert.assertNotNull(objectMapper97);
        org.junit.Assert.assertNotNull(qName98);
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test426");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        int int12 = xmlMapper5.mixInCount();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test427");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        java.lang.String str6 = xmlFactory3.getRootValueSeparator();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass7 = xmlFactory3.getFormatReadFeatureType();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory3.getXMLInputFactory();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3, jacksonXmlModule9);
        com.fasterxml.jackson.core.Version version11 = xmlFactory3.version();
        com.fasterxml.jackson.core.JsonParser.Feature feature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory14 = xmlFactory3.configure(feature12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertNotNull(featureClass7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(version11);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test428");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper9.clearProblemHandlers();
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper9.setSerializerProvider(defaultSerializerProvider11);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = objectMapper12.writerWithDefaultPrettyPrinter();
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter13);
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test429");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.enableDefaultTypingAsProperty(defaultTyping10, "XML");
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy13 = objectMapper9.getPropertyNamingStrategy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray22 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.disable(featureArray22);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = objectMapper9.disable(featureArray22);
        com.fasterxml.jackson.core.FormatSchema formatSchema25 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader26 = objectMapper24.reader(formatSchema25);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNull(propertyNamingStrategy13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(featureArray22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(objectReader26);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test430");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.readerForUpdating((java.lang.Object) xmlFactory10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = xmlMapper5.getFactory();
        com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler14 = xmlFactory13._getBufferRecycler();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
        org.junit.Assert.assertNotNull(xmlFactory13);
        org.junit.Assert.assertNotNull(bufferRecycler14);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test431");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper1 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0);
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider2 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper3 = xmlMapper1.setSerializerProvider(defaultSerializerProvider2);
        com.fasterxml.jackson.core.JsonFactory jsonFactory4 = xmlMapper1.getJsonFactory();
        com.fasterxml.jackson.core.JsonParser.Feature feature5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = jsonFactory4.isEnabled(feature5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectMapper3);
        org.junit.Assert.assertNotNull(jsonFactory4);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test432");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.core.Version version11 = xmlMapper5.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.enableDefaultTyping();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = objectMapper13.enableDefaultTypingAsProperty(defaultTyping14, " ");
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = objectMapper13.clearProblemHandlers();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping18 = null;
        com.fasterxml.jackson.annotation.JsonTypeInfo.As as19 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = objectMapper13.enableDefaultTyping(defaultTyping18, as19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: includeAs can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(objectMapper17);
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test433");
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray0 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray1 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray2 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        int int3 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray1, beanPropertyWriterArray2);
        com.fasterxml.jackson.core.ObjectCodec objectCodec4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec4, xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.core.Version version8 = xmlFactory7.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper9.writer(characterEscapes10);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray12 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper9.disable(featureArray12);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = objectMapper13.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig15 = objectMapper13.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = objectMapper13.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature21 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory22 = xmlFactory20.disable(feature21);
        com.fasterxml.jackson.core.Version version23 = xmlFactory22.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass24 = xmlFactory22.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = serializerProvider16.getUnknownTypeSerializer(featureClass24);
        java.util.TimeZone timeZone26 = serializerProvider16.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec27 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory28 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec27, xMLInputFactory28, xMLOutputFactory29);
        com.fasterxml.jackson.core.Version version31 = xmlFactory30.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper32 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory30);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes33 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter34 = xmlMapper32.writer(characterEscapes33);
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory38);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper40.writer(characterEscapes41);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper40.setNodeFactory(jsonNodeFactory43);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider45 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper46 = xmlMapper40.setFilterProvider(filterProvider45);
        com.fasterxml.jackson.core.JsonParser jsonParser47 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature52 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory53 = xmlFactory51.disable(feature52);
        com.fasterxml.jackson.core.Version version54 = xmlFactory53.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass55 = xmlFactory53.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor56 = objectMapper46.readValues(jsonParser47, featureClass55);
        boolean boolean57 = xmlMapper32.canSerialize(featureClass55);
        com.fasterxml.jackson.databind.BeanProperty beanProperty58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = serializerProvider16.findKeySerializer(featureClass55, beanProperty58);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray61 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray62 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        int int63 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray61, beanPropertyWriterArray62);
        boolean boolean64 = objJsonSerializer59.isEmpty(serializerProvider60, (java.lang.Object) beanPropertyWriterArray61);
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray65 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray66 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        int int67 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray65, beanPropertyWriterArray66);
        int int68 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray61, beanPropertyWriterArray65);
        int int69 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray1, beanPropertyWriterArray61);
        int int70 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray0, beanPropertyWriterArray1);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray0);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray1);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(objectWriter11);
        org.junit.Assert.assertNotNull(featureArray12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(serializationConfig15);
        org.junit.Assert.assertNotNull(serializerProvider16);
        org.junit.Assert.assertTrue("'" + feature21 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature21.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(featureClass24);
        org.junit.Assert.assertNotNull(objJsonSerializer25);
        org.junit.Assert.assertNotNull(timeZone26);
        org.junit.Assert.assertEquals(timeZone26.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(objectWriter34);
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(objectMapper46);
        org.junit.Assert.assertTrue("'" + feature52 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature52.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory53);
        org.junit.Assert.assertNotNull(version54);
        org.junit.Assert.assertNotNull(featureClass55);
        org.junit.Assert.assertNotNull(featureItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray61);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray65);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test434");
        com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier xmlBeanDeserializerModifier1 = new com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier(" ");
        com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig2 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper8.writer(filterProvider11);
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.ObjectCodec objectCodec21 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory22 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec21, xMLInputFactory22, xMLOutputFactory23);
        com.fasterxml.jackson.core.Version version25 = xmlFactory24.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper26 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory24);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes27 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter28 = xmlMapper26.writer(characterEscapes27);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory29 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper30 = xmlMapper26.setNodeFactory(jsonNodeFactory29);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider31 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper26.setFilterProvider(filterProvider31);
        com.fasterxml.jackson.core.JsonParser jsonParser33 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature38 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = xmlFactory37.disable(feature38);
        com.fasterxml.jackson.core.Version version40 = xmlFactory39.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass41 = xmlFactory39.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor42 = objectMapper32.readValues(jsonParser33, featureClass41);
        boolean boolean43 = xmlMapper18.canSerialize(featureClass41);
        boolean boolean44 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass41);
        com.fasterxml.jackson.databind.JavaType javaType45 = xmlMapper8.constructType((java.lang.reflect.Type) featureClass41);
        boolean boolean46 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType45);
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer47 = null;
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer48 = xmlBeanDeserializerModifier1.modifyKeyDeserializer(deserializationConfig2, javaType45, keyDeserializer47);
        com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig49 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription50 = null;
        com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder beanDeserializerBuilder51 = null;
        com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder beanDeserializerBuilder52 = xmlBeanDeserializerModifier1.updateBuilder(deserializationConfig49, beanDescription50, beanDeserializerBuilder51);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(objectWriter28);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertTrue("'" + feature38 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature38.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory39);
        org.junit.Assert.assertNotNull(version40);
        org.junit.Assert.assertNotNull(featureClass41);
        org.junit.Assert.assertNotNull(featureItor42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(javaType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(keyDeserializer48);
        org.junit.Assert.assertNull(beanDeserializerBuilder52);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test435");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory10 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.reader(jsonNodeFactory10);
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory12);
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory14 = xmlMapper13.getTypeFactory();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper5.setTypeFactory(typeFactory14);
        com.fasterxml.jackson.core.JsonParser jsonParser16 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider25 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter26 = xmlMapper22.writer(filterProvider25);
        com.fasterxml.jackson.core.ObjectCodec objectCodec27 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory28 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec27, xMLInputFactory28, xMLOutputFactory29);
        com.fasterxml.jackson.core.Version version31 = xmlFactory30.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper32 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory30);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes33 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter34 = xmlMapper32.writer(characterEscapes33);
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory38);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper40.writer(characterEscapes41);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper40.setNodeFactory(jsonNodeFactory43);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider45 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper46 = xmlMapper40.setFilterProvider(filterProvider45);
        com.fasterxml.jackson.core.JsonParser jsonParser47 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec48, xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature52 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory53 = xmlFactory51.disable(feature52);
        com.fasterxml.jackson.core.Version version54 = xmlFactory53.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass55 = xmlFactory53.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor56 = objectMapper46.readValues(jsonParser47, featureClass55);
        boolean boolean57 = xmlMapper32.canSerialize(featureClass55);
        boolean boolean58 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass55);
        com.fasterxml.jackson.databind.JavaType javaType59 = xmlMapper22.constructType((java.lang.reflect.Type) featureClass55);
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.core.TreeCodec> treeCodecItor60 = xmlMapper5.readValues(jsonParser16, javaType59);
        com.fasterxml.jackson.core.ObjectCodec objectCodec61 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory62 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory63 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory64 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec61, xMLInputFactory62, xMLOutputFactory63);
        com.fasterxml.jackson.core.Version version65 = xmlFactory64.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper66 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory64);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes67 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter68 = xmlMapper66.writer(characterEscapes67);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray69 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper70 = xmlMapper66.disable(featureArray69);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext71 = xmlMapper66.getDeserializationContext();
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver72 = xmlMapper66.getSubtypeResolver();
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler73 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper74 = xmlMapper66.addHandler(deserializationProblemHandler73);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory75 = xmlMapper66.getSerializerFactory();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper76 = xmlMapper5.setSerializerFactory(serializerFactory75);
        com.fasterxml.jackson.core.Base64Variant base64Variant77 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter78 = objectMapper76.writer(base64Variant77);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
        org.junit.Assert.assertNotNull(typeFactory14);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(objectWriter26);
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(objectWriter34);
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(objectMapper46);
        org.junit.Assert.assertTrue("'" + feature52 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature52.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory53);
        org.junit.Assert.assertNotNull(version54);
        org.junit.Assert.assertNotNull(featureClass55);
        org.junit.Assert.assertNotNull(featureItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(javaType59);
        org.junit.Assert.assertNotNull(treeCodecItor60);
        org.junit.Assert.assertNotNull(version65);
        org.junit.Assert.assertNotNull(objectWriter68);
        org.junit.Assert.assertNotNull(featureArray69);
        org.junit.Assert.assertNotNull(objectMapper70);
        org.junit.Assert.assertNotNull(deserializationContext71);
        org.junit.Assert.assertNotNull(subtypeResolver72);
        org.junit.Assert.assertNotNull(objectMapper74);
        org.junit.Assert.assertNotNull(serializerFactory75);
        org.junit.Assert.assertNotNull(objectMapper76);
        org.junit.Assert.assertNotNull(objectWriter78);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test436");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.JsonFactory jsonFactory28 = xmlFactory26.setRootValueSeparator("");
        java.io.DataOutput dataOutput29 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator30 = jsonFactory28.createGenerator(dataOutput29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = serializerProvider12.setAttribute((java.lang.Object) jsonFactory28, (java.lang.Object) ' ');
        com.fasterxml.jackson.databind.BeanProperty beanProperty33 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer34 = serializerProvider12.findNullValueSerializer(beanProperty33);
        java.lang.Class<?> wildcardClass35 = serializerProvider12.getActiveView();
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper38 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.annotation.JsonInclude.Value value39 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper38.setPropertyInclusion(value39);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = xmlMapper38.findAndRegisterModules();
        com.fasterxml.jackson.databind.InjectableValues injectableValues42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = objectMapper41.setInjectableValues(injectableValues42);
        com.fasterxml.jackson.core.JsonParser jsonParser44 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec45 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory46 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec45, xMLInputFactory46, xMLOutputFactory47);
        com.fasterxml.jackson.core.Version version49 = xmlFactory48.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper50 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory48);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes51 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter52 = xmlMapper50.writer(characterEscapes51);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray53 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper54 = xmlMapper50.disable(featureArray53);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = objectMapper54.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig56 = objectMapper54.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider57 = objectMapper54.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec58 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory59 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory60 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory61 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec58, xMLInputFactory59, xMLOutputFactory60);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature62 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory63 = xmlFactory61.disable(feature62);
        com.fasterxml.jackson.core.Version version64 = xmlFactory63.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass65 = xmlFactory63.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer66 = serializerProvider57.getUnknownTypeSerializer(featureClass65);
        com.fasterxml.jackson.core.ObjectCodec objectCodec67 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory68 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory69 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory70 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec67, xMLInputFactory68, xMLOutputFactory69);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature71 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = xmlFactory70.disable(feature71);
        com.fasterxml.jackson.core.Version version73 = xmlFactory72.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper74 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory72);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass75 = xmlFactory72.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.BeanProperty beanProperty77 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer78 = serializerProvider57.findTypedValueSerializer(featureClass75, false, beanProperty77);
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor79 = objectMapper41.readValues(jsonParser44, featureClass75);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = serializerProvider12.getUnknownTypeSerializer(featureClass75);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(jsonFactory28);
        org.junit.Assert.assertNotNull(jsonGenerator30);
        org.junit.Assert.assertNotNull(serializerProvider32);
        org.junit.Assert.assertNotNull(objJsonSerializer34);
        org.junit.Assert.assertNull(wildcardClass35);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(version49);
        org.junit.Assert.assertNotNull(objectWriter52);
        org.junit.Assert.assertNotNull(featureArray53);
        org.junit.Assert.assertNotNull(objectMapper54);
        org.junit.Assert.assertNotNull(objectMapper55);
        org.junit.Assert.assertNotNull(serializationConfig56);
        org.junit.Assert.assertNotNull(serializerProvider57);
        org.junit.Assert.assertTrue("'" + feature62 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature62.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory63);
        org.junit.Assert.assertNotNull(version64);
        org.junit.Assert.assertNotNull(featureClass65);
        org.junit.Assert.assertNotNull(objJsonSerializer66);
        org.junit.Assert.assertTrue("'" + feature71 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature71.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory72);
        org.junit.Assert.assertNotNull(version73);
        org.junit.Assert.assertNotNull(featureClass75);
        org.junit.Assert.assertNotNull(objJsonSerializer78);
        org.junit.Assert.assertNotNull(featureItor79);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test437");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper5.findAndRegisterModules();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = objectMapper10.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder xmlTypeResolverBuilder12 = new com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper10.setDefaultTyping((com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder>) xmlTypeResolverBuilder12);
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec22, xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.core.Version version26 = xmlFactory25.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory25);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes28 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter29 = xmlMapper27.writer(characterEscapes28);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray30 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper27.disable(featureArray30);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = objectMapper31.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig33 = objectMapper31.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider34 = objectMapper31.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray35 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = objectMapper31.enable(featureArray35);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = xmlMapper19.disable(featureArray35);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper10.enable(featureArray35);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializerProvider11);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(objectWriter29);
        org.junit.Assert.assertNotNull(featureArray30);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(serializationConfig33);
        org.junit.Assert.assertNotNull(serializerProvider34);
        org.junit.Assert.assertNotNull(featureArray35);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(objectMapper38);
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test438");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule6 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3, jacksonXmlModule6);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector8 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector10 = jacksonXmlAnnotationIntrospector8.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec11 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory14 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec11, xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.core.Version version15 = xmlFactory14.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory14);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes17 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = xmlMapper16.writer(characterEscapes17);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory19 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper16.setNodeFactory(jsonNodeFactory19);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader22 = xmlMapper16.readerForUpdating((java.lang.Object) xmlFactory21);
        boolean boolean23 = xmlFactory21.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass24 = xmlFactory21.getFormatReadFeatureType();
        boolean boolean25 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass24);
        java.lang.Enum[] enumArray27 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray28 = (java.lang.Enum<?>[]) enumArray27;
        java.lang.String[] strArray29 = null;
        java.lang.String[] strArray30 = jacksonAnnotationIntrospector10.findEnumValues(featureClass24, (java.lang.Enum<?>[]) enumArray27, strArray29);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector31 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector33 = jacksonXmlAnnotationIntrospector31.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.core.Version version38 = xmlFactory37.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory37);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes40 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = xmlMapper39.writer(characterEscapes40);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper39.setNodeFactory(jsonNodeFactory42);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory44 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader45 = xmlMapper39.readerForUpdating((java.lang.Object) xmlFactory44);
        boolean boolean46 = xmlFactory44.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass47 = xmlFactory44.getFormatReadFeatureType();
        boolean boolean48 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass47);
        java.lang.Enum[] enumArray50 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray51 = (java.lang.Enum<?>[]) enumArray50;
        java.lang.String[] strArray52 = null;
        java.lang.String[] strArray53 = jacksonAnnotationIntrospector33.findEnumValues(featureClass47, (java.lang.Enum<?>[]) enumArray50, strArray52);
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule54 = jacksonXmlModule6.setMixInAnnotation(featureClass24, featureClass47);
        com.fasterxml.jackson.databind.deser.BeanDeserializerModifier beanDeserializerModifier55 = null;
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule56 = jacksonXmlModule6.setDeserializerModifier(beanDeserializerModifier55);
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector10);
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(objectWriter18);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(objectReader22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(featureClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(enumArray27);
        org.junit.Assert.assertNotNull(wildcardEnumArray28);
        org.junit.Assert.assertNull(strArray30);
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector33);
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(objectWriter41);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectReader45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(featureClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(enumArray50);
        org.junit.Assert.assertNotNull(wildcardEnumArray51);
        org.junit.Assert.assertNull(strArray53);
        org.junit.Assert.assertNotNull(simpleModule54);
        org.junit.Assert.assertNotNull(simpleModule56);
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test439");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper9.clearProblemHandlers();
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper9.setSerializerProvider(defaultSerializerProvider11);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = objectMapper12.isEnabled(serializationFeature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper12);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test440");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.JsonFactory jsonFactory28 = xmlFactory26.setRootValueSeparator("");
        java.io.DataOutput dataOutput29 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator30 = jsonFactory28.createGenerator(dataOutput29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider32 = serializerProvider12.setAttribute((java.lang.Object) jsonFactory28, (java.lang.Object) ' ');
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory34 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec33, xMLInputFactory34, xMLOutputFactory35);
        com.fasterxml.jackson.core.Version version37 = xmlFactory36.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper38 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory36);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes39 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter40 = xmlMapper38.writer(characterEscapes39);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray41 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper38.disable(featureArray41);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext43 = xmlMapper38.getDeserializationContext();
        com.fasterxml.jackson.core.Version version44 = xmlMapper38.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter45 = xmlMapper38.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper46 = xmlMapper38.enableDefaultTyping();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider47 = null;
        xmlMapper38.setFilters(filterProvider47);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig49 = xmlMapper38.getSerializationConfig();
        com.fasterxml.jackson.core.ObjectCodec objectCodec50 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory51 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory52 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory53 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec50, xMLInputFactory51, xMLOutputFactory52);
        com.fasterxml.jackson.core.Version version54 = xmlFactory53.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper55 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory53);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes56 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter57 = xmlMapper55.writer(characterEscapes56);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray58 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper59 = xmlMapper55.disable(featureArray58);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory60 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader61 = xmlMapper55.reader(jsonNodeFactory60);
        com.fasterxml.jackson.core.ObjectCodec objectCodec62 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory63 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory64 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory65 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec62, xMLInputFactory63, xMLOutputFactory64);
        com.fasterxml.jackson.core.Version version66 = xmlFactory65.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper67 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory65);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes68 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter69 = xmlMapper67.writer(characterEscapes68);
        com.fasterxml.jackson.core.ObjectCodec objectCodec70 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory71 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory72 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory73 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec70, xMLInputFactory71, xMLOutputFactory72);
        com.fasterxml.jackson.core.Version version74 = xmlFactory73.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper75 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory73);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes76 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter77 = xmlMapper75.writer(characterEscapes76);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory78 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper79 = xmlMapper75.setNodeFactory(jsonNodeFactory78);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider80 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper81 = xmlMapper75.setFilterProvider(filterProvider80);
        com.fasterxml.jackson.core.JsonParser jsonParser82 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec83 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory84 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory85 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory86 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec83, xMLInputFactory84, xMLOutputFactory85);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature87 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory88 = xmlFactory86.disable(feature87);
        com.fasterxml.jackson.core.Version version89 = xmlFactory88.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass90 = xmlFactory88.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor91 = objectMapper81.readValues(jsonParser82, featureClass90);
        boolean boolean92 = xmlMapper67.canSerialize(featureClass90);
        boolean boolean93 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass90);
        com.fasterxml.jackson.databind.jsonschema.JsonSchema jsonSchema94 = xmlMapper55.generateJsonSchema(featureClass90);
        com.fasterxml.jackson.databind.ObjectReader objectReader95 = xmlMapper38.readerFor(featureClass90);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer96 = serializerProvider32.getUnknownTypeSerializer(featureClass90);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(jsonFactory28);
        org.junit.Assert.assertNotNull(jsonGenerator30);
        org.junit.Assert.assertNotNull(serializerProvider32);
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(objectWriter40);
        org.junit.Assert.assertNotNull(featureArray41);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(deserializationContext43);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(objectWriter45);
        org.junit.Assert.assertNotNull(objectMapper46);
        org.junit.Assert.assertNotNull(serializationConfig49);
        org.junit.Assert.assertNotNull(version54);
        org.junit.Assert.assertNotNull(objectWriter57);
        org.junit.Assert.assertNotNull(featureArray58);
        org.junit.Assert.assertNotNull(objectMapper59);
        org.junit.Assert.assertNotNull(objectReader61);
        org.junit.Assert.assertNotNull(version66);
        org.junit.Assert.assertNotNull(objectWriter69);
        org.junit.Assert.assertNotNull(version74);
        org.junit.Assert.assertNotNull(objectWriter77);
        org.junit.Assert.assertNotNull(objectMapper79);
        org.junit.Assert.assertNotNull(objectMapper81);
        org.junit.Assert.assertTrue("'" + feature87 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature87.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory88);
        org.junit.Assert.assertNotNull(version89);
        org.junit.Assert.assertNotNull(featureClass90);
        org.junit.Assert.assertNotNull(featureItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(jsonSchema94);
        org.junit.Assert.assertNotNull(objectReader95);
        org.junit.Assert.assertNotNull(objJsonSerializer96);
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test441");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        com.fasterxml.jackson.annotation.JsonInclude.Include include11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper5.setSerializationInclusion(include11);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass13 = null;
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride14 = objectMapper12.configOverride(featureClass13);
        com.fasterxml.jackson.core.ObjectCodec objectCodec15 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec15, xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory18);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper20.writer(characterEscapes21);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray23 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper20.disable(featureArray23);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = objectMapper24.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper24.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = objectMapper24.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec28 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec28, xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature32 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = xmlFactory31.disable(feature32);
        com.fasterxml.jackson.core.Version version34 = xmlFactory33.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass35 = xmlFactory33.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer36 = serializerProvider27.getUnknownTypeSerializer(featureClass35);
        com.fasterxml.jackson.core.ObjectCodec objectCodec37 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory38 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory39 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec37, xMLInputFactory38, xMLOutputFactory39);
        com.fasterxml.jackson.core.Version version41 = xmlFactory40.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper42 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory40);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes43 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter44 = xmlMapper42.writer(characterEscapes43);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory45 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper46 = xmlMapper42.setNodeFactory(jsonNodeFactory45);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader48 = xmlMapper42.readerForUpdating((java.lang.Object) xmlFactory47);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass49 = xmlFactory47.getFormatWriteFeatureType();
        com.fasterxml.jackson.databind.JavaType javaType50 = serializerProvider27.constructType((java.lang.reflect.Type) featureClass49);
        com.fasterxml.jackson.core.ObjectCodec objectCodec51 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory52 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory53 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory54 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec51, xMLInputFactory52, xMLOutputFactory53);
        com.fasterxml.jackson.core.Version version55 = xmlFactory54.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper56 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory54);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes57 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter58 = xmlMapper56.writer(characterEscapes57);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider59 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter60 = xmlMapper56.writer(filterProvider59);
        com.fasterxml.jackson.databind.node.ArrayNode arrayNode61 = xmlMapper56.createArrayNode();
        com.fasterxml.jackson.core.ObjectCodec objectCodec62 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory63 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory64 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory65 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec62, xMLInputFactory63, xMLOutputFactory64);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature66 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory67 = xmlFactory65.disable(feature66);
        com.fasterxml.jackson.core.Version version68 = xmlFactory67.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper69 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory67);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass70 = xmlFactory67.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectReader objectReader71 = xmlMapper56.reader(featureClass70);
        com.fasterxml.jackson.databind.BeanProperty beanProperty72 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer73 = serializerProvider27.findValueSerializer(featureClass70, beanProperty72);
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory74 = serializerProvider27.getTypeFactory();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper75 = objectMapper12.setTypeFactory(typeFactory74);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter76 = objectMapper12.writer();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(mutableConfigOverride14);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(featureArray23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(serializerProvider27);
        org.junit.Assert.assertTrue("'" + feature32 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature32.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory33);
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertNotNull(featureClass35);
        org.junit.Assert.assertNotNull(objJsonSerializer36);
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(objectWriter44);
        org.junit.Assert.assertNotNull(objectMapper46);
        org.junit.Assert.assertNotNull(objectReader48);
        org.junit.Assert.assertNotNull(featureClass49);
        org.junit.Assert.assertNotNull(javaType50);
        org.junit.Assert.assertNotNull(version55);
        org.junit.Assert.assertNotNull(objectWriter58);
        org.junit.Assert.assertNotNull(objectWriter60);
        org.junit.Assert.assertNotNull(arrayNode61);
        org.junit.Assert.assertTrue("'" + feature66 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature66.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory67);
        org.junit.Assert.assertNotNull(version68);
        org.junit.Assert.assertNotNull(featureClass70);
        org.junit.Assert.assertNotNull(objectReader71);
        org.junit.Assert.assertNotNull(objJsonSerializer73);
        org.junit.Assert.assertNotNull(typeFactory74);
        org.junit.Assert.assertNotNull(objectMapper75);
        org.junit.Assert.assertNotNull(objectWriter76);
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test442");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        com.fasterxml.jackson.core.ObjectCodec objectCodec11 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory14 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec11, xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.core.Version version15 = xmlFactory14.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory14);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes17 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = xmlMapper16.writer(characterEscapes17);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper16.writer(filterProvider19);
        com.fasterxml.jackson.core.ObjectCodec objectCodec21 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory22 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec21, xMLInputFactory22, xMLOutputFactory23);
        com.fasterxml.jackson.core.Version version25 = xmlFactory24.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper26 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory24);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes27 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter28 = xmlMapper26.writer(characterEscapes27);
        com.fasterxml.jackson.core.ObjectCodec objectCodec29 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec29, xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.core.Version version33 = xmlFactory32.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper34 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory32);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes35 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = xmlMapper34.writer(characterEscapes35);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory37 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper34.setNodeFactory(jsonNodeFactory37);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider39 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper34.setFilterProvider(filterProvider39);
        com.fasterxml.jackson.core.JsonParser jsonParser41 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec42 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory45 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec42, xMLInputFactory43, xMLOutputFactory44);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature46 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = xmlFactory45.disable(feature46);
        com.fasterxml.jackson.core.Version version48 = xmlFactory47.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass49 = xmlFactory47.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor50 = objectMapper40.readValues(jsonParser41, featureClass49);
        boolean boolean51 = xmlMapper26.canSerialize(featureClass49);
        boolean boolean52 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass49);
        com.fasterxml.jackson.databind.JavaType javaType53 = xmlMapper16.constructType((java.lang.reflect.Type) featureClass49);
        java.util.List<com.fasterxml.jackson.databind.Module> moduleList54 = com.fasterxml.jackson.databind.ObjectMapper.findModules();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = xmlMapper16.registerModules((java.lang.Iterable<com.fasterxml.jackson.databind.Module>) moduleList54);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper56 = xmlMapper5.registerModules((java.lang.Iterable<com.fasterxml.jackson.databind.Module>) moduleList54);
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter57 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec58 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory59 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory60 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory61 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec58, xMLInputFactory59, xMLOutputFactory60);
        com.fasterxml.jackson.core.JsonFactory jsonFactory63 = xmlFactory61.setRootValueSeparator("");
        java.io.DataOutput dataOutput64 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator65 = jsonFactory63.createGenerator(dataOutput64);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator67 = jsonGenerator65.setHighestNonEscapedChar((-1));
        boolean boolean68 = jsonGenerator67.canWriteObjectId();
        int int69 = jsonGenerator67.getHighestEscapedChar();
        defaultXmlPrettyPrinter57.writeArrayValueSeparator(jsonGenerator67);
        com.fasterxml.jackson.core.ObjectCodec objectCodec71 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory72 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory73 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory74 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec71, xMLInputFactory72, xMLOutputFactory73);
        com.fasterxml.jackson.core.JsonFactory jsonFactory76 = xmlFactory74.setRootValueSeparator("");
        java.io.DataOutput dataOutput77 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator78 = jsonFactory76.createGenerator(dataOutput77);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator80 = jsonGenerator78.setHighestNonEscapedChar((-1));
        defaultXmlPrettyPrinter57.beforeObjectEntries(jsonGenerator80);
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter82 = defaultXmlPrettyPrinter57.createInstance();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter83 = objectMapper56.writer((com.fasterxml.jackson.core.PrettyPrinter) defaultXmlPrettyPrinter57);
        com.fasterxml.jackson.core.ObjectCodec objectCodec84 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory85 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory86 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory87 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec84, xMLInputFactory85, xMLOutputFactory86);
        com.fasterxml.jackson.core.JsonFactory jsonFactory89 = xmlFactory87.setRootValueSeparator("");
        java.io.DataOutput dataOutput90 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator91 = jsonFactory89.createGenerator(dataOutput90);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator93 = jsonGenerator91.setHighestNonEscapedChar((-1));
        com.fasterxml.jackson.core.FormatSchema formatSchema94 = null;
        boolean boolean95 = jsonGenerator91.canUseSchema(formatSchema94);
        defaultXmlPrettyPrinter57.writeEndArray(jsonGenerator91, (int) (byte) 100);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(objectWriter18);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(objectWriter28);
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertTrue("'" + feature46 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature46.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory47);
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(featureClass49);
        org.junit.Assert.assertNotNull(featureItor50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(javaType53);
        org.junit.Assert.assertNotNull(moduleList54);
        org.junit.Assert.assertNotNull(objectMapper55);
        org.junit.Assert.assertNotNull(objectMapper56);
        org.junit.Assert.assertNotNull(jsonFactory63);
        org.junit.Assert.assertNotNull(jsonGenerator65);
        org.junit.Assert.assertNotNull(jsonGenerator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(jsonFactory76);
        org.junit.Assert.assertNotNull(jsonGenerator78);
        org.junit.Assert.assertNotNull(jsonGenerator80);
        org.junit.Assert.assertNotNull(defaultXmlPrettyPrinter82);
        org.junit.Assert.assertNotNull(objectWriter83);
        org.junit.Assert.assertNotNull(jsonFactory89);
        org.junit.Assert.assertNotNull(jsonGenerator91);
        org.junit.Assert.assertNotNull(jsonGenerator93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test443");
        com.fasterxml.jackson.core.io.IOContext iOContext0 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.setNodeFactory(jsonNodeFactory11);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper8.setFilterProvider(filterProvider13);
        com.fasterxml.jackson.core.JsonParser jsonParser15 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature20 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = xmlFactory19.disable(feature20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass23 = xmlFactory21.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor24 = objectMapper14.readValues(jsonParser15, featureClass23);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector25 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair27 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector25, annotationIntrospector26);
        com.fasterxml.jackson.databind.introspect.Annotated annotated28 = null;
        java.lang.Boolean boolean29 = pair27.isOutputAsCData(annotated28);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector30 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair32 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector30, annotationIntrospector31);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector33 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair35 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector33, annotationIntrospector34);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair36 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair32, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair35);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair37 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair27, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair36);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper14.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) pair36);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter39 = objectMapper14.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.InjectableValues injectableValues40 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = objectMapper14.setInjectableValues(injectableValues40);
        java.util.Locale locale42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = objectMapper14.setLocale(locale42);
        javax.xml.stream.XMLStreamWriter xMLStreamWriter44 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator45 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator(iOContext0, (int) (byte) -1, (int) 'a', (com.fasterxml.jackson.core.ObjectCodec) objectMapper14, xMLStreamWriter44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertTrue("'" + feature20 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature20.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory21);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(featureClass23);
        org.junit.Assert.assertNotNull(featureItor24);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(pair37);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectWriter39);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(objectMapper43);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test444");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        int int2 = xmlSerializerProvider1.cachedSerializersCount();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test445");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.FormatSchema formatSchema6 = null;
        boolean boolean7 = xmlFactory3.canUseSchema(formatSchema6);
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = xmlFactory3.isEnabled(feature8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test446");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext23 = xmlMapper18.getDeserializationContext();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper18);
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory28);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(characterEscapes31);
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory34 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec33, xMLInputFactory34, xMLOutputFactory35);
        com.fasterxml.jackson.core.Version version37 = xmlFactory36.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper38 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory36);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes39 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter40 = xmlMapper38.writer(characterEscapes39);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper38.setNodeFactory(jsonNodeFactory41);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper38.setFilterProvider(filterProvider43);
        com.fasterxml.jackson.core.JsonParser jsonParser45 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature50 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = xmlFactory49.disable(feature50);
        com.fasterxml.jackson.core.Version version52 = xmlFactory51.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass53 = xmlFactory51.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor54 = objectMapper44.readValues(jsonParser45, featureClass53);
        boolean boolean55 = xmlMapper30.canSerialize(featureClass53);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference56 = null;
        boolean boolean57 = xmlMapper18.canSerialize(featureClass53, throwableAtomicReference56);
        com.fasterxml.jackson.databind.BeanProperty beanProperty59 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer60 = serializerProvider12.findTypedValueSerializer(featureClass53, false, beanProperty59);
        com.fasterxml.jackson.databind.BeanProperty beanProperty61 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer62 = serializerProvider12.findNullValueSerializer(beanProperty61);
        com.fasterxml.jackson.databind.introspect.Annotated annotated63 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo64 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdGenerator<?> wildcardObjectIdGenerator65 = serializerProvider12.objectIdGeneratorInstance(annotated63, objectIdInfo64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(deserializationContext23);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(objectWriter40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertTrue("'" + feature50 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature50.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory51);
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(featureClass53);
        org.junit.Assert.assertNotNull(featureItor54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer60);
        org.junit.Assert.assertNotNull(objJsonSerializer62);
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test447");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier xmlBeanDeserializerModifier2 = new com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier(" ");
        com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig3 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec4, xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.core.Version version8 = xmlFactory7.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper9.writer(characterEscapes10);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper9.writer(filterProvider12);
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec22, xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.core.Version version26 = xmlFactory25.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory25);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes28 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter29 = xmlMapper27.writer(characterEscapes28);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory30 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper27.setNodeFactory(jsonNodeFactory30);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider32 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = xmlMapper27.setFilterProvider(filterProvider32);
        com.fasterxml.jackson.core.JsonParser jsonParser34 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature39 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = xmlFactory38.disable(feature39);
        com.fasterxml.jackson.core.Version version41 = xmlFactory40.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass42 = xmlFactory40.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor43 = objectMapper33.readValues(jsonParser34, featureClass42);
        boolean boolean44 = xmlMapper19.canSerialize(featureClass42);
        boolean boolean45 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass42);
        com.fasterxml.jackson.databind.JavaType javaType46 = xmlMapper9.constructType((java.lang.reflect.Type) featureClass42);
        boolean boolean47 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType46);
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer48 = null;
        com.fasterxml.jackson.databind.KeyDeserializer keyDeserializer49 = xmlBeanDeserializerModifier2.modifyKeyDeserializer(deserializationConfig3, javaType46, keyDeserializer48);
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule50 = jacksonXmlModule0.setDeserializerModifier((com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) xmlBeanDeserializerModifier2);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType51 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray52 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType51 };
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule53 = simpleModule50.registerSubtypes(namedTypeArray52);
        com.fasterxml.jackson.databind.module.SimpleKeyDeserializers simpleKeyDeserializers54 = null;
        simpleModule53.setKeyDeserializers(simpleKeyDeserializers54);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(objectWriter11);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(objectWriter29);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertTrue("'" + feature39 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature39.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory40);
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(featureClass42);
        org.junit.Assert.assertNotNull(featureItor43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(javaType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(keyDeserializer49);
        org.junit.Assert.assertNotNull(simpleModule50);
        org.junit.Assert.assertNotNull(namedTypeArray52);
        org.junit.Assert.assertNotNull(simpleModule53);
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test448");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.JsonFactory jsonFactory5 = xmlFactory3.setRootValueSeparator("");
        java.io.DataOutput dataOutput6 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator7 = jsonFactory5.createGenerator(dataOutput6);
        boolean boolean8 = jsonGenerator7.canWriteTypeId();
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = jsonGenerator7.setCharacterEscapes(characterEscapes9);
        boolean boolean11 = jsonGenerator7.canWriteBinaryNatively();
        jsonGenerator7.writeOmittedField("hi!");
        com.fasterxml.jackson.core.ObjectCodec objectCodec15 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec15, xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory18);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper20.writer(characterEscapes21);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter23 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper20.setDefaultPrettyPrinter(prettyPrinter23);
        // The following exception was thrown during execution in test generation
        try {
            jsonGenerator7.writeObjectField("hi!", (java.lang.Object) prettyPrinter23);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonGenerationException; message: Can not write a field name, expecting a value");
        } catch (com.fasterxml.jackson.core.JsonGenerationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jsonFactory5);
        org.junit.Assert.assertNotNull(jsonGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(jsonGenerator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(objectMapper24);
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test449");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass13 = xmlFactory12.getFormatReadFeatureType();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(featureClass13);
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test450");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass8 = xmlFactory5.getFormatReadFeatureType();
        boolean boolean9 = xmlFactory5.requiresPropertyOrdering();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = xmlFactory5.copy();
        java.io.Reader reader11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser12 = xmlFactory10.createJsonParser(reader11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(featureClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(xmlFactory10);
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test451");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray13 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = objectMapper9.enable(featureArray13);
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec17, xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.core.Version version21 = xmlFactory20.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(characterEscapes23);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray25 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.disable(featureArray25);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = objectMapper26.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig28 = objectMapper26.getSerializationConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription29 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder30 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder31 = xmlBeanSerializerModifier16.updateBuilder(serializationConfig28, beanDescription29, beanSerializerBuilder30);
        com.fasterxml.jackson.databind.BeanDescription beanDescription32 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray33 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList34 = new java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList34, beanPropertyWriterArray33);
        java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList36 = xmlBeanSerializerModifier15.changeProperties(serializationConfig28, beanDescription32, (java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList34);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = objectMapper14.setMixInResolver((com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver) serializationConfig28);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(featureArray13);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(featureArray25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(serializationConfig28);
        org.junit.Assert.assertNull(beanSerializerBuilder31);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(beanPropertyWriterList36);
        org.junit.Assert.assertNotNull(objectMapper37);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test452");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.enableDefaultTypingAsProperty(defaultTyping10, "XML");
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy13 = objectMapper9.getPropertyNamingStrategy();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = objectMapper9.writer(filterProvider14);
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(characterEscapes22);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray24 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper21.disable(featureArray24);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = objectMapper25.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig27 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = objectMapper9.setConfig(serializationConfig27);
        com.fasterxml.jackson.core.FormatSchema formatSchema29 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader30 = objectMapper9.reader(formatSchema29);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNull(propertyNamingStrategy13);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(featureArray24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(serializationConfig27);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertNotNull(objectReader30);
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test453");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper5.findAndRegisterModules();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = xmlMapper5.isEnabled(serializationFeature11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test454");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature8 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper7.disable(feature8);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader11 = objectMapper9.reader(deserializationFeature10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertTrue("'" + feature8 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature8.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper9);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test455");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.readerForUpdating((java.lang.Object) xmlFactory10);
        java.lang.String str12 = xmlFactory10.getRootValueSeparator();
        com.fasterxml.jackson.core.format.InputAccessor inputAccessor13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.format.MatchStrength matchStrength14 = xmlFactory10.hasFormat(inputAccessor13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + " " + "'", str12, " ");
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test456");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor21 = objectMapper11.readValues(jsonParser12, featureClass20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.databind.introspect.Annotated annotated25 = null;
        java.lang.Boolean boolean26 = pair24.isOutputAsCData(annotated25);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector27 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair29 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector27, annotationIntrospector28);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector30 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair32 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector30, annotationIntrospector31);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair29, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair24, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper11.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.introspect.Annotated annotated36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = pair33.findDeserializationConverter(annotated36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(featureItor21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(pair34);
        org.junit.Assert.assertNotNull(objectMapper35);
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test457");
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter0 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec1 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory2 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory3 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory4 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec1, xMLInputFactory2, xMLOutputFactory3);
        com.fasterxml.jackson.core.JsonFactory jsonFactory6 = xmlFactory4.setRootValueSeparator("");
        java.io.DataOutput dataOutput7 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator8 = jsonFactory6.createGenerator(dataOutput7);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = jsonGenerator8.setHighestNonEscapedChar((-1));
        boolean boolean11 = jsonGenerator10.canWriteObjectId();
        int int12 = jsonGenerator10.getHighestEscapedChar();
        defaultXmlPrettyPrinter0.writeArrayValueSeparator(jsonGenerator10);
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.JsonFactory jsonFactory19 = xmlFactory17.setRootValueSeparator("");
        java.io.DataOutput dataOutput20 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator21 = jsonFactory19.createGenerator(dataOutput20);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator23 = jsonGenerator21.setHighestNonEscapedChar((-1));
        defaultXmlPrettyPrinter0.beforeObjectEntries(jsonGenerator23);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator25 = null;
        defaultXmlPrettyPrinter0.beforeArrayValues(jsonGenerator25);
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter27 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec28 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec28, xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.core.JsonFactory jsonFactory33 = xmlFactory31.setRootValueSeparator("");
        java.io.DataOutput dataOutput34 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator35 = jsonFactory33.createGenerator(dataOutput34);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator37 = jsonGenerator35.setHighestNonEscapedChar((-1));
        boolean boolean38 = jsonGenerator37.canWriteObjectId();
        int int39 = jsonGenerator37.getHighestEscapedChar();
        defaultXmlPrettyPrinter27.writeArrayValueSeparator(jsonGenerator37);
        defaultXmlPrettyPrinter0.writeObjectFieldValueSeparator(jsonGenerator37);
        com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter defaultXmlPrettyPrinter42 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter();
        com.fasterxml.jackson.core.ObjectCodec objectCodec43 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory44 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory45 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec43, xMLInputFactory44, xMLOutputFactory45);
        com.fasterxml.jackson.core.JsonFactory jsonFactory48 = xmlFactory46.setRootValueSeparator("");
        java.io.DataOutput dataOutput49 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator50 = jsonFactory48.createGenerator(dataOutput49);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator52 = jsonGenerator50.setHighestNonEscapedChar((-1));
        boolean boolean53 = jsonGenerator52.canWriteObjectId();
        int int54 = jsonGenerator52.getHighestEscapedChar();
        defaultXmlPrettyPrinter42.writeArrayValueSeparator(jsonGenerator52);
        defaultXmlPrettyPrinter0.writeArrayValueSeparator(jsonGenerator52);
        com.fasterxml.jackson.core.ObjectCodec objectCodec57 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory58 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory59 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory60 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec57, xMLInputFactory58, xMLOutputFactory59);
        com.fasterxml.jackson.core.Version version61 = xmlFactory60.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper62 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory60);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes63 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter64 = xmlMapper62.writer(characterEscapes63);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter65 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper66 = xmlMapper62.setDefaultPrettyPrinter(prettyPrinter65);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper67 = objectMapper66.enableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec68 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory69 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory70 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory71 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec68, xMLInputFactory69, xMLOutputFactory70);
        com.fasterxml.jackson.core.JsonFactory jsonFactory73 = xmlFactory71.setRootValueSeparator("");
        java.io.DataOutput dataOutput74 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator75 = jsonFactory73.createGenerator(dataOutput74);
        jsonGenerator75.writeOmittedField("");
        com.fasterxml.jackson.core.ObjectCodec objectCodec78 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory79 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory80 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory81 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec78, xMLInputFactory79, xMLOutputFactory80);
        com.fasterxml.jackson.core.Version version82 = xmlFactory81.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper83 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory81);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes84 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter85 = xmlMapper83.writer(characterEscapes84);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider86 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter87 = xmlMapper83.writer(filterProvider86);
        com.fasterxml.jackson.databind.node.ArrayNode arrayNode88 = xmlMapper83.createArrayNode();
        objectMapper67.writeTree(jsonGenerator75, (com.fasterxml.jackson.core.TreeNode) arrayNode88);
        defaultXmlPrettyPrinter0.writeArrayValueSeparator(jsonGenerator75);
        org.codehaus.stax2.XMLStreamWriter2 xMLStreamWriter2_91 = null;
        // The following exception was thrown during execution in test generation
        try {
            defaultXmlPrettyPrinter0.writeLeafElement(xMLStreamWriter2_91, "", "JSON", "com.fasterxml.jackson.dataformat.xml.JacksonXmlModule", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jsonFactory6);
        org.junit.Assert.assertNotNull(jsonGenerator8);
        org.junit.Assert.assertNotNull(jsonGenerator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(jsonFactory19);
        org.junit.Assert.assertNotNull(jsonGenerator21);
        org.junit.Assert.assertNotNull(jsonGenerator23);
        org.junit.Assert.assertNotNull(jsonFactory33);
        org.junit.Assert.assertNotNull(jsonGenerator35);
        org.junit.Assert.assertNotNull(jsonGenerator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(jsonFactory48);
        org.junit.Assert.assertNotNull(jsonGenerator50);
        org.junit.Assert.assertNotNull(jsonGenerator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(version61);
        org.junit.Assert.assertNotNull(objectWriter64);
        org.junit.Assert.assertNotNull(objectMapper66);
        org.junit.Assert.assertNotNull(objectMapper67);
        org.junit.Assert.assertNotNull(jsonFactory73);
        org.junit.Assert.assertNotNull(jsonGenerator75);
        org.junit.Assert.assertNotNull(version82);
        org.junit.Assert.assertNotNull(objectWriter85);
        org.junit.Assert.assertNotNull(objectWriter87);
        org.junit.Assert.assertNotNull(arrayNode88);
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test458");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext12 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = xmlMapper5.isEnabled(deserializationFeature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(deserializationContext12);
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test459");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper5.writer(filterProvider8);
        com.fasterxml.jackson.core.ObjectCodec objectCodec10 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec10, xMLInputFactory11, xMLOutputFactory12);
        com.fasterxml.jackson.core.Version version14 = xmlFactory13.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory13);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(characterEscapes16);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper15.writer(filterProvider18);
        com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory23 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec20, xMLInputFactory21, xMLOutputFactory22);
        com.fasterxml.jackson.core.Version version24 = xmlFactory23.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory23);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes26 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter27 = xmlMapper25.writer(characterEscapes26);
        com.fasterxml.jackson.core.ObjectCodec objectCodec28 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec28, xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.core.Version version32 = xmlFactory31.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper33 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory31);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper33.writer(characterEscapes34);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory36 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = xmlMapper33.setNodeFactory(jsonNodeFactory36);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider38 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper39 = xmlMapper33.setFilterProvider(filterProvider38);
        com.fasterxml.jackson.core.JsonParser jsonParser40 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec41 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory42 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory43 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory44 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec41, xMLInputFactory42, xMLOutputFactory43);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature45 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = xmlFactory44.disable(feature45);
        com.fasterxml.jackson.core.Version version47 = xmlFactory46.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass48 = xmlFactory46.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor49 = objectMapper39.readValues(jsonParser40, featureClass48);
        boolean boolean50 = xmlMapper25.canSerialize(featureClass48);
        boolean boolean51 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass48);
        com.fasterxml.jackson.databind.JavaType javaType52 = xmlMapper15.constructType((java.lang.reflect.Type) featureClass48);
        boolean boolean53 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType52);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter54 = xmlMapper5.writerFor(javaType52);
        boolean boolean55 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType52);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(objectWriter27);
        org.junit.Assert.assertNotNull(version32);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(objectMapper39);
        org.junit.Assert.assertTrue("'" + feature45 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature45.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory46);
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(featureClass48);
        org.junit.Assert.assertNotNull(featureItor49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(javaType52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objectWriter54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test460");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        java.text.DateFormat dateFormat11 = xmlMapper5.getDateFormat();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper5.disableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray21 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.disable(featureArray21);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = xmlMapper18.copy();
        java.text.DateFormat dateFormat24 = xmlMapper18.getDateFormat();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter25 = objectMapper12.writer(dateFormat24);
        com.fasterxml.jackson.core.JsonParser jsonParser26 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.node.ContainerNode<com.fasterxml.jackson.databind.node.ArrayNode> arrayNodeContainerNode27 = objectMapper12.readTree(jsonParser26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(dateFormat11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(featureArray21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(xmlMapper23);
        org.junit.Assert.assertNotNull(dateFormat24);
        org.junit.Assert.assertNotNull(objectWriter25);
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test461");
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory0 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper1 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory0);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature2 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_DECLARATION;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory4 = xmlFactory0.configure(feature2, true);
        boolean boolean5 = xmlFactory4.canHandleBinaryNatively();
        org.junit.Assert.assertTrue("'" + feature2 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_DECLARATION + "'", feature2.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_DECLARATION));
        org.junit.Assert.assertNotNull(xmlFactory4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test462");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        java.lang.String str6 = xmlFactory3.getRootValueSeparator();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass7 = xmlFactory3.getFormatReadFeatureType();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory3.getXMLInputFactory();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3, jacksonXmlModule9);
        com.fasterxml.jackson.core.Version version11 = xmlFactory3.version();
        java.io.Reader reader12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser13 = xmlFactory3.createParser(reader12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertNotNull(featureClass7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(version11);
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test463");
        com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder xmlTypeResolverBuilder0 = new com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder();
        com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder2 = xmlTypeResolverBuilder0.typeProperty("hi!");
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.Version version7 = xmlFactory6.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory6);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(characterEscapes9);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray11 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper8.disable(featureArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = xmlMapper8.copy();
        com.fasterxml.jackson.annotation.JsonInclude.Include include14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper8.setSerializationInclusion(include14);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector16 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector18 = jacksonXmlAnnotationIntrospector16.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec19 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory22 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec19, xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.core.Version version23 = xmlFactory22.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory22);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes25 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter26 = xmlMapper24.writer(characterEscapes25);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray27 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = xmlMapper24.disable(featureArray27);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = objectMapper28.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig30 = objectMapper28.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = objectMapper28.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec32 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec32, xMLInputFactory33, xMLOutputFactory34);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature36 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = xmlFactory35.disable(feature36);
        com.fasterxml.jackson.core.Version version38 = xmlFactory37.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass39 = xmlFactory37.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer40 = serializerProvider31.getUnknownTypeSerializer(featureClass39);
        java.util.TimeZone timeZone41 = serializerProvider31.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec42 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory45 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec42, xMLInputFactory43, xMLOutputFactory44);
        com.fasterxml.jackson.core.Version version46 = xmlFactory45.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper47 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory45);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes48 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter49 = xmlMapper47.writer(characterEscapes48);
        com.fasterxml.jackson.core.ObjectCodec objectCodec50 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory51 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory52 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory53 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec50, xMLInputFactory51, xMLOutputFactory52);
        com.fasterxml.jackson.core.Version version54 = xmlFactory53.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper55 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory53);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes56 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter57 = xmlMapper55.writer(characterEscapes56);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory58 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper59 = xmlMapper55.setNodeFactory(jsonNodeFactory58);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider60 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper61 = xmlMapper55.setFilterProvider(filterProvider60);
        com.fasterxml.jackson.core.JsonParser jsonParser62 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec63 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory64 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory65 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory66 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec63, xMLInputFactory64, xMLOutputFactory65);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature67 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory68 = xmlFactory66.disable(feature67);
        com.fasterxml.jackson.core.Version version69 = xmlFactory68.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass70 = xmlFactory68.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor71 = objectMapper61.readValues(jsonParser62, featureClass70);
        boolean boolean72 = xmlMapper47.canSerialize(featureClass70);
        com.fasterxml.jackson.databind.BeanProperty beanProperty73 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer74 = serializerProvider31.findKeySerializer(featureClass70, beanProperty73);
        java.lang.Enum[] enumArray76 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray77 = (java.lang.Enum<?>[]) enumArray76;
        java.lang.String[] strArray84 = new java.lang.String[] { "xmlInfo", " ", "<String>XML</String>", " ", "hi!", "xmlInfo" };
        java.lang.String[] strArray85 = jacksonXmlAnnotationIntrospector16.findEnumValues(featureClass70, (java.lang.Enum<?>[]) enumArray76, strArray84);
        java.lang.Class<?> wildcardClass86 = xmlMapper8.findMixInClassFor(featureClass70);
        com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder87 = stdTypeResolverBuilder2.defaultImpl(featureClass70);
        java.lang.Class<?> wildcardClass88 = stdTypeResolverBuilder2.getDefaultImpl();
        org.junit.Assert.assertNotNull(stdTypeResolverBuilder2);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(featureArray11);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(xmlMapper13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector18);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(objectWriter26);
        org.junit.Assert.assertNotNull(featureArray27);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(serializationConfig30);
        org.junit.Assert.assertNotNull(serializerProvider31);
        org.junit.Assert.assertTrue("'" + feature36 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature36.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory37);
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(featureClass39);
        org.junit.Assert.assertNotNull(objJsonSerializer40);
        org.junit.Assert.assertNotNull(timeZone41);
        org.junit.Assert.assertEquals(timeZone41.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(objectWriter49);
        org.junit.Assert.assertNotNull(version54);
        org.junit.Assert.assertNotNull(objectWriter57);
        org.junit.Assert.assertNotNull(objectMapper59);
        org.junit.Assert.assertNotNull(objectMapper61);
        org.junit.Assert.assertTrue("'" + feature67 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature67.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory68);
        org.junit.Assert.assertNotNull(version69);
        org.junit.Assert.assertNotNull(featureClass70);
        org.junit.Assert.assertNotNull(featureItor71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer74);
        org.junit.Assert.assertNotNull(enumArray76);
        org.junit.Assert.assertNotNull(wildcardEnumArray77);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNull(wildcardClass86);
        org.junit.Assert.assertNotNull(stdTypeResolverBuilder87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test464");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        java.lang.String str6 = xmlFactory3.getRootValueSeparator();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass7 = xmlFactory3.getFormatReadFeatureType();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory3.getXMLInputFactory();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3, jacksonXmlModule9);
        java.io.DataOutput dataOutput11 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlFactory3.createGenerator(dataOutput11);
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.Version version17 = xmlFactory16.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(characterEscapes19);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory21 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.setNodeFactory(jsonNodeFactory21);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper18.findAndRegisterModules();
        com.fasterxml.jackson.core.JsonFactory jsonFactory24 = xmlMapper18.getJsonFactory();
        java.lang.Object obj25 = null;
        byte[] byteArray26 = xmlMapper18.writeValueAsBytes(obj25);
        // The following exception was thrown during execution in test generation
        try {
            jsonGenerator12.writeBinary(byteArray26, (int) (short) 0, 57343);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No element/attribute name specified when trying to output element");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + " " + "'", str6, " ");
        org.junit.Assert.assertNotNull(featureClass7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonGenerator12);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(jsonFactory24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[60, 110, 117, 108, 108, 47, 62]");
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test465");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        boolean boolean13 = xmlFactory12.requiresPropertyOrdering();
        com.fasterxml.jackson.core.JsonParser.Feature feature14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory15 = xmlFactory12.disable(feature14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test466");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.enableDefaultTypingAsProperty(defaultTyping10, "XML");
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy13 = objectMapper9.getPropertyNamingStrategy();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = objectMapper9.writer(filterProvider14);
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(characterEscapes22);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray24 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper21.disable(featureArray24);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = objectMapper25.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig27 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = objectMapper9.setConfig(serializationConfig27);
        com.fasterxml.jackson.core.FormatSchema formatSchema29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = objectMapper9.writer(formatSchema29);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode32 = objectMapper9.readTree("XML");
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxUnexpectedCharException: Unexpected character 'X' (code 88) in prolog; expected '<'? at [row,col {unknown-source}]: [1,1]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNull(propertyNamingStrategy13);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(featureArray24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(serializationConfig27);
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertNotNull(objectWriter30);
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test467");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        java.lang.Boolean boolean4 = pair2.isOutputAsCData(annotated3);
        com.fasterxml.jackson.databind.introspect.Annotated annotated5 = null;
        java.lang.Boolean boolean6 = pair2.isOutputAsCData(annotated5);
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec7, xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.Version version11 = xmlFactory10.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory10);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = xmlMapper12.writer(characterEscapes13);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray15 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper12.disable(featureArray15);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext17 = xmlMapper12.getDeserializationContext();
        com.fasterxml.jackson.core.Version version18 = xmlMapper12.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper12.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper12.enableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec21 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory22 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec21, xMLInputFactory22, xMLOutputFactory23);
        com.fasterxml.jackson.core.Version version25 = xmlFactory24.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper26 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory24);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes27 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter28 = xmlMapper26.writer(characterEscapes27);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray29 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper30 = xmlMapper26.disable(featureArray29);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = objectMapper30.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig32 = objectMapper30.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = xmlMapper12.setMixInResolver((com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver) serializationConfig32);
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.core.Version version38 = xmlFactory37.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory37);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes40 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = xmlMapper39.writer(characterEscapes40);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray42 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper39.disable(featureArray42);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = objectMapper43.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig45 = objectMapper43.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider46 = objectMapper43.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec47 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec47, xMLInputFactory48, xMLOutputFactory49);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature51 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory52 = xmlFactory50.disable(feature51);
        com.fasterxml.jackson.core.Version version53 = xmlFactory52.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass54 = xmlFactory52.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer55 = serializerProvider46.getUnknownTypeSerializer(featureClass54);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter56 = objectMapper33.writerWithView(featureClass54);
        boolean boolean57 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass54);
        java.lang.Enum<?>[] wildcardEnumArray58 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "<null/>", "XML", "unknown", "unknown" };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray64 = pair2.findEnumValues(featureClass54, wildcardEnumArray58, strArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(objectWriter14);
        org.junit.Assert.assertNotNull(featureArray15);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(deserializationContext17);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(objectWriter28);
        org.junit.Assert.assertNotNull(featureArray29);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(serializationConfig32);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(objectWriter41);
        org.junit.Assert.assertNotNull(featureArray42);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(serializationConfig45);
        org.junit.Assert.assertNotNull(serializerProvider46);
        org.junit.Assert.assertTrue("'" + feature51 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature51.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory52);
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(featureClass54);
        org.junit.Assert.assertNotNull(objJsonSerializer55);
        org.junit.Assert.assertNotNull(objectWriter56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray63);
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test468");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean11 = xmlFactory9.isEnabled(feature10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlFactory3.enable(feature10);
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator13 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory14 = xmlFactory12.setInputDecorator(inputDecorator13);
        java.io.DataInput dataInput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser16 = xmlFactory12.createParser(dataInput15);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: InputData source not (yet?) support for this format (XML)");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(jsonFactory14);
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test469");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator3 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = xmlSerializerProvider5._rootNameLookup;
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec7, xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.Version version11 = xmlFactory10.version();
        com.fasterxml.jackson.core.io.OutputDecorator outputDecorator12 = xmlFactory10.getOutputDecorator();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass13 = xmlFactory10.getFormatReadFeatureType();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(characterEscapes22);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray24 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper21.disable(featureArray24);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = objectMapper25.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig27 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription28 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder29 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder30 = xmlBeanSerializerModifier15.updateBuilder(serializationConfig27, beanDescription28, beanSerializerBuilder29);
        com.fasterxml.jackson.databind.BeanDescription beanDescription31 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray32 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList33 = new java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList33, beanPropertyWriterArray32);
        java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList35 = xmlBeanSerializerModifier14.changeProperties(serializationConfig27, beanDescription31, (java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList33);
        com.fasterxml.jackson.core.ObjectCodec objectCodec36 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory37 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory38 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec36, xMLInputFactory37, xMLOutputFactory38);
        com.fasterxml.jackson.core.Version version40 = xmlFactory39.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper41 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory39);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes42 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter43 = xmlMapper41.writer(characterEscapes42);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray44 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper41.disable(featureArray44);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext46 = xmlMapper41.getDeserializationContext();
        com.fasterxml.jackson.core.Version version47 = xmlMapper41.version();
        com.fasterxml.jackson.databind.ObjectWriter objectWriter48 = xmlMapper41.writerWithDefaultPrettyPrinter();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper49 = xmlMapper41.enableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec50 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory51 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory52 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory53 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec50, xMLInputFactory51, xMLOutputFactory52);
        com.fasterxml.jackson.core.Version version54 = xmlFactory53.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper55 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory53);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes56 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter57 = xmlMapper55.writer(characterEscapes56);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray58 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper59 = xmlMapper55.disable(featureArray58);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper60 = objectMapper59.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig61 = objectMapper59.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper62 = xmlMapper41.setMixInResolver((com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver) serializationConfig61);
        com.fasterxml.jackson.databind.type.ArrayType arrayType63 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription64 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec65 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory66 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory67 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory68 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec65, xMLInputFactory66, xMLOutputFactory67);
        com.fasterxml.jackson.core.Version version69 = xmlFactory68.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper70 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory68);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes71 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter72 = xmlMapper70.writer(characterEscapes71);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray73 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper74 = xmlMapper70.disable(featureArray73);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper75 = objectMapper74.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig76 = objectMapper74.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider77 = objectMapper74.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec78 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory79 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory80 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory81 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec78, xMLInputFactory79, xMLOutputFactory80);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature82 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory83 = xmlFactory81.disable(feature82);
        com.fasterxml.jackson.core.Version version84 = xmlFactory83.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass85 = xmlFactory83.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer86 = serializerProvider77.getUnknownTypeSerializer(featureClass85);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer87 = xmlBeanSerializerModifier14.modifyArraySerializer(serializationConfig61, arrayType63, beanDescription64, objJsonSerializer86);
        javax.xml.namespace.QName qName88 = xmlRootNameLookup6.findRootName(featureClass13, (com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig61);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1._startRootArray(toXmlGenerator3, qName88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(xmlRootNameLookup6);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNull(outputDecorator12);
        org.junit.Assert.assertNotNull(featureClass13);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(featureArray24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(serializationConfig27);
        org.junit.Assert.assertNull(beanSerializerBuilder30);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(beanPropertyWriterList35);
        org.junit.Assert.assertNotNull(version40);
        org.junit.Assert.assertNotNull(objectWriter43);
        org.junit.Assert.assertNotNull(featureArray44);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertNotNull(deserializationContext46);
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(objectWriter48);
        org.junit.Assert.assertNotNull(objectMapper49);
        org.junit.Assert.assertNotNull(version54);
        org.junit.Assert.assertNotNull(objectWriter57);
        org.junit.Assert.assertNotNull(featureArray58);
        org.junit.Assert.assertNotNull(objectMapper59);
        org.junit.Assert.assertNotNull(objectMapper60);
        org.junit.Assert.assertNotNull(serializationConfig61);
        org.junit.Assert.assertNotNull(objectMapper62);
        org.junit.Assert.assertNotNull(version69);
        org.junit.Assert.assertNotNull(objectWriter72);
        org.junit.Assert.assertNotNull(featureArray73);
        org.junit.Assert.assertNotNull(objectMapper74);
        org.junit.Assert.assertNotNull(objectMapper75);
        org.junit.Assert.assertNotNull(serializationConfig76);
        org.junit.Assert.assertNotNull(serializerProvider77);
        org.junit.Assert.assertTrue("'" + feature82 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature82.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory83);
        org.junit.Assert.assertNotNull(version84);
        org.junit.Assert.assertNotNull(featureClass85);
        org.junit.Assert.assertNotNull(objJsonSerializer86);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer87);
        org.junit.Assert.assertNotNull(qName88);
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test470");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.JsonFactory.Feature feature6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = xmlFactory3.isEnabled(feature6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test471");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = xmlFactory5.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory10);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory10, xMLOutputFactory14);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory10);
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(xMLInputFactory10);
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test472");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray13 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = objectMapper9.enable(featureArray13);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping15 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = objectMapper9.enableDefaultTyping(defaultTyping15);
        com.fasterxml.jackson.core.Base64Variant base64Variant17 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader18 = objectMapper9.reader(base64Variant17);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(featureArray13);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(objectReader18);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test473");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature8 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper7.disable(feature8);
        com.fasterxml.jackson.core.ObjectCodec objectCodec10 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec10, xMLInputFactory11, xMLOutputFactory12);
        com.fasterxml.jackson.core.Version version14 = xmlFactory13.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory13);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(characterEscapes16);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setNodeFactory(jsonNodeFactory18);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider20 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper15.setFilterProvider(filterProvider20);
        com.fasterxml.jackson.core.JsonParser jsonParser22 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature27 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = xmlFactory26.disable(feature27);
        com.fasterxml.jackson.core.Version version29 = xmlFactory28.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass30 = xmlFactory28.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor31 = objectMapper21.readValues(jsonParser22, featureClass30);
        boolean boolean32 = objectMapper9.canSerialize(featureClass30);
        com.fasterxml.jackson.databind.MapperFeature[] mapperFeatureArray33 = new com.fasterxml.jackson.databind.MapperFeature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = objectMapper9.enable(mapperFeatureArray33);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver35 = objectMapper9.getSubtypeResolver();
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertTrue("'" + feature8 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature8.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertTrue("'" + feature27 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature27.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory28);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(featureClass30);
        org.junit.Assert.assertNotNull(featureItor31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(mapperFeatureArray33);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(subtypeResolver35);
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test474");
        com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer unwrappingXmlBeanSerializer0 = null;
        com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter objectIdWriter1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder xmlTypeResolverBuilder2 = new com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder();
        com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder4 = xmlTypeResolverBuilder2.typeProperty("hi!");
        com.fasterxml.jackson.core.ObjectCodec objectCodec5 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory6 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory7 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory8 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec5, xMLInputFactory6, xMLOutputFactory7);
        com.fasterxml.jackson.core.Version version9 = xmlFactory8.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory8);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper10.writer(characterEscapes11);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray13 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.disable(featureArray13);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper10.copy();
        com.fasterxml.jackson.annotation.JsonInclude.Include include16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper10.setSerializationInclusion(include16);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector18 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector20 = jacksonXmlAnnotationIntrospector18.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec21 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory22 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec21, xMLInputFactory22, xMLOutputFactory23);
        com.fasterxml.jackson.core.Version version25 = xmlFactory24.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper26 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory24);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes27 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter28 = xmlMapper26.writer(characterEscapes27);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray29 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper30 = xmlMapper26.disable(featureArray29);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = objectMapper30.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig32 = objectMapper30.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = objectMapper30.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec34 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec34, xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature38 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = xmlFactory37.disable(feature38);
        com.fasterxml.jackson.core.Version version40 = xmlFactory39.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass41 = xmlFactory39.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = serializerProvider33.getUnknownTypeSerializer(featureClass41);
        java.util.TimeZone timeZone43 = serializerProvider33.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.core.Version version48 = xmlFactory47.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper49 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory47);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes50 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter51 = xmlMapper49.writer(characterEscapes50);
        com.fasterxml.jackson.core.ObjectCodec objectCodec52 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory53 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory54 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory55 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec52, xMLInputFactory53, xMLOutputFactory54);
        com.fasterxml.jackson.core.Version version56 = xmlFactory55.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper57 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory55);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes58 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter59 = xmlMapper57.writer(characterEscapes58);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory60 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper61 = xmlMapper57.setNodeFactory(jsonNodeFactory60);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider62 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper63 = xmlMapper57.setFilterProvider(filterProvider62);
        com.fasterxml.jackson.core.JsonParser jsonParser64 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec65 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory66 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory67 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory68 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec65, xMLInputFactory66, xMLOutputFactory67);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature69 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory70 = xmlFactory68.disable(feature69);
        com.fasterxml.jackson.core.Version version71 = xmlFactory70.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass72 = xmlFactory70.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor73 = objectMapper63.readValues(jsonParser64, featureClass72);
        boolean boolean74 = xmlMapper49.canSerialize(featureClass72);
        com.fasterxml.jackson.databind.BeanProperty beanProperty75 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = serializerProvider33.findKeySerializer(featureClass72, beanProperty75);
        java.lang.Enum[] enumArray78 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray79 = (java.lang.Enum<?>[]) enumArray78;
        java.lang.String[] strArray86 = new java.lang.String[] { "xmlInfo", " ", "<String>XML</String>", " ", "hi!", "xmlInfo" };
        java.lang.String[] strArray87 = jacksonXmlAnnotationIntrospector18.findEnumValues(featureClass72, (java.lang.Enum<?>[]) enumArray78, strArray86);
        java.lang.Class<?> wildcardClass88 = xmlMapper10.findMixInClassFor(featureClass72);
        com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder89 = stdTypeResolverBuilder4.defaultImpl(featureClass72);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer unwrappingXmlBeanSerializer90 = new com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer(unwrappingXmlBeanSerializer0, objectIdWriter1, (java.lang.Object) featureClass72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(stdTypeResolverBuilder4);
        org.junit.Assert.assertNotNull(version9);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(featureArray13);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector20);
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(objectWriter28);
        org.junit.Assert.assertNotNull(featureArray29);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(serializationConfig32);
        org.junit.Assert.assertNotNull(serializerProvider33);
        org.junit.Assert.assertTrue("'" + feature38 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature38.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory39);
        org.junit.Assert.assertNotNull(version40);
        org.junit.Assert.assertNotNull(featureClass41);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(timeZone43);
        org.junit.Assert.assertEquals(timeZone43.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(objectWriter51);
        org.junit.Assert.assertNotNull(version56);
        org.junit.Assert.assertNotNull(objectWriter59);
        org.junit.Assert.assertNotNull(objectMapper61);
        org.junit.Assert.assertNotNull(objectMapper63);
        org.junit.Assert.assertTrue("'" + feature69 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature69.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory70);
        org.junit.Assert.assertNotNull(version71);
        org.junit.Assert.assertNotNull(featureClass72);
        org.junit.Assert.assertNotNull(featureItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
        org.junit.Assert.assertNotNull(enumArray78);
        org.junit.Assert.assertNotNull(wildcardEnumArray79);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNull(wildcardClass88);
        org.junit.Assert.assertNotNull(stdTypeResolverBuilder89);
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test475");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        java.lang.String str11 = objectMapper9.writeValueAsString((java.lang.Object) "XML");
        com.fasterxml.jackson.databind.InjectableValues injectableValues12 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader13 = objectMapper9.reader(injectableValues12);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = objectMapper9.isEnabled(deserializationFeature14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "<String>XML</String>" + "'", str11, "<String>XML</String>");
        org.junit.Assert.assertNotNull(objectReader13);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test476");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.readerForUpdating((java.lang.Object) xmlFactory10);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = xmlMapper5.copy();
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper12.disable(feature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
        org.junit.Assert.assertNotNull(xmlMapper12);
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test477");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        java.lang.Class<?> wildcardClass13 = serializerProvider12.getSerializationView();
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec14, xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.Version version18 = xmlFactory17.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory17);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(characterEscapes20);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory22 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.setNodeFactory(jsonNodeFactory22);
        java.lang.String str25 = objectMapper23.writeValueAsString((java.lang.Object) "XML");
        java.lang.Object obj26 = serializerProvider12.getAttribute((java.lang.Object) str25);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "<String>XML</String>" + "'", str25, "<String>XML</String>");
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test478");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector3 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair5 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector3, annotationIntrospector4);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair6 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair2, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair5);
        com.fasterxml.jackson.databind.introspect.Annotated annotated7 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec8 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec8, xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = xmlMapper13.writer(characterEscapes14);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray16 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper13.disable(featureArray16);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext18 = xmlMapper13.getDeserializationContext();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping19 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper13.enableDefaultTypingAsProperty(defaultTyping19, "");
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory22 = objectMapper21.getNodeFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.Version version27 = xmlFactory26.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory26);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(characterEscapes29);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray31 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper28.disable(featureArray31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = objectMapper32.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig34 = objectMapper32.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider35 = objectMapper32.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec36 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory37 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory38 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec36, xMLInputFactory37, xMLOutputFactory38);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature40 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = xmlFactory39.disable(feature40);
        com.fasterxml.jackson.core.Version version42 = xmlFactory41.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass43 = xmlFactory41.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer44 = serializerProvider35.getUnknownTypeSerializer(featureClass43);
        java.util.TimeZone timeZone45 = serializerProvider35.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec46, xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper51 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory49);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes52 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter53 = xmlMapper51.writer(characterEscapes52);
        com.fasterxml.jackson.core.ObjectCodec objectCodec54 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory55 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory56 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory57 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec54, xMLInputFactory55, xMLOutputFactory56);
        com.fasterxml.jackson.core.Version version58 = xmlFactory57.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper59 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory57);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes60 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter61 = xmlMapper59.writer(characterEscapes60);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory62 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper63 = xmlMapper59.setNodeFactory(jsonNodeFactory62);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider64 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = xmlMapper59.setFilterProvider(filterProvider64);
        com.fasterxml.jackson.core.JsonParser jsonParser66 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec67 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory68 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory69 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory70 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec67, xMLInputFactory68, xMLOutputFactory69);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature71 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = xmlFactory70.disable(feature71);
        com.fasterxml.jackson.core.Version version73 = xmlFactory72.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass74 = xmlFactory72.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor75 = objectMapper65.readValues(jsonParser66, featureClass74);
        boolean boolean76 = xmlMapper51.canSerialize(featureClass74);
        com.fasterxml.jackson.databind.JavaType javaType77 = serializerProvider35.constructType((java.lang.reflect.Type) featureClass74);
        boolean boolean78 = objectMapper21.canDeserialize(javaType77);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass79 = pair5.findDeserializationType(annotated7, javaType77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(featureArray16);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(deserializationContext18);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(jsonNodeFactory22);
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(featureArray31);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(serializationConfig34);
        org.junit.Assert.assertNotNull(serializerProvider35);
        org.junit.Assert.assertTrue("'" + feature40 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature40.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory41);
        org.junit.Assert.assertNotNull(version42);
        org.junit.Assert.assertNotNull(featureClass43);
        org.junit.Assert.assertNotNull(objJsonSerializer44);
        org.junit.Assert.assertNotNull(timeZone45);
        org.junit.Assert.assertEquals(timeZone45.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(objectWriter53);
        org.junit.Assert.assertNotNull(version58);
        org.junit.Assert.assertNotNull(objectWriter61);
        org.junit.Assert.assertNotNull(objectMapper63);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertTrue("'" + feature71 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature71.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory72);
        org.junit.Assert.assertNotNull(version73);
        org.junit.Assert.assertNotNull(featureClass74);
        org.junit.Assert.assertNotNull(featureItor75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(javaType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test479");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec3, xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature7 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean8 = xmlFactory6.isEnabled(feature7);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper2.enable(feature7);
        org.junit.Assert.assertTrue("'" + feature7 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature7.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objectMapper9);
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test480");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor21 = objectMapper11.readValues(jsonParser12, featureClass20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.databind.introspect.Annotated annotated25 = null;
        java.lang.Boolean boolean26 = pair24.isOutputAsCData(annotated25);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector27 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair29 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector27, annotationIntrospector28);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector30 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair32 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector30, annotationIntrospector31);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair29, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair24, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = objectMapper11.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) pair33);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = objectMapper35.clearProblemHandlers();
        javax.xml.stream.XMLInputFactory xMLInputFactory37 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory38 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory37, xMLOutputFactory38);
        com.fasterxml.jackson.annotation.JsonInclude.Value value40 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = xmlMapper39.setPropertyInclusion(value40);
        com.fasterxml.jackson.core.ObjectCodec objectCodec42 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory45 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec42, xMLInputFactory43, xMLOutputFactory44);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature46 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = xmlFactory45.disable(feature46);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule48 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper49 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory45, jacksonXmlModule48);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector50 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector52 = jacksonXmlAnnotationIntrospector50.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec53 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory56 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec53, xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.core.Version version57 = xmlFactory56.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper58 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory56);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes59 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter60 = xmlMapper58.writer(characterEscapes59);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory61 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper62 = xmlMapper58.setNodeFactory(jsonNodeFactory61);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory63 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader64 = xmlMapper58.readerForUpdating((java.lang.Object) xmlFactory63);
        boolean boolean65 = xmlFactory63.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass66 = xmlFactory63.getFormatReadFeatureType();
        boolean boolean67 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass66);
        java.lang.Enum[] enumArray69 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray70 = (java.lang.Enum<?>[]) enumArray69;
        java.lang.String[] strArray71 = null;
        java.lang.String[] strArray72 = jacksonAnnotationIntrospector52.findEnumValues(featureClass66, (java.lang.Enum<?>[]) enumArray69, strArray71);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector73 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector jacksonAnnotationIntrospector75 = jacksonXmlAnnotationIntrospector73.setConstructorPropertiesImpliesCreator(false);
        com.fasterxml.jackson.core.ObjectCodec objectCodec76 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory77 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory78 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory79 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec76, xMLInputFactory77, xMLOutputFactory78);
        com.fasterxml.jackson.core.Version version80 = xmlFactory79.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper81 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory79);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes82 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter83 = xmlMapper81.writer(characterEscapes82);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory84 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper85 = xmlMapper81.setNodeFactory(jsonNodeFactory84);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory86 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader87 = xmlMapper81.readerForUpdating((java.lang.Object) xmlFactory86);
        boolean boolean88 = xmlFactory86.canUseCharArrays();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass89 = xmlFactory86.getFormatReadFeatureType();
        boolean boolean90 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass89);
        java.lang.Enum[] enumArray92 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray93 = (java.lang.Enum<?>[]) enumArray92;
        java.lang.String[] strArray94 = null;
        java.lang.String[] strArray95 = jacksonAnnotationIntrospector75.findEnumValues(featureClass89, (java.lang.Enum<?>[]) enumArray92, strArray94);
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule96 = jacksonXmlModule48.setMixInAnnotation(featureClass66, featureClass89);
        com.fasterxml.jackson.databind.ObjectReader objectReader97 = xmlMapper39.readerWithView(featureClass89);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectWriter objectWriter98 = objectMapper36.writerWithType(featureClass89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(featureItor21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(pair34);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertTrue("'" + feature46 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature46.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory47);
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector52);
        org.junit.Assert.assertNotNull(version57);
        org.junit.Assert.assertNotNull(objectWriter60);
        org.junit.Assert.assertNotNull(objectMapper62);
        org.junit.Assert.assertNotNull(objectReader64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(featureClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(enumArray69);
        org.junit.Assert.assertNotNull(wildcardEnumArray70);
        org.junit.Assert.assertNull(strArray72);
        org.junit.Assert.assertNotNull(jacksonAnnotationIntrospector75);
        org.junit.Assert.assertNotNull(version80);
        org.junit.Assert.assertNotNull(objectWriter83);
        org.junit.Assert.assertNotNull(objectMapper85);
        org.junit.Assert.assertNotNull(objectReader87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(featureClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(enumArray92);
        org.junit.Assert.assertNotNull(wildcardEnumArray93);
        org.junit.Assert.assertNull(strArray95);
        org.junit.Assert.assertNotNull(simpleModule96);
        org.junit.Assert.assertNotNull(objectReader97);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test481");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean5 = xmlFactory3.isEnabled(feature4);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlFactory9.disable(feature10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature14 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper13.disable(feature14);
        boolean boolean16 = feature14.enabledByDefault();
        boolean boolean17 = xmlFactory3.isEnabled(feature14);
        com.fasterxml.jackson.core.JsonFactory jsonFactory19 = xmlFactory3.setRootValueSeparator(" ");
        com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory23 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec20, xMLInputFactory21, xMLOutputFactory22);
        com.fasterxml.jackson.core.Version version24 = xmlFactory23.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory23);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes26 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter27 = xmlMapper25.writer(characterEscapes26);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory28 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = xmlMapper25.setNodeFactory(jsonNodeFactory28);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper30 = xmlMapper25.findAndRegisterModules();
        com.fasterxml.jackson.core.JsonFactory jsonFactory31 = xmlMapper25.getJsonFactory();
        java.lang.Object obj32 = null;
        byte[] byteArray33 = xmlMapper25.writeValueAsBytes(obj32);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser36 = jsonFactory19.createJsonParser(byteArray33, (-1), 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + feature14 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature14.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(jsonFactory19);
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(objectWriter27);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(jsonFactory31);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[60, 110, 117, 108, 108, 47, 62]");
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test482");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = xmlMapper5.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory11 = xmlMapper5.getSerializerFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.Version version16 = xmlFactory15.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory15);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(characterEscapes18);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper17.writer(filterProvider20);
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec22, xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.core.Version version26 = xmlFactory25.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory25);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes28 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter29 = xmlMapper27.writer(characterEscapes28);
        com.fasterxml.jackson.core.ObjectCodec objectCodec30 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec30, xMLInputFactory31, xMLOutputFactory32);
        com.fasterxml.jackson.core.Version version34 = xmlFactory33.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper35 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory33);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes36 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter37 = xmlMapper35.writer(characterEscapes36);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory38 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper39 = xmlMapper35.setNodeFactory(jsonNodeFactory38);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider40 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = xmlMapper35.setFilterProvider(filterProvider40);
        com.fasterxml.jackson.core.JsonParser jsonParser42 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec43 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory44 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory45 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec43, xMLInputFactory44, xMLOutputFactory45);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature47 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = xmlFactory46.disable(feature47);
        com.fasterxml.jackson.core.Version version49 = xmlFactory48.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass50 = xmlFactory48.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor51 = objectMapper41.readValues(jsonParser42, featureClass50);
        boolean boolean52 = xmlMapper27.canSerialize(featureClass50);
        boolean boolean53 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass50);
        com.fasterxml.jackson.databind.JavaType javaType54 = xmlMapper17.constructType((java.lang.reflect.Type) featureClass50);
        boolean boolean55 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(javaType54);
        com.fasterxml.jackson.databind.ObjectReader objectReader56 = xmlMapper5.readerFor(javaType54);
        com.fasterxml.jackson.core.ObjectCodec objectCodec57 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory58 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory59 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory60 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec57, xMLInputFactory58, xMLOutputFactory59);
        com.fasterxml.jackson.core.Version version61 = xmlFactory60.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper62 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory60);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes63 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter64 = xmlMapper62.writer(characterEscapes63);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray65 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper66 = xmlMapper62.disable(featureArray65);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper67 = xmlMapper5.disable(featureArray65);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlMapper10);
        org.junit.Assert.assertNotNull(serializerFactory11);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(objectWriter29);
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertNotNull(objectWriter37);
        org.junit.Assert.assertNotNull(objectMapper39);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertTrue("'" + feature47 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature47.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory48);
        org.junit.Assert.assertNotNull(version49);
        org.junit.Assert.assertNotNull(featureClass50);
        org.junit.Assert.assertNotNull(featureItor51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(javaType54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objectReader56);
        org.junit.Assert.assertNotNull(version61);
        org.junit.Assert.assertNotNull(objectWriter64);
        org.junit.Assert.assertNotNull(featureArray65);
        org.junit.Assert.assertNotNull(objectMapper66);
        org.junit.Assert.assertNotNull(objectMapper67);
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test483");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = xmlFactory5.getCodec();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5, jacksonXmlModule8);
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = xmlFactory5.getXMLInputFactory();
        com.fasterxml.jackson.core.JsonFactory.Feature feature11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = xmlFactory5.isEnabled(feature11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNull(objectCodec7);
        org.junit.Assert.assertNotNull(xMLInputFactory10);
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test484");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper5.writer();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper5.enableDefaultTyping(defaultTyping11);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = xmlMapper5.isEnabled(serializationFeature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test485");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        java.lang.Boolean boolean4 = pair2.isOutputAsCData(annotated3);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector5 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair7 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector5, annotationIntrospector6);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector8 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair10 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector8, annotationIntrospector9);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair11 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair7, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair10);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair12 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance((com.fasterxml.jackson.databind.AnnotationIntrospector) pair2, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair10);
        com.fasterxml.jackson.databind.introspect.Annotated annotated13 = null;
        java.lang.Boolean boolean14 = pair2.isOutputAsCData(annotated13);
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(characterEscapes22);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray24 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper21.disable(featureArray24);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = objectMapper25.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig27 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription28 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder29 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder30 = xmlBeanSerializerModifier15.updateBuilder(serializationConfig27, beanDescription28, beanSerializerBuilder29);
        com.fasterxml.jackson.databind.introspect.AnnotatedMember annotatedMember31 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec32 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec32, xMLInputFactory33, xMLOutputFactory34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper37 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory35);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes38 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter39 = xmlMapper37.writer(characterEscapes38);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray40 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = xmlMapper37.disable(featureArray40);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = objectMapper41.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig43 = objectMapper41.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider44 = objectMapper41.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec45 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory46 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec45, xMLInputFactory46, xMLOutputFactory47);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature49 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = xmlFactory48.disable(feature49);
        com.fasterxml.jackson.core.Version version51 = xmlFactory50.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass52 = xmlFactory50.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = serializerProvider44.getUnknownTypeSerializer(featureClass52);
        com.fasterxml.jackson.core.ObjectCodec objectCodec54 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory55 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory56 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory57 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec54, xMLInputFactory55, xMLOutputFactory56);
        com.fasterxml.jackson.core.Version version58 = xmlFactory57.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper59 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory57);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes60 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter61 = xmlMapper59.writer(characterEscapes60);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory62 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper63 = xmlMapper59.setNodeFactory(jsonNodeFactory62);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory64 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader65 = xmlMapper59.readerForUpdating((java.lang.Object) xmlFactory64);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass66 = xmlFactory64.getFormatWriteFeatureType();
        com.fasterxml.jackson.databind.JavaType javaType67 = serializerProvider44.constructType((java.lang.reflect.Type) featureClass66);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?> wildcardTypeResolverBuilder68 = pair2.findPropertyTypeResolver((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig27, annotatedMember31, javaType67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(pair12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(featureArray24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(serializationConfig27);
        org.junit.Assert.assertNull(beanSerializerBuilder30);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(objectWriter39);
        org.junit.Assert.assertNotNull(featureArray40);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(serializationConfig43);
        org.junit.Assert.assertNotNull(serializerProvider44);
        org.junit.Assert.assertTrue("'" + feature49 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature49.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory50);
        org.junit.Assert.assertNotNull(version51);
        org.junit.Assert.assertNotNull(featureClass52);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(version58);
        org.junit.Assert.assertNotNull(objectWriter61);
        org.junit.Assert.assertNotNull(objectMapper63);
        org.junit.Assert.assertNotNull(objectReader65);
        org.junit.Assert.assertNotNull(featureClass66);
        org.junit.Assert.assertNotNull(javaType67);
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test486");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3, jacksonXmlModule4);
        byte[] byteArray10 = new byte[] { (byte) 0, (byte) -1, (byte) -1, (byte) -1 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser11 = xmlFactory3.createParser(byteArray10);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: java.io.CharConversionException: Invalid UTF-8 start byte 0xff (at char #2, byte #-1)");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, -1, -1, -1]");
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test487");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = xmlFactory3.disable(feature4);
        com.fasterxml.jackson.core.Version version6 = xmlFactory5.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory5);
        com.fasterxml.jackson.core.ObjectCodec objectCodec9 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec9, xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.core.Version version13 = xmlFactory12.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory12);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes15 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter16 = xmlMapper14.writer(characterEscapes15);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray17 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = xmlMapper14.disable(featureArray17);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory19 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader20 = xmlMapper14.reader(jsonNodeFactory19);
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21);
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory23 = xmlMapper22.getTypeFactory();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper14.setTypeFactory(typeFactory23);
        com.fasterxml.jackson.core.JsonParser jsonParser25 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec26, xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.core.Version version30 = xmlFactory29.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory29);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(characterEscapes32);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper31.writer(filterProvider34);
        com.fasterxml.jackson.core.ObjectCodec objectCodec36 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory37 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory38 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory39 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec36, xMLInputFactory37, xMLOutputFactory38);
        com.fasterxml.jackson.core.Version version40 = xmlFactory39.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper41 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory39);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes42 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter43 = xmlMapper41.writer(characterEscapes42);
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.core.Version version48 = xmlFactory47.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper49 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory47);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes50 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter51 = xmlMapper49.writer(characterEscapes50);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory52 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper53 = xmlMapper49.setNodeFactory(jsonNodeFactory52);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider54 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = xmlMapper49.setFilterProvider(filterProvider54);
        com.fasterxml.jackson.core.JsonParser jsonParser56 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec57 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory58 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory59 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory60 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec57, xMLInputFactory58, xMLOutputFactory59);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature61 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory62 = xmlFactory60.disable(feature61);
        com.fasterxml.jackson.core.Version version63 = xmlFactory62.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass64 = xmlFactory62.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor65 = objectMapper55.readValues(jsonParser56, featureClass64);
        boolean boolean66 = xmlMapper41.canSerialize(featureClass64);
        boolean boolean67 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass64);
        com.fasterxml.jackson.databind.JavaType javaType68 = xmlMapper31.constructType((java.lang.reflect.Type) featureClass64);
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.core.TreeCodec> treeCodecItor69 = xmlMapper14.readValues(jsonParser25, javaType68);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper70 = xmlMapper7.readValue("JSON", javaType68);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: com.ctc.wstx.exc.WstxUnexpectedCharException: Unexpected character 'J' (code 74) in prolog; expected '<'? at [row,col {unknown-source}]: [1,1]");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(version13);
        org.junit.Assert.assertNotNull(objectWriter16);
        org.junit.Assert.assertNotNull(featureArray17);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(objectReader20);
        org.junit.Assert.assertNotNull(typeFactory23);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertNotNull(version40);
        org.junit.Assert.assertNotNull(objectWriter43);
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(objectWriter51);
        org.junit.Assert.assertNotNull(objectMapper53);
        org.junit.Assert.assertNotNull(objectMapper55);
        org.junit.Assert.assertTrue("'" + feature61 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature61.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory62);
        org.junit.Assert.assertNotNull(version63);
        org.junit.Assert.assertNotNull(featureClass64);
        org.junit.Assert.assertNotNull(featureItor65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(javaType68);
        org.junit.Assert.assertNotNull(treeCodecItor69);
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test488");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory13 = serializerProvider12.getTypeFactory();
        boolean boolean15 = serializerProvider12.hasSerializationFeatures(2);
        java.util.TimeZone timeZone16 = serializerProvider12.getTimeZone();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertNotNull(typeFactory13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(timeZone16);
        org.junit.Assert.assertEquals(timeZone16.getDisplayName(), "Coordinated Universal Time");
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test489");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper5.findAndRegisterModules();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider11 = objectMapper10.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder xmlTypeResolverBuilder12 = new com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper10.setDefaultTyping((com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder>) xmlTypeResolverBuilder12);
        com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder15 = xmlTypeResolverBuilder12.typeIdVisibility(true);
        com.fasterxml.jackson.annotation.JsonTypeInfo.Id id16 = null;
        com.fasterxml.jackson.databind.jsontype.TypeIdResolver typeIdResolver17 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder18 = xmlTypeResolverBuilder12.init(id16, typeIdResolver17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: idType can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializerProvider11);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(stdTypeResolverBuilder15);
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test490");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean5 = xmlFactory3.isEnabled(feature4);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlFactory9.disable(feature10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        boolean boolean14 = xmlFactory11.requiresCustomCodec();
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = xmlFactory11.getXMLInputFactory();
        xmlFactory3.setXMLInputFactory(xMLInputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = xmlFactory3.isEnabled(feature17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(xMLInputFactory15);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test491");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper9.enableDefaultTypingAsProperty(defaultTyping10, "XML");
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy13 = objectMapper9.getPropertyNamingStrategy();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = objectMapper9.writer(filterProvider14);
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec16, xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.Version version20 = xmlFactory19.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory19);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(characterEscapes22);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray24 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper21.disable(featureArray24);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = objectMapper25.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig27 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = objectMapper9.setConfig(serializationConfig27);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature29 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader30 = objectMapper9.reader(deserializationFeature29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNull(propertyNamingStrategy13);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(featureArray24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(serializationConfig27);
        org.junit.Assert.assertNotNull(objectMapper28);
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test492");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider12 = objectMapper9.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec13, xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature17 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = xmlFactory16.disable(feature17);
        com.fasterxml.jackson.core.Version version19 = xmlFactory18.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider12.getUnknownTypeSerializer(featureClass20);
        java.util.TimeZone timeZone22 = serializerProvider12.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec23, xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.Version version27 = xmlFactory26.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory26);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(characterEscapes29);
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec31, xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.core.Version version35 = xmlFactory34.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory34);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes37 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter38 = xmlMapper36.writer(characterEscapes37);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory39 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper36.setNodeFactory(jsonNodeFactory39);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper36.setFilterProvider(filterProvider41);
        com.fasterxml.jackson.core.JsonParser jsonParser43 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec44 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec44, xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature48 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory49 = xmlFactory47.disable(feature48);
        com.fasterxml.jackson.core.Version version50 = xmlFactory49.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass51 = xmlFactory49.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor52 = objectMapper42.readValues(jsonParser43, featureClass51);
        boolean boolean53 = xmlMapper28.canSerialize(featureClass51);
        com.fasterxml.jackson.databind.JavaType javaType54 = serializerProvider12.constructType((java.lang.reflect.Type) featureClass51);
        com.fasterxml.jackson.core.ObjectCodec objectCodec55 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory56 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory57 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory58 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec55, xMLInputFactory56, xMLOutputFactory57);
        com.fasterxml.jackson.core.Version version59 = xmlFactory58.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper60 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory58);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes61 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter62 = xmlMapper60.writer(characterEscapes61);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray63 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper64 = xmlMapper60.disable(featureArray63);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper65 = objectMapper64.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig66 = objectMapper64.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = objectMapper64.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec68 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory69 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory70 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory71 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec68, xMLInputFactory69, xMLOutputFactory70);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature72 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory73 = xmlFactory71.disable(feature72);
        com.fasterxml.jackson.core.Version version74 = xmlFactory73.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass75 = xmlFactory73.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer76 = serializerProvider67.getUnknownTypeSerializer(featureClass75);
        java.util.TimeZone timeZone77 = serializerProvider67.getTimeZone();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer78 = serializerProvider67.getDefaultNullValueSerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty79 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer80 = serializerProvider12.handlePrimaryContextualization(objJsonSerializer78, beanProperty79);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer81 = serializerProvider12.getDefaultNullValueSerializer();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(serializerProvider12);
        org.junit.Assert.assertTrue("'" + feature17 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature17.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
        org.junit.Assert.assertNotNull(timeZone22);
        org.junit.Assert.assertEquals(timeZone22.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(objectWriter38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertTrue("'" + feature48 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature48.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory49);
        org.junit.Assert.assertNotNull(version50);
        org.junit.Assert.assertNotNull(featureClass51);
        org.junit.Assert.assertNotNull(featureItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(javaType54);
        org.junit.Assert.assertNotNull(version59);
        org.junit.Assert.assertNotNull(objectWriter62);
        org.junit.Assert.assertNotNull(featureArray63);
        org.junit.Assert.assertNotNull(objectMapper64);
        org.junit.Assert.assertNotNull(objectMapper65);
        org.junit.Assert.assertNotNull(serializationConfig66);
        org.junit.Assert.assertNotNull(serializerProvider67);
        org.junit.Assert.assertTrue("'" + feature72 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature72.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory73);
        org.junit.Assert.assertNotNull(version74);
        org.junit.Assert.assertNotNull(featureClass75);
        org.junit.Assert.assertNotNull(objJsonSerializer76);
        org.junit.Assert.assertNotNull(timeZone77);
        org.junit.Assert.assertEquals(timeZone77.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(objJsonSerializer78);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer80);
        org.junit.Assert.assertNotNull(objJsonSerializer81);
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test493");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper5.findAndRegisterModules();
        com.fasterxml.jackson.core.JsonFactory jsonFactory11 = xmlMapper5.getJsonFactory();
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec12, xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.Version version16 = xmlFactory15.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory15);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(characterEscapes18);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray20 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper17.disable(featureArray20);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = objectMapper21.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig23 = objectMapper21.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider24 = objectMapper21.getSerializerProviderInstance();
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec25, xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature29 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = xmlFactory28.disable(feature29);
        com.fasterxml.jackson.core.Version version31 = xmlFactory30.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass32 = xmlFactory30.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = serializerProvider24.getUnknownTypeSerializer(featureClass32);
        java.util.TimeZone timeZone34 = serializerProvider24.getTimeZone();
        com.fasterxml.jackson.core.ObjectCodec objectCodec35 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec35, xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.Version version39 = xmlFactory38.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory38);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper40.writer(characterEscapes41);
        com.fasterxml.jackson.core.ObjectCodec objectCodec43 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory44 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory45 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory46 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec43, xMLInputFactory44, xMLOutputFactory45);
        com.fasterxml.jackson.core.Version version47 = xmlFactory46.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper48 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory46);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes49 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter50 = xmlMapper48.writer(characterEscapes49);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory51 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper52 = xmlMapper48.setNodeFactory(jsonNodeFactory51);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider53 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper54 = xmlMapper48.setFilterProvider(filterProvider53);
        com.fasterxml.jackson.core.JsonParser jsonParser55 = null;
        com.fasterxml.jackson.core.ObjectCodec objectCodec56 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory57 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec56, xMLInputFactory57, xMLOutputFactory58);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature60 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory61 = xmlFactory59.disable(feature60);
        com.fasterxml.jackson.core.Version version62 = xmlFactory61.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass63 = xmlFactory61.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor64 = objectMapper54.readValues(jsonParser55, featureClass63);
        boolean boolean65 = xmlMapper40.canSerialize(featureClass63);
        com.fasterxml.jackson.databind.BeanProperty beanProperty66 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer67 = serializerProvider24.findKeySerializer(featureClass63, beanProperty66);
        com.fasterxml.jackson.databind.ObjectReader objectReader68 = xmlMapper5.readerWithView(featureClass63);
        com.fasterxml.jackson.core.ObjectCodec objectCodec69 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory70 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory71 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec69, xMLInputFactory70, xMLOutputFactory71);
        com.fasterxml.jackson.core.Version version73 = xmlFactory72.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper74 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory72);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes75 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter76 = xmlMapper74.writer(characterEscapes75);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray77 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper78 = xmlMapper74.disable(featureArray77);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper79 = objectMapper78.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig80 = objectMapper78.getSerializationConfig();
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider81 = objectMapper78.getSerializerProviderInstance();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray82 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper83 = objectMapper78.enable(featureArray82);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper84 = xmlMapper5.disable(featureArray82);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature85 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = objectMapper84.isEnabled(serializationFeature85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(jsonFactory11);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(featureArray20);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(serializationConfig23);
        org.junit.Assert.assertNotNull(serializerProvider24);
        org.junit.Assert.assertTrue("'" + feature29 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature29.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory30);
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(featureClass32);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertNotNull(timeZone34);
        org.junit.Assert.assertEquals(timeZone34.getDisplayName(), "Coordinated Universal Time");
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(objectWriter50);
        org.junit.Assert.assertNotNull(objectMapper52);
        org.junit.Assert.assertNotNull(objectMapper54);
        org.junit.Assert.assertTrue("'" + feature60 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature60.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory61);
        org.junit.Assert.assertNotNull(version62);
        org.junit.Assert.assertNotNull(featureClass63);
        org.junit.Assert.assertNotNull(featureItor64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objJsonSerializer67);
        org.junit.Assert.assertNotNull(objectReader68);
        org.junit.Assert.assertNotNull(version73);
        org.junit.Assert.assertNotNull(objectWriter76);
        org.junit.Assert.assertNotNull(featureArray77);
        org.junit.Assert.assertNotNull(objectMapper78);
        org.junit.Assert.assertNotNull(objectMapper79);
        org.junit.Assert.assertNotNull(serializationConfig80);
        org.junit.Assert.assertNotNull(serializerProvider81);
        org.junit.Assert.assertNotNull(featureArray82);
        org.junit.Assert.assertNotNull(objectMapper83);
        org.junit.Assert.assertNotNull(objectMapper84);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test494");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper5.setFilterProvider(filterProvider10);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext12 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper5.enable(feature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(deserializationContext12);
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test495");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature4 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean5 = xmlFactory3.isEnabled(feature4);
        com.fasterxml.jackson.core.ObjectCodec objectCodec6 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec6, xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlFactory9.disable(feature10);
        com.fasterxml.jackson.core.Version version12 = xmlFactory11.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory11);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature14 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper13.disable(feature14);
        boolean boolean16 = feature14.enabledByDefault();
        boolean boolean17 = xmlFactory3.isEnabled(feature14);
        com.fasterxml.jackson.core.ObjectCodec objectCodec18 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec18, xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.core.Version version22 = xmlFactory21.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory21);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes24 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter25 = xmlMapper23.writer(characterEscapes24);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray26 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper23.disable(featureArray26);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter28 = xmlMapper23.writer();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider29 = null;
        xmlMapper23.setFilters(filterProvider29);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper23.disableDefaultTyping();
        com.fasterxml.jackson.core.ObjectCodec objectCodec32 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec32, xMLInputFactory33, xMLOutputFactory34);
        com.fasterxml.jackson.core.Version version36 = xmlFactory35.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper37 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory35);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes38 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter39 = xmlMapper37.writer(characterEscapes38);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray40 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = xmlMapper37.disable(featureArray40);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext42 = xmlMapper37.getDeserializationContext();
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver43 = xmlMapper37.getSubtypeResolver();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = objectMapper31.setSubtypeResolver(subtypeResolver43);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = objectMapper44.enableDefaultTyping();
        com.fasterxml.jackson.core.JsonFactory jsonFactory46 = xmlFactory3.setCodec((com.fasterxml.jackson.core.ObjectCodec) objectMapper44);
        org.junit.Assert.assertTrue("'" + feature4 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature4.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(xmlFactory11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + feature14 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature14.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(objectWriter25);
        org.junit.Assert.assertNotNull(featureArray26);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(objectWriter28);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(objectWriter39);
        org.junit.Assert.assertNotNull(featureArray40);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(deserializationContext42);
        org.junit.Assert.assertNotNull(subtypeResolver43);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertNotNull(jsonFactory46);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test496");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper9.disableDefaultTyping();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig11 = objectMapper9.getSerializationConfig();
        com.fasterxml.jackson.databind.node.ArrayNode arrayNode12 = objectMapper9.createArrayNode();
        com.fasterxml.jackson.core.JsonParser.Feature feature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = objectMapper9.isEnabled(feature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationConfig11);
        org.junit.Assert.assertNotNull(arrayNode12);
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test497");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory10 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper5.reader(jsonNodeFactory10);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping12 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper5.enableDefaultTypingAsProperty(defaultTyping12, "<null/>");
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
        org.junit.Assert.assertNotNull(objectMapper14);
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test498");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.annotation.JsonInclude.Value value3 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper4 = xmlMapper2.setPropertyInclusion(value3);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper5 = xmlMapper2.findAndRegisterModules();
        com.fasterxml.jackson.databind.InjectableValues injectableValues6 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper7 = objectMapper5.setInjectableValues(injectableValues6);
        com.fasterxml.jackson.core.JsonFactory jsonFactory8 = objectMapper7.getJsonFactory();
        org.junit.Assert.assertNotNull(objectMapper4);
        org.junit.Assert.assertNotNull(objectMapper5);
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertNotNull(jsonFactory8);
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test499");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper5.writer();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider11 = null;
        xmlMapper5.setFilters(filterProvider11);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper5.disableDefaultTyping();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper5.setSerializerFactory(serializerFactory14);
        java.text.DateFormat dateFormat16 = xmlMapper5.getDateFormat();
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(dateFormat16);
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RandoopRegressionTest0.test500");
        com.fasterxml.jackson.core.ObjectCodec objectCodec0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(objectCodec0, xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.core.Version version4 = xmlFactory3.version();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory3);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(characterEscapes6);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray8 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.disable(featureArray8);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper5.getDeserializationContext();
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver11 = xmlMapper5.getSubtypeResolver();
        com.fasterxml.jackson.core.Base64Variant base64Variant12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper5.writer(base64Variant12);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(featureArray8);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(deserializationContext10);
        org.junit.Assert.assertNotNull(subtypeResolver11);
        org.junit.Assert.assertNotNull(objectWriter13);
    }
}

