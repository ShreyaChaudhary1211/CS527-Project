/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 02 00:44:05 GMT 2024
 */

package org.traccar.reports;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.bean.BeanAttributeList;
import org.dom4j.bean.BeanElement;
import org.dom4j.bean.BeanMetaData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;
import org.jxls.common.Context;
import org.jxls.transform.poi.PoiTransformer;
import org.traccar.model.Position;
import org.traccar.reports.model.TripReport;
import org.traccar.reports.model.TripsConfig;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EvosuiteReportUtils_ESTest extends EvosuiteReportUtils_ESTest_scaffolding {

  @Test(timeout = 400)
  public void test00()  throws Throwable  {
      Position position0 = new Position();
      Short short0 = new Short((short)1);
      position0.set("driverUniqueId", short0);
      Position position1 = new Position();
      // Undeclared exception!
      try { 
        ReportUtils.findDriver(position0, position1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.String
         //
         verifyException("org.traccar.model.ExtendedModel", e);
      }
  }

  @Test(timeout = 400)
  public void test01()  throws Throwable  {
      Position position0 = new Position();
      Position position1 = new Position();
      String string0 = ReportUtils.findDriver(position0, position1);
      assertNull(string0);
  }

  @Test(timeout = 400)
  public void test02()  throws Throwable  {
      Position position0 = new Position();
      Position position1 = new Position();
      double double0 = ReportUtils.calculateFuel(position0, position1);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 400)
  public void test03()  throws Throwable  {
      Position position0 = new Position();
      Position position1 = new Position();
      double double0 = ReportUtils.calculateDistance(position0, position1);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 400)
  public void test04()  throws Throwable  {
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      QName qName0 = new QName((String) null, namespace0);
      BeanElement beanElement0 = new BeanElement(qName0);
      Class<Boolean> class0 = Boolean.class;
      BeanMetaData beanMetaData0 = BeanMetaData.get(class0);
      BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0, beanMetaData0);
      LinkedList<Long> linkedList0 = new LinkedList<Long>(beanAttributeList0);
      // Undeclared exception!
      try { 
        ReportUtils.getDeviceList(linkedList0, (Collection<Long>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 400)
  public void test05()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("acceleration");
      Context context0 = PoiTransformer.createInitialContext();
      // Undeclared exception!
      try { 
        ReportUtils.processTemplateWithSheets((InputStream) null, mockPrintStream0, context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jxls.builder.xls.XlsCommentAreaBuilder", e);
      }
  }

  @Test(timeout = 400)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportUtils.getTimezone(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 400)
  public void test07()  throws Throwable  {
      BeanElement beanElement0 = new BeanElement("motion", "motion");
      BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0);
      // Undeclared exception!
      try { 
        ReportUtils.getDeviceList(beanAttributeList0, beanAttributeList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.dom4j.bean.BeanAttribute cannot be cast to java.lang.Long
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 400)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportUtils.findDriver((Position) null, (Position) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 400)
  public void test09()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      // Undeclared exception!
      try { 
        ReportUtils.checkPeriodLimit(mockDate0, mockDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 400)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportUtils.calculateFuel((Position) null, (Position) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 400)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportUtils.calculateDistance((Position) null, (Position) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 400)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportUtils.calculateDistance((Position) null, (Position) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 400)
  public void test13()  throws Throwable  {
      Position position0 = new Position();
      Float float0 = new Float(3169.2773F);
      position0.set("totalDistance", float0);
      double double0 = ReportUtils.calculateDistance(position0, position0, false);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 400)
  public void test14()  throws Throwable  {
      Position position0 = new Position();
      double double0 = ReportUtils.calculateDistance(position0, position0, true);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 400)
  public void test15()  throws Throwable  {
      Position position0 = new Position();
      Float float0 = new Float(3169.2773F);
      position0.set("odometer", float0);
      double double0 = ReportUtils.calculateDistance(position0, position0, true);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 400)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportUtils.getDistanceUnit((-3157L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 400)
  public void test17()  throws Throwable  {
      LinkedHashSet<Position> linkedHashSet0 = new LinkedHashSet<Position>();
      TripsConfig tripsConfig0 = new TripsConfig();
      Class<TripReport> class0 = TripReport.class;
      Collection<TripReport> collection0 = ReportUtils.detectTripsAndStops((Collection<Position>) linkedHashSet0, tripsConfig0, true, (-1459.2970952), class0);
      assertNotNull(collection0);
  }

  @Test(timeout = 400)
  public void test18()  throws Throwable  {
      LinkedHashSet<Position> linkedHashSet0 = new LinkedHashSet<Position>();
      Position position0 = new Position();
      linkedHashSet0.add(position0);
      TripsConfig tripsConfig0 = new TripsConfig();
      Class<TripReport> class0 = TripReport.class;
      // Undeclared exception!
      try { 
        ReportUtils.detectTripsAndStops((Collection<Position>) linkedHashSet0, tripsConfig0, true, 1220.4532556787542, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.events.MotionEventHandler", e);
      }
  }

  @Test(timeout = 400)
  public void test19()  throws Throwable  {
      Class<Object> class0 = Object.class;
      BeanMetaData beanMetaData0 = BeanMetaData.get(class0);
      Namespace namespace0 = new Namespace("_-V<3", "_-V<3");
      Object object0 = new Object();
      BeanElement beanElement0 = new BeanElement("_-V<3", namespace0, object0);
      BeanAttributeList beanAttributeList0 = beanMetaData0.createAttributeList(beanElement0);
      TripsConfig tripsConfig0 = new TripsConfig(0.0, 1073741824L, 32767L, 3052L, false);
      Class<TripReport> class1 = TripReport.class;
      // Undeclared exception!
      try { 
        ReportUtils.detectTripsAndStops((Collection<Position>) beanAttributeList0, tripsConfig0, true, (double) 3052L, class1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.dom4j.bean.BeanAttribute cannot be cast to org.traccar.model.Position
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 400)
  public void test20()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig(1.0, 2337L, 2337L, 2337L, false);
      BeanElement beanElement0 = new BeanElement("org.traccar.reports.ReportUtils", "flags");
      BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0);
      Class<TripReport> class0 = TripReport.class;
      // Undeclared exception!
      try { 
        ReportUtils.detectTripsAndStops((Collection<Position>) beanAttributeList0, tripsConfig0, true, (double) 2337L, class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.dom4j.bean.BeanAttribute cannot be cast to org.traccar.model.Position
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 400)
  public void test21()  throws Throwable  {
      LinkedHashSet<Position> linkedHashSet0 = new LinkedHashSet<Position>();
      TripsConfig tripsConfig0 = new TripsConfig(2151.3640629371, (-1974L), 2507L, (-1L), false);
      Position position0 = new Position();
      linkedHashSet0.add(position0);
      Class<TripReport> class0 = TripReport.class;
      // Undeclared exception!
      try { 
        ReportUtils.detectTripsAndStops((Collection<Position>) linkedHashSet0, tripsConfig0, false, (double) (-1974L), class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.events.MotionEventHandler", e);
      }
  }

  @Test(timeout = 400)
  public void test22()  throws Throwable  {
      String string0 = ReportUtils.findDriverName("footBrake");
      assertNull(string0);
  }

  @Test(timeout = 400)
  public void test23()  throws Throwable  {
      String string0 = ReportUtils.findDriverName((String) null);
      assertNull(string0);
  }

  @Test(timeout = 400)
  public void test24()  throws Throwable  {
      Position position0 = new Position();
      Float float0 = new Float((-2990.263F));
      position0.set("totalDistance", float0);
      Position position1 = new Position();
      double double0 = ReportUtils.calculateDistance(position0, position1, false);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 400)
  public void test25()  throws Throwable  {
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      Long long0 = new Long(1007L);
      linkedList0.add(long0);
      // Undeclared exception!
      try { 
        ReportUtils.getDeviceList(linkedList0, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 400)
  public void test26()  throws Throwable  {
      BeanElement beanElement0 = new BeanElement("video", (Object) null);
      BeanAttributeList beanAttributeList0 = new BeanAttributeList(beanElement0);
      Collection<Long> collection0 = ReportUtils.getDeviceList(beanAttributeList0, beanAttributeList0);
      assertNotNull(collection0);
  }

  @Test(timeout = 400)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportUtils.getSpeedUnit(7L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 400)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportUtils.initializeContext(811L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }
}
