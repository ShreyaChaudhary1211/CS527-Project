/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 04:05:37 GMT 2024
 */

package org.traccar.reports;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.Collection;
import java.util.Date;
import java.util.LinkedHashSet;
import org.apache.xmlbeans.XmlAnyURI;
import org.apache.xmlbeans.XmlSimpleList;
import org.apache.xmlbeans.impl.common.PrefixResolver;
import org.apache.xmlbeans.impl.common.ValidationContext;
import org.apache.xmlbeans.impl.schema.SchemaTypeImpl;
import org.apache.xmlbeans.impl.values.XmlListImpl;
import org.apache.xmlbeans.impl.values.XmlObjectBase;
import org.dom4j.Namespace;
import org.dom4j.bean.BeanAttributeList;
import org.dom4j.bean.BeanElement;
import org.dom4j.bean.BeanMetaData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;
import org.jxls.common.Context;
import org.jxls.transform.poi.PoiTransformer;
import org.traccar.model.Position;
import org.traccar.reports.model.TripReport;
import org.traccar.reports.model.TripsConfig;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EvosuiteReportUtils_ESTest extends EvosuiteReportUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Position position0 = new Position();
      LinkedHashSet<Position> linkedHashSet0 = new LinkedHashSet<Position>();
      linkedHashSet0.add(position0);
      TripsConfig tripsConfig0 = new TripsConfig(1.0, (-2033L), (-820L), (-2204L), true);
      Class<TripReport> class0 = TripReport.class;
      // Undeclared exception!
      try { 
        ReportUtils.detectTripsAndStops((Collection<Position>) linkedHashSet0, tripsConfig0, true, (double) (-820L), class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.events.MotionEventHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Position position0 = new Position();
      Short short0 = new Short((short) (-940));
      position0.set("driverUniqueId", short0);
      // Undeclared exception!
      try { 
        ReportUtils.findDriver(position0, (Position) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.String
         //
         verifyException("org.traccar.model.ExtendedModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Position position0 = new Position();
      // Undeclared exception!
      try { 
        ReportUtils.findDriver(position0, (Position) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Position position0 = new Position();
      Long long0 = new Long(0L);
      position0.set("totalDistance", long0);
      double double0 = ReportUtils.calculateDistance(position0, position0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Position position0 = new Position();
      Long long0 = new Long(20L);
      position0.set("odometer", long0);
      double double0 = ReportUtils.calculateDistance(position0, position0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SchemaTypeImpl schemaTypeImpl0 = (SchemaTypeImpl)XmlAnyURI.type;
      ValidationContext validationContext0 = XmlObjectBase._voorVc;
      XmlSimpleList xmlSimpleList0 = XmlListImpl.lex("Unable to recover future {}\n", schemaTypeImpl0, validationContext0, (PrefixResolver) null);
      XmlSimpleList xmlSimpleList1 = new XmlSimpleList(xmlSimpleList0);
      // Undeclared exception!
      try { 
        ReportUtils.getDeviceList(xmlSimpleList0, xmlSimpleList1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xmlbeans.impl.values.XmlAnyUriImpl cannot be cast to java.lang.Long
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedHashSet<Long> linkedHashSet0 = new LinkedHashSet<Long>();
      Long long0 = new Long(2147483639L);
      linkedHashSet0.add(long0);
      // Undeclared exception!
      try { 
        ReportUtils.getDeviceList(linkedHashSet0, linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Position position0 = new Position();
      Long long0 = new Long((-1637L));
      position0.set("totalDistance", long0);
      double double0 = ReportUtils.calculateDistance(position0, position0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Position position0 = new Position();
      position0.set("driverUniqueId", "driverUniqueId");
      String string0 = ReportUtils.findDriver(position0, position0);
      assertEquals("driverUniqueId", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Long long0 = new Long(2996L);
      Position position0 = new Position();
      position0.set("odometer", long0);
      Position position1 = new Position();
      double double0 = ReportUtils.calculateDistance(position1, position0);
      assertEquals(2996.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Context context0 = PoiTransformer.createInitialContext();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        ReportUtils.processTemplateWithSheets(pipedInputStream0, pipedOutputStream0, context0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jxls.builder.xls.XlsCommentAreaBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportUtils.getTimezone(1022L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportUtils.checkPeriodLimit((Date) null, (Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportUtils.calculateFuel((Position) null, (Position) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportUtils.calculateDistance((Position) null, (Position) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportUtils.calculateDistance((Position) null, (Position) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Position position0 = new Position();
      Boolean boolean0 = new Boolean(true);
      position0.set("odometer", boolean0);
      // Undeclared exception!
      try { 
        ReportUtils.calculateDistance(position0, position0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Boolean cannot be cast to java.lang.Number
         //
         verifyException("org.traccar.model.ExtendedModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportUtils.getDistanceUnit(2630L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedHashSet<Position> linkedHashSet0 = new LinkedHashSet<Position>();
      TripsConfig tripsConfig0 = new TripsConfig();
      Position position0 = new Position();
      linkedHashSet0.add(position0);
      MockDate mockDate0 = new MockDate(2145338309, 1669, 2145338309, 1669, 1669, 305);
      position0.setTime(mockDate0);
      Class<TripReport> class0 = TripReport.class;
      Collection<TripReport> collection0 = ReportUtils.detectTripsAndStops((Collection<Position>) linkedHashSet0, tripsConfig0, true, (double) 305, class0);
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedHashSet<Position> linkedHashSet0 = new LinkedHashSet<Position>();
      TripsConfig tripsConfig0 = new TripsConfig(1.7976931348623157E308, 20L, 0L, 0L, false);
      Class<TripReport> class0 = TripReport.class;
      Collection<TripReport> collection0 = ReportUtils.detectTripsAndStops((Collection<Position>) linkedHashSet0, tripsConfig0, false, (double) 20L, class0);
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedHashSet<Position> linkedHashSet0 = new LinkedHashSet<Position>();
      TripsConfig tripsConfig0 = new TripsConfig();
      Position position0 = new Position();
      linkedHashSet0.add(position0);
      position0.set("motion", "motion");
      Class<TripReport> class0 = TripReport.class;
      // Undeclared exception!
      try { 
        ReportUtils.detectTripsAndStops((Collection<Position>) linkedHashSet0, tripsConfig0, false, (double) 873L, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.events.MotionEventHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig(0.0, (-1464L), (-1464L), 873L, false);
      Class<TripReport> class0 = TripReport.class;
      BeanMetaData beanMetaData0 = new BeanMetaData(class0);
      Namespace namespace0 = Namespace.get("Enclosed Alphanumerics", "driverUniqueId");
      BeanElement beanElement0 = new BeanElement("driverUniqueId", namespace0, "driverUniqueId");
      BeanAttributeList beanAttributeList0 = beanMetaData0.createAttributeList(beanElement0);
      // Undeclared exception!
      try { 
        ReportUtils.detectTripsAndStops((Collection<Position>) beanAttributeList0, tripsConfig0, true, (double) 873L, class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.dom4j.bean.BeanAttribute cannot be cast to org.traccar.model.Position
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Position position0 = new Position();
      LinkedHashSet<Position> linkedHashSet0 = new LinkedHashSet<Position>();
      linkedHashSet0.add(position0);
      Class<TripReport> class0 = TripReport.class;
      TripsConfig tripsConfig0 = new TripsConfig(305, 5203L, (-1838L), 2000, true);
      // Undeclared exception!
      try { 
        ReportUtils.detectTripsAndStops((Collection<Position>) linkedHashSet0, tripsConfig0, false, (-2038.79303), class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.events.MotionEventHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedHashSet<Position> linkedHashSet0 = new LinkedHashSet<Position>();
      TripsConfig tripsConfig0 = new TripsConfig();
      Position position0 = new Position();
      linkedHashSet0.add(position0);
      MockDate mockDate0 = new MockDate(2145338309, 1669, 2145338309, 1669, 1669, 305);
      position0.setTime(mockDate0);
      Class<TripReport> class0 = TripReport.class;
      // Undeclared exception!
      try { 
        ReportUtils.detectTripsAndStops((Collection<Position>) linkedHashSet0, tripsConfig0, true, (-1443.7269), class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = ReportUtils.findDriverName("geofence");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = ReportUtils.findDriverName((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Position position0 = new Position();
      String string0 = ReportUtils.findDriver(position0, position0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Double double0 = new Double(873.0);
      Position position0 = new Position();
      position0.set("fuel", double0);
      Position position1 = new Position();
      double double1 = ReportUtils.calculateFuel(position0, position1);
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Position position0 = new Position();
      Double double0 = new Double((-1238.79882724232));
      position0.set("fuel", double0);
      double double1 = ReportUtils.calculateFuel(position0, position0);
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Position position0 = new Position();
      double double0 = ReportUtils.calculateFuel(position0, position0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Position position0 = new Position();
      Long long0 = new Long((-1L));
      position0.set("totalDistance", long0);
      Position position1 = new Position();
      double double0 = ReportUtils.calculateDistance(position0, position1, true);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Position position0 = new Position();
      position0.set("totalDistance", "odometer");
      // Undeclared exception!
      try { 
        ReportUtils.calculateDistance(position0, position0, true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.traccar.model.ExtendedModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Position position0 = new Position();
      Long long0 = new Long((-1637L));
      Position position1 = new Position();
      position1.set("odometer", long0);
      double double0 = ReportUtils.calculateDistance(position0, position1);
      assertEquals((-1637.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Long long0 = new Long((-1L));
      Position position0 = new Position();
      position0.set("odometer", long0);
      double double0 = ReportUtils.calculateDistance(position0, position0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Position position0 = new Position();
      double double0 = ReportUtils.calculateDistance(position0, position0, false);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedHashSet<Long> linkedHashSet0 = new LinkedHashSet<Long>();
      Collection<Long> collection0 = ReportUtils.getDeviceList(linkedHashSet0, linkedHashSet0);
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportUtils.getSpeedUnit(7L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReportUtils.initializeContext((-1464L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.reports.ReportUtils", e);
      }
  }
}
