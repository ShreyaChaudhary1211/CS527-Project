diff --git a/bears_new/Bears-197/Buggy-Version/cas-client-core/src/main/java/org/jasig/cas/client/util/CommonUtils.java b/bears_new/Bears-197/Fixed-Version/cas-client-core/src/main/java/org/jasig/cas/client/util/CommonUtils.java
index eb354be..5cff27f 100644
--- a/bears_new/Bears-197/Buggy-Version/cas-client-core/src/main/java/org/jasig/cas/client/util/CommonUtils.java
+++ b/bears_new/Bears-197/Fixed-Version/cas-client-core/src/main/java/org/jasig/cas/client/util/CommonUtils.java
@@ -257,7 +257,17 @@ public final class CommonUtils {
 
         return serverNames[0];
     }
-    
+
+    private static boolean serverNameContainsPort(final boolean containsScheme, final String serverName) {
+        if (!containsScheme && serverName.contains(":")) {
+            return true;
+        }
+
+        final int schemeIndex = serverName.indexOf(":");
+        final int portIndex = serverName.lastIndexOf(":");
+        return schemeIndex != portIndex;
+    }
+
     private static boolean requestIsOnStandardPort(final HttpServletRequest request) {
         final int serverPort = request.getServerPort();
         return serverPort == 80 || serverPort == 443;
@@ -315,18 +325,23 @@ public final class CommonUtils {
         originalRequestUrl.setParameters(request.getQueryString());
 
         final URIBuilder builder;
+
+        boolean containsScheme = true;
         if (!serverName.startsWith("https://") && !serverName.startsWith("http://")) {
-            String scheme = request.isSecure() ? "https://" : "http://";
-            builder = new URIBuilder(scheme + serverName, encode);
-        } else {
+            builder = new URIBuilder(encode);
+            builder.setScheme(request.isSecure() ? "https" : "http");
+            builder.setHost(serverName);
+            containsScheme = false;
+        }  else {
             builder = new URIBuilder(serverName, encode);
         }
 
-        if (builder.getPort() == -1 && !requestIsOnStandardPort(request)) {
+
+        if (!serverNameContainsPort(containsScheme, serverName) && !requestIsOnStandardPort(request)) {
             builder.setPort(request.getServerPort());
         }
 
-        builder.setEncodedPath(builder.getEncodedPath() + request.getRequestURI());
+        builder.setEncodedPath(request.getRequestURI());
 
         final List<String> serviceParameterNames = Arrays.asList(serviceParameterName.split(","));
         if (!serviceParameterNames.isEmpty() && !originalRequestUrl.getQueryParams().isEmpty()) {
diff --git a/bears_new/Bears-197/Buggy-Version/cas-client-core/src/main/java/org/jasig/cas/client/util/URIBuilder.java b/bears_new/Bears-197/Fixed-Version/cas-client-core/src/main/java/org/jasig/cas/client/util/URIBuilder.java
index 5e73dd1..f4c0b1a 100644
--- a/bears_new/Bears-197/Buggy-Version/cas-client-core/src/main/java/org/jasig/cas/client/util/URIBuilder.java
+++ b/bears_new/Bears-197/Fixed-Version/cas-client-core/src/main/java/org/jasig/cas/client/util/URIBuilder.java
@@ -523,10 +523,6 @@ public final class URIBuilder {
         return this.path;
     }
 
-    public String getEncodedPath() {
-        return this.encodedPath;
-    }
-
     public List<BasicNameValuePair> getQueryParams() {
         if (this.queryParams != null) {
             return new ArrayList<BasicNameValuePair>(this.queryParams);
