/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 03 04:01:48 GMT 2024
 */

package com.wrapper.spotify.requests.data.player;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonNull;
import com.google.gson.JsonObject;
import com.wrapper.spotify.IHttpManager;

import java.io.IOException;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EvosuiteStartResumeUsersPlaybackRequest_ESTest extends EvosuiteStartResumeUsersPlaybackRequest_ESTest_scaffolding {

  @Test(timeout = 50)
  public void test00()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("t4MgxEllECg");
      Integer integer0 = new Integer(1258);
      Integer.getInteger("+$Gm-tnK-i5tUH#", integer0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.position_ms(integer0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder2 = startResumeUsersPlaybackRequest_Builder1.device_id("text/xml");
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder3 = new StartResumeUsersPlaybackRequest.Builder("A -@@Nmog");
      StartResumeUsersPlaybackRequest startResumeUsersPlaybackRequest0 = startResumeUsersPlaybackRequest_Builder3.build();
      IHttpManager iHttpManager0 = startResumeUsersPlaybackRequest0.getHttpManager();
      Integer integer1 = new Integer(1258);
      startResumeUsersPlaybackRequest_Builder0.setDefaults(iHttpManager0, "com.wrapper.spotify.requests.data.player.StartResumeUsersPlaybackRequest", "com.wrapper.spotify.requests.data.player.StartResumeUsersPlaybackRequest", integer1);
      startResumeUsersPlaybackRequest_Builder1.position_ms(integer0);
      StartResumeUsersPlaybackRequest startResumeUsersPlaybackRequest1 = startResumeUsersPlaybackRequest_Builder2.build();
      try { 
        startResumeUsersPlaybackRequest1.execute();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // com.wrapper.spotify.requests.data.player.startresumeusersplaybackrequest protocol is not supported
         //
         verifyException("org.apache.http.impl.conn.DefaultHttpClientConnectionOperator", e);
      }
  }

  @Test(timeout = 50)
  public void test01()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("|");
      startResumeUsersPlaybackRequest_Builder0.setScheme("'X't~1");
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.device_id("'X't~1");
      JsonArray jsonArray0 = null;
      StartResumeUsersPlaybackRequest startResumeUsersPlaybackRequest0 = startResumeUsersPlaybackRequest_Builder1.build();
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 50)
  public void test02()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("DX+8tOx.i6MkeVz|Qnb");
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.device_id("DX+8tOx.i6MkeVz|Qnb");
      StartResumeUsersPlaybackRequest startResumeUsersPlaybackRequest0 = startResumeUsersPlaybackRequest_Builder0.build();
      assertNotNull(startResumeUsersPlaybackRequest0);
      
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder1.device_id((String) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test03()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder((String) null);
          JsonArray jsonArray0 = new JsonArray();
          startResumeUsersPlaybackRequest_Builder0.setPath("");
          StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.uris(jsonArray0);
          JsonNull jsonNull0 = JsonNull.INSTANCE;
          JsonNull jsonNull1 = jsonNull0.deepCopy();
          jsonArray0.remove((JsonElement) jsonNull1);
          StartResumeUsersPlaybackRequest startResumeUsersPlaybackRequest0 = startResumeUsersPlaybackRequest_Builder1.build();
          // Undeclared exception!
          try { 
            startResumeUsersPlaybackRequest0.execute();
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"200.42.42.0:443\" \"connect,resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1564)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1051)
             // java.net.Socket.connect(Socket.java:602)
             // org.apache.http.conn.ssl.SSLConnectionSocketFactory.connectSocket(SSLConnectionSocketFactory.java:339)
             // org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
             // org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:373)
             // org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:381)
             // org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237)
             // org.apache.http.impl.client.cache.CachingExec.callBackend(CachingExec.java:592)
             // org.apache.http.impl.client.cache.CachingExec.execute(CachingExec.java:269)
             // org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
             // org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
             // org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:111)
             // org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
             // org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
             // com.wrapper.spotify.SpotifyHttpManager.execute(SpotifyHttpManager.java:223)
             // com.wrapper.spotify.SpotifyHttpManager.put(SpotifyHttpManager.java:193)
             // com.wrapper.spotify.requests.AbstractRequest.putJson(AbstractRequest.java:145)
             // com.wrapper.spotify.requests.data.player.StartResumeUsersPlaybackRequest.execute(StartResumeUsersPlaybackRequest.java:37)
             // sun.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:750)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 50)
  public void test04()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("DX+8tOx.i6MkeVz|Qnb");
          StartResumeUsersPlaybackRequest startResumeUsersPlaybackRequest0 = startResumeUsersPlaybackRequest_Builder0.build();
          assertNotNull(startResumeUsersPlaybackRequest0);
          
          // Undeclared exception!
          try { 
            startResumeUsersPlaybackRequest0.execute();
            fail("Expecting exception: IllegalStateException");
          
          } catch(IllegalStateException e) {
             //
             // Entry [id:16][route:{s}->https://api.spotify.com:443][state:null] has not been leased from this pool
             //
             verifyException("org.apache.http.util.Asserts", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 50)
  public void test05()  throws Throwable  {
      String string0 = "";
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("");
      String string1 = "`7/m";
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.device_id("`7/m");
      String string2 = null;
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder1.context_uri((String) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test06()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder(" ]+UD+>:hg]9r+y)");
      JsonObject jsonObject0 = new JsonObject();
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.offset(jsonObject0);
      assertSame(startResumeUsersPlaybackRequest_Builder1, startResumeUsersPlaybackRequest_Builder0);
      
      startResumeUsersPlaybackRequest_Builder1.context_uri("@bdQ{Z%");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.context_uri((String) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test07()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("W6");
      JsonObject jsonObject0 = new JsonObject();
      jsonObject0.getAsJsonArray("W6");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.uris((JsonArray) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test08()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("ZS<");
      JsonObject jsonObject0 = new JsonObject();
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.offset(jsonObject0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder2 = startResumeUsersPlaybackRequest_Builder1.context_uri("\"M,EoDUz.]*BD;");
      JsonArray jsonArray0 = new JsonArray(1256);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder3 = startResumeUsersPlaybackRequest_Builder2.uris(jsonArray0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder4 = startResumeUsersPlaybackRequest_Builder3.device_id("iz(%7c*A?*u!l`lRe[");
      Integer integer0 = new Integer((-1003));
      jsonObject0.keySet();
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder4.position_ms(integer0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test09()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.device_id("");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test10()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("");
      Integer integer0 = new Integer(182);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.position_ms(integer0);
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder1.device_id("");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test11()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("/v1/me/player/play");
      JsonArray jsonArray0 = new JsonArray(534);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.uris(jsonArray0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder2 = startResumeUsersPlaybackRequest_Builder1.device_id("/v1/me/player/play");
      JsonObject jsonObject0 = new JsonObject();
      jsonObject0.getAsJsonObject("/v1/me/player/play");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder2.offset((JsonObject) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test12()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("DX+8tOx.i6MkeVz|Qnb");
      startResumeUsersPlaybackRequest_Builder0.build();
      JsonObject jsonObject0 = new JsonObject();
      JsonObject jsonObject1 = jsonObject0.deepCopy();
      jsonObject1.getAsJsonObject((String) null);
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.offset((JsonObject) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test13()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("");
      JsonObject jsonObject0 = new JsonObject();
      jsonObject0.getAsJsonArray("");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.context_uri("");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test14()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder((String) null);
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.context_uri("");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test15()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("device_id");
      startResumeUsersPlaybackRequest_Builder0.setQueryParameter("device_id", (Object) "device_id");
      startResumeUsersPlaybackRequest_Builder0.device_id("device_id");
      startResumeUsersPlaybackRequest_Builder0.setPath("device_id");
      Integer integer0 = new Integer(8);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.position_ms(integer0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder2 = new StartResumeUsersPlaybackRequest.Builder((String) null);
      JsonObject jsonObject0 = new JsonObject();
      jsonObject0.keySet();
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder3 = startResumeUsersPlaybackRequest_Builder1.offset(jsonObject0);
      startResumeUsersPlaybackRequest_Builder3.build();
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder2.device_id((String) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test16()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("position_ms");
      JsonObject jsonObject0 = new JsonObject();
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.offset(jsonObject0);
      JsonArray jsonArray0 = new JsonArray(0);
      JsonArray jsonArray1 = jsonArray0.deepCopy();
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder2 = startResumeUsersPlaybackRequest_Builder1.uris(jsonArray1);
      Integer integer0 = new Integer(0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder3 = startResumeUsersPlaybackRequest_Builder2.position_ms(integer0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder4 = startResumeUsersPlaybackRequest_Builder3.device_id("position_ms");
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder5 = startResumeUsersPlaybackRequest_Builder4.device_id("position_ms");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder5.position_ms((Integer) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test17()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("*\"");
      Integer integer0 = new Integer(8192);
      Integer integer1 = Integer.getInteger("*\"", integer0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.position_ms(integer1);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder2 = startResumeUsersPlaybackRequest_Builder1.device_id("_;56^$");
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder3 = startResumeUsersPlaybackRequest_Builder2.position_ms(integer1);
      assertSame(startResumeUsersPlaybackRequest_Builder1, startResumeUsersPlaybackRequest_Builder3);
  }

  @Test(timeout = 50)
  public void test18()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder(" ]+UD+>:hg]9r+y)");
      JsonObject jsonObject0 = new JsonObject();
      startResumeUsersPlaybackRequest_Builder0.offset(jsonObject0);
      JsonArray jsonArray0 = new JsonArray(0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.uris(jsonArray0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder2 = startResumeUsersPlaybackRequest_Builder1.uris(jsonArray0);
      assertSame(startResumeUsersPlaybackRequest_Builder0, startResumeUsersPlaybackRequest_Builder2);
  }

  @Test(timeout = 50)
  public void test19()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("DX+8tOx.i6MkeVz|Qnb");
      startResumeUsersPlaybackRequest_Builder0.build();
      Integer integer0 = new Integer((-2013265917));
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.position_ms(integer0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test20()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("|");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.uris((JsonArray) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test21()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder(" ]+UD+>:hg]9r+y)");
      JsonObject jsonObject0 = new JsonObject();
      startResumeUsersPlaybackRequest_Builder0.offset(jsonObject0);
      Integer.getInteger(" ]+UD+>:hg]9r+y)");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.position_ms((Integer) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test22()  throws Throwable  {
      String string0 = "?Uwd!sBw[UbY`Z";
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("?Uwd!sBw[UbY`Z");
      JsonObject jsonObject0 = new JsonObject();
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.offset(jsonObject0);
      JsonArray jsonArray0 = new JsonArray();
      JsonArray jsonArray1 = jsonArray0.deepCopy();
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder2 = startResumeUsersPlaybackRequest_Builder1.uris(jsonArray1);
      int int0 = 1;
      Integer integer0 = new Integer(1);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder3 = startResumeUsersPlaybackRequest_Builder2.position_ms(integer0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder4 = startResumeUsersPlaybackRequest_Builder3.device_id("?Uwd!sBw[UbY`Z");
      StartResumeUsersPlaybackRequest startResumeUsersPlaybackRequest0 = startResumeUsersPlaybackRequest_Builder4.build();
      startResumeUsersPlaybackRequest0.initializeBody();
      JsonArray jsonArray2 = new JsonArray();
      // Undeclared exception!
      try { 
        jsonArray2.getAsBigDecimal();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.JsonArray", e);
      }
  }
}
