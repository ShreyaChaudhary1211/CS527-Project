/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 31 22:24:45 GMT 2024
 */

package com.wrapper.spotify.requests.data.player;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.wrapper.spotify.requests.data.player.StartResumeUsersPlaybackRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StartResumeUsersPlaybackRequest_ESTest extends StartResumeUsersPlaybackRequest_ESTest_scaffolding {

  @Test(timeout = 50)
  public void test00()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("com.google.gson.internal.LazilyParsedNumber");
      Integer integer0 = new Integer(0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.position_ms(integer0);
      assertSame(startResumeUsersPlaybackRequest_Builder0, startResumeUsersPlaybackRequest_Builder1);
  }

  @Test(timeout = 50)
  public void test01()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("text/plain");
      Integer integer0 = new Integer((-1));
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.position_ms(integer0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test02()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("com.wrapper.spotify.exceptions.detailed.NotFoundException");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.position_ms((Integer) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test03()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("");
      Integer integer0 = new Integer(883);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.position_ms(integer0);
      assertSame(startResumeUsersPlaybackRequest_Builder0, startResumeUsersPlaybackRequest_Builder1);
  }

  @Test(timeout = 50)
  public void test04()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.offset((JsonObject) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test05()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("_v&`5O");
      JsonObject jsonObject0 = new JsonObject();
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.offset(jsonObject0);
      assertSame(startResumeUsersPlaybackRequest_Builder1, startResumeUsersPlaybackRequest_Builder0);
  }

  @Test(timeout = 50)
  public void test06()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("com.wrapper.spotify.exceptions.detailed.NotFoundException");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.uris((JsonArray) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test07()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("uris");
      JsonArray jsonArray0 = new JsonArray();
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.uris(jsonArray0);
      assertSame(startResumeUsersPlaybackRequest_Builder0, startResumeUsersPlaybackRequest_Builder1);
  }

  @Test(timeout = 50)
  public void test08()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.context_uri("");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test09()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("uris");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.context_uri((String) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test10()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("uris");
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.context_uri("uris");
      assertSame(startResumeUsersPlaybackRequest_Builder0, startResumeUsersPlaybackRequest_Builder1);
  }

  @Test(timeout = 50)
  public void test11()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.device_id("");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test12()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("I$2@<{");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.device_id((String) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 50)
  public void test13()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("_v&`5O");
      StartResumeUsersPlaybackRequest startResumeUsersPlaybackRequest0 = startResumeUsersPlaybackRequest_Builder0.build();
      assertNotNull(startResumeUsersPlaybackRequest0);
  }

  @Test(timeout = 50)
  public void test14()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("uris");
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.device_id("uris");
      assertSame(startResumeUsersPlaybackRequest_Builder1, startResumeUsersPlaybackRequest_Builder0);
  }
}
