/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 09 05:16:32 GMT 2024
 */

package org.traccar.protocol;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.SocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.NotYetConnectedException;
import java.nio.channels.SocketChannel;
import java.util.Date;
import java.util.concurrent.ForkJoinPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.jboss.netty.buffer.BigEndianHeapChannelBuffer;
import org.jboss.netty.buffer.ChannelBuffer;
import org.jboss.netty.buffer.HeapChannelBufferFactory;
import org.jboss.netty.buffer.TruncatedChannelBuffer;
import org.jboss.netty.channel.Channel;
import org.jboss.netty.channel.ChannelSink;
import org.jboss.netty.channel.DefaultChannelPipeline;
import org.jboss.netty.channel.local.DefaultLocalClientChannelFactory;
import org.jboss.netty.channel.local.DefaultLocalServerChannelFactory;
import org.jboss.netty.channel.local.LocalServerChannel;
import org.jboss.netty.channel.socket.nio.NioSocketChannel;
import org.jboss.netty.channel.socket.nio.NioWorker;
import org.joda.time.DateTimeZone;
import org.joda.time.LocalDate;
import org.joda.time.LocalDateTime;
import org.junit.runner.RunWith;
import org.traccar.model.Position;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EvosuiteEelinkProtocolDecoder_ESTest extends EvosuiteEelinkProtocolDecoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EelinkProtocol eelinkProtocol0 = new EelinkProtocol();
      EelinkProtocolDecoder eelinkProtocolDecoder0 = new EelinkProtocolDecoder(eelinkProtocol0);
      assertEquals(2, EelinkProtocolDecoder.MSG_GPS);
      
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(4);
      DefaultLocalServerChannelFactory defaultLocalServerChannelFactory0 = new DefaultLocalServerChannelFactory();
      SocketChannel.open();
      ForkJoinPool forkJoinPool0 = new ForkJoinPool(2);
      NioWorker nioWorker0 = new NioWorker(forkJoinPool0);
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1203);
      ChannelBuffer channelBuffer0 = heapChannelBufferFactory0.getBuffer(byteBuffer0);
      TruncatedChannelBuffer truncatedChannelBuffer0 = new TruncatedChannelBuffer(channelBuffer0, 30);
      try { 
        eelinkProtocolDecoder0.decode((Channel) null, mockInetSocketAddress0, truncatedChannelBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.BaseProtocolDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EelinkProtocol eelinkProtocol0 = new EelinkProtocol();
      EelinkProtocolDecoder eelinkProtocolDecoder0 = new EelinkProtocolDecoder(eelinkProtocol0);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(4);
      DefaultLocalServerChannelFactory defaultLocalServerChannelFactory0 = new DefaultLocalServerChannelFactory();
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      ChannelSink channelSink0 = defaultChannelPipeline0.getSink();
      SocketChannel socketChannel0 = SocketChannel.open();
      ForkJoinPool forkJoinPool0 = new ForkJoinPool(2);
      NioWorker nioWorker0 = new NioWorker(forkJoinPool0);
      NioSocketChannel nioSocketChannel0 = new NioSocketChannel((Channel) null, defaultLocalServerChannelFactory0, defaultChannelPipeline0, channelSink0, socketChannel0, nioWorker0);
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1203);
      ChannelBuffer channelBuffer0 = heapChannelBufferFactory0.getBuffer(byteBuffer0);
      TruncatedChannelBuffer truncatedChannelBuffer0 = new TruncatedChannelBuffer(channelBuffer0, 30);
      try { 
        eelinkProtocolDecoder0.decode(nioSocketChannel0, mockInetSocketAddress0, truncatedChannelBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.BaseProtocolDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EelinkProtocolDecoder eelinkProtocolDecoder0 = new EelinkProtocolDecoder((EelinkProtocol) null);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(31);
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(5);
      TruncatedChannelBuffer truncatedChannelBuffer0 = new TruncatedChannelBuffer(bigEndianHeapChannelBuffer0, 3);
      try { 
        eelinkProtocolDecoder0.decode((Channel) null, mockInetSocketAddress0, truncatedChannelBuffer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Not enough readable bytes - Need 2, maximum is 0
         //
         verifyException("org.jboss.netty.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EelinkProtocol eelinkProtocol0 = new EelinkProtocol();
      EelinkProtocolDecoder eelinkProtocolDecoder0 = new EelinkProtocolDecoder(eelinkProtocol0);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(6);
      try { 
        eelinkProtocolDecoder0.decode((Channel) null, mockInetSocketAddress0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.protocol.EelinkProtocolDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EelinkProtocolDecoder eelinkProtocolDecoder0 = new EelinkProtocolDecoder((EelinkProtocol) null);
      Position position0 = new Position();
      DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis((-1094));
      LocalDateTime localDateTime0 = LocalDateTime.now(dateTimeZone0);
      LocalDateTime localDateTime1 = localDateTime0.minusHours(1);
      LocalDateTime localDateTime2 = localDateTime1.plusYears((-3885));
      LocalDate localDate0 = localDateTime2.toLocalDate();
      Date date0 = localDate0.toDate();
      eelinkProtocolDecoder0.getLastLocation(position0, date0);
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      defaultChannelPipeline0.getChannel();
      SocketAddress socketAddress0 = null;
      try { 
        eelinkProtocolDecoder0.decode((Channel) null, (SocketAddress) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.protocol.EelinkProtocolDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EelinkProtocol eelinkProtocol0 = new EelinkProtocol();
      EelinkProtocolDecoder eelinkProtocolDecoder0 = new EelinkProtocolDecoder(eelinkProtocol0);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(6);
      try { 
        eelinkProtocolDecoder0.decode((Channel) null, mockInetSocketAddress0, eelinkProtocol0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.traccar.protocol.EelinkProtocol cannot be cast to org.jboss.netty.buffer.ChannelBuffer
         //
         verifyException("org.traccar.protocol.EelinkProtocolDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EelinkProtocol eelinkProtocol0 = new EelinkProtocol();
      EelinkProtocolDecoder eelinkProtocolDecoder0 = new EelinkProtocolDecoder(eelinkProtocol0);
      DefaultLocalServerChannelFactory defaultLocalServerChannelFactory0 = new DefaultLocalServerChannelFactory();
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      LocalServerChannel localServerChannel0 = defaultLocalServerChannelFactory0.newChannel(defaultChannelPipeline0);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress("", 2785);
      try { 
        eelinkProtocolDecoder0.decode(localServerChannel0, mockInetSocketAddress0, "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.jboss.netty.buffer.ChannelBuffer
         //
         verifyException("org.traccar.protocol.EelinkProtocolDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EelinkProtocol eelinkProtocol0 = new EelinkProtocol();
      eelinkProtocol0.getSupportedTextCommands();
      EelinkProtocolDecoder eelinkProtocolDecoder0 = new EelinkProtocolDecoder(eelinkProtocol0);
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      defaultChannelPipeline0.getChannel();
      DefaultLocalClientChannelFactory defaultLocalClientChannelFactory0 = new DefaultLocalClientChannelFactory();
      defaultChannelPipeline0.getSink();
      SocketChannel socketChannel0 = SocketChannel.open();
      // Undeclared exception!
      try { 
        socketChannel0.shutdownInput();
        fail("Expecting exception: NotYetConnectedException");
      
      } catch(NotYetConnectedException e) {
      }
  }
}
