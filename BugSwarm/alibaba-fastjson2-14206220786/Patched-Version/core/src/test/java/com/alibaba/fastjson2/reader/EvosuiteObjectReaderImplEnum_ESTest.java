/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 06:56:02 GMT 2024
 */

package com.alibaba.fastjson2.reader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson2.JSONObject;
import com.alibaba.fastjson2.JSONReader;
import com.alibaba.fastjson2.JSONWriter;
import com.alibaba.fastjson2.PropertyNamingStrategy;
import com.alibaba.fastjson2.schema.ObjectSchema;
import com.alibaba.fastjson2.writer.ObjectWriterProvider;
import java.io.InputStream;
import java.lang.annotation.Annotation;
import java.lang.reflect.Array;
import java.lang.reflect.Field;
import java.lang.reflect.Member;
import java.lang.reflect.Method;
import java.lang.reflect.Type;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class EvosuiteObjectReaderImplEnum_ESTest extends EvosuiteObjectReaderImplEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      long[] longArray0 = new long[3];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, (Enum[]) null, (Enum[]) null, longArray0);
      Class class1 = objectReaderImplEnum0.getObjectClass();
      assertFalse(class1.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<JSONWriter.Feature> class0 = JSONWriter.Feature.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 2);
      long[] longArray0 = new long[8];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      Class class1 = objectReaderImplEnum0.getObjectClass();
      assertFalse(class1.isSynthetic());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<Field> class0 = Field.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 3);
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.BrowserSecure;
      enumArray0[0] = (Enum<JSONWriter.Feature>) jSONWriter_Feature0;
      long[] longArray0 = new long[0];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      Enum enum0 = objectReaderImplEnum0.getEnumByOrdinal(0);
      assertEquals(JSONWriter.Feature.BrowserSecure, enum0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Field> class0 = Field.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 4);
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.UnquoteFieldName;
      enumArray0[0] = (Enum<JSONWriter.Feature>) jSONWriter_Feature0;
      long[] longArray0 = new long[1];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      Enum enum0 = objectReaderImplEnum0.getEnumByHashCode(0L);
      assertEquals(JSONWriter.Feature.UnquoteFieldName, enum0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<Byte> class0 = Byte.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 2);
      long[] longArray0 = new long[5];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      byte[] byteArray0 = new byte[6];
      JSONReader jSONReader0 = JSONReader.of(byteArray0);
      // Undeclared exception!
      try {
        objectReaderImplEnum0.readObject(jSONReader0, (Type) null, (Object) enumArray0[1], 3681L);
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // illegal character \u001A, offset 0, character \u001A, line 1, column 1, fastjson-version 2.0.34 \u0000\u0000\u0000\u0000\u0000\u0000
         //
         verifyException("com.alibaba.fastjson2.JSONReaderUTF8", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<Float> class0 = Float.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 8);
      long[] longArray0 = new long[2];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      byte[] byteArray0 = new byte[7];
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriter jSONWriter0 = JSONWriter.ofUTF8(jSONWriter_Context0);
      Charset charset0 = jSONWriter0.getCharset();
      JSONReader jSONReader0 = JSONReader.of(byteArray0, (-2), (int) (byte) (-1), charset0);
      Float float0 = new Float((double) (-2));
      // Undeclared exception!
      try {
        objectReaderImplEnum0.readObject(jSONReader0, (Type) null, (Object) float0, (long) (byte)69);
        fail("Expecting exception: StringIndexOutOfBoundsException");

      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<Short> class0 = Short.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 3);
      long[] longArray0 = new long[5];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      // Undeclared exception!
      try {
        objectReaderImplEnum0.readObject((JSONReader) null, (Type) null, (Object) null, 0L);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<InputStream> class0 = InputStream.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 5);
      long[] longArray0 = new long[6];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)70;
      JSONReader jSONReader0 = JSONReader.ofJSONB(byteArray0);
      // Undeclared exception!
      try {
        objectReaderImplEnum0.readObject(jSONReader0, (Type) null, (Object) null, (-1634L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");

      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.alibaba.fastjson2.JSONReaderJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<Field> class0 = Field.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 1);
      long[] longArray0 = new long[3];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-3);
      JSONReader.Feature[] jSONReader_FeatureArray0 = new JSONReader.Feature[0];
      JSONReader jSONReader0 = JSONReader.ofJSONB(byteArray0, jSONReader_FeatureArray0);
      // Undeclared exception!
      try {
        objectReaderImplEnum0.readJSONBObject(jSONReader0, class0, longArray0[1], 1185L);
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // No enum ordinal java.lang.reflect.Field.-3
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<Short> class0 = Short.class;
      long[] longArray0 = new long[9];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, (Enum[]) null, (Enum[]) null, longArray0);
      // Undeclared exception!
      try {
        objectReaderImplEnum0.readJSONBObject((JSONReader) null, class0, (Object) null, (-5076846148177416215L));
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      long[] longArray0 = new long[0];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, (Enum[]) null, (Enum[]) null, longArray0);
      // Undeclared exception!
      try {
        objectReaderImplEnum0.of(0);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      long[] longArray0 = new long[7];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, (Enum[]) null, (Enum[]) null, longArray0);
      // Undeclared exception!
      try {
        objectReaderImplEnum0.getEnumByOrdinal(3655);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<Float> class0 = Float.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 0);
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, (long[]) null);
      // Undeclared exception!
      try {
        objectReaderImplEnum0.getEnumByHashCode(0L);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 1);
      long[] longArray0 = new long[5];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      // Undeclared exception!
      try {
        objectReaderImplEnum0.getEnumByHashCode(0L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");

      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<Byte> class0 = Byte.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 2);
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, (long[]) null);
      // Undeclared exception!
      try {
        objectReaderImplEnum0.getEnum("");
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 4);
      long[] longArray0 = new long[4];
      ObjectReaderImplEnum objectReaderImplEnum0 = null;
      try {
        objectReaderImplEnum0 = new ObjectReaderImplEnum((Class) null, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<Field> class0 = Field.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 3);
      long[] longArray0 = new long[0];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      Enum enum0 = objectReaderImplEnum0.getEnumByOrdinal(0);
      assertNull(enum0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Class<Field> class0 = Field.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 8);
      long[] longArray0 = new long[5];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      // Undeclared exception!
      try {
        objectReaderImplEnum0.getEnumByOrdinal(1070);
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // No enum ordinal java.lang.reflect.Field.1070
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 6);
      long[] longArray0 = new long[0];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      // Undeclared exception!
      try {
        objectReaderImplEnum0.getEnumByOrdinal((-110));
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // No enum ordinal java.lang.Object.-110
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Class<String> class0 = String.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 1);
      long[] longArray0 = new long[7];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      Enum enum0 = objectReaderImplEnum0.getEnumByHashCode((-3033L));
      assertNull(enum0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Class<Object> class0 = Object.class;
      JSONObject jSONObject0 = new JSONObject();
      ObjectSchema objectSchema0 = new ObjectSchema(jSONObject0);
      FieldReaderAnySetter<Object> fieldReaderAnySetter0 = new FieldReaderAnySetter<Object>(class0, class0, (-1112), (-1L), "r!@b(,&Avy|)*]2SO~", objectSchema0, (Method) null);
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 5);
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.OptimizedForAscii;
      enumArray0[1] = (Enum<JSONWriter.Feature>) jSONWriter_Feature0;
      long[] longArray0 = new long[8];
      longArray0[1] = (-1L);
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      ObjectReaderProvider objectReaderProvider0 = new ObjectReaderProvider();
      JSONReader.Context jSONReader_Context0 = new JSONReader.Context(objectReaderProvider0, 1383L);
      JSONReader jSONReader0 = JSONReader.of("", (-1112), (-1112), jSONReader_Context0);
      Object object0 = objectReaderImplEnum0.readObject(jSONReader0, (Type) fieldReaderAnySetter0.fieldClass, (Object) jSONWriter_Feature0, (long) (-1112));
      assertSame(object0, jSONWriter_Feature0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Class<InputStream> class0 = InputStream.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 5);
      long[] longArray0 = new long[6];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      byte[] byteArray0 = new byte[1];
      JSONReader jSONReader0 = JSONReader.ofJSONB(byteArray0);
      objectReaderImplEnum0.readObject(jSONReader0, (Type) null, (Object) null, (-1634L));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Class<Long> class0 = Long.TYPE;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 2);
      long[] longArray0 = new long[0];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, (Enum[]) null, longArray0);
      Class class1 = objectReaderImplEnum0.getObjectClass();
      char[] charArray0 = new char[6];
      JSONReader jSONReader0 = JSONReader.of(charArray0);
      Long long0 = new Long(960L);
      Object object0 = objectReaderImplEnum0.readObject(jSONReader0, (Type) class1, (Object) long0, 960L);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Class<InputStream> class0 = InputStream.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 9);
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NotWriteRootClassName;
      enumArray0[0] = (Enum<JSONWriter.Feature>) jSONWriter_Feature0;
      long[] longArray0 = new long[2];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      byte[] byteArray0 = new byte[3];
      JSONReader jSONReader0 = JSONReader.ofJSONB(byteArray0);
      Float float0 = new Float((float) (byte) (-1));
      Object object0 = objectReaderImplEnum0.readJSONBObject(jSONReader0, class0, float0, 3601L);
      assertEquals(JSONWriter.Feature.NotWriteRootClassName, object0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 7);
      long[] longArray0 = new long[3];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)98;
      JSONReader.Feature[] jSONReader_FeatureArray0 = new JSONReader.Feature[0];
      JSONReader jSONReader0 = JSONReader.ofJSONB(byteArray0, jSONReader_FeatureArray0);
      // Undeclared exception!
      try {
        objectReaderImplEnum0.readJSONBObject(jSONReader0, (Type) null, class0, (-3016L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");

      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson2.JSONReaderJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Class<Float> class0 = Float.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 1);
      long[] longArray0 = new long[3];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      // Undeclared exception!
      try {
        objectReaderImplEnum0.of(0);
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // None enum ordinal or value 0
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      long[] longArray0 = new long[2];
      Class<Float> class0 = Float.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 5);
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NullAsDefaultValue;
      enumArray0[2] = (Enum<JSONWriter.Feature>) jSONWriter_Feature0;
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      Enum enum0 = objectReaderImplEnum0.of(2);
      assertEquals(JSONWriter.Feature.NullAsDefaultValue, enum0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Class<Float> class0 = Float.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 0);
      long[] longArray0 = new long[3];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      // Undeclared exception!
      try {
        objectReaderImplEnum0.of(0);
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // No enum ordinal java.lang.Float.0
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Class<InputStream> class0 = InputStream.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 9);
      long[] longArray0 = new long[2];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      byte[] byteArray0 = new byte[3];
      JSONReader jSONReader0 = JSONReader.ofJSONB(byteArray0);
      Float float0 = new Float((float) (byte) (-1));
      objectReaderImplEnum0.readJSONBObject(jSONReader0, class0, float0, 3601L);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Class<Float> class0 = Float.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 0);
      long[] longArray0 = new long[3];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      Enum enum0 = objectReaderImplEnum0.getEnum((String) null);
      assertNull(enum0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Class<Field> class0 = Field.class;
      Enum<JSONWriter.Feature>[] enumArray0 = (Enum<JSONWriter.Feature>[]) Array.newInstance(Enum.class, 4);
      long[] longArray0 = new long[1];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      JSONReader jSONReader0 = JSONReader.of((char[]) null, 915, (-2985));
      Object object0 = objectReaderImplEnum0.readJSONBObject(jSONReader0, (Type) null, enumArray0[3], (-2985));
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      long[] longArray0 = new long[0];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, (Enum[]) null, (Enum[]) null, longArray0);
      Enum enum0 = objectReaderImplEnum0.getEnumByHashCode(0L);
      assertNull(enum0);
  }
}
