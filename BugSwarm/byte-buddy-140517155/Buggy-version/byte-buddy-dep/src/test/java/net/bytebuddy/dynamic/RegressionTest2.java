import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        byte[] byteArray14 = explicit5.resolve();
        boolean boolean15 = explicit5.isResolved();
        byte[] byteArray16 = explicit5.resolve();
        boolean boolean17 = illegal1.equals((java.lang.Object) byteArray16);
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray27 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray24, classFileLocator28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray40 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray37, classFileLocator41);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp43 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str44 = noOp43.toString();
        java.lang.String str45 = noOp43.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray46 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator28, noOp30, classFileLocator42, noOp43 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound47 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray46);
        boolean boolean49 = compound47.equals((java.lang.Object) "hi!");
        boolean boolean51 = compound47.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound47.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str54 = compound47.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = compound47.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution58 = compound47.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        boolean boolean59 = illegal1.equals((java.lang.Object) resolution58);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray60 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertTrue("'" + noOp43 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp43.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(resolution56);
        org.junit.Assert.assertNotNull(resolution58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        boolean boolean12 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        java.lang.String str11 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("hi!");
        java.lang.String str14 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp4.locate(".class");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertNotNull(resolution18);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean11 = explicit9.isResolved();
        boolean boolean13 = explicit9.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit9.isResolved();
        java.lang.String str15 = explicit9.toString();
        byte[] byteArray16 = explicit9.resolve();
        java.lang.String str17 = explicit9.toString();
        boolean boolean18 = explicit5.equals((java.lang.Object) str17);
        byte[] byteArray19 = explicit5.resolve();
        byte[] byteArray25 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray25);
        byte[] byteArray27 = explicit26.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray29 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        byte[] byteArray33 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit34 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray33);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp35 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean36 = explicit34.equals((java.lang.Object) noOp35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = noOp35.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = noOp35.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str41 = noOp35.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = noOp35.locate("");
        boolean boolean44 = compound30.equals((java.lang.Object) noOp35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray27, (net.bytebuddy.dynamic.ClassFileLocator) noOp35);
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray55 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray55);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray52, classFileLocator56);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp58 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray68 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray68);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray65, classFileLocator69);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp71 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str72 = noOp71.toString();
        java.lang.String str73 = noOp71.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray74 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator56, noOp58, classFileLocator70, noOp71 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound75 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray74);
        boolean boolean77 = compound75.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator78 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray27, (net.bytebuddy.dynamic.ClassFileLocator) compound75);
        boolean boolean79 = explicit5.equals((java.lang.Object) classFileLocator78);
        byte[] byteArray80 = explicit5.resolve();
        byte[] byteArray81 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray82 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound83 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray82);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound84 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray82);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound85 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray82);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator86 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean87 = compound85.equals((java.lang.Object) classFileLocator86);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator88 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}", byteArray81, (net.bytebuddy.dynamic.ClassFileLocator) compound85);
        byte[] byteArray91 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit92 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray91);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp93 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean94 = explicit92.equals((java.lang.Object) noOp93);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution96 = noOp93.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution98 = noOp93.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        boolean boolean99 = compound85.equals((java.lang.Object) resolution98);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str17, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocatorArray29);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp35 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp35.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str41, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertTrue("'" + noOp58 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp58.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertNotNull(classFileLocator70);
        org.junit.Assert.assertTrue("'" + noOp71 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp71.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str72, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str73, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(classFileLocator78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[100]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray82);
        org.junit.Assert.assertNotNull(classFileLocator86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(classFileLocator88);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp93 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp93.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(resolution96);
        org.junit.Assert.assertNotNull(resolution98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7);
        java.lang.Class<?> wildcardClass14 = classFileLocator13.getClass();
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        boolean boolean12 = explicit3.isResolved();
        java.lang.String str13 = explicit3.toString();
        boolean boolean14 = explicit3.isResolved();
        byte[] byteArray15 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        boolean boolean12 = explicit5.isResolved();
        boolean boolean13 = explicit5.isResolved();
        byte[] byteArray14 = explicit5.resolve();
        boolean boolean15 = illegal1.equals((java.lang.Object) explicit5);
        byte[] byteArray16 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp44 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str45 = noOp44.toString();
        java.lang.String str46 = noOp44.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray47 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator29, noOp31, classFileLocator43, noOp44 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound48 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray47);
        boolean boolean50 = compound48.equals((java.lang.Object) "hi!");
        java.lang.String str51 = compound48.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray7, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        java.lang.String str54 = compound48.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = compound48.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + noOp44 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp44.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(resolution56);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray5 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray39 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator6, compound36 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound41 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound42 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        boolean boolean43 = illegal1.equals((java.lang.Object) compound42);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray44 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound45 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray44);
        java.lang.String str46 = compound45.toString();
        java.lang.String str47 = compound45.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution49 = compound45.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = compound45.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound45.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str54 = compound45.toString();
        boolean boolean55 = illegal1.equals((java.lang.Object) compound45);
        java.lang.String str56 = compound45.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(classFileLocatorArray39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classFileLocatorArray44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str46, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str47, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution49);
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str54, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str56, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str36 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution42);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}", byteArray10);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray27, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp33 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray43 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray40, classFileLocator44);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp46 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str47 = noOp46.toString();
        java.lang.String str48 = noOp46.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray49 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator31, noOp33, classFileLocator45, noOp46 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound50 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray10, (net.bytebuddy.dynamic.ClassFileLocator) compound50);
        java.lang.Class<?> wildcardClass52 = byteArray10.getClass();
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertTrue("'" + noOp33 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp33.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertTrue("'" + noOp46 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp46.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str47, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray49);
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str2 = illegal1.toString();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        java.lang.String str5 = illegal1.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean8 = illegal7.isResolved();
        java.lang.String str9 = illegal7.toString();
        boolean boolean10 = illegal7.isResolved();
        java.lang.String str11 = illegal7.toString();
        java.lang.String str12 = illegal7.toString();
        boolean boolean13 = illegal1.equals((java.lang.Object) illegal7);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str5, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str9, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str12, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str32 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str39 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray45 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray57 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray57);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray54, classFileLocator58);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp60 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray70 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray70);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator72 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray67, classFileLocator71);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp73 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str74 = noOp73.toString();
        java.lang.String str75 = noOp73.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray76 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator58, noOp60, classFileLocator72, noOp73 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound77 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray76);
        boolean boolean79 = compound77.equals((java.lang.Object) "hi!");
        java.lang.String str80 = compound77.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator81 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray45, (net.bytebuddy.dynamic.ClassFileLocator) compound77);
        boolean boolean82 = illegal41.equals((java.lang.Object) classFileLocator81);
        boolean boolean83 = compound29.equals((java.lang.Object) boolean82);
        java.lang.String str84 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertTrue("'" + noOp60 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp60.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertNotNull(classFileLocator72);
        org.junit.Assert.assertTrue("'" + noOp73 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp73.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str74, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str75, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(classFileLocator81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = compound9.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str12 = compound9.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str12, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        byte[] byteArray9 = explicit3.resolve();
        java.lang.Class<?> wildcardClass10 = explicit3.getClass();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str32 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str13 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp12);
        java.lang.String str17 = noOp12.toString();
        java.lang.String str18 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str21 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp12.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.Class<?> wildcardClass24 = resolution23.getClass();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str18, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str2 = illegal1.toString();
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        java.lang.String str11 = explicit6.toString();
        byte[] byteArray12 = explicit6.resolve();
        boolean boolean13 = illegal1.equals((java.lang.Object) byteArray12);
        boolean boolean14 = illegal1.isResolved();
        boolean boolean15 = illegal1.isResolved();
        boolean boolean16 = illegal1.isResolved();
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray22 = explicit21.resolve();
        boolean boolean23 = explicit21.isResolved();
        boolean boolean25 = explicit21.equals((java.lang.Object) 10L);
        java.lang.String str26 = explicit21.toString();
        java.lang.String str27 = explicit21.toString();
        byte[] byteArray28 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit29 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        byte[] byteArray34 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit35 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray34);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp36 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean37 = explicit35.equals((java.lang.Object) noOp36);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = noOp36.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = noOp36.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str42 = noOp36.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = noOp36.locate("");
        boolean boolean45 = compound31.equals((java.lang.Object) noOp36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray28, (net.bytebuddy.dynamic.ClassFileLocator) noOp36);
        java.lang.String str47 = noOp36.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution49 = noOp36.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}");
        boolean boolean50 = illegal1.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str26, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str27, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp36 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp36.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str47, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str32 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        byte[] byteArray38 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit39 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray38);
        byte[] byteArray40 = explicit39.resolve();
        java.lang.String str41 = explicit39.toString();
        boolean boolean42 = explicit39.isResolved();
        java.lang.String str43 = explicit39.toString();
        byte[] byteArray44 = explicit39.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray44);
        boolean boolean46 = compound29.equals((java.lang.Object) byteArray44);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray44);
        byte[] byteArray48 = explicit47.resolve();
        java.lang.String str49 = explicit47.toString();
        boolean boolean50 = explicit47.isResolved();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str41, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str43, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str49, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        java.lang.String str4 = illegal1.toString();
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean12 = explicit9.equals((java.lang.Object) (short) 0);
        byte[] byteArray13 = explicit9.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray22 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray22);
        boolean boolean25 = explicit24.isResolved();
        byte[] byteArray26 = explicit24.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray13, classFileLocator28);
        boolean boolean30 = illegal1.equals((java.lang.Object) classFileLocator28);
        java.lang.String str31 = illegal1.toString();
        boolean boolean32 = illegal1.isResolved();
        boolean boolean33 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str31, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray8);
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray37 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray34, classFileLocator38);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp40 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str41 = noOp40.toString();
        java.lang.String str42 = noOp40.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray43 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator25, noOp27, classFileLocator39, noOp40 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound44 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray43);
        boolean boolean46 = compound44.equals((java.lang.Object) "hi!");
        boolean boolean48 = compound44.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound44.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray56 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray56);
        byte[] byteArray60 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp62 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean63 = explicit61.equals((java.lang.Object) noOp62);
        java.lang.String str64 = noOp62.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray56, (net.bytebuddy.dynamic.ClassFileLocator) noOp62);
        boolean boolean66 = compound44.equals((java.lang.Object) byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution68 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution70 = compound44.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound44);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution73 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.Class<?> wildcardClass74 = compound44.getClass();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertTrue("'" + noOp40 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp40.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str41, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp62 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp62.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str64, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(resolution68);
        org.junit.Assert.assertNotNull(resolution70);
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertNotNull(resolution73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str2 = illegal1.toString();
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        byte[] byteArray18 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator19);
        boolean boolean21 = illegal1.equals((java.lang.Object) "");
        boolean boolean22 = illegal1.isResolved();
        java.lang.String str23 = illegal1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str23, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        java.lang.String str5 = explicit3.toString();
        boolean boolean6 = explicit3.isResolved();
        java.lang.String str7 = explicit3.toString();
        byte[] byteArray8 = explicit3.resolve();
        boolean boolean9 = explicit3.isResolved();
        byte[] byteArray10 = explicit3.resolve();
        boolean boolean11 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str5, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str7, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        byte[] byteArray12 = explicit3.resolve();
        boolean boolean13 = explicit3.isResolved();
        byte[] byteArray14 = explicit3.resolve();
        java.lang.Object obj15 = null;
        boolean boolean16 = explicit3.equals(obj15);
        byte[] byteArray17 = explicit3.resolve();
        byte[] byteArray18 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str21 = illegal20.toString();
        boolean boolean22 = explicit3.equals((java.lang.Object) illegal20);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str21, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        java.util.Map<java.lang.String, byte[]> strMap0 = null;
        net.bytebuddy.dynamic.ClassFileLocator.Simple simple1 = new net.bytebuddy.dynamic.ClassFileLocator.Simple(strMap0);
        // The following exception was thrown during execution in test generation
        try {
            net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution3 = simple1.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        java.lang.String str5 = illegal1.toString();
        java.lang.String str6 = illegal1.toString();
        boolean boolean7 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str5, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str6, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = classFileLocator11.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = illegal7.equals((java.lang.Object) resolution13);
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        boolean boolean16 = illegal1.isResolved();
        java.lang.String str17 = illegal1.toString();
        boolean boolean18 = illegal1.isResolved();
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        boolean boolean25 = explicit24.isResolved();
        byte[] byteArray26 = explicit24.resolve();
        boolean boolean27 = illegal1.equals((java.lang.Object) byteArray26);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray28 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str17, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        boolean boolean11 = explicit4.isResolved();
        boolean boolean12 = explicit4.isResolved();
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray23, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray39 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray36, classFileLocator40);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp42 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str43 = noOp42.toString();
        java.lang.String str44 = noOp42.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray45 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator27, noOp29, classFileLocator41, noOp42 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound46 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray45);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution48 = compound46.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray49 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator16, compound46 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound50 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray49);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound51 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray49);
        boolean boolean52 = explicit4.equals((java.lang.Object) classFileLocatorArray49);
        byte[] byteArray53 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}", byteArray53);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertTrue("'" + noOp42 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp42.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray45);
        org.junit.Assert.assertNotNull(resolution48);
        org.junit.Assert.assertNotNull(classFileLocatorArray49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator54);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        byte[] byteArray6 = explicit3.resolve();
        java.lang.String str7 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str7, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray5 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray5);
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp11 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean12 = explicit10.equals((java.lang.Object) noOp11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp11.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp11.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str17 = noOp11.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp11.locate("");
        boolean boolean20 = compound6.equals((java.lang.Object) noOp11);
        boolean boolean21 = illegal1.equals((java.lang.Object) compound6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = compound6.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        byte[] byteArray27 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit29 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray27);
        byte[] byteArray34 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit35 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray34);
        byte[] byteArray36 = explicit35.resolve();
        java.lang.String str37 = explicit35.toString();
        boolean boolean38 = explicit35.isResolved();
        java.lang.String str39 = explicit35.toString();
        byte[] byteArray40 = explicit35.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray42 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound43 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray42);
        byte[] byteArray46 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp48 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean49 = explicit47.equals((java.lang.Object) noOp48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = noOp48.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = noOp48.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str54 = noOp48.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = noOp48.locate("");
        boolean boolean57 = compound43.equals((java.lang.Object) noOp48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray40, (net.bytebuddy.dynamic.ClassFileLocator) noOp48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution60 = noOp48.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution62 = noOp48.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray27, (net.bytebuddy.dynamic.ClassFileLocator) noOp48);
        boolean boolean64 = compound6.equals((java.lang.Object) byteArray27);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(classFileLocatorArray5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp11 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp11.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str37, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str39, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocatorArray42);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp48 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp48.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str54, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(resolution60);
        org.junit.Assert.assertNotNull(resolution62);
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound2.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean6 = compound2.equals((java.lang.Object) 10.0d);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = compound2.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray11 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        byte[] byteArray13 = explicit12.resolve();
        java.lang.String str14 = explicit12.toString();
        boolean boolean15 = explicit12.isResolved();
        java.lang.String str16 = explicit12.toString();
        byte[] byteArray17 = explicit12.resolve();
        boolean boolean18 = explicit12.isResolved();
        byte[] byteArray19 = explicit12.resolve();
        boolean boolean20 = compound2.equals((java.lang.Object) byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = compound2.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(resolution22);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str36 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        java.lang.String str43 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution42);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = classFileLocator11.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = illegal7.equals((java.lang.Object) resolution13);
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        boolean boolean16 = illegal1.isResolved();
        java.lang.String str17 = illegal1.toString();
        boolean boolean18 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str17, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal2 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray9 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray12 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, classFileLocator13);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp15 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp28 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str29 = noOp28.toString();
        java.lang.String str30 = noOp28.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray31 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator13, noOp15, classFileLocator27, noOp28 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound32 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray31);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound32.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound32.locate("");
        boolean boolean37 = illegal2.equals((java.lang.Object) resolution36);
        java.lang.String str38 = illegal2.toString();
        byte[] byteArray41 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit42 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray41);
        byte[] byteArray43 = explicit42.resolve();
        boolean boolean44 = explicit42.isResolved();
        boolean boolean46 = explicit42.equals((java.lang.Object) 10L);
        boolean boolean47 = explicit42.isResolved();
        java.lang.String str48 = explicit42.toString();
        byte[] byteArray49 = explicit42.resolve();
        boolean boolean50 = illegal2.equals((java.lang.Object) byteArray49);
        byte[] byteArray53 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit54 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray53);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp55 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean56 = explicit54.equals((java.lang.Object) noOp55);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution58 = noOp55.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution60 = noOp55.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution62 = noOp55.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}", byteArray49, (net.bytebuddy.dynamic.ClassFileLocator) noOp55);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertTrue("'" + noOp15 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp15.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertTrue("'" + noOp28 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp28.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str30, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray31);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str38, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str48, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp55 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp55.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(resolution58);
        org.junit.Assert.assertNotNull(resolution60);
        org.junit.Assert.assertNotNull(resolution62);
        org.junit.Assert.assertNotNull(classFileLocator63);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound2.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean6 = compound2.equals((java.lang.Object) 10.0d);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = compound2.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str9 = compound2.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str9, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution3 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution3);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound10 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound11 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound12 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = compound12.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution14);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp44 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str45 = noOp44.toString();
        java.lang.String str46 = noOp44.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray47 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator29, noOp31, classFileLocator43, noOp44 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound48 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray47);
        boolean boolean50 = compound48.equals((java.lang.Object) "hi!");
        java.lang.String str51 = compound48.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray7, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound48.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = compound48.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + noOp44 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp44.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertNotNull(resolution57);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str15 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray13, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        byte[] byteArray23 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        byte[] byteArray25 = explicit24.resolve();
        boolean boolean26 = explicit24.isResolved();
        boolean boolean28 = explicit24.equals((java.lang.Object) 10L);
        boolean boolean29 = explicit24.isResolved();
        java.lang.String str30 = explicit24.toString();
        byte[] byteArray31 = explicit24.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = noOp32.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray31, (net.bytebuddy.dynamic.ClassFileLocator) noOp32);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray13, classFileLocator37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit40 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray41 = explicit40.resolve();
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str30, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp18 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str32 = noOp31.toString();
        java.lang.String str33 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray34 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator16, noOp18, classFileLocator30, noOp31 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray34);
        boolean boolean37 = compound35.equals((java.lang.Object) "hi!");
        java.lang.String str38 = compound35.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray3, (net.bytebuddy.dynamic.ClassFileLocator) compound35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound35.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal43 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean44 = illegal43.isResolved();
        boolean boolean45 = illegal43.isResolved();
        boolean boolean46 = illegal43.isResolved();
        boolean boolean47 = illegal43.isResolved();
        boolean boolean48 = illegal43.isResolved();
        boolean boolean49 = compound35.equals((java.lang.Object) boolean48);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertTrue("'" + noOp18 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp18.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        byte[] byteArray4 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator5 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray4);
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp10 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean11 = explicit9.equals((java.lang.Object) noOp10);
        java.lang.String str12 = noOp10.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray4, (net.bytebuddy.dynamic.ClassFileLocator) noOp10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray4);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator5);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp10 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp10.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp13 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray23 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray20, classFileLocator24);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp26 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str27 = noOp26.toString();
        java.lang.String str28 = noOp26.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray29 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator11, noOp13, classFileLocator25, noOp26 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = compound30.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound30.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.ClassLoader classLoader35 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.WeaklyReferenced.of(classLoader35);
        boolean boolean37 = compound30.equals((java.lang.Object) classLoader35);
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray49 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray46, classFileLocator50);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray46);
        boolean boolean54 = compound30.equals((java.lang.Object) byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit55 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit56 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray46);
        byte[] byteArray57 = explicit56.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}", byteArray57, classFileLocator58);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertTrue("'" + noOp13 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp13.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertTrue("'" + noOp26 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp26.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray29);
        org.junit.Assert.assertNotNull(resolution32);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(classFileLocator59);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray8 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray8);
        byte[] byteArray12 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean15 = explicit13.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str20 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp14.locate("");
        boolean boolean23 = compound9.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution26 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str27 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution29 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(classFileLocatorArray8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(resolution26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution29);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        byte[] byteArray6 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray8 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray10 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound11 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray10);
        byte[] byteArray14 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean17 = explicit15.equals((java.lang.Object) noOp16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp16.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp16.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str22 = noOp16.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = noOp16.locate("");
        boolean boolean25 = compound11.equals((java.lang.Object) noOp16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) noOp16);
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray36 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray33, classFileLocator37);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp39 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray49 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray46, classFileLocator50);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp52 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str53 = noOp52.toString();
        java.lang.String str54 = noOp52.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray55 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator37, noOp39, classFileLocator51, noOp52 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound56 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray55);
        boolean boolean58 = compound56.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound56);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit60 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray70 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray70);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator72 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray67, classFileLocator71);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp73 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray80 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray83 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator84 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray83);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator85 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray80, classFileLocator84);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp86 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str87 = noOp86.toString();
        java.lang.String str88 = noOp86.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray89 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator71, noOp73, classFileLocator85, noOp86 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound90 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray89);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution92 = compound90.locate(".class");
        java.lang.String str93 = compound90.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator94 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound90);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit95 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray96 = explicit95.resolve();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(classFileLocatorArray10);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str22, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertTrue("'" + noOp39 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp39.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertTrue("'" + noOp52 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp52.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str54, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertNotNull(classFileLocator72);
        org.junit.Assert.assertTrue("'" + noOp73 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp73.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator84);
        org.junit.Assert.assertNotNull(classFileLocator85);
        org.junit.Assert.assertTrue("'" + noOp86 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp86.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str87, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str88, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray89);
        org.junit.Assert.assertNotNull(resolution92);
        org.junit.Assert.assertNotNull(classFileLocator94);
        org.junit.Assert.assertNotNull(byteArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray96), "[-1, 100]");
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("");
        java.lang.String str38 = compound29.toString();
        java.lang.String str39 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound29.locate(".class");
        byte[] byteArray52 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray52);
        byte[] byteArray58 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit59 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray58);
        byte[] byteArray60 = explicit59.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator61 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray60);
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray72 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray72);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator74 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray69, classFileLocator73);
        byte[] byteArray77 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator78 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray77);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator79 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray69, classFileLocator78);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator80 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray60, classFileLocator78);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator81 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray52, classFileLocator80);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit82 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray52);
        boolean boolean83 = compound29.equals((java.lang.Object) explicit82);
        java.lang.String str84 = explicit82.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator61);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertNotNull(classFileLocator74);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator78);
        org.junit.Assert.assertNotNull(classFileLocator79);
        org.junit.Assert.assertNotNull(classFileLocator80);
        org.junit.Assert.assertNotNull(classFileLocator81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}" + "'", str84, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}");
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal36 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str37 = illegal36.toString();
        byte[] byteArray40 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        byte[] byteArray42 = explicit41.resolve();
        boolean boolean43 = explicit41.isResolved();
        boolean boolean45 = explicit41.equals((java.lang.Object) 10L);
        boolean boolean46 = explicit41.isResolved();
        java.lang.String str47 = explicit41.toString();
        byte[] byteArray48 = explicit41.resolve();
        java.lang.String str49 = explicit41.toString();
        byte[] byteArray50 = explicit41.resolve();
        boolean boolean51 = illegal36.equals((java.lang.Object) explicit41);
        boolean boolean52 = explicit41.isResolved();
        byte[] byteArray53 = explicit41.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit54 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray53);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray53);
        boolean boolean56 = compound29.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str37, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str47, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str49, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        boolean boolean8 = explicit7.isResolved();
        byte[] byteArray9 = explicit7.resolve();
        java.lang.String str10 = explicit7.toString();
        boolean boolean11 = explicit7.isResolved();
        byte[] byteArray15 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray27, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray27);
        boolean boolean35 = explicit18.equals((java.lang.Object) byteArray27);
        byte[] byteArray36 = explicit18.resolve();
        boolean boolean37 = explicit7.equals((java.lang.Object) explicit18);
        java.lang.Class<?> wildcardClass38 = explicit7.getClass();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        byte[] byteArray6 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray6);
        byte[] byteArray10 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean13 = explicit11.equals((java.lang.Object) noOp12);
        java.lang.String str14 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) noOp12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray6);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        boolean boolean14 = explicit5.isResolved();
        boolean boolean15 = illegal1.equals((java.lang.Object) explicit5);
        boolean boolean16 = explicit5.isResolved();
        java.lang.String str17 = explicit5.toString();
        byte[] byteArray18 = explicit5.resolve();
        java.lang.String str19 = explicit5.toString();
        boolean boolean20 = explicit5.isResolved();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str17, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str19, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        java.lang.String str10 = explicit5.toString();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray14 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound15 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound16 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound17 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound19 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound20 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound21 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound22 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound23 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12, (net.bytebuddy.dynamic.ClassFileLocator) compound23);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray12);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray14);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray8 = explicit7.resolve();
        java.lang.Class<?> wildcardClass9 = explicit7.getClass();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) 1, (byte) 100 };
        byte[] byteArray11 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        byte[] byteArray13 = explicit12.resolve();
        boolean boolean14 = explicit12.isResolved();
        boolean boolean16 = explicit12.equals((java.lang.Object) 10L);
        boolean boolean17 = explicit12.isResolved();
        java.lang.String str18 = explicit12.toString();
        byte[] byteArray19 = explicit12.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp20 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str21 = noOp20.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp20.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray19, (net.bytebuddy.dynamic.ClassFileLocator) noOp20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray6, classFileLocator25);
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray36 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray33, classFileLocator37);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp39 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray49 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray46, classFileLocator50);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp52 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str53 = noOp52.toString();
        java.lang.String str54 = noOp52.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray55 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator37, noOp39, classFileLocator51, noOp52 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound56 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray55);
        boolean boolean58 = compound56.equals((java.lang.Object) "hi!");
        boolean boolean60 = compound56.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution62 = compound56.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution64 = compound56.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray68 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray68);
        byte[] byteArray72 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit73 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray72);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp74 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean75 = explicit73.equals((java.lang.Object) noOp74);
        java.lang.String str76 = noOp74.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator77 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray68, (net.bytebuddy.dynamic.ClassFileLocator) noOp74);
        boolean boolean78 = compound56.equals((java.lang.Object) byteArray68);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution80 = compound56.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str81 = compound56.toString();
        java.lang.String str82 = compound56.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator83 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) compound56);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution85 = compound56.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str18, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp20 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp20.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertTrue("'" + noOp39 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp39.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertTrue("'" + noOp52 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp52.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str54, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(resolution62);
        org.junit.Assert.assertNotNull(resolution64);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp74 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp74.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str76, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(resolution80);
        org.junit.Assert.assertNotNull(classFileLocator83);
        org.junit.Assert.assertNotNull(resolution85);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray8);
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray37 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray34, classFileLocator38);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp40 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str41 = noOp40.toString();
        java.lang.String str42 = noOp40.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray43 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator25, noOp27, classFileLocator39, noOp40 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound44 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray43);
        boolean boolean46 = compound44.equals((java.lang.Object) "hi!");
        boolean boolean48 = compound44.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound44.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray56 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray56);
        byte[] byteArray60 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp62 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean63 = explicit61.equals((java.lang.Object) noOp62);
        java.lang.String str64 = noOp62.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray56, (net.bytebuddy.dynamic.ClassFileLocator) noOp62);
        boolean boolean66 = compound44.equals((java.lang.Object) byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution68 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution70 = compound44.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound44);
        java.lang.String str72 = compound44.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution74 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertTrue("'" + noOp40 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp40.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str41, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp62 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp62.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str64, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(resolution68);
        org.junit.Assert.assertNotNull(resolution70);
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertNotNull(resolution74);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray2 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean11 = compound4.equals((java.lang.Object) boolean10);
        boolean boolean12 = illegal1.equals((java.lang.Object) compound4);
        java.lang.String str13 = compound4.toString();
        java.lang.String str14 = compound4.toString();
        java.lang.Object obj15 = null;
        boolean boolean16 = compound4.equals(obj15);
        org.junit.Assert.assertNotNull(classFileLocatorArray2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str13, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str14, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        byte[] byteArray9 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray12 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, classFileLocator13);
        byte[] byteArray17 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, classFileLocator18);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray9);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str36 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution35);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp18 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str32 = noOp31.toString();
        java.lang.String str33 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray34 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator16, noOp18, classFileLocator30, noOp31 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray34);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound35.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound35.locate("");
        boolean boolean40 = explicit5.equals((java.lang.Object) compound35);
        byte[] byteArray44 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit45 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray44);
        byte[] byteArray46 = explicit45.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit48 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray46);
        byte[] byteArray49 = explicit48.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit50 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray49);
        byte[] byteArray53 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit54 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray53);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp55 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean56 = explicit54.equals((java.lang.Object) noOp55);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution58 = noOp55.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution60 = noOp55.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution62 = noOp55.locate("hi!");
        java.lang.String str63 = noOp55.toString();
        java.lang.String str64 = noOp55.toString();
        boolean boolean65 = explicit50.equals((java.lang.Object) str64);
        boolean boolean66 = explicit50.isResolved();
        boolean boolean67 = explicit5.equals((java.lang.Object) explicit50);
        java.lang.String str68 = explicit5.toString();
        java.lang.String str69 = explicit5.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertTrue("'" + noOp18 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp18.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray34);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp55 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp55.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(resolution58);
        org.junit.Assert.assertNotNull(resolution60);
        org.junit.Assert.assertNotNull(resolution62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str63, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str64, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str68, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str69, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        byte[] byteArray8 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean12 = illegal10.equals((java.lang.Object) classFileLocator11);
        java.lang.String str13 = illegal10.toString();
        boolean boolean14 = illegal10.isResolved();
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp28 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray38 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray35, classFileLocator39);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp41 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str42 = noOp41.toString();
        java.lang.String str43 = noOp41.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray44 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator26, noOp28, classFileLocator40, noOp41 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound45 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray44);
        boolean boolean47 = compound45.equals((java.lang.Object) "hi!");
        boolean boolean49 = compound45.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = compound45.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound45.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray57 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray57);
        byte[] byteArray61 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit62 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp63 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean64 = explicit62.equals((java.lang.Object) noOp63);
        java.lang.String str65 = noOp63.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray57, (net.bytebuddy.dynamic.ClassFileLocator) noOp63);
        boolean boolean67 = compound45.equals((java.lang.Object) byteArray57);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray57);
        boolean boolean69 = illegal10.equals((java.lang.Object) byteArray57);
        boolean boolean70 = explicit3.equals((java.lang.Object) illegal10);
        byte[] byteArray71 = explicit3.resolve();
        boolean boolean72 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str13, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertTrue("'" + noOp28 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp28.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertTrue("'" + noOp41 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp41.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp63 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp63.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str65, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray4 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator5 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray4);
        boolean boolean6 = illegal1.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(classFileLocator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound31.locate("");
        boolean boolean36 = illegal1.equals((java.lang.Object) resolution35);
        java.lang.String str37 = illegal1.toString();
        java.lang.String str38 = illegal1.toString();
        boolean boolean39 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray40 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str37, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str38, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution3 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.Class<?> wildcardClass8 = noOp0.getClass();
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution3);
        org.junit.Assert.assertNotNull(resolution5);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution2 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str3 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str6 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp0.locate(".class");
        java.lang.String str9 = noOp0.toString();
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(resolution2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str3, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str9, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray8 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray8);
        byte[] byteArray12 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean15 = explicit13.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str20 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp14.locate("");
        boolean boolean23 = compound9.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        java.lang.String str25 = noOp14.toString();
        java.lang.String str26 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution28 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution30 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(classFileLocatorArray8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str25, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution28);
        org.junit.Assert.assertNotNull(resolution30);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("");
        java.lang.String str38 = compound29.toString();
        java.lang.String str39 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound29.locate(".class");
        java.lang.String str44 = compound29.toString();
        java.lang.String str45 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertNotNull(resolution47);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution3 = noOp0.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str6 = noOp0.toString();
        java.lang.String str7 = noOp0.toString();
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution3);
        org.junit.Assert.assertNotNull(resolution5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str7, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal2 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        boolean boolean13 = explicit6.isResolved();
        boolean boolean14 = explicit6.isResolved();
        byte[] byteArray15 = explicit6.resolve();
        boolean boolean16 = illegal2.equals((java.lang.Object) explicit6);
        byte[] byteArray17 = explicit6.resolve();
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp22 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean23 = explicit21.equals((java.lang.Object) noOp22);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution25 = noOp22.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution27 = noOp22.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str28 = noOp22.toString();
        java.lang.String str29 = noOp22.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = noOp22.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray17, (net.bytebuddy.dynamic.ClassFileLocator) noOp22);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp22 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp22.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(resolution25);
        org.junit.Assert.assertNotNull(resolution27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(classFileLocator32);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp18 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str32 = noOp31.toString();
        java.lang.String str33 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray34 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator16, noOp18, classFileLocator30, noOp31 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray34);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound35.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound35.locate("");
        boolean boolean40 = explicit5.equals((java.lang.Object) compound35);
        byte[] byteArray41 = explicit5.resolve();
        byte[] byteArray42 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit43 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit44 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray42);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertTrue("'" + noOp18 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp18.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray34);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str36 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str41 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str8 = noOp4.toString();
        java.lang.String str9 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray12 = resolution11.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str8, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str9, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution11);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = classFileLocator11.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = illegal7.equals((java.lang.Object) resolution13);
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        boolean boolean16 = illegal1.isResolved();
        boolean boolean17 = illegal1.isResolved();
        boolean boolean18 = illegal1.isResolved();
        boolean boolean19 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray31 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28, classFileLocator32);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp34 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray44 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray44);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray41, classFileLocator45);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp47 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str48 = noOp47.toString();
        java.lang.String str49 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray50 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator32, noOp34, classFileLocator46, noOp47 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound51 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound51.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound51.locate("");
        boolean boolean56 = illegal21.equals((java.lang.Object) resolution55);
        boolean boolean57 = illegal1.equals((java.lang.Object) illegal21);
        boolean boolean58 = illegal21.isResolved();
        boolean boolean59 = illegal21.isResolved();
        java.lang.String str60 = illegal21.toString();
        java.lang.String str61 = illegal21.toString();
        boolean boolean62 = illegal21.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertTrue("'" + noOp34 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp34.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertTrue("'" + noOp47 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp47.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray50);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str60, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str61, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        java.lang.String str11 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("hi!");
        java.lang.String str14 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp4.locate(".class");
        java.lang.String str17 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound2.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean7 = illegal6.isResolved();
        java.lang.String str8 = illegal6.toString();
        java.lang.String str9 = illegal6.toString();
        java.lang.String str10 = illegal6.toString();
        boolean boolean11 = illegal6.isResolved();
        boolean boolean12 = compound2.equals((java.lang.Object) illegal6);
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray35 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray32, classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp38 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str39 = noOp38.toString();
        java.lang.String str40 = noOp38.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray41 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator23, noOp25, classFileLocator37, noOp38 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound42 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray41);
        boolean boolean44 = compound42.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution46 = compound42.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean47 = compound2.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str9, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str10, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertTrue("'" + noOp38 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp38.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str39, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str40, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(resolution46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray23, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str30 = noOp29.toString();
        java.lang.String str31 = noOp29.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray32 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator14, noOp16, classFileLocator28, noOp29 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound33 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray32);
        boolean boolean35 = compound33.equals((java.lang.Object) "hi!");
        boolean boolean37 = compound33.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound33.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound33.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray45 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray45);
        byte[] byteArray49 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit50 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp51 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean52 = explicit50.equals((java.lang.Object) noOp51);
        java.lang.String str53 = noOp51.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray45, (net.bytebuddy.dynamic.ClassFileLocator) noOp51);
        boolean boolean55 = compound33.equals((java.lang.Object) byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = compound33.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution59 = compound33.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution61 = compound33.locate("");
        boolean boolean62 = illegal1.equals((java.lang.Object) "");
        java.lang.String str63 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray64 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str30, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp51 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp51.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(resolution57);
        org.junit.Assert.assertNotNull(resolution59);
        org.junit.Assert.assertNotNull(resolution61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str63, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray5 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray5);
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp11 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean12 = explicit10.equals((java.lang.Object) noOp11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp11.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp11.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str17 = noOp11.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp11.locate("");
        boolean boolean20 = compound6.equals((java.lang.Object) noOp11);
        boolean boolean21 = illegal1.equals((java.lang.Object) compound6);
        boolean boolean22 = illegal1.isResolved();
        java.lang.String str23 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray24 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(classFileLocatorArray5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp11 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp11.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str23, "ClassFileLocator.Resolution.Illegal{typeName=''}");
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        java.lang.String str4 = illegal1.toString();
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean11 = explicit8.equals((java.lang.Object) (short) 0);
        boolean boolean12 = illegal1.equals((java.lang.Object) explicit8);
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        byte[] byteArray19 = explicit18.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        boolean boolean22 = explicit21.isResolved();
        byte[] byteArray23 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        boolean boolean25 = illegal1.equals((java.lang.Object) byteArray23);
        java.lang.String str26 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray27 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str26, "ClassFileLocator.Resolution.Illegal{typeName=''}");
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean3 = illegal1.equals((java.lang.Object) classFileLocator2);
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        boolean boolean38 = compound36.equals((java.lang.Object) "hi!");
        boolean boolean40 = compound36.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound36.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray48 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray48);
        byte[] byteArray52 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit53 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray52);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp54 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean55 = explicit53.equals((java.lang.Object) noOp54);
        java.lang.String str56 = noOp54.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray48, (net.bytebuddy.dynamic.ClassFileLocator) noOp54);
        boolean boolean58 = compound36.equals((java.lang.Object) byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray48);
        boolean boolean60 = illegal1.equals((java.lang.Object) byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray48);
        byte[] byteArray62 = explicit61.resolve();
        org.junit.Assert.assertNotNull(classFileLocator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp54 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp54.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str56, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[100]");
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray31 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28, classFileLocator32);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp34 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray44 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray44);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray41, classFileLocator45);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp47 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str48 = noOp47.toString();
        java.lang.String str49 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray50 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator32, noOp34, classFileLocator46, noOp47 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound51 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        boolean boolean53 = compound51.equals((java.lang.Object) "hi!");
        java.lang.String str54 = compound51.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, (net.bytebuddy.dynamic.ClassFileLocator) compound51);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10, (net.bytebuddy.dynamic.ClassFileLocator) compound51);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit57 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp59 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str60 = noOp59.toString();
        java.lang.String str61 = noOp59.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution63 = noOp59.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str64 = noOp59.toString();
        java.lang.String str65 = noOp59.toString();
        java.lang.String str66 = noOp59.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution68 = noOp59.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str69 = noOp59.toString();
        java.lang.String str70 = noOp59.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution72 = noOp59.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray10, (net.bytebuddy.dynamic.ClassFileLocator) noOp59);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator74 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray10);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertTrue("'" + noOp34 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp34.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertTrue("'" + noOp47 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp47.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertTrue("'" + noOp59 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp59.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str60, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str61, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str64, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str65, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str66, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str69, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str70, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution72);
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertNotNull(classFileLocator74);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str32 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str39 = compound29.toString();
        java.lang.String str40 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution38);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp28 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray38 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray35, classFileLocator39);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp41 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str42 = noOp41.toString();
        java.lang.String str43 = noOp41.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray44 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator26, noOp28, classFileLocator40, noOp41 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound45 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray44);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = compound45.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray48 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator15, compound45 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound49 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound50 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        boolean boolean51 = explicit3.equals((java.lang.Object) classFileLocatorArray48);
        boolean boolean52 = explicit3.isResolved();
        java.lang.String str53 = explicit3.toString();
        boolean boolean54 = explicit3.isResolved();
        java.lang.String str55 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertTrue("'" + noOp28 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp28.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertTrue("'" + noOp41 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp41.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray44);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertNotNull(classFileLocatorArray48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str53, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str55, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        java.lang.String str6 = illegal1.toString();
        boolean boolean7 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str6, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray8, classFileLocator15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        java.lang.String str19 = explicit18.toString();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}" + "'", str19, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        java.lang.String str12 = explicit4.toString();
        boolean boolean13 = explicit4.isResolved();
        byte[] byteArray14 = explicit4.resolve();
        java.lang.String str15 = explicit4.toString();
        java.lang.String str16 = explicit4.toString();
        byte[] byteArray17 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray17);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str13 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp12);
        java.lang.String str17 = noOp12.toString();
        java.lang.String str18 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str21 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp12.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution25 = noOp12.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.Class<?> wildcardClass26 = noOp12.getClass();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str18, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertNotNull(resolution25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        java.lang.String str12 = explicit4.toString();
        byte[] byteArray13 = explicit4.resolve();
        boolean boolean14 = explicit4.isResolved();
        byte[] byteArray15 = explicit4.resolve();
        java.lang.Object obj16 = null;
        boolean boolean17 = explicit4.equals(obj16);
        java.lang.String str18 = explicit4.toString();
        boolean boolean19 = explicit4.isResolved();
        byte[] byteArray20 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray20);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str18, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp18 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str32 = noOp31.toString();
        java.lang.String str33 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray34 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator16, noOp18, classFileLocator30, noOp31 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray34);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound35.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound35.locate("");
        boolean boolean40 = explicit5.equals((java.lang.Object) compound35);
        byte[] byteArray41 = explicit5.resolve();
        boolean boolean42 = explicit5.isResolved();
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray52 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray52);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray49, classFileLocator53);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp55 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray65 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray65);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray62, classFileLocator66);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp68 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str69 = noOp68.toString();
        java.lang.String str70 = noOp68.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray71 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator53, noOp55, classFileLocator67, noOp68 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound72 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray71);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution74 = compound72.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution76 = compound72.locate("");
        java.lang.String str77 = compound72.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution79 = compound72.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution81 = compound72.locate("ClassFileLocator.NoOp.INSTANCE");
        boolean boolean82 = explicit5.equals((java.lang.Object) "ClassFileLocator.NoOp.INSTANCE");
        byte[] byteArray83 = explicit5.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertTrue("'" + noOp18 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp18.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray34);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertTrue("'" + noOp55 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp55.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertTrue("'" + noOp68 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp68.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str69, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str70, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray71);
        org.junit.Assert.assertNotNull(resolution74);
        org.junit.Assert.assertNotNull(resolution76);
        org.junit.Assert.assertNotNull(resolution79);
        org.junit.Assert.assertNotNull(resolution81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[100]");
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        java.lang.String str12 = explicit4.toString();
        boolean boolean13 = explicit4.isResolved();
        byte[] byteArray14 = explicit4.resolve();
        boolean boolean15 = explicit4.isResolved();
        byte[] byteArray16 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray27 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray24, classFileLocator28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray40 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray37, classFileLocator41);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp43 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str44 = noOp43.toString();
        java.lang.String str45 = noOp43.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray46 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator28, noOp30, classFileLocator42, noOp43 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound47 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray46);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution49 = compound47.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = compound47.locate("");
        java.lang.String str52 = compound47.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = compound47.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound47);
        java.lang.String str56 = compound47.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution58 = compound47.locate("");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertTrue("'" + noOp43 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp43.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray46);
        org.junit.Assert.assertNotNull(resolution49);
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertNotNull(resolution54);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(resolution58);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        boolean boolean17 = explicit16.isResolved();
        boolean boolean18 = explicit16.isResolved();
        boolean boolean19 = explicit16.isResolved();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp5 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean6 = explicit4.equals((java.lang.Object) noOp5);
        java.lang.String str7 = explicit4.toString();
        boolean boolean8 = explicit4.isResolved();
        byte[] byteArray9 = explicit4.resolve();
        byte[] byteArray16 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, classFileLocator20);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp22 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray32 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray29, classFileLocator33);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp35 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str36 = noOp35.toString();
        java.lang.String str37 = noOp35.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray38 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator20, noOp22, classFileLocator34, noOp35 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound39 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound39.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, (net.bytebuddy.dynamic.ClassFileLocator) compound39);
        byte[] byteArray47 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit48 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray47);
        byte[] byteArray49 = explicit48.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit51 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray49);
        byte[] byteArray58 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray61 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator62 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray58, classFileLocator62);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp64 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray71 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray74 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator75 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray74);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator76 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray71, classFileLocator75);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp77 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str78 = noOp77.toString();
        java.lang.String str79 = noOp77.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray80 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator62, noOp64, classFileLocator76, noOp77 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound81 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray80);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution83 = compound81.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str84 = compound81.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution86 = compound81.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator87 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray49, (net.bytebuddy.dynamic.ClassFileLocator) compound81);
        boolean boolean88 = compound39.equals((java.lang.Object) byteArray49);
        byte[] byteArray91 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit92 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray91);
        byte[] byteArray93 = explicit92.resolve();
        boolean boolean94 = explicit92.isResolved();
        java.lang.String str95 = explicit92.toString();
        byte[] byteArray96 = explicit92.resolve();
        boolean boolean97 = compound39.equals((java.lang.Object) byteArray96);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution99 = compound39.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp5 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp5.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str7, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertTrue("'" + noOp22 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp22.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertTrue("'" + noOp35 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp35.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str37, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray38);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator62);
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertTrue("'" + noOp64 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp64.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator75);
        org.junit.Assert.assertNotNull(classFileLocator76);
        org.junit.Assert.assertTrue("'" + noOp77 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp77.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str78, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str79, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray80);
        org.junit.Assert.assertNotNull(resolution83);
        org.junit.Assert.assertNotNull(resolution86);
        org.junit.Assert.assertNotNull(classFileLocator87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str95, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray96), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(resolution99);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str32 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution34);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        java.lang.String str11 = illegal1.toString();
        boolean boolean12 = illegal1.isResolved();
        boolean boolean13 = illegal1.isResolved();
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray27 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray24, classFileLocator28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray40 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray37, classFileLocator41);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp43 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str44 = noOp43.toString();
        java.lang.String str45 = noOp43.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray46 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator28, noOp30, classFileLocator42, noOp43 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound47 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray46);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution49 = compound47.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray50 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, compound47 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound51 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound52 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound53 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        boolean boolean54 = illegal1.equals((java.lang.Object) compound53);
        boolean boolean55 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray56 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertTrue("'" + noOp43 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp43.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray46);
        org.junit.Assert.assertNotNull(resolution49);
        org.junit.Assert.assertNotNull(classFileLocatorArray50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) -1, (byte) 1, (byte) -1, (byte) 0, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray11 = explicit10.resolve();
        byte[] byteArray12 = explicit10.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}", byteArray12);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, -1, 1, -1, 0, 100]");
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, 1, -1, 0, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, -1, 1, -1, 0, 100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean6 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean9 = illegal8.isResolved();
        java.lang.String str10 = illegal8.toString();
        boolean boolean11 = illegal8.isResolved();
        boolean boolean12 = explicit3.equals((java.lang.Object) illegal8);
        byte[] byteArray13 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray15 = explicit14.resolve();
        byte[] byteArray16 = explicit14.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str10, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = compound9.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = compound9.locate("ClassFileLocator.NoOp.INSTANCE");
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray22 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray24 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound25 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray24);
        byte[] byteArray28 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit29 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean31 = explicit29.equals((java.lang.Object) noOp30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = noOp30.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = noOp30.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str36 = noOp30.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = noOp30.locate("");
        boolean boolean39 = compound25.equals((java.lang.Object) noOp30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray22, (net.bytebuddy.dynamic.ClassFileLocator) noOp30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22);
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray51 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray51);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray48, classFileLocator52);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp54 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray64 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray64);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray61, classFileLocator65);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp67 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str68 = noOp67.toString();
        java.lang.String str69 = noOp67.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray70 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator52, noOp54, classFileLocator66, noOp67 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound71 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray70);
        boolean boolean73 = compound71.equals((java.lang.Object) "hi!");
        boolean boolean75 = compound71.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution77 = compound71.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str78 = compound71.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal80 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean81 = illegal80.isResolved();
        java.lang.String str82 = illegal80.toString();
        java.lang.String str83 = illegal80.toString();
        boolean boolean84 = compound71.equals((java.lang.Object) str83);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator85 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray22, (net.bytebuddy.dynamic.ClassFileLocator) compound71);
        boolean boolean86 = compound9.equals((java.lang.Object) classFileLocator85);
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocatorArray24);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertTrue("'" + noOp54 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp54.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertTrue("'" + noOp67 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp67.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str68, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str69, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(resolution77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str82, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str83, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(classFileLocator85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean3 = illegal1.equals((java.lang.Object) classFileLocator2);
        java.lang.String str4 = illegal1.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray5 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray5);
        java.lang.String str8 = compound7.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray9 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound10 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray9);
        boolean boolean11 = compound7.equals((java.lang.Object) classFileLocatorArray9);
        boolean boolean12 = illegal1.equals((java.lang.Object) compound7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = compound7.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = compound7.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        java.lang.String str17 = compound7.toString();
        org.junit.Assert.assertNotNull(classFileLocator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertNotNull(classFileLocatorArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str8, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(classFileLocatorArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str17, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        java.lang.String str6 = explicit3.toString();
        java.lang.Class<?> wildcardClass7 = explicit3.getClass();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str6, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray5 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray39 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator6, compound36 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound41 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound42 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        boolean boolean43 = illegal1.equals((java.lang.Object) compound42);
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray53 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray53);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray50, classFileLocator54);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp56 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray63 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray66 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray66);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray63, classFileLocator67);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp69 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str70 = noOp69.toString();
        java.lang.String str71 = noOp69.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray72 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator54, noOp56, classFileLocator68, noOp69 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound73 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray72);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution75 = compound73.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution77 = compound73.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean78 = illegal1.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean79 = illegal1.isResolved();
        byte[] byteArray82 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator83 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray82);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit84 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray82);
        byte[] byteArray85 = explicit84.resolve();
        boolean boolean86 = explicit84.isResolved();
        byte[] byteArray87 = explicit84.resolve();
        boolean boolean88 = illegal1.equals((java.lang.Object) explicit84);
        boolean boolean89 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(classFileLocatorArray39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertTrue("'" + noOp56 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp56.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertTrue("'" + noOp69 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp69.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str70, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str71, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray72);
        org.junit.Assert.assertNotNull(resolution75);
        org.junit.Assert.assertNotNull(resolution77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator83);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[100]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[100]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        boolean boolean14 = explicit5.isResolved();
        boolean boolean15 = illegal1.equals((java.lang.Object) explicit5);
        byte[] byteArray16 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray17 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound19 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = compound19.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean24 = illegal23.isResolved();
        java.lang.String str25 = illegal23.toString();
        java.lang.String str26 = illegal23.toString();
        java.lang.String str27 = illegal23.toString();
        boolean boolean28 = illegal23.isResolved();
        boolean boolean29 = compound19.equals((java.lang.Object) illegal23);
        boolean boolean30 = explicit5.equals((java.lang.Object) illegal23);
        java.lang.String str31 = illegal23.toString();
        boolean boolean32 = illegal23.isResolved();
        byte[] byteArray37 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit38 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray37);
        byte[] byteArray39 = explicit38.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray51 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray51);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray48, classFileLocator52);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp54 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray64 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray64);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray61, classFileLocator65);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp67 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str68 = noOp67.toString();
        java.lang.String str69 = noOp67.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray70 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator52, noOp54, classFileLocator66, noOp67 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound71 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray70);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution73 = compound71.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str74 = compound71.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution76 = compound71.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator77 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray39, (net.bytebuddy.dynamic.ClassFileLocator) compound71);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution79 = compound71.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        boolean boolean80 = illegal23.equals((java.lang.Object) resolution79);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray17);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str25, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str26, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str27, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str31, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertTrue("'" + noOp54 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp54.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertTrue("'" + noOp67 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp67.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str68, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str69, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray70);
        org.junit.Assert.assertNotNull(resolution73);
        org.junit.Assert.assertNotNull(resolution76);
        org.junit.Assert.assertNotNull(classFileLocator77);
        org.junit.Assert.assertNotNull(resolution79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str32 = compound29.toString();
        byte[] byteArray35 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit36 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray35);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp37 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean38 = explicit36.equals((java.lang.Object) noOp37);
        java.lang.String str39 = explicit36.toString();
        boolean boolean40 = explicit36.isResolved();
        byte[] byteArray41 = explicit36.resolve();
        boolean boolean42 = compound29.equals((java.lang.Object) explicit36);
        java.lang.String str43 = explicit36.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp37 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp37.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str39, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str43, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        java.lang.String str7 = explicit5.toString();
        boolean boolean8 = explicit5.isResolved();
        java.lang.String str9 = explicit5.toString();
        java.lang.String str10 = explicit5.toString();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray12);
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray37 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray34, classFileLocator38);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp40 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str41 = noOp40.toString();
        java.lang.String str42 = noOp40.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray43 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator25, noOp27, classFileLocator39, noOp40 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound44 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray43);
        boolean boolean46 = compound44.equals((java.lang.Object) "hi!");
        boolean boolean48 = compound44.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound44.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray56 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray56);
        byte[] byteArray60 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp62 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean63 = explicit61.equals((java.lang.Object) noOp62);
        java.lang.String str64 = noOp62.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray56, (net.bytebuddy.dynamic.ClassFileLocator) noOp62);
        boolean boolean66 = compound44.equals((java.lang.Object) byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}", byteArray12, classFileLocator67);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str7, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertTrue("'" + noOp40 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp40.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str41, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp62 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp62.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str64, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertNotNull(classFileLocator68);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.NoOp.INSTANCE");
        java.lang.Class<?> wildcardClass5 = illegal4.getClass();
        boolean boolean6 = illegal1.equals((java.lang.Object) wildcardClass5);
        java.lang.String str7 = illegal1.toString();
        java.lang.String str8 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray9 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str7, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean7 = explicit4.equals((java.lang.Object) (short) 0);
        byte[] byteArray8 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str11 = illegal10.toString();
        java.lang.String str12 = illegal10.toString();
        boolean boolean13 = explicit4.equals((java.lang.Object) illegal10);
        byte[] byteArray14 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        byte[] byteArray17 = explicit16.resolve();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str12, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        boolean boolean9 = explicit8.isResolved();
        byte[] byteArray10 = explicit8.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray10);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        byte[] byteArray15 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray15);
        boolean boolean20 = explicit3.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean21 = explicit3.isResolved();
        boolean boolean22 = explicit3.isResolved();
        byte[] byteArray23 = explicit3.resolve();
        java.lang.String str24 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str24, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        boolean boolean3 = illegal1.isResolved();
        boolean boolean4 = illegal1.isResolved();
        java.lang.String str5 = illegal1.toString();
        boolean boolean6 = illegal1.isResolved();
        boolean boolean7 = illegal1.isResolved();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str5, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        boolean boolean11 = illegal1.isResolved();
        boolean boolean12 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray13 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str2 = compound1.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound1.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        java.lang.String str5 = compound1.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = compound1.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str2, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str5, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution7);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp7 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean8 = explicit6.equals((java.lang.Object) noOp7);
        boolean boolean9 = illegal1.equals((java.lang.Object) explicit6);
        java.lang.String str10 = explicit6.toString();
        byte[] byteArray11 = explicit6.resolve();
        byte[] byteArray12 = explicit6.resolve();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp7 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp7.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray8);
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray37 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray34, classFileLocator38);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp40 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str41 = noOp40.toString();
        java.lang.String str42 = noOp40.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray43 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator25, noOp27, classFileLocator39, noOp40 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound44 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray43);
        boolean boolean46 = compound44.equals((java.lang.Object) "hi!");
        boolean boolean48 = compound44.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound44.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray56 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray56);
        byte[] byteArray60 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp62 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean63 = explicit61.equals((java.lang.Object) noOp62);
        java.lang.String str64 = noOp62.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray56, (net.bytebuddy.dynamic.ClassFileLocator) noOp62);
        boolean boolean66 = compound44.equals((java.lang.Object) byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution68 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution70 = compound44.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound44);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution73 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution75 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        boolean boolean76 = resolution75.isResolved();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertTrue("'" + noOp40 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp40.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str41, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp62 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp62.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str64, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(resolution68);
        org.junit.Assert.assertNotNull(resolution70);
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertNotNull(resolution73);
        org.junit.Assert.assertNotNull(resolution75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray2 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean6 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean9 = illegal8.isResolved();
        java.lang.String str10 = illegal8.toString();
        boolean boolean11 = illegal8.isResolved();
        boolean boolean12 = explicit3.equals((java.lang.Object) illegal8);
        byte[] byteArray13 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        boolean boolean15 = explicit14.isResolved();
        boolean boolean16 = explicit14.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str10, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean6 = explicit3.equals((java.lang.Object) (short) 0);
        byte[] byteArray7 = explicit3.resolve();
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean6 = explicit3.equals((java.lang.Object) (short) 0);
        byte[] byteArray7 = explicit3.resolve();
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        byte[] byteArray15 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp17 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean18 = explicit16.equals((java.lang.Object) noOp17);
        java.lang.String str19 = noOp17.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp17);
        java.lang.String str21 = noOp17.toString();
        java.lang.String str22 = noOp17.toString();
        boolean boolean23 = explicit3.equals((java.lang.Object) str22);
        byte[] byteArray24 = explicit3.resolve();
        byte[] byteArray25 = explicit3.resolve();
        boolean boolean26 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp17 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp17.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str19, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str22, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str12 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp4.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertNotNull(resolution18);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str31 = noOp30.toString();
        java.lang.String str32 = noOp30.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = noOp30.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean35 = compound29.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str36 = compound29.toString();
        byte[] byteArray40 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        byte[] byteArray42 = explicit41.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray42);
        boolean boolean44 = compound29.equals((java.lang.Object) byteArray42);
        java.lang.String str45 = compound29.toString();
        java.lang.String str46 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean11 = explicit9.isResolved();
        boolean boolean13 = explicit9.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit9.isResolved();
        java.lang.String str15 = explicit9.toString();
        byte[] byteArray16 = explicit9.resolve();
        java.lang.String str17 = explicit9.toString();
        boolean boolean18 = explicit5.equals((java.lang.Object) str17);
        byte[] byteArray19 = explicit5.resolve();
        byte[] byteArray25 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray25);
        byte[] byteArray27 = explicit26.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray29 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        byte[] byteArray33 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit34 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray33);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp35 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean36 = explicit34.equals((java.lang.Object) noOp35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = noOp35.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = noOp35.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str41 = noOp35.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = noOp35.locate("");
        boolean boolean44 = compound30.equals((java.lang.Object) noOp35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray27, (net.bytebuddy.dynamic.ClassFileLocator) noOp35);
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray55 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray55);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray52, classFileLocator56);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp58 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray68 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray68);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray65, classFileLocator69);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp71 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str72 = noOp71.toString();
        java.lang.String str73 = noOp71.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray74 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator56, noOp58, classFileLocator70, noOp71 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound75 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray74);
        boolean boolean77 = compound75.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator78 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray27, (net.bytebuddy.dynamic.ClassFileLocator) compound75);
        boolean boolean79 = explicit5.equals((java.lang.Object) classFileLocator78);
        byte[] byteArray80 = explicit5.resolve();
        byte[] byteArray81 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray82 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound83 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray82);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound84 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray82);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound85 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray82);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator86 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean87 = compound85.equals((java.lang.Object) classFileLocator86);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator88 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}", byteArray81, (net.bytebuddy.dynamic.ClassFileLocator) compound85);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution90 = compound85.locate(".class");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str17, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocatorArray29);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp35 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp35.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str41, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertTrue("'" + noOp58 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp58.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertNotNull(classFileLocator70);
        org.junit.Assert.assertTrue("'" + noOp71 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp71.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str72, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str73, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(classFileLocator78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[100]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray82);
        org.junit.Assert.assertNotNull(classFileLocator86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(classFileLocator88);
        org.junit.Assert.assertNotNull(resolution90);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp4.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        java.lang.String str15 = noOp4.toString();
        java.lang.String str16 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        java.lang.String str19 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str19, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray9 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray12 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, classFileLocator13);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp15 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp28 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str29 = noOp28.toString();
        java.lang.String str30 = noOp28.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray31 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator13, noOp15, classFileLocator27, noOp28 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound32 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray31);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound32.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.Class<?> wildcardClass35 = resolution34.getClass();
        boolean boolean36 = illegal1.equals((java.lang.Object) resolution34);
        boolean boolean37 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertTrue("'" + noOp15 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp15.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertTrue("'" + noOp28 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp28.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str30, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray31);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate(".class");
        java.lang.Class<?> wildcardClass34 = resolution33.getClass();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        byte[] byteArray9 = explicit3.resolve();
        byte[] byteArray10 = explicit3.resolve();
        byte[] byteArray11 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        boolean boolean13 = explicit12.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str2 = illegal1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}");
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str2 = illegal1.toString();
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        byte[] byteArray18 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator19);
        boolean boolean21 = illegal1.equals((java.lang.Object) "");
        boolean boolean22 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean25 = illegal24.isResolved();
        boolean boolean26 = illegal24.isResolved();
        boolean boolean27 = illegal24.isResolved();
        boolean boolean28 = illegal1.equals((java.lang.Object) illegal24);
        byte[] byteArray31 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit32 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp33 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean34 = explicit32.equals((java.lang.Object) noOp33);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = noOp33.locate("");
        boolean boolean37 = illegal1.equals((java.lang.Object) "");
        boolean boolean38 = illegal1.isResolved();
        boolean boolean39 = illegal1.isResolved();
        java.lang.Class<?> wildcardClass40 = illegal1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp33 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp33.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = compound9.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = compound9.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = compound9.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray16 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound17 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = compound17.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = compound17.locate(".class");
        boolean boolean22 = compound9.equals((java.lang.Object) resolution21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = compound9.locate("hi!");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(classFileLocatorArray16);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(resolution24);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str10 = illegal9.toString();
        byte[] byteArray13 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray15 = explicit14.resolve();
        boolean boolean16 = explicit14.isResolved();
        boolean boolean18 = explicit14.equals((java.lang.Object) 10L);
        java.lang.String str19 = explicit14.toString();
        byte[] byteArray20 = explicit14.resolve();
        boolean boolean21 = illegal9.equals((java.lang.Object) byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray20);
        boolean boolean23 = explicit4.equals((java.lang.Object) "");
        byte[] byteArray24 = explicit4.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str10, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str19, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean6 = explicit3.isResolved();
        java.lang.String str7 = explicit3.toString();
        byte[] byteArray8 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp9 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str10 = noOp9.toString();
        java.lang.String str11 = noOp9.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp9.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str14 = noOp9.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp9.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str17 = noOp9.toString();
        java.lang.String str18 = noOp9.toString();
        boolean boolean19 = explicit3.equals((java.lang.Object) str18);
        byte[] byteArray20 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str7, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp9 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp9.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str18, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        boolean boolean33 = compound31.equals((java.lang.Object) "hi!");
        boolean boolean35 = compound31.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound31.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound31.locate("");
        boolean boolean40 = illegal1.equals((java.lang.Object) "");
        java.lang.String str41 = illegal1.toString();
        java.lang.String str42 = illegal1.toString();
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray53 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray53);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray50, classFileLocator54);
        byte[] byteArray59 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator60 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray59);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray59);
        byte[] byteArray68 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray71 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator72 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray71);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray68, classFileLocator72);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp74 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray81 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray84 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator85 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray84);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator86 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray81, classFileLocator85);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp87 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str88 = noOp87.toString();
        java.lang.String str89 = noOp87.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray90 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator72, noOp74, classFileLocator86, noOp87 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound91 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray90);
        boolean boolean93 = compound91.equals((java.lang.Object) "hi!");
        java.lang.String str94 = compound91.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator95 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray59, (net.bytebuddy.dynamic.ClassFileLocator) compound91);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator96 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray50, (net.bytebuddy.dynamic.ClassFileLocator) compound91);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit97 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray50);
        boolean boolean98 = illegal1.equals((java.lang.Object) byteArray50);
        boolean boolean99 = illegal1.isResolved();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str41, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str42, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator60);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator72);
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertTrue("'" + noOp74 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp74.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator85);
        org.junit.Assert.assertNotNull(classFileLocator86);
        org.junit.Assert.assertTrue("'" + noOp87 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp87.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str88, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str89, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(classFileLocator95);
        org.junit.Assert.assertNotNull(classFileLocator96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean12 = explicit8.equals((java.lang.Object) 10L);
        boolean boolean13 = explicit8.isResolved();
        java.lang.String str14 = explicit8.toString();
        byte[] byteArray15 = explicit8.resolve();
        java.lang.String str16 = explicit8.toString();
        boolean boolean17 = explicit4.equals((java.lang.Object) str16);
        byte[] byteArray18 = explicit4.resolve();
        boolean boolean19 = explicit4.isResolved();
        boolean boolean20 = explicit4.isResolved();
        byte[] byteArray21 = explicit4.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str4 = compound3.toString();
        java.lang.String str5 = compound3.toString();
        java.lang.String str6 = compound3.toString();
        java.lang.String str7 = compound3.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = compound3.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str4, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str5, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str6, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str7, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution9);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str13 = noOp4.toString();
        java.lang.String str14 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str2 = compound1.toString();
        java.lang.String str3 = compound1.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = compound1.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = compound1.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = compound1.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = compound1.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str2, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str3, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution5);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str10 = noOp4.toString();
        java.lang.String str11 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean8 = explicit5.isResolved();
        java.lang.String str9 = explicit5.toString();
        byte[] byteArray10 = explicit5.resolve();
        byte[] byteArray19 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray10, classFileLocator21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray10);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocator25);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray9 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound10 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray9);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound11 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = compound11.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean14 = explicit3.equals((java.lang.Object) compound11);
        boolean boolean15 = explicit3.isResolved();
        byte[] byteArray16 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classFileLocatorArray9);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray4 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for hi!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        boolean boolean13 = explicit6.isResolved();
        boolean boolean14 = explicit6.isResolved();
        byte[] byteArray15 = explicit6.resolve();
        byte[] byteArray16 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray16);
        byte[] byteArray21 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        byte[] byteArray23 = explicit22.resolve();
        boolean boolean24 = explicit22.isResolved();
        boolean boolean26 = explicit22.equals((java.lang.Object) 10L);
        java.lang.String str27 = explicit22.toString();
        java.lang.String str28 = explicit22.toString();
        byte[] byteArray29 = explicit22.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit30 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray31 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound32 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray31);
        byte[] byteArray35 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit36 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray35);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp37 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean38 = explicit36.equals((java.lang.Object) noOp37);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = noOp37.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = noOp37.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str43 = noOp37.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution45 = noOp37.locate("");
        boolean boolean46 = compound32.equals((java.lang.Object) noOp37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray29, (net.bytebuddy.dynamic.ClassFileLocator) noOp37);
        java.lang.String str48 = noOp37.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) noOp37);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit50 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray51 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound52 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray51);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound53 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray51);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound54 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray51);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = compound54.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution58 = compound54.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution60 = compound54.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        java.lang.Object obj61 = null;
        boolean boolean62 = compound54.equals(obj61);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound54);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str27, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str28, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray31);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp37 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp37.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(classFileLocatorArray51);
        org.junit.Assert.assertNotNull(resolution56);
        org.junit.Assert.assertNotNull(resolution58);
        org.junit.Assert.assertNotNull(resolution60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(classFileLocator63);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.NoOp.INSTANCE");
        java.lang.Class<?> wildcardClass5 = illegal4.getClass();
        boolean boolean6 = illegal1.equals((java.lang.Object) wildcardClass5);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray7 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = explicit3.toString();
        boolean boolean7 = explicit3.isResolved();
        byte[] byteArray8 = explicit3.resolve();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        java.lang.String str11 = explicit3.toString();
        byte[] byteArray12 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str6, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        byte[] byteArray15 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray15);
        boolean boolean20 = explicit3.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean21 = explicit3.isResolved();
        java.lang.String str22 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str22, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        boolean boolean11 = explicit5.isResolved();
        boolean boolean12 = explicit5.isResolved();
        byte[] byteArray13 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray16 = explicit15.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray31 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28, classFileLocator32);
        byte[] byteArray36 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28, classFileLocator37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28);
        byte[] byteArray42 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit43 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray42);
        byte[] byteArray44 = explicit43.resolve();
        boolean boolean45 = explicit43.isResolved();
        boolean boolean47 = explicit43.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator48 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = classFileLocator48.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean51 = explicit43.equals((java.lang.Object) classFileLocator48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28, classFileLocator48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, classFileLocator53);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = classFileLocator53.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(classFileLocator48);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(resolution56);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        java.lang.String str12 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        boolean boolean33 = compound31.equals((java.lang.Object) "hi!");
        boolean boolean35 = compound31.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound31.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound31.locate("");
        boolean boolean40 = illegal1.equals((java.lang.Object) "");
        boolean boolean41 = illegal1.isResolved();
        java.lang.String str42 = illegal1.toString();
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray52 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray52);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray49, classFileLocator53);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp55 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray65 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray65);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray62, classFileLocator66);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp68 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str69 = noOp68.toString();
        java.lang.String str70 = noOp68.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray71 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator53, noOp55, classFileLocator67, noOp68 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound72 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray71);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution74 = compound72.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution76 = compound72.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean77 = illegal1.equals((java.lang.Object) compound72);
        boolean boolean78 = illegal1.isResolved();
        java.lang.String str79 = illegal1.toString();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str42, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertTrue("'" + noOp55 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp55.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertTrue("'" + noOp68 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp68.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str69, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str70, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray71);
        org.junit.Assert.assertNotNull(resolution74);
        org.junit.Assert.assertNotNull(resolution76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str79, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        java.lang.String str11 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(resolution15);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        java.lang.String str11 = explicit6.toString();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit32 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray30);
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray42 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray42);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray39, classFileLocator43);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp45 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray55 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray55);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray52, classFileLocator56);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp58 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str59 = noOp58.toString();
        java.lang.String str60 = noOp58.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray61 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator43, noOp45, classFileLocator57, noOp58 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound62 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray61);
        boolean boolean64 = compound62.equals((java.lang.Object) "hi!");
        java.lang.String str65 = compound62.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray30, (net.bytebuddy.dynamic.ClassFileLocator) compound62);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21, (net.bytebuddy.dynamic.ClassFileLocator) compound62);
        boolean boolean68 = explicit6.equals((java.lang.Object) "hi!");
        boolean boolean69 = illegal1.equals((java.lang.Object) explicit6);
        java.lang.String str70 = illegal1.toString();
        java.lang.String str71 = illegal1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertTrue("'" + noOp45 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp45.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertTrue("'" + noOp58 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp58.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str59, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str60, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str70, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str71, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = classFileLocator8.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean11 = explicit3.equals((java.lang.Object) classFileLocator8);
        boolean boolean13 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit3.isResolved();
        byte[] byteArray15 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        boolean boolean17 = explicit16.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        byte[] byteArray4 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator5 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray4);
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp10 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean11 = explicit9.equals((java.lang.Object) noOp10);
        java.lang.String str12 = noOp10.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray4, (net.bytebuddy.dynamic.ClassFileLocator) noOp10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator5);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp10 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp10.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        byte[] byteArray9 = explicit3.resolve();
        java.lang.String str10 = explicit3.toString();
        boolean boolean11 = explicit3.isResolved();
        boolean boolean12 = explicit3.isResolved();
        java.lang.String str13 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution3 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str6 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp0.locate("ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution3);
        org.junit.Assert.assertNotNull(resolution5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str15 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray13, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray22 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray22);
        byte[] byteArray25 = explicit24.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray25);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        java.lang.String str13 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        boolean boolean14 = explicit5.isResolved();
        boolean boolean15 = illegal1.equals((java.lang.Object) explicit5);
        boolean boolean16 = explicit5.isResolved();
        byte[] byteArray19 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        byte[] byteArray21 = explicit20.resolve();
        boolean boolean22 = explicit20.isResolved();
        boolean boolean24 = explicit20.equals((java.lang.Object) 10L);
        java.lang.String str25 = explicit20.toString();
        java.lang.String str26 = explicit20.toString();
        byte[] byteArray27 = explicit20.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit28 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray27);
        boolean boolean29 = explicit5.equals((java.lang.Object) byteArray27);
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray39 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray36, classFileLocator40);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp42 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray52 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray52);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray49, classFileLocator53);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp55 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str56 = noOp55.toString();
        java.lang.String str57 = noOp55.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray58 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator40, noOp42, classFileLocator54, noOp55 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound59 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray58);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp60 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str61 = noOp60.toString();
        java.lang.String str62 = noOp60.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution64 = noOp60.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean65 = compound59.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal67 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean68 = compound59.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution70 = compound59.locate("");
        boolean boolean71 = explicit5.equals((java.lang.Object) compound59);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution73 = compound59.locate("");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str25, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str26, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertTrue("'" + noOp42 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp42.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertTrue("'" + noOp55 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp55.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str56, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str57, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray58);
        org.junit.Assert.assertTrue("'" + noOp60 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp60.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str61, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str62, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(resolution70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(resolution73);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        boolean boolean11 = explicit3.isResolved();
        boolean boolean12 = explicit3.isResolved();
        java.lang.Class<?> wildcardClass13 = explicit3.getClass();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp18 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str32 = noOp31.toString();
        java.lang.String str33 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray34 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator16, noOp18, classFileLocator30, noOp31 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray34);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound35.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound35.locate("");
        boolean boolean40 = explicit5.equals((java.lang.Object) compound35);
        byte[] byteArray41 = explicit5.resolve();
        java.lang.Class<?> wildcardClass42 = explicit5.getClass();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertTrue("'" + noOp18 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp18.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray34);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        boolean boolean11 = explicit4.isResolved();
        boolean boolean12 = explicit4.isResolved();
        byte[] byteArray13 = explicit4.resolve();
        byte[] byteArray14 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp15 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str16 = noOp15.toString();
        java.lang.String str17 = noOp15.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp15.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str20 = noOp15.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp15.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = noOp15.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution26 = noOp15.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str27 = noOp15.toString();
        java.lang.String str28 = noOp15.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution30 = noOp15.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean31 = explicit4.equals((java.lang.Object) noOp15);
        byte[] byteArray32 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit33 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray32);
        byte[] byteArray38 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit39 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray38);
        byte[] byteArray40 = explicit39.resolve();
        boolean boolean41 = explicit39.isResolved();
        boolean boolean43 = explicit39.equals((java.lang.Object) 10L);
        boolean boolean44 = explicit39.isResolved();
        java.lang.String str45 = explicit39.toString();
        byte[] byteArray46 = explicit39.resolve();
        java.lang.String str47 = explicit39.toString();
        boolean boolean48 = explicit39.isResolved();
        byte[] byteArray49 = explicit39.resolve();
        boolean boolean50 = explicit39.isResolved();
        byte[] byteArray51 = explicit39.resolve();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray52 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound53 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray52);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound54 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray52);
        java.lang.String str55 = compound54.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = compound54.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray51, (net.bytebuddy.dynamic.ClassFileLocator) compound54);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}", byteArray51);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator60 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray32, classFileLocator59);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp15 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp15.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertNotNull(resolution26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str45, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str47, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str55, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution57);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(classFileLocator60);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str36 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        byte[] byteArray47 = explicit46.resolve();
        boolean boolean48 = explicit46.isResolved();
        boolean boolean50 = explicit46.equals((java.lang.Object) 10L);
        boolean boolean51 = explicit46.isResolved();
        java.lang.String str52 = explicit46.toString();
        boolean boolean53 = explicit46.isResolved();
        byte[] byteArray54 = explicit46.resolve();
        boolean boolean55 = compound29.equals((java.lang.Object) explicit46);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str52, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(resolution57);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        java.lang.String str12 = explicit4.toString();
        java.lang.String str13 = explicit4.toString();
        byte[] byteArray14 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray14);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean4 = illegal3.isResolved();
        boolean boolean5 = illegal3.isResolved();
        java.lang.String str6 = illegal3.toString();
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        byte[] byteArray11 = explicit10.resolve();
        boolean boolean13 = explicit10.equals((java.lang.Object) (short) 0);
        boolean boolean14 = illegal3.equals((java.lang.Object) explicit10);
        byte[] byteArray19 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        byte[] byteArray21 = explicit20.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        boolean boolean24 = explicit23.isResolved();
        byte[] byteArray25 = explicit23.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        boolean boolean27 = illegal3.equals((java.lang.Object) byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray29 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound32 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound33 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound34 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}", byteArray25, (net.bytebuddy.dynamic.ClassFileLocator) compound34);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit36 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray25);
        boolean boolean37 = explicit36.isResolved();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str6, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocatorArray29);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str4 = illegal3.toString();
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean12 = explicit8.equals((java.lang.Object) 10L);
        java.lang.String str13 = explicit8.toString();
        byte[] byteArray14 = explicit8.resolve();
        boolean boolean15 = illegal3.equals((java.lang.Object) byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray27, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp33 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray43 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray40, classFileLocator44);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp46 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str47 = noOp46.toString();
        java.lang.String str48 = noOp46.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray49 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator31, noOp33, classFileLocator45, noOp46 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound50 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound50.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray53 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator20, compound50 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound54 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray53);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray14, (net.bytebuddy.dynamic.ClassFileLocator) compound54);
        java.lang.String str56 = compound54.toString();
        java.lang.String str57 = compound54.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution59 = compound54.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution61 = compound54.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution63 = compound54.locate("hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertTrue("'" + noOp33 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp33.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertTrue("'" + noOp46 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp46.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str47, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray49);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(classFileLocatorArray53);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(resolution59);
        org.junit.Assert.assertNotNull(resolution61);
        org.junit.Assert.assertNotNull(resolution63);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean7 = explicit4.isResolved();
        java.lang.String str8 = explicit4.toString();
        byte[] byteArray9 = explicit4.resolve();
        byte[] byteArray18 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray9, classFileLocator20);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        byte[] byteArray25 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray25);
        byte[] byteArray27 = explicit26.resolve();
        boolean boolean28 = explicit26.isResolved();
        boolean boolean30 = explicit26.equals((java.lang.Object) 10L);
        boolean boolean31 = explicit26.isResolved();
        java.lang.String str32 = explicit26.toString();
        byte[] byteArray33 = explicit26.resolve();
        java.lang.String str34 = explicit26.toString();
        byte[] byteArray35 = explicit26.resolve();
        boolean boolean36 = explicit26.isResolved();
        byte[] byteArray37 = explicit26.resolve();
        java.lang.Object obj38 = null;
        boolean boolean39 = explicit26.equals(obj38);
        byte[] byteArray40 = explicit26.resolve();
        java.lang.String str41 = explicit26.toString();
        boolean boolean42 = explicit22.equals((java.lang.Object) str41);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str32, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str34, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str41, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        java.lang.String str6 = explicit4.toString();
        boolean boolean7 = explicit4.isResolved();
        java.lang.String str8 = explicit4.toString();
        byte[] byteArray9 = explicit4.resolve();
        boolean boolean10 = explicit4.isResolved();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray11);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str6, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp28 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray38 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray35, classFileLocator39);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp41 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str42 = noOp41.toString();
        java.lang.String str43 = noOp41.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray44 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator26, noOp28, classFileLocator40, noOp41 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound45 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray44);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = compound45.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray48 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator15, compound45 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound49 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound50 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        boolean boolean51 = explicit3.equals((java.lang.Object) classFileLocatorArray48);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound52 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound53 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound53.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = compound53.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertTrue("'" + noOp28 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp28.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertTrue("'" + noOp41 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp41.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray44);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertNotNull(classFileLocatorArray48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertNotNull(resolution57);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal2 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean3 = illegal2.isResolved();
        boolean boolean4 = illegal2.isResolved();
        java.lang.String str5 = illegal2.toString();
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean12 = explicit9.equals((java.lang.Object) (short) 0);
        boolean boolean13 = illegal2.equals((java.lang.Object) explicit9);
        byte[] byteArray18 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        byte[] byteArray20 = explicit19.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        boolean boolean23 = explicit22.isResolved();
        byte[] byteArray24 = explicit22.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        boolean boolean26 = illegal2.equals((java.lang.Object) byteArray24);
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray37 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray34, classFileLocator38);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp40 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray47 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray50 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray50);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray47, classFileLocator51);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp53 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str54 = noOp53.toString();
        java.lang.String str55 = noOp53.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray56 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator38, noOp40, classFileLocator52, noOp53 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound57 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray56);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution59 = compound57.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str60 = compound57.toString();
        byte[] byteArray64 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit65 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray64);
        byte[] byteArray66 = explicit65.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray66);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit68 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray66);
        boolean boolean69 = compound57.equals((java.lang.Object) byteArray66);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray66);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray24, classFileLocator70);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str5, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertTrue("'" + noOp40 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp40.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertTrue("'" + noOp53 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp53.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str54, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str55, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray56);
        org.junit.Assert.assertNotNull(resolution59);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(classFileLocator70);
        org.junit.Assert.assertNotNull(classFileLocator71);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        java.lang.String str6 = noOp0.toString();
        java.lang.String str7 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str7, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound2.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution6 = compound2.locate("hi!");
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        boolean boolean38 = compound36.equals((java.lang.Object) "hi!");
        boolean boolean40 = compound36.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound36.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound36.locate("");
        java.lang.String str45 = compound36.toString();
        java.lang.String str46 = compound36.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution48 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        boolean boolean49 = compound2.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str50 = compound2.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound2.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = compound2.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertNotNull(resolution6);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertNotNull(resolution48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str50, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(resolution54);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        byte[] byteArray18 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10);
        byte[] byteArray24 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit25 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray24);
        byte[] byteArray26 = explicit25.resolve();
        boolean boolean27 = explicit25.isResolved();
        boolean boolean29 = explicit25.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = classFileLocator30.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean33 = explicit25.equals((java.lang.Object) classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray10, classFileLocator35);
        byte[] byteArray41 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit42 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray41);
        byte[] byteArray43 = explicit42.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray46 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator35, classFileLocator45 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound47 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray46);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound48 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray46);
        java.lang.Class<?> wildcardClass49 = classFileLocatorArray46.getClass();
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(resolution32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertNotNull(classFileLocatorArray46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        boolean boolean11 = explicit4.isResolved();
        boolean boolean12 = explicit4.isResolved();
        byte[] byteArray13 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}", byteArray13);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        java.lang.String str11 = illegal7.toString();
        java.lang.String str12 = illegal7.toString();
        boolean boolean13 = illegal7.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str12, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str10 = noOp4.toString();
        java.lang.String str11 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str2 = compound1.toString();
        java.lang.String str3 = compound1.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = compound1.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = compound1.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = compound1.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = compound1.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str2, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str3, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution5);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        java.lang.String str4 = illegal1.toString();
        java.lang.String str5 = illegal1.toString();
        java.lang.Object obj6 = null;
        boolean boolean7 = illegal1.equals(obj6);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str5, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        boolean boolean8 = explicit7.isResolved();
        byte[] byteArray9 = explicit7.resolve();
        java.lang.String str10 = explicit7.toString();
        byte[] byteArray11 = explicit7.resolve();
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        byte[] byteArray19 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        byte[] byteArray21 = explicit20.resolve();
        boolean boolean22 = explicit20.isResolved();
        boolean boolean24 = explicit20.equals((java.lang.Object) 10L);
        boolean boolean25 = explicit20.isResolved();
        java.lang.String str26 = explicit20.toString();
        byte[] byteArray27 = explicit20.resolve();
        java.lang.String str28 = explicit20.toString();
        boolean boolean29 = explicit16.equals((java.lang.Object) str28);
        byte[] byteArray30 = explicit16.resolve();
        java.lang.String str31 = explicit16.toString();
        boolean boolean32 = explicit7.equals((java.lang.Object) explicit16);
        byte[] byteArray33 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit34 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray33);
        java.lang.String str35 = explicit34.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str26, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str28, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str31, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str35, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}", byteArray5);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray12 = explicit3.resolve();
        byte[] byteArray13 = explicit3.resolve();
        byte[] byteArray14 = explicit3.resolve();
        boolean boolean15 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray8);
        byte[] byteArray13 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray15 = explicit14.resolve();
        boolean boolean16 = explicit14.isResolved();
        boolean boolean18 = explicit14.equals((java.lang.Object) 10L);
        boolean boolean19 = explicit14.isResolved();
        java.lang.String str20 = explicit14.toString();
        byte[] byteArray21 = explicit14.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp22 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str23 = noOp22.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution25 = noOp22.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray21, (net.bytebuddy.dynamic.ClassFileLocator) noOp22);
        java.lang.String str27 = noOp22.toString();
        java.lang.String str28 = noOp22.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution30 = noOp22.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = noOp22.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) noOp22);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str20, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp22 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp22.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str23, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution30);
        org.junit.Assert.assertNotNull(resolution32);
        org.junit.Assert.assertNotNull(classFileLocator33);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean11 = explicit8.equals((java.lang.Object) (short) 0);
        boolean boolean12 = explicit8.isResolved();
        boolean boolean13 = explicit8.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean16 = illegal15.isResolved();
        boolean boolean18 = illegal15.equals((java.lang.Object) 100);
        boolean boolean19 = explicit8.equals((java.lang.Object) boolean18);
        boolean boolean20 = compound4.equals((java.lang.Object) explicit8);
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str12 = noOp0.toString();
        java.lang.String str13 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str16 = noOp0.toString();
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray10 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        byte[] byteArray12 = explicit11.resolve();
        boolean boolean13 = explicit11.isResolved();
        boolean boolean15 = explicit11.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = classFileLocator16.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean19 = explicit11.equals((java.lang.Object) classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = classFileLocator16.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        boolean boolean22 = explicit7.equals((java.lang.Object) resolution21);
        boolean boolean23 = explicit7.isResolved();
        byte[] byteArray24 = explicit7.resolve();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100]");
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray5);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str31 = noOp30.toString();
        java.lang.String str32 = noOp30.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = noOp30.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean35 = compound29.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal37 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean38 = compound29.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str39 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(resolution43);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray12 = explicit3.resolve();
        byte[] byteArray13 = explicit3.resolve();
        byte[] byteArray14 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, classFileLocator15);
        byte[] byteArray20 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray32 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray29, classFileLocator33);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp35 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray42 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray45 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray42, classFileLocator46);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp48 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str49 = noOp48.toString();
        java.lang.String str50 = noOp48.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray51 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator33, noOp35, classFileLocator47, noOp48 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound52 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray51);
        boolean boolean54 = compound52.equals((java.lang.Object) "hi!");
        java.lang.String str55 = compound52.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray20, (net.bytebuddy.dynamic.ClassFileLocator) compound52);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) compound52);
        boolean boolean58 = illegal1.equals((java.lang.Object) classFileLocator57);
        java.lang.String str59 = illegal1.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertTrue("'" + noOp35 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp35.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertTrue("'" + noOp48 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp48.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str50, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str59, "ClassFileLocator.Resolution.Illegal{typeName=''}");
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution3 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution3);
        org.junit.Assert.assertNotNull(resolution5);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str32 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str35 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("hi!");
        byte[] byteArray38 = resolution37.resolve();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]");
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = classFileLocator8.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean11 = explicit3.equals((java.lang.Object) classFileLocator8);
        boolean boolean12 = explicit3.isResolved();
        byte[] byteArray13 = explicit3.resolve();
        java.lang.Object obj14 = null;
        boolean boolean15 = explicit3.equals(obj14);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate(".class");
        java.lang.String str14 = noOp4.toString();
        java.lang.String str15 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray8 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray8);
        byte[] byteArray12 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean15 = explicit13.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str20 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp14.locate("");
        boolean boolean23 = compound9.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        java.lang.String str25 = noOp14.toString();
        java.lang.String str26 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution28 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        java.lang.String str29 = noOp14.toString();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(classFileLocatorArray8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str25, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        java.lang.String str4 = illegal1.toString();
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean12 = explicit9.equals((java.lang.Object) (short) 0);
        byte[] byteArray13 = explicit9.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray22 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray22);
        boolean boolean25 = explicit24.isResolved();
        byte[] byteArray26 = explicit24.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray13, classFileLocator28);
        boolean boolean30 = illegal1.equals((java.lang.Object) classFileLocator28);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray31 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = classFileLocator11.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = illegal7.equals((java.lang.Object) resolution13);
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        boolean boolean16 = illegal1.isResolved();
        boolean boolean17 = illegal1.isResolved();
        boolean boolean18 = illegal1.isResolved();
        boolean boolean19 = illegal1.isResolved();
        java.lang.String str20 = illegal1.toString();
        byte[] byteArray27 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit28 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray27);
        byte[] byteArray29 = explicit28.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray31 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound32 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray31);
        byte[] byteArray35 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit36 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray35);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp37 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean38 = explicit36.equals((java.lang.Object) noOp37);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = noOp37.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = noOp37.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str43 = noOp37.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution45 = noOp37.locate("");
        boolean boolean46 = compound32.equals((java.lang.Object) noOp37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray29, (net.bytebuddy.dynamic.ClassFileLocator) noOp37);
        byte[] byteArray54 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray57 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray57);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray54, classFileLocator58);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp60 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray67 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray70 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray70);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator72 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray67, classFileLocator71);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp73 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str74 = noOp73.toString();
        java.lang.String str75 = noOp73.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray76 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator58, noOp60, classFileLocator72, noOp73 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound77 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray76);
        boolean boolean79 = compound77.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator80 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray29, (net.bytebuddy.dynamic.ClassFileLocator) compound77);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit81 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator82 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution84 = classFileLocator82.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        boolean boolean85 = illegal1.equals((java.lang.Object) classFileLocator82);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str20, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocatorArray31);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp37 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp37.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertTrue("'" + noOp60 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp60.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertNotNull(classFileLocator72);
        org.junit.Assert.assertTrue("'" + noOp73 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp73.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str74, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str75, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(classFileLocator80);
        org.junit.Assert.assertNotNull(classFileLocator82);
        org.junit.Assert.assertNotNull(resolution84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        boolean boolean33 = compound31.equals((java.lang.Object) "hi!");
        boolean boolean35 = compound31.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound31.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound31.locate("");
        java.lang.String str40 = compound31.toString();
        java.lang.String str41 = compound31.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution45 = compound31.locate(".class");
        byte[] byteArray54 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray54);
        byte[] byteArray60 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        byte[] byteArray62 = explicit61.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray62);
        byte[] byteArray71 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray74 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator75 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray74);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator76 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray71, classFileLocator75);
        byte[] byteArray79 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator80 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray79);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator81 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray71, classFileLocator80);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator82 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray62, classFileLocator80);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator83 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray54, classFileLocator82);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit84 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray54);
        boolean boolean85 = compound31.equals((java.lang.Object) explicit84);
        java.lang.String str86 = compound31.toString();
        boolean boolean88 = compound31.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}");
        boolean boolean89 = illegal1.equals((java.lang.Object) compound31);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertNotNull(resolution45);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator75);
        org.junit.Assert.assertNotNull(classFileLocator76);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator80);
        org.junit.Assert.assertNotNull(classFileLocator81);
        org.junit.Assert.assertNotNull(classFileLocator82);
        org.junit.Assert.assertNotNull(classFileLocator83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22);
        byte[] byteArray36 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit37 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray36);
        byte[] byteArray38 = explicit37.resolve();
        boolean boolean39 = explicit37.isResolved();
        boolean boolean41 = explicit37.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = classFileLocator42.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean45 = explicit37.equals((java.lang.Object) classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray22);
        boolean boolean48 = explicit12.equals((java.lang.Object) explicit47);
        boolean boolean49 = explicit12.isResolved();
        boolean boolean50 = explicit12.isResolved();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        java.lang.String str11 = illegal1.toString();
        java.lang.String str12 = illegal1.toString();
        java.lang.String str13 = illegal1.toString();
        java.lang.String str14 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray15 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str12, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str13, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str14, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        java.lang.String str4 = illegal1.toString();
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean11 = explicit8.equals((java.lang.Object) (short) 0);
        boolean boolean12 = illegal1.equals((java.lang.Object) explicit8);
        byte[] byteArray13 = explicit8.resolve();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str31 = noOp30.toString();
        java.lang.String str32 = noOp30.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = noOp30.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean35 = compound29.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str36 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(resolution38);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = classFileLocator10.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean13 = explicit5.equals((java.lang.Object) classFileLocator10);
        java.lang.String str14 = explicit5.toString();
        boolean boolean15 = explicit5.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        java.lang.String str18 = illegal17.toString();
        boolean boolean19 = illegal17.isResolved();
        boolean boolean20 = explicit5.equals((java.lang.Object) boolean19);
        boolean boolean21 = compound1.equals((java.lang.Object) explicit5);
        boolean boolean22 = explicit5.isResolved();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str18, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str14 = noOp4.toString();
        java.lang.String str15 = noOp4.toString();
        java.lang.String str16 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        boolean boolean11 = explicit4.isResolved();
        boolean boolean12 = explicit4.isResolved();
        byte[] byteArray13 = explicit4.resolve();
        byte[] byteArray14 = explicit4.resolve();
        byte[] byteArray15 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray15);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp4.locate(".class");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertNotNull(resolution10);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        boolean boolean11 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray12 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        byte[] byteArray1 = new byte[] { (byte) 10 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit2 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray1);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[10]");
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        byte[] byteArray6 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray8 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray8);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp6 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean7 = explicit5.equals((java.lang.Object) noOp6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp6.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp6.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str12 = noOp6.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp6.locate("");
        boolean boolean15 = compound1.equals((java.lang.Object) noOp6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp6.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp6.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp6.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp6.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution25 = noOp6.locate("ClassFileLocator.NoOp.INSTANCE");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray26 = resolution25.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.NoOp.INSTANCE");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp6 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp6.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertNotNull(resolution25);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        boolean boolean6 = explicit5.isResolved();
        byte[] byteArray7 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        boolean boolean9 = explicit8.isResolved();
        java.lang.String str10 = explicit8.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray6);
        java.lang.Class<?> wildcardClass9 = classFileLocator8.getClass();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        byte[] byteArray9 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray12 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, classFileLocator13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray9, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp44 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str45 = noOp44.toString();
        java.lang.String str46 = noOp44.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray47 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator29, noOp31, classFileLocator43, noOp44 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound48 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray47);
        boolean boolean50 = compound48.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound48.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray9, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + noOp44 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp44.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(classFileLocator53);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        byte[] byteArray12 = explicit4.resolve();
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp22 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean23 = explicit21.equals((java.lang.Object) noOp22);
        java.lang.String str24 = noOp22.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) noOp22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray12, (net.bytebuddy.dynamic.ClassFileLocator) noOp22);
        java.lang.String str27 = noOp22.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution29 = noOp22.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        java.lang.String str30 = noOp22.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp22 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp22.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str24, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str30, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        byte[] byteArray9 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray12 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, classFileLocator13);
        byte[] byteArray18 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray27, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp33 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray43 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray40, classFileLocator44);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp46 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str47 = noOp46.toString();
        java.lang.String str48 = noOp46.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray49 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator31, noOp33, classFileLocator45, noOp46 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound50 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray49);
        boolean boolean52 = compound50.equals((java.lang.Object) "hi!");
        java.lang.String str53 = compound50.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18, (net.bytebuddy.dynamic.ClassFileLocator) compound50);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9, (net.bytebuddy.dynamic.ClassFileLocator) compound50);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit56 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        byte[] byteArray63 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray66 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray66);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray63, classFileLocator67);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp69 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray76 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray79 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator80 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray79);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator81 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray76, classFileLocator80);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp82 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str83 = noOp82.toString();
        java.lang.String str84 = noOp82.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray85 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator67, noOp69, classFileLocator81, noOp82 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound86 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray85);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution88 = compound86.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution90 = compound86.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator91 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray9, (net.bytebuddy.dynamic.ClassFileLocator) compound86);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator92 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution94 = classFileLocator92.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution96 = classFileLocator92.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertTrue("'" + noOp33 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp33.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertTrue("'" + noOp46 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp46.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str47, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertTrue("'" + noOp69 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp69.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator80);
        org.junit.Assert.assertNotNull(classFileLocator81);
        org.junit.Assert.assertTrue("'" + noOp82 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp82.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str83, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str84, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray85);
        org.junit.Assert.assertNotNull(resolution88);
        org.junit.Assert.assertNotNull(resolution90);
        org.junit.Assert.assertNotNull(classFileLocator91);
        org.junit.Assert.assertNotNull(classFileLocator92);
        org.junit.Assert.assertNotNull(resolution94);
        org.junit.Assert.assertNotNull(resolution96);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate(".class");
        boolean boolean8 = resolution7.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        java.lang.String str4 = illegal1.toString();
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean11 = explicit8.equals((java.lang.Object) (short) 0);
        boolean boolean12 = illegal1.equals((java.lang.Object) explicit8);
        boolean boolean13 = explicit8.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean4 = illegal3.isResolved();
        byte[] byteArray16 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, classFileLocator20);
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16);
        byte[] byteArray30 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit31 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray30);
        byte[] byteArray32 = explicit31.resolve();
        boolean boolean33 = explicit31.isResolved();
        boolean boolean35 = explicit31.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = classFileLocator36.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean39 = explicit31.equals((java.lang.Object) classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16, classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray16, classFileLocator41);
        byte[] byteArray46 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray46);
        byte[] byteArray48 = explicit47.resolve();
        boolean boolean49 = explicit47.isResolved();
        boolean boolean51 = explicit47.equals((java.lang.Object) 10L);
        boolean boolean52 = explicit47.isResolved();
        java.lang.String str53 = explicit47.toString();
        byte[] byteArray54 = explicit47.resolve();
        byte[] byteArray55 = explicit47.resolve();
        byte[] byteArray59 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator60 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray59);
        byte[] byteArray63 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit64 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray63);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp65 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean66 = explicit64.equals((java.lang.Object) noOp65);
        java.lang.String str67 = noOp65.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray59, (net.bytebuddy.dynamic.ClassFileLocator) noOp65);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray55, (net.bytebuddy.dynamic.ClassFileLocator) noOp65);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) noOp65);
        boolean boolean71 = illegal3.equals((java.lang.Object) noOp65);
        java.lang.String str72 = noOp65.toString();
        boolean boolean73 = illegal1.equals((java.lang.Object) noOp65);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution75 = noOp65.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution77 = noOp65.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str53, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator60);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp65 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp65.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str67, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertNotNull(classFileLocator70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str72, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(resolution75);
        org.junit.Assert.assertNotNull(resolution77);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.NoOp.INSTANCE");
        java.lang.Class<?> wildcardClass5 = illegal4.getClass();
        boolean boolean6 = illegal1.equals((java.lang.Object) wildcardClass5);
        boolean boolean7 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = classFileLocator8.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean11 = explicit3.equals((java.lang.Object) classFileLocator8);
        boolean boolean12 = explicit3.isResolved();
        byte[] byteArray13 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        boolean boolean16 = explicit15.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        boolean boolean20 = explicit18.equals((java.lang.Object) 1.0d);
        boolean boolean21 = explicit18.isResolved();
        boolean boolean22 = explicit18.isResolved();
        boolean boolean23 = explicit18.isResolved();
        java.lang.String str24 = explicit18.toString();
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}" + "'", str24, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        java.lang.String str13 = explicit12.toString();
        java.lang.String str14 = explicit12.toString();
        boolean boolean15 = explicit12.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("");
        java.lang.String str13 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp4.locate("");
        java.lang.String str16 = noOp4.toString();
        java.lang.String str17 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray6 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray8 = explicit7.resolve();
        boolean boolean9 = explicit7.isResolved();
        boolean boolean11 = explicit7.equals((java.lang.Object) 10L);
        boolean boolean12 = explicit7.isResolved();
        java.lang.String str13 = explicit7.toString();
        byte[] byteArray14 = explicit7.resolve();
        java.lang.String str15 = explicit7.toString();
        boolean boolean16 = explicit7.isResolved();
        boolean boolean17 = illegal3.equals((java.lang.Object) explicit7);
        boolean boolean18 = explicit7.isResolved();
        byte[] byteArray19 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        java.lang.String str23 = explicit22.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str23, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp13 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray23 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray20, classFileLocator24);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp26 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str27 = noOp26.toString();
        java.lang.String str28 = noOp26.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray29 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator11, noOp13, classFileLocator25, noOp26 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = compound30.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str33 = compound30.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound30.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        byte[] byteArray39 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit40 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        byte[] byteArray41 = explicit40.resolve();
        java.lang.String str42 = explicit40.toString();
        boolean boolean43 = explicit40.isResolved();
        java.lang.String str44 = explicit40.toString();
        byte[] byteArray45 = explicit40.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray45);
        boolean boolean47 = compound30.equals((java.lang.Object) byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit48 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        byte[] byteArray53 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit54 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray53);
        byte[] byteArray55 = explicit54.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray55);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray57 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound58 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray57);
        byte[] byteArray61 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit62 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp63 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean64 = explicit62.equals((java.lang.Object) noOp63);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution66 = noOp63.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution68 = noOp63.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str69 = noOp63.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution71 = noOp63.locate("");
        boolean boolean72 = compound58.equals((java.lang.Object) noOp63);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray55, (net.bytebuddy.dynamic.ClassFileLocator) noOp63);
        java.lang.String str74 = noOp63.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution76 = noOp63.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator77 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray45, (net.bytebuddy.dynamic.ClassFileLocator) noOp63);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit78 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertTrue("'" + noOp13 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp13.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertTrue("'" + noOp26 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp26.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray29);
        org.junit.Assert.assertNotNull(resolution32);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str42, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str44, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(classFileLocatorArray57);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp63 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp63.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(resolution66);
        org.junit.Assert.assertNotNull(resolution68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str69, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str74, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution76);
        org.junit.Assert.assertNotNull(classFileLocator77);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray11 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound12 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound13 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound14 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        boolean boolean15 = explicit3.equals((java.lang.Object) classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound16 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound17 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound19 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        byte[] byteArray23 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit25 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        byte[] byteArray29 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit30 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean32 = explicit30.equals((java.lang.Object) noOp31);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = noOp31.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = noOp31.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = noOp31.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray23, (net.bytebuddy.dynamic.ClassFileLocator) noOp31);
        java.lang.String str40 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = noOp31.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = noOp31.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean45 = compound19.equals((java.lang.Object) noOp31);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = noOp31.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        java.lang.Class<?> wildcardClass48 = resolution47.getClass();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(classFileLocatorArray11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str40, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        byte[] byteArray9 = explicit3.resolve();
        byte[] byteArray10 = explicit3.resolve();
        byte[] byteArray11 = explicit3.resolve();
        byte[] byteArray12 = explicit3.resolve();
        byte[] byteArray13 = explicit3.resolve();
        byte[] byteArray14 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray9);
        byte[] byteArray15 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        byte[] byteArray17 = explicit16.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray17);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        byte[] byteArray34 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray17, classFileLocator35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray9, classFileLocator37);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit39 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}", byteArray9);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator40);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(classFileLocator8);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal2 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        java.lang.String str14 = explicit6.toString();
        boolean boolean15 = explicit6.isResolved();
        boolean boolean16 = illegal2.equals((java.lang.Object) explicit6);
        boolean boolean17 = explicit6.isResolved();
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray22 = explicit21.resolve();
        boolean boolean23 = explicit21.isResolved();
        boolean boolean25 = explicit21.equals((java.lang.Object) 10L);
        java.lang.String str26 = explicit21.toString();
        java.lang.String str27 = explicit21.toString();
        byte[] byteArray28 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit29 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray28);
        boolean boolean30 = explicit6.equals((java.lang.Object) byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit32 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray28);
        java.lang.String str33 = explicit32.toString();
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str26, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str27, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str33, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        java.lang.String str11 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("hi!");
        java.lang.String str14 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp4.locate(".class");
        boolean boolean17 = resolution16.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        java.lang.String str9 = explicit4.toString();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray13 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound14 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean20 = explicit18.equals((java.lang.Object) noOp19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp19.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = noOp19.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str25 = noOp19.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution27 = noOp19.locate("");
        boolean boolean28 = compound14.equals((java.lang.Object) noOp19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = noOp19.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = noOp19.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str25, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp28 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray38 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray35, classFileLocator39);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp41 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str42 = noOp41.toString();
        java.lang.String str43 = noOp41.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray44 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator26, noOp28, classFileLocator40, noOp41 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound45 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray44);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = compound45.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray48 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator15, compound45 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound49 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound50 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        boolean boolean51 = explicit3.equals((java.lang.Object) classFileLocatorArray48);
        boolean boolean52 = explicit3.isResolved();
        byte[] byteArray53 = explicit3.resolve();
        java.lang.String str54 = explicit3.toString();
        java.lang.String str55 = explicit3.toString();
        java.lang.String str56 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertTrue("'" + noOp28 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp28.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertTrue("'" + noOp41 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp41.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray44);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertNotNull(classFileLocatorArray48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str54, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str55, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str56, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        java.lang.String str11 = illegal1.toString();
        boolean boolean12 = illegal1.isResolved();
        boolean boolean13 = illegal1.isResolved();
        boolean boolean14 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray23, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray39 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray36, classFileLocator40);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp42 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str43 = noOp42.toString();
        java.lang.String str44 = noOp42.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray45 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator27, noOp29, classFileLocator41, noOp42 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound46 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray45);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution48 = compound46.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound46.locate("");
        boolean boolean51 = illegal16.equals((java.lang.Object) resolution50);
        java.lang.String str52 = illegal16.toString();
        byte[] byteArray55 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit56 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray55);
        byte[] byteArray57 = explicit56.resolve();
        boolean boolean58 = explicit56.isResolved();
        boolean boolean60 = explicit56.equals((java.lang.Object) 10L);
        boolean boolean61 = explicit56.isResolved();
        java.lang.String str62 = explicit56.toString();
        byte[] byteArray63 = explicit56.resolve();
        boolean boolean64 = illegal16.equals((java.lang.Object) byteArray63);
        byte[] byteArray67 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit68 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray67);
        byte[] byteArray69 = explicit68.resolve();
        boolean boolean70 = explicit68.isResolved();
        boolean boolean72 = explicit68.equals((java.lang.Object) 10L);
        boolean boolean73 = explicit68.isResolved();
        java.lang.String str74 = explicit68.toString();
        boolean boolean75 = explicit68.isResolved();
        boolean boolean76 = explicit68.isResolved();
        byte[] byteArray77 = explicit68.resolve();
        boolean boolean78 = illegal16.equals((java.lang.Object) explicit68);
        boolean boolean79 = illegal1.equals((java.lang.Object) explicit68);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray80 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertTrue("'" + noOp42 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp42.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray45);
        org.junit.Assert.assertNotNull(resolution48);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str52, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str62, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str74, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        boolean boolean3 = illegal1.isResolved();
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        java.lang.Class<?> wildcardClass6 = illegal1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        byte[] byteArray1 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray1);
        org.junit.Assert.assertNotNull(classFileLocator2);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22);
        byte[] byteArray36 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit37 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray36);
        byte[] byteArray38 = explicit37.resolve();
        boolean boolean39 = explicit37.isResolved();
        boolean boolean41 = explicit37.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = classFileLocator42.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean45 = explicit37.equals((java.lang.Object) classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray22);
        boolean boolean48 = explicit12.equals((java.lang.Object) explicit47);
        boolean boolean49 = explicit12.isResolved();
        boolean boolean50 = explicit12.isResolved();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("hi!");
        java.lang.String str12 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp4.locate(".class");
        java.lang.String str15 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp4.locate("");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution17);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        byte[] byteArray9 = explicit3.resolve();
        byte[] byteArray10 = explicit3.resolve();
        boolean boolean11 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray11 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean12 = explicit8.equals((java.lang.Object) 10L);
        boolean boolean13 = explicit8.isResolved();
        java.lang.String str14 = explicit8.toString();
        byte[] byteArray15 = explicit8.resolve();
        java.lang.String str16 = explicit8.toString();
        boolean boolean17 = explicit4.equals((java.lang.Object) str16);
        byte[] byteArray18 = explicit4.resolve();
        byte[] byteArray24 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit25 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray24);
        byte[] byteArray26 = explicit25.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        byte[] byteArray32 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit33 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp34 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean35 = explicit33.equals((java.lang.Object) noOp34);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = noOp34.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = noOp34.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str40 = noOp34.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = noOp34.locate("");
        boolean boolean43 = compound29.equals((java.lang.Object) noOp34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray26, (net.bytebuddy.dynamic.ClassFileLocator) noOp34);
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray54 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray54);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray51, classFileLocator55);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp57 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray67 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray67);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray64, classFileLocator68);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp70 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str71 = noOp70.toString();
        java.lang.String str72 = noOp70.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray73 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator55, noOp57, classFileLocator69, noOp70 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound74 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray73);
        boolean boolean76 = compound74.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator77 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray26, (net.bytebuddy.dynamic.ClassFileLocator) compound74);
        boolean boolean78 = explicit4.equals((java.lang.Object) classFileLocator77);
        byte[] byteArray79 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit80 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray79);
        byte[] byteArray82 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator83 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray82);
        boolean boolean84 = explicit80.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp34 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp34.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str40, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertTrue("'" + noOp57 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp57.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertTrue("'" + noOp70 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp70.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str71, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str72, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(classFileLocator77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str2 = compound1.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound1.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution6 = compound1.locate("");
        java.lang.String str7 = compound1.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str2, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertNotNull(resolution6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str7, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str3 = compound2.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray4 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        boolean boolean6 = compound2.equals((java.lang.Object) classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        java.lang.Class<?> wildcardClass9 = classFileLocatorArray4.getClass();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str3, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(classFileLocatorArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str2 = illegal1.toString();
        java.lang.String str3 = illegal1.toString();
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        boolean boolean16 = illegal1.equals((java.lang.Object) explicit15);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str13 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        boolean boolean8 = explicit7.isResolved();
        byte[] byteArray9 = explicit7.resolve();
        java.lang.String str10 = explicit7.toString();
        byte[] byteArray11 = explicit7.resolve();
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        byte[] byteArray19 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        byte[] byteArray21 = explicit20.resolve();
        boolean boolean22 = explicit20.isResolved();
        boolean boolean24 = explicit20.equals((java.lang.Object) 10L);
        boolean boolean25 = explicit20.isResolved();
        java.lang.String str26 = explicit20.toString();
        byte[] byteArray27 = explicit20.resolve();
        java.lang.String str28 = explicit20.toString();
        boolean boolean29 = explicit16.equals((java.lang.Object) str28);
        byte[] byteArray30 = explicit16.resolve();
        java.lang.String str31 = explicit16.toString();
        boolean boolean32 = explicit7.equals((java.lang.Object) explicit16);
        byte[] byteArray33 = explicit7.resolve();
        byte[] byteArray34 = explicit7.resolve();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str26, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str28, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str31, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-1, 100]");
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean6 = explicit3.isResolved();
        byte[] byteArray7 = explicit3.resolve();
        java.lang.String str8 = explicit3.toString();
        byte[] byteArray9 = explicit3.resolve();
        byte[] byteArray10 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        byte[] byteArray5 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        boolean boolean7 = illegal1.equals((java.lang.Object) classFileLocator6);
        boolean boolean8 = illegal1.isResolved();
        java.lang.String str9 = illegal1.toString();
        java.lang.Object obj10 = null;
        boolean boolean11 = illegal1.equals(obj10);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str9, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        java.lang.String str9 = explicit4.toString();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}", byteArray11);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str34 = compound31.toString();
        byte[] byteArray38 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit39 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray38);
        byte[] byteArray40 = explicit39.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit42 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        boolean boolean43 = compound31.equals((java.lang.Object) byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit44 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit45 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        byte[] byteArray50 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit51 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray50);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp52 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean53 = explicit51.equals((java.lang.Object) noOp52);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = noOp52.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = noOp52.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution59 = noOp52.locate("hi!");
        java.lang.String str60 = noOp52.toString();
        java.lang.String str61 = noOp52.toString();
        java.lang.String str62 = noOp52.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}", byteArray40, (net.bytebuddy.dynamic.ClassFileLocator) noOp52);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit64 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray40);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp52 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp52.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertNotNull(resolution57);
        org.junit.Assert.assertNotNull(resolution59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str60, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str61, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str62, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertNotNull(classFileLocator65);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        boolean boolean3 = illegal1.isResolved();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        byte[] byteArray10 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        byte[] byteArray12 = explicit11.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray12);
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray12, classFileLocator30);
        boolean boolean33 = illegal1.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean34 = illegal1.isResolved();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray2 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean11 = compound4.equals((java.lang.Object) boolean10);
        boolean boolean12 = illegal1.equals((java.lang.Object) compound4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = compound4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        byte[] byteArray19 = explicit18.resolve();
        java.lang.String str20 = explicit18.toString();
        boolean boolean21 = explicit18.isResolved();
        byte[] byteArray22 = explicit18.resolve();
        boolean boolean23 = compound4.equals((java.lang.Object) explicit18);
        java.lang.String str24 = compound4.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str20, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str24, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str34 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str37 = compound29.toString();
        java.lang.String str38 = compound29.toString();
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray52 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray52);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray49, classFileLocator53);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit57 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit58 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}", byteArray49);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray69 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray69);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray66, classFileLocator70);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp72 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray79 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray82 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator83 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray82);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator84 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray79, classFileLocator83);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp85 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str86 = noOp85.toString();
        java.lang.String str87 = noOp85.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray88 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator70, noOp72, classFileLocator84, noOp85 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound89 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray88);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator90 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray49, (net.bytebuddy.dynamic.ClassFileLocator) compound89);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution92 = compound89.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean93 = compound29.equals((java.lang.Object) resolution92);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator70);
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertTrue("'" + noOp72 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp72.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator83);
        org.junit.Assert.assertNotNull(classFileLocator84);
        org.junit.Assert.assertTrue("'" + noOp85 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp85.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str86, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str87, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray88);
        org.junit.Assert.assertNotNull(classFileLocator90);
        org.junit.Assert.assertNotNull(resolution92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp18 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str32 = noOp31.toString();
        java.lang.String str33 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray34 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator16, noOp18, classFileLocator30, noOp31 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray34);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound35.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound35.locate("");
        boolean boolean40 = explicit5.equals((java.lang.Object) compound35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound35.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray43 = resolution42.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertTrue("'" + noOp18 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp18.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray34);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(resolution42);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray21 = explicit20.resolve();
        boolean boolean22 = explicit20.isResolved();
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray20 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray17, classFileLocator21);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp23 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray33 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray33);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray30, classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp36 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str37 = noOp36.toString();
        java.lang.String str38 = noOp36.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray39 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator21, noOp23, classFileLocator35, noOp36 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound40.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str43 = compound40.toString();
        byte[] byteArray47 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit48 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray47);
        byte[] byteArray49 = explicit48.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit51 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray49);
        boolean boolean52 = compound40.equals((java.lang.Object) byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal54 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean55 = illegal54.isResolved();
        java.lang.String str56 = illegal54.toString();
        boolean boolean57 = illegal54.isResolved();
        boolean boolean58 = illegal54.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal60 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str61 = illegal60.toString();
        boolean boolean62 = illegal60.isResolved();
        boolean boolean63 = illegal54.equals((java.lang.Object) illegal60);
        boolean boolean64 = compound40.equals((java.lang.Object) illegal60);
        boolean boolean65 = illegal60.isResolved();
        boolean boolean66 = explicit3.equals((java.lang.Object) illegal60);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray67 = illegal60.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for hi!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertTrue("'" + noOp23 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp23.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertTrue("'" + noOp36 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp36.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str37, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str38, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray39);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str56, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str61, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray14 = explicit13.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}", byteArray14);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(classFileLocator15);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean6 = illegal5.isResolved();
        boolean boolean7 = illegal5.isResolved();
        java.lang.String str8 = illegal5.toString();
        byte[] byteArray11 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        byte[] byteArray13 = explicit12.resolve();
        boolean boolean15 = explicit12.equals((java.lang.Object) (short) 0);
        boolean boolean16 = illegal5.equals((java.lang.Object) explicit12);
        byte[] byteArray21 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        byte[] byteArray23 = explicit22.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit25 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        boolean boolean26 = explicit25.isResolved();
        byte[] byteArray27 = explicit25.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray27);
        boolean boolean29 = illegal5.equals((java.lang.Object) byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray31 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound32 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray31);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound33 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray31);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound34 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray31);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray31);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}", byteArray27, (net.bytebuddy.dynamic.ClassFileLocator) compound36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray27);
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray49 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray46, classFileLocator50);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp52 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray59 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray62 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray62);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator64 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray59, classFileLocator63);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp65 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str66 = noOp65.toString();
        java.lang.String str67 = noOp65.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray68 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator50, noOp52, classFileLocator64, noOp65 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound69 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray68);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution71 = compound69.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str72 = compound69.toString();
        byte[] byteArray76 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit77 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray76);
        byte[] byteArray78 = explicit77.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator79 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray78);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit80 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray78);
        boolean boolean81 = compound69.equals((java.lang.Object) byteArray78);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator82 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray78);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator83 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray27, classFileLocator82);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution85 = classFileLocator83.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocatorArray31);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertTrue("'" + noOp52 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp52.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertNotNull(classFileLocator64);
        org.junit.Assert.assertTrue("'" + noOp65 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp65.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str66, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str67, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray68);
        org.junit.Assert.assertNotNull(resolution71);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(classFileLocator82);
        org.junit.Assert.assertNotNull(classFileLocator83);
        org.junit.Assert.assertNotNull(resolution85);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        byte[] byteArray9 = explicit3.resolve();
        byte[] byteArray10 = explicit3.resolve();
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray20 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray17, classFileLocator21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        boolean boolean25 = explicit3.equals((java.lang.Object) explicit24);
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray35 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray32, classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp38 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray48 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray45, classFileLocator49);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp51 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str52 = noOp51.toString();
        java.lang.String str53 = noOp51.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray54 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator36, noOp38, classFileLocator50, noOp51 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound55 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray54);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp56 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str57 = noOp56.toString();
        java.lang.String str58 = noOp56.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution60 = noOp56.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean61 = compound55.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str62 = compound55.toString();
        byte[] byteArray66 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit67 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray66);
        byte[] byteArray68 = explicit67.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray68);
        boolean boolean70 = compound55.equals((java.lang.Object) byteArray68);
        java.lang.String str71 = compound55.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution73 = compound55.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        boolean boolean74 = explicit3.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        boolean boolean75 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertTrue("'" + noOp38 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp38.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + noOp51 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp51.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str52, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray54);
        org.junit.Assert.assertTrue("'" + noOp56 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp56.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str57, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str58, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(resolution73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str32 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound29.locate("");
        java.lang.String str35 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution34);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("hi!");
        java.lang.String str12 = noOp4.toString();
        java.lang.String str13 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp7 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean8 = explicit6.equals((java.lang.Object) noOp7);
        boolean boolean9 = illegal1.equals((java.lang.Object) explicit6);
        java.lang.String str10 = illegal1.toString();
        java.lang.String str11 = illegal1.toString();
        java.lang.String str12 = illegal1.toString();
        java.lang.Object obj13 = null;
        boolean boolean14 = illegal1.equals(obj13);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray15 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for hi!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp7 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp7.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str10, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str12, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str36 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution42);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        byte[] byteArray6 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray8 = explicit7.resolve();
        boolean boolean9 = explicit7.isResolved();
        boolean boolean11 = explicit7.equals((java.lang.Object) 10L);
        boolean boolean12 = explicit7.isResolved();
        java.lang.String str13 = explicit7.toString();
        byte[] byteArray14 = explicit7.resolve();
        java.lang.String str15 = explicit7.toString();
        byte[] byteArray16 = explicit7.resolve();
        boolean boolean17 = explicit7.isResolved();
        byte[] byteArray18 = explicit7.resolve();
        boolean boolean19 = illegal3.equals((java.lang.Object) byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray18);
        byte[] byteArray25 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray25);
        byte[] byteArray27 = explicit26.resolve();
        boolean boolean28 = explicit26.isResolved();
        boolean boolean30 = explicit26.equals((java.lang.Object) 10L);
        boolean boolean31 = explicit26.isResolved();
        boolean boolean32 = explicit26.isResolved();
        boolean boolean33 = explicit26.isResolved();
        byte[] byteArray34 = explicit26.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray34);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit36 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray34);
        byte[] byteArray37 = explicit36.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit38 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray37);
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray52 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray52);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray49, classFileLocator53);
        byte[] byteArray57 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray57);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray49, classFileLocator58);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator60 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray49);
        byte[] byteArray63 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit64 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray63);
        byte[] byteArray65 = explicit64.resolve();
        boolean boolean66 = explicit64.isResolved();
        boolean boolean68 = explicit64.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution71 = classFileLocator69.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean72 = explicit64.equals((java.lang.Object) classFileLocator69);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray49, classFileLocator69);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator74 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator75 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray37, classFileLocator74);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator76 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray18, classFileLocator75);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution78 = classFileLocator76.locate("");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(classFileLocator60);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertNotNull(resolution71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertNotNull(classFileLocator74);
        org.junit.Assert.assertNotNull(classFileLocator75);
        org.junit.Assert.assertNotNull(classFileLocator76);
        org.junit.Assert.assertNotNull(resolution78);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = classFileLocator9.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean12 = explicit4.equals((java.lang.Object) classFileLocator9);
        boolean boolean14 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean15 = explicit4.isResolved();
        byte[] byteArray16 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray8 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray8);
        byte[] byteArray12 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean15 = explicit13.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str20 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp14.locate("");
        boolean boolean23 = compound9.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution26 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str27 = noOp14.toString();
        java.lang.String str28 = noOp14.toString();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(classFileLocatorArray8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(resolution26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, classFileLocator15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}", byteArray11);
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray31 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28, classFileLocator32);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp34 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray44 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray44);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray41, classFileLocator45);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp47 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str48 = noOp47.toString();
        java.lang.String str49 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray50 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator32, noOp34, classFileLocator46, noOp47 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound51 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) compound51);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray11);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertTrue("'" + noOp34 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp34.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertTrue("'" + noOp47 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp47.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray50);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        byte[] byteArray6 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray8 = explicit7.resolve();
        boolean boolean9 = explicit7.isResolved();
        boolean boolean11 = explicit7.equals((java.lang.Object) 10L);
        boolean boolean12 = explicit7.isResolved();
        java.lang.String str13 = explicit7.toString();
        byte[] byteArray14 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp15 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str16 = noOp15.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp15.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray14, (net.bytebuddy.dynamic.ClassFileLocator) noOp15);
        byte[] byteArray24 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit25 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray24);
        byte[] byteArray26 = explicit25.resolve();
        boolean boolean27 = explicit25.isResolved();
        boolean boolean29 = explicit25.equals((java.lang.Object) 10L);
        boolean boolean30 = explicit25.isResolved();
        java.lang.String str31 = explicit25.toString();
        byte[] byteArray32 = explicit25.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp33 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str34 = noOp33.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = noOp33.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray32, (net.bytebuddy.dynamic.ClassFileLocator) noOp33);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray14, classFileLocator38);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}", byteArray14, classFileLocator41);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp15 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp15.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str31, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp33 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp33.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(classFileLocator42);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        java.lang.String str6 = illegal1.toString();
        boolean boolean7 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str6, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        byte[] byteArray6 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray8 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray10 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound11 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray10);
        byte[] byteArray14 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean17 = explicit15.equals((java.lang.Object) noOp16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp16.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp16.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str22 = noOp16.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = noOp16.locate("");
        boolean boolean25 = compound11.equals((java.lang.Object) noOp16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) noOp16);
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray36 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray33, classFileLocator37);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp39 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray49 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray46, classFileLocator50);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp52 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str53 = noOp52.toString();
        java.lang.String str54 = noOp52.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray55 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator37, noOp39, classFileLocator51, noOp52 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound56 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray55);
        boolean boolean58 = compound56.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound56);
        byte[] byteArray62 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray62);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit64 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray62);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit65 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray62);
        boolean boolean66 = explicit65.isResolved();
        byte[] byteArray67 = explicit65.resolve();
        byte[] byteArray70 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit71 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray70);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp72 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean73 = explicit71.equals((java.lang.Object) noOp72);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution75 = noOp72.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution77 = noOp72.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution79 = noOp72.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        boolean boolean80 = explicit65.equals((java.lang.Object) noOp72);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator81 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) noOp72);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit82 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(classFileLocatorArray10);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str22, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertTrue("'" + noOp39 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp39.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertTrue("'" + noOp52 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp52.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str54, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[100]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp72 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp72.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(resolution75);
        org.junit.Assert.assertNotNull(resolution77);
        org.junit.Assert.assertNotNull(resolution79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(classFileLocator81);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18, classFileLocator22);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp24 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray34 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray31, classFileLocator35);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp37 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str38 = noOp37.toString();
        java.lang.String str39 = noOp37.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray40 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator22, noOp24, classFileLocator36, noOp37 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound41 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray40);
        boolean boolean43 = compound41.equals((java.lang.Object) "hi!");
        boolean boolean45 = compound41.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = compound41.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution49 = compound41.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = compound41.locate("hi!");
        boolean boolean52 = explicit3.equals((java.lang.Object) "hi!");
        boolean boolean53 = explicit3.isResolved();
        byte[] byteArray54 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertTrue("'" + noOp24 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp24.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertTrue("'" + noOp37 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp37.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str38, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str39, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertNotNull(resolution49);
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 100]");
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        java.lang.String str8 = explicit6.toString();
        boolean boolean9 = explicit6.isResolved();
        java.lang.String str10 = explicit6.toString();
        byte[] byteArray11 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray11);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray11 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound12 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound13 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound14 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        boolean boolean15 = explicit3.equals((java.lang.Object) classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound16 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound17 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound19 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound20 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound21 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = compound21.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(classFileLocatorArray11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution23);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp4.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertNotNull(resolution20);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str36 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        java.lang.String str39 = compound29.toString();
        java.lang.String str40 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution38);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean12 = explicit8.equals((java.lang.Object) 10L);
        boolean boolean13 = explicit8.isResolved();
        java.lang.String str14 = explicit8.toString();
        byte[] byteArray15 = explicit8.resolve();
        java.lang.String str16 = explicit8.toString();
        boolean boolean17 = explicit4.equals((java.lang.Object) str16);
        byte[] byteArray18 = explicit4.resolve();
        byte[] byteArray24 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit25 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray24);
        byte[] byteArray26 = explicit25.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        byte[] byteArray32 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit33 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp34 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean35 = explicit33.equals((java.lang.Object) noOp34);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = noOp34.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = noOp34.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str40 = noOp34.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = noOp34.locate("");
        boolean boolean43 = compound29.equals((java.lang.Object) noOp34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray26, (net.bytebuddy.dynamic.ClassFileLocator) noOp34);
        byte[] byteArray51 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray54 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray54);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray51, classFileLocator55);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp57 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray67 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray67);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray64, classFileLocator68);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp70 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str71 = noOp70.toString();
        java.lang.String str72 = noOp70.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray73 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator55, noOp57, classFileLocator69, noOp70 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound74 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray73);
        boolean boolean76 = compound74.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator77 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray26, (net.bytebuddy.dynamic.ClassFileLocator) compound74);
        boolean boolean78 = explicit4.equals((java.lang.Object) classFileLocator77);
        byte[] byteArray79 = explicit4.resolve();
        byte[] byteArray80 = explicit4.resolve();
        java.lang.String str81 = explicit4.toString();
        java.lang.String str82 = explicit4.toString();
        byte[] byteArray83 = explicit4.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp34 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp34.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str40, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertTrue("'" + noOp57 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp57.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertTrue("'" + noOp70 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp70.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str71, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str72, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(classFileLocator77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[100]");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[100]");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str81, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str82, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[100]");
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str4 = compound3.toString();
        java.lang.String str5 = compound3.toString();
        java.lang.String str6 = compound3.toString();
        java.lang.String str7 = compound3.toString();
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        byte[] byteArray16 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray18 = explicit17.resolve();
        boolean boolean19 = explicit17.isResolved();
        boolean boolean21 = explicit17.equals((java.lang.Object) 10L);
        boolean boolean22 = explicit17.isResolved();
        java.lang.String str23 = explicit17.toString();
        byte[] byteArray24 = explicit17.resolve();
        java.lang.String str25 = explicit17.toString();
        boolean boolean26 = explicit13.equals((java.lang.Object) str25);
        byte[] byteArray27 = explicit13.resolve();
        byte[] byteArray28 = explicit13.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray28);
        boolean boolean30 = compound3.equals((java.lang.Object) "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str4, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str5, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str6, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str7, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str23, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str25, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray2 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean11 = compound4.equals((java.lang.Object) boolean10);
        boolean boolean12 = illegal1.equals((java.lang.Object) compound4);
        java.lang.String str13 = compound4.toString();
        java.lang.String str14 = compound4.toString();
        java.lang.String str15 = compound4.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str13, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str14, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str15, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        boolean boolean12 = explicit3.isResolved();
        byte[] byteArray13 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp4.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        java.lang.String str15 = noOp4.toString();
        java.lang.String str16 = noOp4.toString();
        java.lang.String str17 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp4.locate("hi!");
        java.lang.String str20 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str32 = compound29.toString();
        byte[] byteArray36 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit37 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray36);
        byte[] byteArray38 = explicit37.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit40 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray38);
        boolean boolean41 = compound29.equals((java.lang.Object) byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal43 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean44 = illegal43.isResolved();
        java.lang.String str45 = illegal43.toString();
        boolean boolean46 = illegal43.isResolved();
        boolean boolean47 = illegal43.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal49 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str50 = illegal49.toString();
        boolean boolean51 = illegal49.isResolved();
        boolean boolean52 = illegal43.equals((java.lang.Object) illegal49);
        boolean boolean53 = compound29.equals((java.lang.Object) illegal49);
        byte[] byteArray57 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray57);
        byte[] byteArray61 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit62 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp63 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean64 = explicit62.equals((java.lang.Object) noOp63);
        java.lang.String str65 = noOp63.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray57, (net.bytebuddy.dynamic.ClassFileLocator) noOp63);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit67 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray57);
        boolean boolean68 = illegal49.equals((java.lang.Object) explicit67);
        boolean boolean69 = explicit67.isResolved();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str45, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str50, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp63 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp63.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str65, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray11 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound12 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound13 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound14 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        boolean boolean15 = explicit3.equals((java.lang.Object) classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound16 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound17 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = compound18.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = compound18.locate("ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(classFileLocatorArray11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertNotNull(resolution22);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = classFileLocator3.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = classFileLocator3.locate("ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(resolution5);
        org.junit.Assert.assertNotNull(resolution7);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str8 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str8, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution10);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str6 = illegal5.toString();
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        byte[] byteArray11 = explicit10.resolve();
        boolean boolean12 = explicit10.isResolved();
        boolean boolean14 = explicit10.equals((java.lang.Object) 10L);
        java.lang.String str15 = explicit10.toString();
        byte[] byteArray16 = explicit10.resolve();
        boolean boolean17 = illegal5.equals((java.lang.Object) byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray32 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray29, classFileLocator33);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp35 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray42 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray45 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray42, classFileLocator46);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp48 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str49 = noOp48.toString();
        java.lang.String str50 = noOp48.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray51 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator33, noOp35, classFileLocator47, noOp48 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound52 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray51);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = compound52.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray55 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator22, compound52 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound56 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray55);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound56);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution61 = classFileLocator59.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str6, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertTrue("'" + noOp35 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp35.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertTrue("'" + noOp48 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp48.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str50, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray51);
        org.junit.Assert.assertNotNull(resolution54);
        org.junit.Assert.assertNotNull(classFileLocatorArray55);
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(resolution61);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        byte[] byteArray5 = explicit3.resolve();
        boolean boolean6 = explicit3.isResolved();
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp11 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean12 = explicit10.equals((java.lang.Object) noOp11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp11.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp11.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp11.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp11.locate(".class");
        boolean boolean21 = explicit3.equals((java.lang.Object) resolution20);
        byte[] byteArray22 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp11 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp11.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        java.util.Map<java.lang.String, byte[]> strMap0 = null;
        net.bytebuddy.dynamic.ClassFileLocator.Simple simple1 = new net.bytebuddy.dynamic.ClassFileLocator.Simple(strMap0);
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean9 = explicit6.equals((java.lang.Object) (short) 0);
        byte[] byteArray10 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str13 = illegal12.toString();
        java.lang.String str14 = illegal12.toString();
        boolean boolean15 = explicit6.equals((java.lang.Object) illegal12);
        byte[] byteArray16 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}", byteArray16);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = simple1.equals((java.lang.Object) classFileLocator17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str13, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str14, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        boolean boolean13 = explicit12.isResolved();
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray32 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray29, classFileLocator33);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray29);
        boolean boolean37 = explicit20.equals((java.lang.Object) byteArray29);
        byte[] byteArray38 = explicit20.resolve();
        boolean boolean39 = explicit12.equals((java.lang.Object) byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit40 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray38);
        boolean boolean41 = explicit40.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean4 = illegal1.equals((java.lang.Object) 100);
        java.lang.String str5 = illegal1.toString();
        java.lang.String str6 = illegal1.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str5, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str6, "ClassFileLocator.Resolution.Illegal{typeName=''}");
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str5 = compound4.toString();
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        byte[] byteArray11 = explicit10.resolve();
        java.lang.String str12 = explicit10.toString();
        boolean boolean13 = explicit10.isResolved();
        java.lang.String str14 = explicit10.toString();
        java.lang.String str15 = explicit10.toString();
        java.lang.String str16 = explicit10.toString();
        byte[] byteArray17 = explicit10.resolve();
        byte[] byteArray18 = explicit10.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray18);
        boolean boolean20 = compound4.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str5, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        java.lang.String str34 = compound29.toString();
        byte[] byteArray43 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray43);
        byte[] byteArray49 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit50 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray49);
        byte[] byteArray51 = explicit50.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray51);
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray63 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator64 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray63);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray60, classFileLocator64);
        byte[] byteArray68 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray68);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray60, classFileLocator69);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray51, classFileLocator69);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator72 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray43, classFileLocator71);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution74 = classFileLocator71.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean75 = compound29.equals((java.lang.Object) resolution74);
        boolean boolean76 = resolution74.isResolved();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator64);
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertNotNull(classFileLocator70);
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertNotNull(classFileLocator72);
        org.junit.Assert.assertNotNull(resolution74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray10, classFileLocator17);
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray31 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28, classFileLocator32);
        byte[] byteArray36 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28, classFileLocator37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28);
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray51 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray51);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray48, classFileLocator52);
        byte[] byteArray56 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray48, classFileLocator57);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator60 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28, classFileLocator59);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator61 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray10, classFileLocator60);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator62 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}", byteArray10);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(classFileLocator60);
        org.junit.Assert.assertNotNull(classFileLocator61);
        org.junit.Assert.assertNotNull(classFileLocator62);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        java.lang.String str4 = illegal1.toString();
        java.lang.String str5 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray6 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str5, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray12 = explicit3.resolve();
        byte[] byteArray13 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str15 = noOp14.toString();
        java.lang.String str16 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str19 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution25 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str26 = noOp14.toString();
        java.lang.String str27 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution29 = noOp14.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean30 = explicit3.equals((java.lang.Object) noOp14);
        byte[] byteArray31 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit32 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray31);
        boolean boolean33 = explicit32.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str19, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertNotNull(resolution25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp18 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str32 = noOp31.toString();
        java.lang.String str33 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray34 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator16, noOp18, classFileLocator30, noOp31 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray34);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound35.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound35.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound35.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound35.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}", byteArray3, (net.bytebuddy.dynamic.ClassFileLocator) compound35);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertTrue("'" + noOp18 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp18.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray34);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertNotNull(classFileLocator44);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray11 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound12 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound13 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound14 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        boolean boolean15 = explicit3.equals((java.lang.Object) classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound16 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound17 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound19 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound20 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound21 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound22 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(classFileLocatorArray11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray2 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean11 = compound4.equals((java.lang.Object) boolean10);
        boolean boolean12 = illegal1.equals((java.lang.Object) compound4);
        java.lang.String str13 = illegal1.toString();
        byte[] byteArray16 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray18 = explicit17.resolve();
        boolean boolean19 = explicit17.isResolved();
        boolean boolean21 = explicit17.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = classFileLocator22.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean25 = explicit17.equals((java.lang.Object) classFileLocator22);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution27 = classFileLocator22.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        boolean boolean28 = illegal1.equals((java.lang.Object) classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocatorArray2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str13, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(resolution27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str13 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp12);
        java.lang.String str17 = noOp12.toString();
        java.lang.String str18 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp12.locate(".class");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp12.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str23 = noOp12.toString();
        java.lang.String str24 = noOp12.toString();
        java.lang.String str25 = noOp12.toString();
        java.lang.String str26 = noOp12.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str18, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str23, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str24, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str25, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        boolean boolean11 = explicit5.isResolved();
        boolean boolean12 = explicit5.isResolved();
        byte[] byteArray13 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}", byteArray13);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray2 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean11 = compound4.equals((java.lang.Object) boolean10);
        boolean boolean12 = illegal1.equals((java.lang.Object) compound4);
        java.lang.String str13 = illegal1.toString();
        boolean boolean14 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray15 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classFileLocatorArray2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str13, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        boolean boolean6 = illegal1.isResolved();
        boolean boolean7 = illegal1.isResolved();
        byte[] byteArray16 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, classFileLocator20);
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit27 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit28 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit29 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}", byteArray16);
        boolean boolean31 = illegal1.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray11 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound12 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound13 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound14 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        boolean boolean15 = explicit3.equals((java.lang.Object) classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound16 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound17 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound19 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        byte[] byteArray23 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit25 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        byte[] byteArray29 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit30 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean32 = explicit30.equals((java.lang.Object) noOp31);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = noOp31.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = noOp31.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = noOp31.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray23, (net.bytebuddy.dynamic.ClassFileLocator) noOp31);
        java.lang.String str40 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = noOp31.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = noOp31.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean45 = compound19.equals((java.lang.Object) noOp31);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = noOp31.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        java.lang.String str48 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = noOp31.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(classFileLocatorArray11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str40, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution50);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str34 = compound31.toString();
        byte[] byteArray38 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit39 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray38);
        byte[] byteArray40 = explicit39.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit42 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        boolean boolean43 = compound31.equals((java.lang.Object) byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray40);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(classFileLocator45);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        byte[] byteArray6 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18, classFileLocator22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray18);
        boolean boolean26 = explicit9.equals((java.lang.Object) byteArray18);
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray40 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray37, classFileLocator41);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp43 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray53 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray53);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray50, classFileLocator54);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp56 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str57 = noOp56.toString();
        java.lang.String str58 = noOp56.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray59 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator41, noOp43, classFileLocator55, noOp56 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound60 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray59);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution62 = compound60.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray63 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator30, compound60 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound64 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray63);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound65 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray63);
        java.lang.String str66 = compound65.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray18, (net.bytebuddy.dynamic.ClassFileLocator) compound65);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray18);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertTrue("'" + noOp43 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp43.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertTrue("'" + noOp56 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp56.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str57, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str58, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray59);
        org.junit.Assert.assertNotNull(resolution62);
        org.junit.Assert.assertNotNull(classFileLocatorArray63);
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertNotNull(classFileLocator69);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        java.lang.String str12 = explicit4.toString();
        boolean boolean13 = explicit4.isResolved();
        byte[] byteArray14 = explicit4.resolve();
        boolean boolean15 = explicit4.isResolved();
        byte[] byteArray16 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray27 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray24, classFileLocator28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray40 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray37, classFileLocator41);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp43 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str44 = noOp43.toString();
        java.lang.String str45 = noOp43.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray46 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator28, noOp30, classFileLocator42, noOp43 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound47 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray46);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution49 = compound47.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = compound47.locate("");
        java.lang.String str52 = compound47.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = compound47.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound47);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = compound47.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertTrue("'" + noOp43 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp43.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray46);
        org.junit.Assert.assertNotNull(resolution49);
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertNotNull(resolution54);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(resolution57);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp47 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean48 = explicit46.equals((java.lang.Object) noOp47);
        java.lang.String str49 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray41, (net.bytebuddy.dynamic.ClassFileLocator) noOp47);
        boolean boolean51 = compound29.equals((java.lang.Object) byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray56 = resolution55.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp47 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp47.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(resolution55);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray6 = explicit5.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100]");
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("");
        java.lang.String str38 = compound29.toString();
        java.lang.String str39 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound29.locate(".class");
        byte[] byteArray52 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray52);
        byte[] byteArray58 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit59 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray58);
        byte[] byteArray60 = explicit59.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator61 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray60);
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray72 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray72);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator74 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray69, classFileLocator73);
        byte[] byteArray77 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator78 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray77);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator79 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray69, classFileLocator78);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator80 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray60, classFileLocator78);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator81 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray52, classFileLocator80);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit82 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray52);
        boolean boolean83 = compound29.equals((java.lang.Object) explicit82);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution85 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str86 = compound29.toString();
        java.lang.String str87 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator61);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertNotNull(classFileLocator74);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator78);
        org.junit.Assert.assertNotNull(classFileLocator79);
        org.junit.Assert.assertNotNull(classFileLocator80);
        org.junit.Assert.assertNotNull(classFileLocator81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(resolution85);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, classFileLocator15);
        byte[] byteArray20 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray32 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray29, classFileLocator33);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp35 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray42 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray45 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray42, classFileLocator46);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp48 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str49 = noOp48.toString();
        java.lang.String str50 = noOp48.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray51 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator33, noOp35, classFileLocator47, noOp48 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound52 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray51);
        boolean boolean54 = compound52.equals((java.lang.Object) "hi!");
        java.lang.String str55 = compound52.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray20, (net.bytebuddy.dynamic.ClassFileLocator) compound52);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) compound52);
        boolean boolean58 = illegal1.equals((java.lang.Object) classFileLocator57);
        boolean boolean59 = illegal1.isResolved();
        java.lang.String str60 = illegal1.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertTrue("'" + noOp35 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp35.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertTrue("'" + noOp48 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp48.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str50, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str60, "ClassFileLocator.Resolution.Illegal{typeName=''}");
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray8);
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray37 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray34, classFileLocator38);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp40 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str41 = noOp40.toString();
        java.lang.String str42 = noOp40.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray43 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator25, noOp27, classFileLocator39, noOp40 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound44 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray43);
        boolean boolean46 = compound44.equals((java.lang.Object) "hi!");
        boolean boolean48 = compound44.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound44.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray56 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray56);
        byte[] byteArray60 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp62 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean63 = explicit61.equals((java.lang.Object) noOp62);
        java.lang.String str64 = noOp62.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray56, (net.bytebuddy.dynamic.ClassFileLocator) noOp62);
        boolean boolean66 = compound44.equals((java.lang.Object) byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution68 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution70 = compound44.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound44);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal73 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str74 = illegal73.toString();
        boolean boolean75 = compound44.equals((java.lang.Object) illegal73);
        java.lang.Class<?> wildcardClass76 = illegal73.getClass();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertTrue("'" + noOp40 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp40.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str41, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp62 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp62.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str64, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(resolution68);
        org.junit.Assert.assertNotNull(resolution70);
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str74, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, classFileLocator15);
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, classFileLocator20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11);
        byte[] byteArray25 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray25);
        byte[] byteArray27 = explicit26.resolve();
        boolean boolean28 = explicit26.isResolved();
        boolean boolean30 = explicit26.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = classFileLocator31.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean34 = explicit26.equals((java.lang.Object) classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray11, classFileLocator36);
        byte[] byteArray41 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit42 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray41);
        byte[] byteArray43 = explicit42.resolve();
        boolean boolean44 = explicit42.isResolved();
        boolean boolean46 = explicit42.equals((java.lang.Object) 10L);
        boolean boolean47 = explicit42.isResolved();
        java.lang.String str48 = explicit42.toString();
        byte[] byteArray49 = explicit42.resolve();
        byte[] byteArray50 = explicit42.resolve();
        byte[] byteArray54 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray54);
        byte[] byteArray58 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit59 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray58);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp60 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean61 = explicit59.equals((java.lang.Object) noOp60);
        java.lang.String str62 = noOp60.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray54, (net.bytebuddy.dynamic.ClassFileLocator) noOp60);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator64 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray50, (net.bytebuddy.dynamic.ClassFileLocator) noOp60);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp60);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit66 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        boolean boolean67 = explicit66.isResolved();
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str48, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp60 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp60.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str62, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertNotNull(classFileLocator64);
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        boolean boolean12 = explicit5.isResolved();
        boolean boolean13 = explicit5.isResolved();
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray27 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray24, classFileLocator28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray40 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray37, classFileLocator41);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp43 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str44 = noOp43.toString();
        java.lang.String str45 = noOp43.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray46 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator28, noOp30, classFileLocator42, noOp43 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound47 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray46);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution49 = compound47.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray50 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, compound47 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound51 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound52 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        boolean boolean53 = explicit5.equals((java.lang.Object) classFileLocatorArray50);
        byte[] byteArray54 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}", byteArray54);
        byte[] byteArray59 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit60 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray59);
        byte[] byteArray61 = explicit60.resolve();
        boolean boolean62 = explicit60.isResolved();
        boolean boolean64 = explicit60.equals((java.lang.Object) 10L);
        java.lang.String str65 = explicit60.toString();
        java.lang.String str66 = explicit60.toString();
        byte[] byteArray67 = explicit60.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit68 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray67);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray69 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound70 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray69);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound71 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray69);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound72 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray69);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound73 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray69);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound74 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray69);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound75 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray69);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound76 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray69);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound77 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray69);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound78 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray69);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator79 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray67, (net.bytebuddy.dynamic.ClassFileLocator) compound78);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator80 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray54, classFileLocator79);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertTrue("'" + noOp43 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp43.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray46);
        org.junit.Assert.assertNotNull(resolution49);
        org.junit.Assert.assertNotNull(classFileLocatorArray50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str65, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str66, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray69);
        org.junit.Assert.assertNotNull(classFileLocator79);
        org.junit.Assert.assertNotNull(classFileLocator80);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str12 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution14);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        java.lang.String str4 = illegal1.toString();
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray33 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray33);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray30, classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp36 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray46 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator48 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray43, classFileLocator47);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp49 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str50 = noOp49.toString();
        java.lang.String str51 = noOp49.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray52 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator34, noOp36, classFileLocator48, noOp49 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound53 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray52);
        boolean boolean55 = compound53.equals((java.lang.Object) "hi!");
        java.lang.String str56 = compound53.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, (net.bytebuddy.dynamic.ClassFileLocator) compound53);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12, (net.bytebuddy.dynamic.ClassFileLocator) compound53);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit59 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        byte[] byteArray60 = explicit59.resolve();
        boolean boolean61 = illegal1.equals((java.lang.Object) explicit59);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray62 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertTrue("'" + noOp36 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp36.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertNotNull(classFileLocator48);
        org.junit.Assert.assertTrue("'" + noOp49 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp49.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str50, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str51, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = classFileLocator11.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = illegal7.equals((java.lang.Object) resolution13);
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        boolean boolean16 = illegal1.isResolved();
        boolean boolean17 = illegal1.isResolved();
        boolean boolean18 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray19 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound20 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray19);
        java.lang.String str21 = compound20.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = compound20.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean24 = illegal1.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray27 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit28 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean30 = explicit28.equals((java.lang.Object) noOp29);
        java.lang.Class<?> wildcardClass31 = noOp29.getClass();
        boolean boolean32 = illegal1.equals((java.lang.Object) wildcardClass31);
        java.lang.String str33 = illegal1.toString();
        java.lang.String str34 = illegal1.toString();
        java.lang.String str35 = illegal1.toString();
        java.lang.String str36 = illegal1.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classFileLocatorArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str21, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str33, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str34, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str35, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str36, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp5 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean6 = explicit4.equals((java.lang.Object) noOp5);
        java.lang.String str7 = explicit4.toString();
        boolean boolean8 = explicit4.isResolved();
        byte[] byteArray9 = explicit4.resolve();
        byte[] byteArray16 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, classFileLocator20);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp22 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray32 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray29, classFileLocator33);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp35 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str36 = noOp35.toString();
        java.lang.String str37 = noOp35.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray38 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator20, noOp22, classFileLocator34, noOp35 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound39 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound39.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, (net.bytebuddy.dynamic.ClassFileLocator) compound39);
        byte[] byteArray47 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit48 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray47);
        byte[] byteArray49 = explicit48.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit51 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray49);
        byte[] byteArray58 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray61 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator62 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray58, classFileLocator62);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp64 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray71 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray74 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator75 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray74);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator76 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray71, classFileLocator75);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp77 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str78 = noOp77.toString();
        java.lang.String str79 = noOp77.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray80 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator62, noOp64, classFileLocator76, noOp77 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound81 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray80);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution83 = compound81.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str84 = compound81.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution86 = compound81.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator87 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray49, (net.bytebuddy.dynamic.ClassFileLocator) compound81);
        boolean boolean88 = compound39.equals((java.lang.Object) byteArray49);
        byte[] byteArray91 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit92 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray91);
        byte[] byteArray93 = explicit92.resolve();
        boolean boolean94 = explicit92.isResolved();
        java.lang.String str95 = explicit92.toString();
        byte[] byteArray96 = explicit92.resolve();
        boolean boolean97 = compound39.equals((java.lang.Object) byteArray96);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution99 = compound39.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp5 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp5.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str7, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertTrue("'" + noOp22 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp22.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertTrue("'" + noOp35 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp35.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str37, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray38);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator62);
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertTrue("'" + noOp64 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp64.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator75);
        org.junit.Assert.assertNotNull(classFileLocator76);
        org.junit.Assert.assertTrue("'" + noOp77 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp77.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str78, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str79, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray80);
        org.junit.Assert.assertNotNull(resolution83);
        org.junit.Assert.assertNotNull(resolution86);
        org.junit.Assert.assertNotNull(classFileLocator87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str95, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray96), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(resolution99);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        java.lang.String str5 = explicit3.toString();
        boolean boolean6 = explicit3.isResolved();
        java.lang.String str7 = explicit3.toString();
        byte[] byteArray8 = explicit3.resolve();
        boolean boolean9 = explicit3.isResolved();
        byte[] byteArray10 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str5, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str7, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str15 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray13, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray22 = explicit21.resolve();
        byte[] byteArray23 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp9 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean10 = explicit8.equals((java.lang.Object) noOp9);
        java.lang.String str11 = noOp9.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray3, (net.bytebuddy.dynamic.ClassFileLocator) noOp9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp9.locate(".class");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp9 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp9.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(resolution14);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator5 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        java.lang.String str8 = explicit7.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        boolean boolean33 = compound31.equals((java.lang.Object) "hi!");
        boolean boolean35 = compound31.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound31.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound31.locate("");
        boolean boolean40 = illegal1.equals((java.lang.Object) "");
        java.lang.String str41 = illegal1.toString();
        java.lang.String str42 = illegal1.toString();
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        byte[] byteArray47 = explicit46.resolve();
        boolean boolean48 = explicit46.isResolved();
        boolean boolean50 = explicit46.equals((java.lang.Object) 10L);
        boolean boolean51 = explicit46.isResolved();
        boolean boolean52 = explicit46.isResolved();
        boolean boolean53 = illegal1.equals((java.lang.Object) explicit46);
        boolean boolean54 = explicit46.isResolved();
        boolean boolean55 = explicit46.isResolved();
        boolean boolean56 = explicit46.isResolved();
        byte[] byteArray57 = explicit46.resolve();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str41, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str42, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-1, 100]");
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        java.lang.String str12 = explicit4.toString();
        boolean boolean13 = explicit4.isResolved();
        byte[] byteArray14 = explicit4.resolve();
        boolean boolean15 = explicit4.isResolved();
        byte[] byteArray16 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray17 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound19 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray17);
        java.lang.String str20 = compound19.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = compound19.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution25 = compound19.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str26 = compound19.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str20, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(resolution25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str26, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str4 = compound3.toString();
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, classFileLocator15);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp17 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray27 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray24, classFileLocator28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str31 = noOp30.toString();
        java.lang.String str32 = noOp30.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray33 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator15, noOp17, classFileLocator29, noOp30 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound34 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound34.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound34.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound34.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound34.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean43 = compound3.equals((java.lang.Object) compound34);
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str4, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertTrue("'" + noOp17 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp17.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray33);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str2 = illegal1.toString();
        java.lang.String str3 = illegal1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str32 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        byte[] byteArray38 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit39 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray38);
        byte[] byteArray40 = explicit39.resolve();
        java.lang.String str41 = explicit39.toString();
        boolean boolean42 = explicit39.isResolved();
        java.lang.String str43 = explicit39.toString();
        byte[] byteArray44 = explicit39.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray44);
        boolean boolean46 = compound29.equals((java.lang.Object) byteArray44);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray44);
        byte[] byteArray48 = explicit47.resolve();
        java.lang.String str49 = explicit47.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal51 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str52 = illegal51.toString();
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray63 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator64 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray63);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray60, classFileLocator64);
        byte[] byteArray68 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray68);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray60, classFileLocator69);
        boolean boolean71 = illegal51.equals((java.lang.Object) "");
        boolean boolean72 = illegal51.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal74 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean75 = illegal74.isResolved();
        boolean boolean76 = illegal74.isResolved();
        boolean boolean77 = illegal74.isResolved();
        boolean boolean78 = illegal51.equals((java.lang.Object) illegal74);
        boolean boolean79 = explicit47.equals((java.lang.Object) illegal51);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray80 = illegal51.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str41, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str43, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str49, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str52, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator64);
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertNotNull(classFileLocator70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) -1, (byte) 1, (byte) -1, (byte) 0, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean11 = explicit9.isResolved();
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, -1, 1, -1, 0, 100]");
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, -1, 1, -1, 0, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = classFileLocator8.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean11 = explicit3.equals((java.lang.Object) classFileLocator8);
        boolean boolean13 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit3.isResolved();
        byte[] byteArray15 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        boolean boolean17 = explicit16.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution6 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str7 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str10 = noOp4.toString();
        boolean boolean11 = illegal1.equals((java.lang.Object) str10);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray12 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(resolution6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str7, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray15 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray18 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray15, classFileLocator19);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp21 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray31 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28, classFileLocator32);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp34 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str35 = noOp34.toString();
        java.lang.String str36 = noOp34.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray37 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator19, noOp21, classFileLocator33, noOp34 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound38 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray37);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound38.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str41 = compound38.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound38.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) compound38);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution46 = compound38.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution48 = compound38.locate("");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertTrue("'" + noOp21 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp21.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertTrue("'" + noOp34 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp34.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str35, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray37);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(resolution46);
        org.junit.Assert.assertNotNull(resolution48);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound2.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean7 = illegal6.isResolved();
        java.lang.String str8 = illegal6.toString();
        java.lang.String str9 = illegal6.toString();
        java.lang.String str10 = illegal6.toString();
        boolean boolean11 = illegal6.isResolved();
        boolean boolean12 = compound2.equals((java.lang.Object) illegal6);
        boolean boolean13 = illegal6.isResolved();
        java.lang.String str14 = illegal6.toString();
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean20 = explicit18.equals((java.lang.Object) noOp19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp19.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = noOp19.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution26 = noOp19.locate("hi!");
        java.lang.String str27 = noOp19.toString();
        java.lang.String str28 = noOp19.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution30 = noOp19.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = noOp19.locate("");
        boolean boolean33 = illegal6.equals((java.lang.Object) resolution32);
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str9, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str10, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str14, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertNotNull(resolution26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution30);
        org.junit.Assert.assertNotNull(resolution32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str2 = illegal1.toString();
        java.lang.String str3 = illegal1.toString();
        java.lang.String str4 = illegal1.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str7 = illegal6.toString();
        byte[] byteArray10 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        byte[] byteArray12 = explicit11.resolve();
        boolean boolean13 = explicit11.isResolved();
        boolean boolean15 = explicit11.equals((java.lang.Object) 10L);
        java.lang.String str16 = explicit11.toString();
        byte[] byteArray17 = explicit11.resolve();
        boolean boolean18 = illegal6.equals((java.lang.Object) byteArray17);
        boolean boolean19 = illegal6.isResolved();
        boolean boolean20 = illegal1.equals((java.lang.Object) boolean19);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str7, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp10 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean11 = explicit9.equals((java.lang.Object) noOp10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp10.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp10.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        boolean boolean16 = explicit3.equals((java.lang.Object) noOp10);
        java.lang.String str17 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp10 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp10.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str17, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        byte[] byteArray8 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean12 = illegal10.equals((java.lang.Object) classFileLocator11);
        java.lang.String str13 = illegal10.toString();
        boolean boolean14 = illegal10.isResolved();
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp28 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray38 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray35, classFileLocator39);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp41 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str42 = noOp41.toString();
        java.lang.String str43 = noOp41.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray44 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator26, noOp28, classFileLocator40, noOp41 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound45 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray44);
        boolean boolean47 = compound45.equals((java.lang.Object) "hi!");
        boolean boolean49 = compound45.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = compound45.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound45.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray57 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray57);
        byte[] byteArray61 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit62 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp63 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean64 = explicit62.equals((java.lang.Object) noOp63);
        java.lang.String str65 = noOp63.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray57, (net.bytebuddy.dynamic.ClassFileLocator) noOp63);
        boolean boolean67 = compound45.equals((java.lang.Object) byteArray57);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray57);
        boolean boolean69 = illegal10.equals((java.lang.Object) byteArray57);
        boolean boolean70 = explicit3.equals((java.lang.Object) illegal10);
        byte[] byteArray73 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit74 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray73);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp75 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean76 = explicit74.equals((java.lang.Object) noOp75);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution78 = noOp75.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution80 = noOp75.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution82 = noOp75.locate("hi!");
        java.lang.String str83 = noOp75.toString();
        java.lang.String str84 = noOp75.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution86 = noOp75.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str87 = noOp75.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution89 = noOp75.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution91 = noOp75.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        boolean boolean92 = illegal10.equals((java.lang.Object) resolution91);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str13, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertTrue("'" + noOp28 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp28.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertTrue("'" + noOp41 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp41.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp63 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp63.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str65, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp75 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp75.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(resolution78);
        org.junit.Assert.assertNotNull(resolution80);
        org.junit.Assert.assertNotNull(resolution82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str83, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str84, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str87, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution89);
        org.junit.Assert.assertNotNull(resolution91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray5 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray39 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator6, compound36 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound41 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound42 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        boolean boolean43 = illegal1.equals((java.lang.Object) compound42);
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray53 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray53);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray50, classFileLocator54);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp56 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray63 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray66 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray66);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray63, classFileLocator67);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp69 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str70 = noOp69.toString();
        java.lang.String str71 = noOp69.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray72 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator54, noOp56, classFileLocator68, noOp69 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound73 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray72);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution75 = compound73.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution77 = compound73.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean78 = illegal1.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean79 = illegal1.isResolved();
        boolean boolean80 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray81 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Compound{classFileLocator=[]}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(classFileLocatorArray39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertTrue("'" + noOp56 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp56.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertTrue("'" + noOp69 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp69.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str70, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str71, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray72);
        org.junit.Assert.assertNotNull(resolution75);
        org.junit.Assert.assertNotNull(resolution77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray8 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = classFileLocator9.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean12 = illegal5.equals((java.lang.Object) resolution11);
        boolean boolean13 = illegal1.equals((java.lang.Object) resolution11);
        boolean boolean14 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = explicit3.toString();
        boolean boolean7 = explicit3.isResolved();
        java.lang.String str8 = explicit3.toString();
        boolean boolean9 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str6, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray5 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray39 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator6, compound36 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound41 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound42 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        boolean boolean43 = illegal1.equals((java.lang.Object) compound42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution45 = compound42.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(classFileLocatorArray39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(resolution45);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp10 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean11 = explicit9.equals((java.lang.Object) noOp10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp10.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp10.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        boolean boolean16 = explicit3.equals((java.lang.Object) noOp10);
        boolean boolean17 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp10 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp10.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        java.lang.String str11 = illegal1.toString();
        boolean boolean12 = illegal1.isResolved();
        boolean boolean13 = illegal1.isResolved();
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray27 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray24, classFileLocator28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray40 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray37, classFileLocator41);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp43 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str44 = noOp43.toString();
        java.lang.String str45 = noOp43.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray46 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator28, noOp30, classFileLocator42, noOp43 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound47 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray46);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution49 = compound47.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray50 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, compound47 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound51 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound52 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound53 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        boolean boolean54 = illegal1.equals((java.lang.Object) compound53);
        java.lang.String str55 = compound53.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = compound53.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertTrue("'" + noOp43 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp43.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray46);
        org.junit.Assert.assertNotNull(resolution49);
        org.junit.Assert.assertNotNull(classFileLocatorArray50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(resolution57);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        java.lang.String str11 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("hi!");
        java.lang.String str14 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp4.locate(".class");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertNotNull(resolution18);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray5 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray5);
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp11 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean12 = explicit10.equals((java.lang.Object) noOp11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp11.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp11.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str17 = noOp11.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp11.locate("");
        boolean boolean20 = compound6.equals((java.lang.Object) noOp11);
        boolean boolean21 = illegal1.equals((java.lang.Object) compound6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = compound6.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str24 = compound6.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(classFileLocatorArray5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp11 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp11.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str24, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        boolean boolean6 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray7 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray10, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray10);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray42 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray42);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray39, classFileLocator43);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp45 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str46 = noOp45.toString();
        java.lang.String str47 = noOp45.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray48 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator30, noOp32, classFileLocator44, noOp45 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound49 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = compound49.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound49.locate("");
        java.lang.String str54 = compound49.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = compound49.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution58 = compound49.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray10, (net.bytebuddy.dynamic.ClassFileLocator) compound49);
        java.lang.String str60 = compound49.toString();
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertTrue("'" + noOp45 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp45.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str47, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray48);
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(resolution56);
        org.junit.Assert.assertNotNull(resolution58);
        org.junit.Assert.assertNotNull(classFileLocator59);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        java.lang.String str6 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray7 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str6, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp9 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean10 = explicit8.equals((java.lang.Object) noOp9);
        java.lang.String str11 = noOp9.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray3, (net.bytebuddy.dynamic.ClassFileLocator) noOp9);
        java.lang.String str13 = noOp9.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp9.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp9.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp9 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp9.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(resolution17);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray8 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray12 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean15 = explicit13.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp14.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp14.locate("hi!");
        java.lang.String str22 = noOp14.toString();
        java.lang.String str23 = noOp14.toString();
        boolean boolean24 = explicit9.equals((java.lang.Object) str23);
        boolean boolean25 = explicit9.isResolved();
        byte[] byteArray26 = explicit9.resolve();
        byte[] byteArray27 = explicit9.resolve();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str22, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str23, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str34 = compound29.toString();
        java.lang.String str35 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution37);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        java.lang.ClassLoader classLoader0 = null;
        java.security.AccessControlContext accessControlContext1 = null;
        net.bytebuddy.dynamic.ClassFileLocator.AgentBased.ClassLoadingDelegate classLoadingDelegate2 = net.bytebuddy.dynamic.ClassFileLocator.AgentBased.ClassLoadingDelegate.Default.of(classLoader0, accessControlContext1);
        java.lang.ClassLoader classLoader3 = classLoadingDelegate2.getClassLoader();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = classLoadingDelegate2.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        } catch (java.lang.ClassNotFoundException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoadingDelegate2);
        org.junit.Assert.assertNotNull(classLoader3);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean6 = explicit3.isResolved();
        byte[] byteArray7 = explicit3.resolve();
        java.lang.String str8 = explicit3.toString();
        byte[] byteArray9 = explicit3.resolve();
        java.lang.String str10 = explicit3.toString();
        java.lang.Class<?> wildcardClass11 = explicit3.getClass();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        java.lang.String str11 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("hi!");
        java.lang.String str14 = noOp4.toString();
        java.lang.String str15 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp11 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean12 = explicit10.equals((java.lang.Object) noOp11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp11.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp11.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp11.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray3, (net.bytebuddy.dynamic.ClassFileLocator) noOp11);
        java.lang.String str20 = noOp11.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp11.locate("");
        java.lang.String str23 = noOp11.toString();
        java.lang.String str24 = noOp11.toString();
        java.lang.String str25 = noOp11.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp11 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp11.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str23, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str24, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str25, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(resolution15);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray11 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound12 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound13 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound14 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        boolean boolean15 = explicit3.equals((java.lang.Object) classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound16 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound17 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = compound18.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(classFileLocatorArray11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution20);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = classFileLocator11.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = illegal7.equals((java.lang.Object) resolution13);
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        boolean boolean16 = illegal1.isResolved();
        boolean boolean17 = illegal1.isResolved();
        boolean boolean18 = illegal1.isResolved();
        boolean boolean19 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray31 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28, classFileLocator32);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp34 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray44 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray44);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray41, classFileLocator45);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp47 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str48 = noOp47.toString();
        java.lang.String str49 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray50 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator32, noOp34, classFileLocator46, noOp47 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound51 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound51.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound51.locate("");
        boolean boolean56 = illegal21.equals((java.lang.Object) resolution55);
        boolean boolean57 = illegal1.equals((java.lang.Object) illegal21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal59 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray69 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray69);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray66, classFileLocator70);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp72 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray79 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray82 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator83 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray82);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator84 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray79, classFileLocator83);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp85 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str86 = noOp85.toString();
        java.lang.String str87 = noOp85.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray88 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator70, noOp72, classFileLocator84, noOp85 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound89 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray88);
        boolean boolean91 = compound89.equals((java.lang.Object) "hi!");
        java.lang.String str92 = compound89.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution94 = compound89.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean95 = illegal59.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str96 = illegal59.toString();
        java.lang.String str97 = illegal59.toString();
        boolean boolean98 = illegal1.equals((java.lang.Object) str97);
        java.lang.String str99 = illegal1.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertTrue("'" + noOp34 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp34.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertTrue("'" + noOp47 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp47.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray50);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator70);
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertTrue("'" + noOp72 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp72.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator83);
        org.junit.Assert.assertNotNull(classFileLocator84);
        org.junit.Assert.assertTrue("'" + noOp85 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp85.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str86, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str87, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(resolution94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str96, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str97, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str99, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray13 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray18 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray13, classFileLocator19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6, classFileLocator20);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = classFileLocator20.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(resolution23);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp44 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str45 = noOp44.toString();
        java.lang.String str46 = noOp44.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray47 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator29, noOp31, classFileLocator43, noOp44 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound48 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray47);
        boolean boolean50 = compound48.equals((java.lang.Object) "hi!");
        java.lang.String str51 = compound48.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray7, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound48.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str56 = compound48.toString();
        byte[] byteArray60 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator61 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray60);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit62 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray72 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray72);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator74 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray69, classFileLocator73);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp75 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray82 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray85 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator86 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray85);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator87 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray82, classFileLocator86);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp88 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str89 = noOp88.toString();
        java.lang.String str90 = noOp88.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray91 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator73, noOp75, classFileLocator87, noOp88 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound92 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray91);
        boolean boolean94 = compound92.equals((java.lang.Object) "hi!");
        java.lang.String str95 = compound92.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator96 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray60, (net.bytebuddy.dynamic.ClassFileLocator) compound92);
        java.lang.Class<?> wildcardClass97 = byteArray60.getClass();
        boolean boolean98 = compound48.equals((java.lang.Object) wildcardClass97);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + noOp44 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp44.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator61);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertNotNull(classFileLocator74);
        org.junit.Assert.assertTrue("'" + noOp75 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp75.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator86);
        org.junit.Assert.assertNotNull(classFileLocator87);
        org.junit.Assert.assertTrue("'" + noOp88 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp88.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str89, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str90, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(classFileLocator96);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        byte[] byteArray15 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray15);
        boolean boolean20 = explicit3.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean21 = explicit3.isResolved();
        boolean boolean22 = explicit3.isResolved();
        boolean boolean23 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray9 = explicit8.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        byte[] byteArray13 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp15 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean16 = explicit14.equals((java.lang.Object) noOp15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp15.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp15.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp15.locate("hi!");
        java.lang.String str23 = noOp15.toString();
        java.lang.String str24 = noOp15.toString();
        boolean boolean25 = explicit10.equals((java.lang.Object) str24);
        boolean boolean26 = explicit10.isResolved();
        byte[] byteArray27 = explicit10.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution30 = classFileLocator28.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp15 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp15.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str23, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str24, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(resolution30);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str32 = compound29.toString();
        byte[] byteArray35 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit36 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray35);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp37 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean38 = explicit36.equals((java.lang.Object) noOp37);
        java.lang.String str39 = explicit36.toString();
        boolean boolean40 = explicit36.isResolved();
        byte[] byteArray41 = explicit36.resolve();
        boolean boolean42 = compound29.equals((java.lang.Object) explicit36);
        java.lang.Class<?> wildcardClass43 = compound29.getClass();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp37 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp37.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str39, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray8 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray12 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean15 = explicit13.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp14.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp14.locate("hi!");
        java.lang.String str22 = noOp14.toString();
        java.lang.String str23 = noOp14.toString();
        boolean boolean24 = explicit9.equals((java.lang.Object) str23);
        boolean boolean25 = explicit9.isResolved();
        byte[] byteArray26 = explicit9.resolve();
        byte[] byteArray27 = explicit9.resolve();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str22, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str23, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray15 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray18 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray15, classFileLocator19);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp21 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray31 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28, classFileLocator32);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp34 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str35 = noOp34.toString();
        java.lang.String str36 = noOp34.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray37 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator19, noOp21, classFileLocator33, noOp34 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound38 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray37);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound38.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str41 = compound38.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound38.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) compound38);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution46 = compound38.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str47 = compound38.toString();
        byte[] byteArray53 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit54 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray53);
        byte[] byteArray55 = explicit54.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray55);
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray67 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray67);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray64, classFileLocator68);
        byte[] byteArray72 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray72);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator74 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray64, classFileLocator73);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator75 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray55, classFileLocator73);
        byte[] byteArray79 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit80 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray79);
        byte[] byteArray81 = explicit80.resolve();
        boolean boolean82 = explicit80.isResolved();
        boolean boolean84 = explicit80.equals((java.lang.Object) 10L);
        boolean boolean85 = explicit80.isResolved();
        java.lang.String str86 = explicit80.toString();
        byte[] byteArray87 = explicit80.resolve();
        java.lang.String str88 = explicit80.toString();
        byte[] byteArray89 = explicit80.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator90 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray89);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator91 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray55, classFileLocator90);
        boolean boolean92 = compound38.equals((java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertTrue("'" + noOp21 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp21.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertTrue("'" + noOp34 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp34.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str35, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray37);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(resolution46);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertNotNull(classFileLocator74);
        org.junit.Assert.assertNotNull(classFileLocator75);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str86, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str88, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator90);
        org.junit.Assert.assertNotNull(classFileLocator91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound2.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean6 = compound2.equals((java.lang.Object) 10.0d);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18, classFileLocator22);
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18);
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        byte[] byteArray46 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator48 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator47);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18, classFileLocator49);
        boolean boolean51 = illegal8.equals((java.lang.Object) classFileLocator49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = classFileLocator49.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean54 = compound2.equals((java.lang.Object) classFileLocator49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = compound2.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution58 = compound2.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray59 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound60 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray59);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound61 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray59);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound62 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray59);
        java.lang.String str63 = compound62.toString();
        java.lang.String str64 = compound62.toString();
        java.lang.String str65 = compound62.toString();
        java.lang.String str66 = compound62.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution68 = compound62.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution70 = compound62.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean71 = compound2.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertNotNull(classFileLocator48);
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(resolution56);
        org.junit.Assert.assertNotNull(resolution58);
        org.junit.Assert.assertNotNull(classFileLocatorArray59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str63, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str64, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str65, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str66, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution68);
        org.junit.Assert.assertNotNull(resolution70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean4 = illegal1.equals((java.lang.Object) 100);
        java.lang.String str5 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray6 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str5, "ClassFileLocator.Resolution.Illegal{typeName=''}");
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp13 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray23 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray20, classFileLocator24);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp26 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str27 = noOp26.toString();
        java.lang.String str28 = noOp26.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray29 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator11, noOp13, classFileLocator25, noOp26 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = compound30.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str33 = compound30.toString();
        byte[] byteArray37 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit38 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray37);
        byte[] byteArray39 = explicit38.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        boolean boolean42 = compound30.equals((java.lang.Object) byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution45 = classFileLocator43.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertTrue("'" + noOp13 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp13.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertTrue("'" + noOp26 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp26.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray29);
        org.junit.Assert.assertNotNull(resolution32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertNotNull(resolution45);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        java.lang.String str20 = explicit19.toString();
        byte[] byteArray21 = explicit19.resolve();
        java.lang.Class<?> wildcardClass22 = explicit19.getClass();
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}" + "'", str20, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str7 = illegal6.toString();
        byte[] byteArray10 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        byte[] byteArray12 = explicit11.resolve();
        boolean boolean13 = explicit11.isResolved();
        boolean boolean15 = explicit11.equals((java.lang.Object) 10L);
        java.lang.String str16 = explicit11.toString();
        byte[] byteArray17 = explicit11.resolve();
        boolean boolean18 = illegal6.equals((java.lang.Object) byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray17);
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray33 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray33);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray30, classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp36 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray46 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator48 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray43, classFileLocator47);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp49 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str50 = noOp49.toString();
        java.lang.String str51 = noOp49.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray52 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator34, noOp36, classFileLocator48, noOp49 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound53 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray52);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound53.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray56 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator23, compound53 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound57 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray56);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray17, (net.bytebuddy.dynamic.ClassFileLocator) compound57);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator60 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp61 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str62 = noOp61.toString();
        java.lang.String str63 = noOp61.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution65 = noOp61.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str66 = noOp61.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution68 = noOp61.locate("");
        java.lang.String str69 = noOp61.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution71 = noOp61.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution73 = noOp61.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution75 = noOp61.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator76 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}", byteArray17, (net.bytebuddy.dynamic.ClassFileLocator) noOp61);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str7, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertTrue("'" + noOp36 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp36.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertNotNull(classFileLocator48);
        org.junit.Assert.assertTrue("'" + noOp49 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp49.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str50, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str51, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray52);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertNotNull(classFileLocatorArray56);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(classFileLocator60);
        org.junit.Assert.assertTrue("'" + noOp61 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp61.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str62, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str63, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str66, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str69, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution71);
        org.junit.Assert.assertNotNull(resolution73);
        org.junit.Assert.assertNotNull(resolution75);
        org.junit.Assert.assertNotNull(classFileLocator76);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("");
        byte[] byteArray40 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp42 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean43 = explicit41.equals((java.lang.Object) noOp42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution45 = noOp42.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = noOp42.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str48 = noOp42.toString();
        java.lang.String str49 = noOp42.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = noOp42.locate("hi!");
        boolean boolean52 = compound29.equals((java.lang.Object) noOp42);
        java.lang.String str53 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp42 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp42.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(resolution45);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp4.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        java.lang.String str19 = noOp4.toString();
        java.lang.String str20 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str19, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        byte[] byteArray12 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        byte[] byteArray14 = explicit13.resolve();
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        byte[] byteArray19 = explicit18.resolve();
        boolean boolean20 = explicit18.isResolved();
        boolean boolean21 = explicit18.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean24 = illegal23.isResolved();
        java.lang.String str25 = illegal23.toString();
        boolean boolean26 = illegal23.isResolved();
        boolean boolean27 = explicit18.equals((java.lang.Object) illegal23);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = compound30.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound30.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean35 = illegal23.equals((java.lang.Object) resolution34);
        boolean boolean36 = explicit13.equals((java.lang.Object) resolution34);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str25, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution32);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean11 = explicit9.isResolved();
        boolean boolean13 = explicit9.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit9.isResolved();
        java.lang.String str15 = explicit9.toString();
        byte[] byteArray16 = explicit9.resolve();
        java.lang.String str17 = explicit9.toString();
        boolean boolean18 = explicit5.equals((java.lang.Object) str17);
        byte[] byteArray19 = explicit5.resolve();
        byte[] byteArray20 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray21 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound22 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray21);
        java.lang.String str23 = compound22.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution25 = compound22.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray20, (net.bytebuddy.dynamic.ClassFileLocator) compound22);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str17, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str23, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution25);
        org.junit.Assert.assertNotNull(classFileLocator26);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray9);
        byte[] byteArray15 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        byte[] byteArray17 = explicit16.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray17);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        byte[] byteArray34 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray17, classFileLocator35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray9, classFileLocator37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit40 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution3 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str6 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution3);
        org.junit.Assert.assertNotNull(resolution5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        java.lang.String str11 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        java.lang.Class<?> wildcardClass14 = noOp4.getClass();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        byte[] byteArray9 = explicit3.resolve();
        byte[] byteArray10 = explicit3.resolve();
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray20 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray17, classFileLocator21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        boolean boolean25 = explicit3.equals((java.lang.Object) explicit24);
        byte[] byteArray26 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal2 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean3 = illegal2.isResolved();
        boolean boolean4 = illegal2.isResolved();
        java.lang.String str5 = illegal2.toString();
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean12 = explicit9.equals((java.lang.Object) (short) 0);
        boolean boolean13 = illegal2.equals((java.lang.Object) explicit9);
        byte[] byteArray18 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        byte[] byteArray20 = explicit19.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        boolean boolean23 = explicit22.isResolved();
        byte[] byteArray24 = explicit22.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        boolean boolean26 = illegal2.equals((java.lang.Object) byteArray24);
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray36 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray33, classFileLocator37);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp39 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray49 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray46, classFileLocator50);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp52 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str53 = noOp52.toString();
        java.lang.String str54 = noOp52.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray55 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator37, noOp39, classFileLocator51, noOp52 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound56 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray55);
        boolean boolean58 = compound56.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution60 = compound56.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution62 = compound56.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray24, (net.bytebuddy.dynamic.ClassFileLocator) compound56);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution65 = classFileLocator63.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray66 = resolution65.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str5, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertTrue("'" + noOp39 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp39.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertTrue("'" + noOp52 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp52.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str54, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(resolution60);
        org.junit.Assert.assertNotNull(resolution62);
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertNotNull(resolution65);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        byte[] byteArray11 = explicit3.resolve();
        java.lang.String str12 = explicit3.toString();
        java.lang.String str13 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        byte[] byteArray4 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator5 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray4);
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp10 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean11 = explicit9.equals((java.lang.Object) noOp10);
        java.lang.String str12 = noOp10.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray4, (net.bytebuddy.dynamic.ClassFileLocator) noOp10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray15 = explicit14.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}", byteArray15);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator5);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp10 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp10.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        java.lang.String str42 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(resolution41);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray23, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str30 = noOp29.toString();
        java.lang.String str31 = noOp29.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray32 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator14, noOp16, classFileLocator28, noOp29 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound33 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray32);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound33.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray36 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator3, compound33 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound37 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound38 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound39 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound41 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound42 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound43 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound44 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str30, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray32);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(classFileLocatorArray36);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        boolean boolean12 = explicit5.isResolved();
        boolean boolean13 = explicit5.isResolved();
        byte[] byteArray14 = explicit5.resolve();
        byte[] byteArray15 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}", byteArray15);
        byte[] byteArray21 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        byte[] byteArray23 = explicit22.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit25 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        byte[] byteArray30 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit31 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit33 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray30);
        byte[] byteArray35 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray30, classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray23, classFileLocator37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray15, classFileLocator37);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean3 = illegal1.equals((java.lang.Object) classFileLocator2);
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        java.lang.String str6 = illegal1.toString();
        java.lang.String str7 = illegal1.toString();
        java.lang.String str8 = illegal1.toString();
        boolean boolean9 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray10 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classFileLocator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str6, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str7, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str12 = noOp0.toString();
        java.lang.String str13 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        java.lang.String str12 = explicit4.toString();
        byte[] byteArray13 = explicit4.resolve();
        boolean boolean14 = explicit4.isResolved();
        byte[] byteArray15 = explicit4.resolve();
        java.lang.Object obj16 = null;
        boolean boolean17 = explicit4.equals(obj16);
        java.lang.String str18 = explicit4.toString();
        byte[] byteArray19 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str18, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        boolean boolean33 = compound31.equals((java.lang.Object) "hi!");
        boolean boolean35 = compound31.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound31.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound31.locate("");
        boolean boolean40 = illegal1.equals((java.lang.Object) "");
        java.lang.String str41 = illegal1.toString();
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        byte[] byteArray47 = explicit46.resolve();
        java.lang.String str48 = explicit46.toString();
        boolean boolean49 = explicit46.isResolved();
        java.lang.String str50 = explicit46.toString();
        byte[] byteArray51 = explicit46.resolve();
        boolean boolean52 = explicit46.isResolved();
        byte[] byteArray53 = explicit46.resolve();
        byte[] byteArray58 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit59 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray58);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator60 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray58);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray58);
        byte[] byteArray63 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator64 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray63);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray58, classFileLocator64);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution67 = classFileLocator64.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray53, classFileLocator64);
        boolean boolean69 = illegal1.equals((java.lang.Object) byteArray53);
        boolean boolean70 = illegal1.isResolved();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str41, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str48, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str50, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator60);
        org.junit.Assert.assertNotNull(classFileLocator64);
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertNotNull(resolution67);
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        java.lang.String str11 = explicit3.toString();
        boolean boolean13 = explicit3.equals((java.lang.Object) 0);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray14 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound15 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound16 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound17 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound19 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound20 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound21 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound22 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        boolean boolean23 = explicit3.equals((java.lang.Object) classFileLocatorArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound24 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray14);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(classFileLocatorArray14);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        byte[] byteArray9 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray12 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, classFileLocator13);
        byte[] byteArray18 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray27, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp33 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray43 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray40, classFileLocator44);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp46 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str47 = noOp46.toString();
        java.lang.String str48 = noOp46.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray49 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator31, noOp33, classFileLocator45, noOp46 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound50 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray49);
        boolean boolean52 = compound50.equals((java.lang.Object) "hi!");
        java.lang.String str53 = compound50.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18, (net.bytebuddy.dynamic.ClassFileLocator) compound50);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9, (net.bytebuddy.dynamic.ClassFileLocator) compound50);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit56 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        byte[] byteArray63 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray66 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray66);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray63, classFileLocator67);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp69 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray76 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray79 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator80 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray79);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator81 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray76, classFileLocator80);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp82 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str83 = noOp82.toString();
        java.lang.String str84 = noOp82.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray85 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator67, noOp69, classFileLocator81, noOp82 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound86 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray85);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution88 = compound86.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution90 = compound86.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator91 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray9, (net.bytebuddy.dynamic.ClassFileLocator) compound86);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator92 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution94 = classFileLocator92.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.Class<?> wildcardClass95 = resolution94.getClass();
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertTrue("'" + noOp33 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp33.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertTrue("'" + noOp46 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp46.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str47, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertTrue("'" + noOp69 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp69.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator80);
        org.junit.Assert.assertNotNull(classFileLocator81);
        org.junit.Assert.assertTrue("'" + noOp82 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp82.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str83, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str84, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray85);
        org.junit.Assert.assertNotNull(resolution88);
        org.junit.Assert.assertNotNull(resolution90);
        org.junit.Assert.assertNotNull(classFileLocator91);
        org.junit.Assert.assertNotNull(classFileLocator92);
        org.junit.Assert.assertNotNull(resolution94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution2 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str3 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str6 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp0.locate(".class");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(resolution2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str3, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertNotNull(resolution10);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str32 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        byte[] byteArray5 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp11 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean12 = explicit10.equals((java.lang.Object) noOp11);
        java.lang.String str13 = noOp11.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray5, (net.bytebuddy.dynamic.ClassFileLocator) noOp11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray5);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp11 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp11.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator17);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        java.lang.String str32 = compound29.toString();
        java.lang.String str33 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str15 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray13, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray22 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray22);
        byte[] byteArray25 = explicit24.resolve();
        byte[] byteArray26 = explicit24.resolve();
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = compound3.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = compound3.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = compound3.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = compound3.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = compound3.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray14 = resolution13.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution5);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = compound3.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = compound3.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = compound3.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = compound3.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str12 = compound3.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution5);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str12, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp7 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean8 = explicit6.equals((java.lang.Object) noOp7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp7.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp7.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str13 = noOp7.toString();
        java.lang.String str14 = noOp7.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp7.locate("hi!");
        boolean boolean17 = illegal1.equals((java.lang.Object) resolution16);
        java.lang.String str18 = illegal1.toString();
        boolean boolean19 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp7 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp7.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str18, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("");
        java.lang.String str12 = noOp4.toString();
        java.lang.String str13 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean12 = explicit8.equals((java.lang.Object) 10L);
        boolean boolean13 = explicit8.isResolved();
        java.lang.String str14 = explicit8.toString();
        byte[] byteArray15 = explicit8.resolve();
        java.lang.String str16 = explicit8.toString();
        boolean boolean17 = explicit8.isResolved();
        boolean boolean18 = illegal4.equals((java.lang.Object) explicit8);
        boolean boolean19 = explicit8.isResolved();
        byte[] byteArray20 = explicit8.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit25 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocator24);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("");
        java.lang.String str34 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str37 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution39);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp47 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean48 = explicit46.equals((java.lang.Object) noOp47);
        java.lang.String str49 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray41, (net.bytebuddy.dynamic.ClassFileLocator) noOp47);
        boolean boolean51 = compound29.equals((java.lang.Object) byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        byte[] byteArray58 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit59 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray58);
        byte[] byteArray60 = explicit59.resolve();
        boolean boolean61 = explicit59.isResolved();
        boolean boolean63 = explicit59.equals((java.lang.Object) 10L);
        boolean boolean64 = explicit59.isResolved();
        boolean boolean65 = explicit59.isResolved();
        boolean boolean66 = explicit59.isResolved();
        boolean boolean67 = explicit59.isResolved();
        boolean boolean68 = explicit59.isResolved();
        boolean boolean69 = compound29.equals((java.lang.Object) explicit59);
        java.lang.String str70 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution72 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp47 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp47.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(resolution72);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray15 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray18 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray15, classFileLocator19);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp21 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray31 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28, classFileLocator32);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp34 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str35 = noOp34.toString();
        java.lang.String str36 = noOp34.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray37 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator19, noOp21, classFileLocator33, noOp34 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound38 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray37);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound38.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str41 = compound38.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound38.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) compound38);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution46 = compound38.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution48 = compound38.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        java.lang.String str49 = compound38.toString();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertTrue("'" + noOp21 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp21.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertTrue("'" + noOp34 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp34.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str35, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray37);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(resolution46);
        org.junit.Assert.assertNotNull(resolution48);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean4 = illegal1.equals((java.lang.Object) 100);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray5 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray2 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean11 = compound4.equals((java.lang.Object) boolean10);
        boolean boolean12 = illegal1.equals((java.lang.Object) compound4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = compound4.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray15 = resolution14.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classFileLocatorArray2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resolution14);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        boolean boolean14 = explicit5.isResolved();
        boolean boolean15 = illegal1.equals((java.lang.Object) explicit5);
        boolean boolean16 = explicit5.isResolved();
        byte[] byteArray17 = explicit5.resolve();
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray22 = explicit21.resolve();
        boolean boolean23 = explicit21.isResolved();
        boolean boolean25 = explicit21.equals((java.lang.Object) 10L);
        java.lang.String str26 = explicit21.toString();
        java.lang.String str27 = explicit21.toString();
        byte[] byteArray28 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit29 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray28);
        byte[] byteArray30 = explicit29.resolve();
        boolean boolean31 = explicit5.equals((java.lang.Object) explicit29);
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray42 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray42);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray39, classFileLocator43);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = classFileLocator45.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        boolean boolean48 = explicit5.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str26, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str27, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str2 = illegal1.toString();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        java.lang.String str5 = illegal1.toString();
        boolean boolean6 = illegal1.isResolved();
        boolean boolean7 = illegal1.isResolved();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str5, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray12 = explicit3.resolve();
        boolean boolean13 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        boolean boolean12 = explicit3.isResolved();
        boolean boolean13 = explicit3.isResolved();
        byte[] byteArray16 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray18 = explicit17.resolve();
        java.lang.String str19 = explicit17.toString();
        byte[] byteArray20 = explicit17.resolve();
        boolean boolean21 = explicit3.equals((java.lang.Object) explicit17);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str19, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound2.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray5 = resolution4.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Compound{classFileLocator=[]}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution4);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp6 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean7 = explicit5.equals((java.lang.Object) noOp6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp6.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp6.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str12 = noOp6.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp6.locate("");
        boolean boolean15 = compound1.equals((java.lang.Object) noOp6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp6.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp6.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str20 = noOp6.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp6 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp6.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean6 = explicit3.equals((java.lang.Object) (short) 0);
        byte[] byteArray7 = explicit3.resolve();
        boolean boolean8 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        boolean boolean10 = explicit4.isResolved();
        boolean boolean11 = explicit4.isResolved();
        byte[] byteArray12 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        java.lang.Class<?> wildcardClass16 = byteArray12.getClass();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp18 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str32 = noOp31.toString();
        java.lang.String str33 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray34 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator16, noOp18, classFileLocator30, noOp31 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray34);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound35.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound35.locate("");
        boolean boolean40 = explicit5.equals((java.lang.Object) compound35);
        byte[] byteArray41 = explicit5.resolve();
        boolean boolean42 = explicit5.isResolved();
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray52 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray52);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray49, classFileLocator53);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp55 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray65 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray65);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray62, classFileLocator66);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp68 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str69 = noOp68.toString();
        java.lang.String str70 = noOp68.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray71 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator53, noOp55, classFileLocator67, noOp68 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound72 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray71);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution74 = compound72.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution76 = compound72.locate("");
        java.lang.String str77 = compound72.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution79 = compound72.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution81 = compound72.locate("ClassFileLocator.NoOp.INSTANCE");
        boolean boolean82 = explicit5.equals((java.lang.Object) "ClassFileLocator.NoOp.INSTANCE");
        boolean boolean83 = explicit5.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertTrue("'" + noOp18 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp18.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray34);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertTrue("'" + noOp55 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp55.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertTrue("'" + noOp68 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp68.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str69, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str70, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray71);
        org.junit.Assert.assertNotNull(resolution74);
        org.junit.Assert.assertNotNull(resolution76);
        org.junit.Assert.assertNotNull(resolution79);
        org.junit.Assert.assertNotNull(resolution81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp13 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray23 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray20, classFileLocator24);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp26 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str27 = noOp26.toString();
        java.lang.String str28 = noOp26.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray29 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator11, noOp13, classFileLocator25, noOp26 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = compound30.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str33 = compound30.toString();
        byte[] byteArray37 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit38 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray37);
        byte[] byteArray39 = explicit38.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        boolean boolean42 = compound30.equals((java.lang.Object) byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit43 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit44 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit45 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        byte[] byteArray49 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit50 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp51 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean52 = explicit50.equals((java.lang.Object) noOp51);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = noOp51.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = noOp51.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution58 = noOp51.locate("hi!");
        java.lang.String str59 = noOp51.toString();
        java.lang.String str60 = noOp51.toString();
        java.lang.String str61 = noOp51.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator62 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}", byteArray39, (net.bytebuddy.dynamic.ClassFileLocator) noOp51);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution64 = noOp51.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertTrue("'" + noOp13 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp13.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertTrue("'" + noOp26 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp26.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray29);
        org.junit.Assert.assertNotNull(resolution32);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp51 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp51.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(resolution54);
        org.junit.Assert.assertNotNull(resolution56);
        org.junit.Assert.assertNotNull(resolution58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str59, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str60, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str61, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator62);
        org.junit.Assert.assertNotNull(resolution64);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution6 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertNotNull(resolution6);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = classFileLocator8.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean11 = explicit3.equals((java.lang.Object) classFileLocator8);
        byte[] byteArray12 = explicit3.resolve();
        byte[] byteArray13 = explicit3.resolve();
        java.lang.String str14 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str8 = noOp4.toString();
        java.lang.String str9 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str12 = noOp4.toString();
        java.lang.String str13 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str8, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str9, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        boolean boolean14 = explicit5.isResolved();
        boolean boolean15 = illegal1.equals((java.lang.Object) explicit5);
        boolean boolean16 = explicit5.isResolved();
        byte[] byteArray19 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        byte[] byteArray21 = explicit20.resolve();
        boolean boolean22 = explicit20.isResolved();
        boolean boolean24 = explicit20.equals((java.lang.Object) 10L);
        java.lang.String str25 = explicit20.toString();
        java.lang.String str26 = explicit20.toString();
        byte[] byteArray27 = explicit20.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit28 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray27);
        boolean boolean29 = explicit5.equals((java.lang.Object) byteArray27);
        boolean boolean30 = explicit5.isResolved();
        byte[] byteArray31 = explicit5.resolve();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str25, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str26, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, 100]");
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate(".class");
        java.lang.String str32 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean35 = resolution34.isResolved();
        java.lang.Class<?> wildcardClass36 = resolution34.getClass();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean6 = illegal5.isResolved();
        boolean boolean7 = illegal5.isResolved();
        java.lang.String str8 = illegal5.toString();
        byte[] byteArray11 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        byte[] byteArray13 = explicit12.resolve();
        boolean boolean15 = explicit12.equals((java.lang.Object) (short) 0);
        boolean boolean16 = illegal5.equals((java.lang.Object) explicit12);
        byte[] byteArray21 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        byte[] byteArray23 = explicit22.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit25 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        boolean boolean26 = explicit25.isResolved();
        byte[] byteArray27 = explicit25.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray27);
        boolean boolean29 = illegal5.equals((java.lang.Object) byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray31 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound32 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray31);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound33 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray31);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound34 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray31);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray31);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}", byteArray27, (net.bytebuddy.dynamic.ClassFileLocator) compound36);
        byte[] byteArray40 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit42 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp47 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean48 = explicit46.equals((java.lang.Object) noOp47);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = noOp47.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = noOp47.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str53 = noOp47.toString();
        java.lang.String str54 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = noOp47.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution58 = noOp47.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean59 = explicit42.equals((java.lang.Object) noOp47);
        java.lang.String str60 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator61 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray27, (net.bytebuddy.dynamic.ClassFileLocator) noOp47);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator62 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit63 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocatorArray31);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp47 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp47.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str54, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution56);
        org.junit.Assert.assertNotNull(resolution58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str60, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator61);
        org.junit.Assert.assertNotNull(classFileLocator62);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        java.lang.Object obj11 = null;
        boolean boolean12 = explicit3.equals(obj11);
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp44 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str45 = noOp44.toString();
        java.lang.String str46 = noOp44.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray47 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator29, noOp31, classFileLocator43, noOp44 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound48 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray47);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound48.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound48.locate("");
        boolean boolean53 = explicit18.equals((java.lang.Object) compound48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound48.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str56 = compound48.toString();
        boolean boolean57 = explicit3.equals((java.lang.Object) str56);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + noOp44 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp44.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray47);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal2 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        java.lang.String str14 = explicit6.toString();
        boolean boolean15 = explicit6.isResolved();
        boolean boolean16 = illegal2.equals((java.lang.Object) explicit6);
        boolean boolean17 = explicit6.isResolved();
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray22 = explicit21.resolve();
        boolean boolean23 = explicit21.isResolved();
        boolean boolean25 = explicit21.equals((java.lang.Object) 10L);
        java.lang.String str26 = explicit21.toString();
        java.lang.String str27 = explicit21.toString();
        byte[] byteArray28 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit29 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray28);
        boolean boolean30 = explicit6.equals((java.lang.Object) byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray31 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound32 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray31);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound32.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray28, (net.bytebuddy.dynamic.ClassFileLocator) compound32);
        java.lang.String str36 = compound32.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound32.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str39 = compound32.toString();
        java.lang.String str40 = compound32.toString();
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str26, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str27, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classFileLocatorArray31);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str36, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str39, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str40, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        java.lang.Class<?> wildcardClass12 = byteArray5.getClass();
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        byte[] byteArray12 = explicit3.resolve();
        boolean boolean13 = explicit3.isResolved();
        byte[] byteArray14 = explicit3.resolve();
        java.lang.String str15 = explicit3.toString();
        java.lang.String str16 = explicit3.toString();
        java.lang.Object obj17 = null;
        boolean boolean18 = explicit3.equals(obj17);
        java.lang.String str19 = explicit3.toString();
        byte[] byteArray20 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str19, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray8 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray8);
        byte[] byteArray12 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean15 = explicit13.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str20 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp14.locate("");
        boolean boolean23 = compound9.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        java.lang.String str25 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution27 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution29 = noOp14.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(classFileLocatorArray8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str25, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution27);
        org.junit.Assert.assertNotNull(resolution29);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray5 = explicit4.resolve();
        byte[] byteArray6 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        boolean boolean8 = explicit7.isResolved();
        byte[] byteArray9 = explicit7.resolve();
        java.lang.String str10 = explicit7.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str2 = illegal1.toString();
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        byte[] byteArray18 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator19);
        boolean boolean21 = illegal1.equals((java.lang.Object) "");
        boolean boolean22 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean25 = illegal24.isResolved();
        boolean boolean26 = illegal24.isResolved();
        boolean boolean27 = illegal24.isResolved();
        boolean boolean28 = illegal1.equals((java.lang.Object) illegal24);
        java.lang.String str29 = illegal1.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound32 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound32.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean36 = compound32.equals((java.lang.Object) 10.0d);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal38 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray51 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray51);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray48, classFileLocator52);
        byte[] byteArray56 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray48, classFileLocator57);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray48);
        byte[] byteArray68 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray71 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator72 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray71);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray68, classFileLocator72);
        byte[] byteArray76 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator77 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray76);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator78 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray68, classFileLocator77);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator79 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray68);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator80 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray48, classFileLocator79);
        boolean boolean81 = illegal38.equals((java.lang.Object) classFileLocator79);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution83 = classFileLocator79.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean84 = compound32.equals((java.lang.Object) classFileLocator79);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution86 = compound32.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        boolean boolean87 = illegal1.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str29, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator72);
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator77);
        org.junit.Assert.assertNotNull(classFileLocator78);
        org.junit.Assert.assertNotNull(classFileLocator79);
        org.junit.Assert.assertNotNull(classFileLocator80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(resolution83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(resolution86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        byte[] byteArray38 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit39 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray38);
        byte[] byteArray40 = explicit39.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray42 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound43 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray42);
        byte[] byteArray46 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp48 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean49 = explicit47.equals((java.lang.Object) noOp48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = noOp48.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = noOp48.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str54 = noOp48.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = noOp48.locate("");
        boolean boolean57 = compound43.equals((java.lang.Object) noOp48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray40, (net.bytebuddy.dynamic.ClassFileLocator) noOp48);
        java.lang.String str59 = noOp48.toString();
        java.lang.String str60 = noOp48.toString();
        boolean boolean61 = compound29.equals((java.lang.Object) noOp48);
        java.lang.String str62 = noOp48.toString();
        java.lang.String str63 = noOp48.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocatorArray42);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp48 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp48.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str54, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str59, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str60, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str62, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str63, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp9 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean10 = explicit8.equals((java.lang.Object) noOp9);
        java.lang.String str11 = noOp9.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray3, (net.bytebuddy.dynamic.ClassFileLocator) noOp9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        boolean boolean14 = explicit13.isResolved();
        java.lang.Class<?> wildcardClass15 = explicit13.getClass();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp9 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp9.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        byte[] byteArray5 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp11 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean12 = explicit10.equals((java.lang.Object) noOp11);
        java.lang.String str13 = noOp11.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray5, (net.bytebuddy.dynamic.ClassFileLocator) noOp11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray16 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound17 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray16);
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp22 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean23 = explicit21.equals((java.lang.Object) noOp22);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution25 = noOp22.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution27 = noOp22.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str28 = noOp22.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution30 = noOp22.locate("");
        boolean boolean31 = compound17.equals((java.lang.Object) noOp22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray5, (net.bytebuddy.dynamic.ClassFileLocator) compound17);
        java.lang.Class<?> wildcardClass33 = compound17.getClass();
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp11 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp11.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocatorArray16);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp22 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp22.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(resolution25);
        org.junit.Assert.assertNotNull(resolution27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        byte[] byteArray13 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp15 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean16 = explicit14.equals((java.lang.Object) noOp15);
        java.lang.String str17 = noOp15.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp15.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp15.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp15.locate("ClassFileLocator.NoOp.INSTANCE");
        boolean boolean24 = illegal7.equals((java.lang.Object) "ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str25 = illegal7.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray26 = illegal7.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for hi!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp15 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp15.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str25, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray5 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray39 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator6, compound36 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound41 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound42 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        boolean boolean43 = illegal1.equals((java.lang.Object) compound42);
        byte[] byteArray47 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator48 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray47);
        byte[] byteArray51 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit52 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray51);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp53 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean54 = explicit52.equals((java.lang.Object) noOp53);
        java.lang.String str55 = noOp53.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray47, (net.bytebuddy.dynamic.ClassFileLocator) noOp53);
        java.lang.String str57 = noOp53.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution59 = noOp53.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean60 = illegal1.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str61 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray62 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Compound{classFileLocator=[]}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(classFileLocatorArray39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator48);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp53 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp53.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str55, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str57, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}" + "'", str61, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean6 = explicit3.equals((java.lang.Object) (short) 0);
        byte[] byteArray7 = explicit3.resolve();
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        java.lang.String str10 = explicit3.toString();
        java.lang.String str11 = explicit3.toString();
        byte[] byteArray12 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        byte[] byteArray1 = null;
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        boolean boolean11 = explicit5.isResolved();
        boolean boolean12 = explicit5.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray13 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound14 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound15 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound16 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        boolean boolean17 = explicit5.equals((java.lang.Object) classFileLocatorArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound19 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound20 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray1, (net.bytebuddy.dynamic.ClassFileLocator) compound20);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(classFileLocatorArray13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classFileLocator21);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp44 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str45 = noOp44.toString();
        java.lang.String str46 = noOp44.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray47 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator29, noOp31, classFileLocator43, noOp44 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound48 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray47);
        boolean boolean50 = compound48.equals((java.lang.Object) "hi!");
        boolean boolean52 = compound48.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = compound48.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = compound48.locate("");
        boolean boolean57 = illegal18.equals((java.lang.Object) "");
        java.lang.String str58 = illegal18.toString();
        java.lang.String str59 = illegal18.toString();
        byte[] byteArray62 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit63 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray62);
        byte[] byteArray64 = explicit63.resolve();
        boolean boolean65 = explicit63.isResolved();
        boolean boolean67 = explicit63.equals((java.lang.Object) 10L);
        boolean boolean68 = explicit63.isResolved();
        boolean boolean69 = explicit63.isResolved();
        boolean boolean70 = illegal18.equals((java.lang.Object) explicit63);
        byte[] byteArray71 = explicit63.resolve();
        byte[] byteArray72 = explicit63.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray72);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator74 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray72);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator75 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray8, classFileLocator74);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + noOp44 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp44.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(resolution54);
        org.junit.Assert.assertNotNull(resolution56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str58, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str59, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertNotNull(classFileLocator74);
        org.junit.Assert.assertNotNull(classFileLocator75);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray8 = explicit7.resolve();
        java.lang.String str9 = explicit7.toString();
        java.lang.String str10 = explicit7.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str34 = compound29.toString();
        java.lang.String str35 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray9 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound10 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray9);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound11 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = compound11.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean14 = explicit3.equals((java.lang.Object) compound11);
        java.lang.Object obj15 = null;
        boolean boolean16 = compound11.equals(obj15);
        java.lang.String str17 = compound11.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(classFileLocatorArray9);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str17, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean3 = illegal1.equals((java.lang.Object) classFileLocator2);
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        boolean boolean6 = illegal1.isResolved();
        boolean boolean7 = illegal1.isResolved();
        boolean boolean8 = illegal1.isResolved();
        java.lang.String str9 = illegal1.toString();
        boolean boolean10 = illegal1.isResolved();
        org.junit.Assert.assertNotNull(classFileLocator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str9, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray5 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray39 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator6, compound36 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound41 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound42 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        boolean boolean43 = illegal1.equals((java.lang.Object) compound42);
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray53 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray53);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray50, classFileLocator54);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp56 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray63 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray66 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray66);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray63, classFileLocator67);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp69 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str70 = noOp69.toString();
        java.lang.String str71 = noOp69.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray72 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator54, noOp56, classFileLocator68, noOp69 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound73 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray72);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution75 = compound73.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution77 = compound73.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean78 = illegal1.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean79 = illegal1.isResolved();
        boolean boolean80 = illegal1.isResolved();
        java.lang.Class<?> wildcardClass81 = illegal1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(classFileLocatorArray39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertTrue("'" + noOp56 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp56.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertTrue("'" + noOp69 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp69.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str70, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str71, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray72);
        org.junit.Assert.assertNotNull(resolution75);
        org.junit.Assert.assertNotNull(resolution77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        boolean boolean8 = explicit7.isResolved();
        boolean boolean9 = explicit7.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean12 = illegal11.isResolved();
        java.lang.String str13 = illegal11.toString();
        boolean boolean14 = illegal11.isResolved();
        boolean boolean15 = illegal11.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray20 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = classFileLocator21.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean24 = illegal17.equals((java.lang.Object) resolution23);
        boolean boolean25 = illegal11.equals((java.lang.Object) boolean24);
        boolean boolean26 = illegal11.isResolved();
        java.lang.String str27 = illegal11.toString();
        boolean boolean28 = illegal11.isResolved();
        java.lang.String str29 = illegal11.toString();
        boolean boolean30 = illegal11.isResolved();
        boolean boolean31 = explicit7.equals((java.lang.Object) boolean30);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str13, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str27, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str29, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str3 = compound2.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray4 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        boolean boolean6 = compound2.equals((java.lang.Object) classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound10 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound11 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound12 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound13 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound14 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str3, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(classFileLocatorArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean4 = illegal1.equals((java.lang.Object) 100);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        byte[] byteArray11 = explicit8.resolve();
        boolean boolean12 = illegal1.equals((java.lang.Object) explicit8);
        boolean boolean13 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray14 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound2.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean6 = compound2.equals((java.lang.Object) 10.0d);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18, classFileLocator22);
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18);
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        byte[] byteArray46 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator48 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator47);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18, classFileLocator49);
        boolean boolean51 = illegal8.equals((java.lang.Object) classFileLocator49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = classFileLocator49.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean54 = compound2.equals((java.lang.Object) classFileLocator49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = compound2.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str57 = compound2.toString();
        java.lang.String str58 = compound2.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertNotNull(classFileLocator48);
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(resolution56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str57, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str58, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        byte[] byteArray8 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        byte[] byteArray9 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray12 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, classFileLocator13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray9);
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp28 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray38 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray35, classFileLocator39);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp41 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str42 = noOp41.toString();
        java.lang.String str43 = noOp41.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray44 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator26, noOp28, classFileLocator40, noOp41 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound45 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray44);
        boolean boolean47 = compound45.equals((java.lang.Object) "hi!");
        boolean boolean49 = compound45.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = compound45.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound45.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray57 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray57);
        byte[] byteArray61 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit62 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp63 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean64 = explicit62.equals((java.lang.Object) noOp63);
        java.lang.String str65 = noOp63.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray57, (net.bytebuddy.dynamic.ClassFileLocator) noOp63);
        boolean boolean67 = compound45.equals((java.lang.Object) byteArray57);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution69 = compound45.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution71 = compound45.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator72 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray9, (net.bytebuddy.dynamic.ClassFileLocator) compound45);
        byte[] byteArray75 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit76 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray75);
        byte[] byteArray77 = explicit76.resolve();
        boolean boolean78 = explicit76.isResolved();
        boolean boolean80 = explicit76.equals((java.lang.Object) 10L);
        boolean boolean81 = explicit76.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray82 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound83 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray82);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound84 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray82);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution86 = compound84.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean87 = explicit76.equals((java.lang.Object) compound84);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator88 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray9, (net.bytebuddy.dynamic.ClassFileLocator) compound84);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution90 = compound84.locate("");
        boolean boolean91 = resolution90.isResolved();
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertTrue("'" + noOp28 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp28.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertTrue("'" + noOp41 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp41.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp63 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp63.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str65, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(resolution69);
        org.junit.Assert.assertNotNull(resolution71);
        org.junit.Assert.assertNotNull(classFileLocator72);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(classFileLocatorArray82);
        org.junit.Assert.assertNotNull(resolution86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(classFileLocator88);
        org.junit.Assert.assertNotNull(resolution90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        byte[] byteArray8 = explicit3.resolve();
        byte[] byteArray11 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        byte[] byteArray13 = explicit12.resolve();
        boolean boolean14 = explicit12.isResolved();
        boolean boolean16 = explicit12.equals((java.lang.Object) 10L);
        boolean boolean17 = explicit12.isResolved();
        java.lang.String str18 = explicit12.toString();
        boolean boolean19 = explicit12.isResolved();
        boolean boolean20 = explicit12.isResolved();
        byte[] byteArray23 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray34 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray31, classFileLocator35);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp37 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray44 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray47 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator48 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray47);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray44, classFileLocator48);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp50 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str51 = noOp50.toString();
        java.lang.String str52 = noOp50.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray53 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator35, noOp37, classFileLocator49, noOp50 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound54 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray53);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = compound54.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray57 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator24, compound54 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound58 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray57);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound59 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray57);
        boolean boolean60 = explicit12.equals((java.lang.Object) classFileLocatorArray57);
        byte[] byteArray61 = explicit12.resolve();
        boolean boolean62 = explicit3.equals((java.lang.Object) byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit63 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray61);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str18, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertTrue("'" + noOp37 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp37.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator48);
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertTrue("'" + noOp50 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp50.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str51, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str52, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray53);
        org.junit.Assert.assertNotNull(resolution56);
        org.junit.Assert.assertNotNull(classFileLocatorArray57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        byte[] byteArray9 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray12 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, classFileLocator13);
        byte[] byteArray17 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, classFileLocator18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9);
        byte[] byteArray23 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        byte[] byteArray25 = explicit24.resolve();
        boolean boolean26 = explicit24.isResolved();
        boolean boolean28 = explicit24.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = classFileLocator29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean32 = explicit24.equals((java.lang.Object) classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit34 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray46 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator48 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray43, classFileLocator47);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray43, classFileLocator50);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit52 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray43);
        boolean boolean53 = explicit34.equals((java.lang.Object) explicit52);
        java.lang.Class<?> wildcardClass54 = explicit52.getClass();
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertNotNull(classFileLocator48);
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        boolean boolean11 = explicit5.isResolved();
        boolean boolean12 = explicit5.isResolved();
        byte[] byteArray13 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator17);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22);
        byte[] byteArray36 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit37 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray36);
        byte[] byteArray38 = explicit37.resolve();
        boolean boolean39 = explicit37.isResolved();
        boolean boolean41 = explicit37.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = classFileLocator42.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean45 = explicit37.equals((java.lang.Object) classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray22);
        boolean boolean48 = explicit12.equals((java.lang.Object) explicit47);
        byte[] byteArray49 = explicit47.resolve();
        java.lang.String str50 = explicit47.toString();
        java.lang.Class<?> wildcardClass51 = explicit47.getClass();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}" + "'", str50, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("");
        java.lang.String str13 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        java.lang.String str18 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str18, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution20);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp44 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str45 = noOp44.toString();
        java.lang.String str46 = noOp44.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray47 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator29, noOp31, classFileLocator43, noOp44 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound48 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray47);
        boolean boolean50 = compound48.equals((java.lang.Object) "hi!");
        java.lang.String str51 = compound48.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray7, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound48.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        byte[] byteArray62 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray65 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray65);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray62, classFileLocator66);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp68 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray75 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray78 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator79 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray78);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator80 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray75, classFileLocator79);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp81 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str82 = noOp81.toString();
        java.lang.String str83 = noOp81.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray84 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator66, noOp68, classFileLocator80, noOp81 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound85 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray84);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution87 = compound85.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution89 = compound85.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean90 = compound48.equals((java.lang.Object) compound85);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution92 = compound85.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        java.lang.String str93 = compound85.toString();
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + noOp44 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp44.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertTrue("'" + noOp68 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp68.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator79);
        org.junit.Assert.assertNotNull(classFileLocator80);
        org.junit.Assert.assertTrue("'" + noOp81 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp81.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str82, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str83, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray84);
        org.junit.Assert.assertNotNull(resolution87);
        org.junit.Assert.assertNotNull(resolution89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(resolution92);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp28 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray38 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray35, classFileLocator39);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp41 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str42 = noOp41.toString();
        java.lang.String str43 = noOp41.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray44 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator26, noOp28, classFileLocator40, noOp41 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound45 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray44);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = compound45.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray48 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator15, compound45 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound49 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound50 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        boolean boolean51 = explicit3.equals((java.lang.Object) classFileLocatorArray48);
        boolean boolean52 = explicit3.isResolved();
        byte[] byteArray53 = explicit3.resolve();
        byte[] byteArray54 = explicit3.resolve();
        boolean boolean55 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertTrue("'" + noOp28 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp28.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertTrue("'" + noOp41 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp41.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray44);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertNotNull(classFileLocatorArray48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str4 = illegal3.toString();
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean12 = explicit8.equals((java.lang.Object) 10L);
        java.lang.String str13 = explicit8.toString();
        byte[] byteArray14 = explicit8.resolve();
        boolean boolean15 = illegal3.equals((java.lang.Object) byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray27, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp33 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray43 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray40, classFileLocator44);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp46 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str47 = noOp46.toString();
        java.lang.String str48 = noOp46.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray49 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator31, noOp33, classFileLocator45, noOp46 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound50 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound50.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray53 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator20, compound50 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound54 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray53);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray14, (net.bytebuddy.dynamic.ClassFileLocator) compound54);
        byte[] byteArray58 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit59 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray58);
        byte[] byteArray60 = explicit59.resolve();
        boolean boolean61 = explicit59.isResolved();
        boolean boolean63 = explicit59.equals((java.lang.Object) 10L);
        boolean boolean64 = explicit59.isResolved();
        boolean boolean65 = explicit59.isResolved();
        boolean boolean66 = explicit59.isResolved();
        boolean boolean67 = compound54.equals((java.lang.Object) explicit59);
        byte[] byteArray68 = explicit59.resolve();
        boolean boolean69 = explicit59.isResolved();
        boolean boolean70 = explicit59.isResolved();
        java.lang.Object obj71 = null;
        boolean boolean72 = explicit59.equals(obj71);
        boolean boolean73 = explicit59.isResolved();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertTrue("'" + noOp33 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp33.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertTrue("'" + noOp46 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp46.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str47, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray49);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(classFileLocatorArray53);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = compound9.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = compound9.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str14 = compound9.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str14, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator0 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution2 = classFileLocator0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = classFileLocator0.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray5 = resolution4.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Compound{classFileLocator=[]}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classFileLocator0);
        org.junit.Assert.assertNotNull(resolution2);
        org.junit.Assert.assertNotNull(resolution4);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str13 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp12);
        java.lang.String str17 = noOp12.toString();
        java.lang.String str18 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str21 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp12.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str24 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution26 = noOp12.locate("");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str18, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str24, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution26);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean12 = explicit8.equals((java.lang.Object) 10L);
        boolean boolean13 = explicit8.isResolved();
        java.lang.String str14 = explicit8.toString();
        byte[] byteArray15 = explicit8.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str17 = noOp16.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp16.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray15, (net.bytebuddy.dynamic.ClassFileLocator) noOp16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        byte[] byteArray24 = explicit23.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit25 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray24);
        byte[] byteArray28 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit29 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean31 = explicit29.equals((java.lang.Object) noOp30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = noOp30.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = noOp30.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str36 = noOp30.toString();
        java.lang.String str37 = noOp30.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = noOp30.locate("hi!");
        java.lang.String str40 = noOp30.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray24, (net.bytebuddy.dynamic.ClassFileLocator) noOp30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit43 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray24);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str37, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str40, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean3 = illegal1.equals((java.lang.Object) classFileLocator2);
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        boolean boolean6 = illegal1.isResolved();
        byte[] byteArray10 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        byte[] byteArray12 = explicit11.resolve();
        boolean boolean13 = explicit11.isResolved();
        boolean boolean15 = explicit11.equals((java.lang.Object) 10L);
        boolean boolean16 = explicit11.isResolved();
        boolean boolean17 = explicit11.isResolved();
        boolean boolean18 = explicit11.isResolved();
        byte[] byteArray19 = explicit11.resolve();
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray27, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp33 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray43 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray40, classFileLocator44);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp46 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str47 = noOp46.toString();
        java.lang.String str48 = noOp46.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray49 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator31, noOp33, classFileLocator45, noOp46 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound50 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound50.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str53 = compound50.toString();
        byte[] byteArray57 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit58 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray57);
        byte[] byteArray59 = explicit58.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator60 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray59);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray59);
        boolean boolean62 = compound50.equals((java.lang.Object) byteArray59);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray59);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator64 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray19, classFileLocator63);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit65 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        boolean boolean66 = illegal1.equals((java.lang.Object) byteArray19);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray67 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classFileLocator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertTrue("'" + noOp33 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp33.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertTrue("'" + noOp46 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp46.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str47, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray49);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertNotNull(classFileLocator64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray23, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str30 = noOp29.toString();
        java.lang.String str31 = noOp29.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray32 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator14, noOp16, classFileLocator28, noOp29 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound33 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray32);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound33.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray36 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator3, compound33 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound37 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray38 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound39 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        boolean boolean41 = compound37.equals((java.lang.Object) classFileLocatorArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound42 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound43 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str30, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray32);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(classFileLocatorArray36);
        org.junit.Assert.assertNotNull(classFileLocatorArray38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray17 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray14, classFileLocator18);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp20 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray27, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp33 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str34 = noOp33.toString();
        java.lang.String str35 = noOp33.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray36 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator18, noOp20, classFileLocator32, noOp33 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound37 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound37.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean40 = explicit3.equals((java.lang.Object) "ClassFileLocator.Compound{classFileLocator=[]}");
        byte[] byteArray41 = explicit3.resolve();
        java.lang.String str42 = explicit3.toString();
        byte[] byteArray43 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertTrue("'" + noOp20 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp20.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertTrue("'" + noOp33 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp33.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str35, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray36);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str42, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-1, 100]");
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("");
        java.lang.String str34 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        byte[] byteArray41 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit42 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp43 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean44 = explicit42.equals((java.lang.Object) noOp43);
        java.lang.String str45 = noOp43.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = noOp43.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution49 = noOp43.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = noOp43.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = noOp43.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        boolean boolean54 = compound29.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str55 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp43 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp43.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertNotNull(resolution49);
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str2 = illegal1.toString();
        java.lang.String str3 = illegal1.toString();
        java.lang.String str4 = illegal1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound2.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean6 = compound2.equals((java.lang.Object) 10.0d);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18, classFileLocator22);
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18);
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        byte[] byteArray46 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator48 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator47);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18, classFileLocator49);
        boolean boolean51 = illegal8.equals((java.lang.Object) classFileLocator49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = classFileLocator49.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean54 = compound2.equals((java.lang.Object) classFileLocator49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = compound2.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean57 = resolution56.isResolved();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertNotNull(classFileLocator48);
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(resolution56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        java.lang.String str6 = noOp0.toString();
        java.lang.String str7 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}");
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str7, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution9);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str2 = illegal1.toString();
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        byte[] byteArray18 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator19);
        boolean boolean21 = illegal1.equals((java.lang.Object) "");
        boolean boolean22 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean25 = illegal24.isResolved();
        boolean boolean26 = illegal24.isResolved();
        boolean boolean27 = illegal24.isResolved();
        boolean boolean28 = illegal1.equals((java.lang.Object) illegal24);
        byte[] byteArray31 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit32 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp33 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean34 = explicit32.equals((java.lang.Object) noOp33);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = noOp33.locate("");
        boolean boolean37 = illegal1.equals((java.lang.Object) "");
        boolean boolean38 = illegal1.isResolved();
        java.lang.String str39 = illegal1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp33 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp33.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str39, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        byte[] byteArray9 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray12 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, classFileLocator13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray9);
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        byte[] byteArray27 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit28 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean30 = explicit28.equals((java.lang.Object) noOp29);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = noOp29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = noOp29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = noOp29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray21, (net.bytebuddy.dynamic.ClassFileLocator) noOp29);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray38 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, classFileLocator37 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound39 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound41 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound42 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(resolution32);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocatorArray38);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal2 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str3 = illegal2.toString();
        byte[] byteArray6 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray8 = explicit7.resolve();
        boolean boolean9 = explicit7.isResolved();
        boolean boolean11 = explicit7.equals((java.lang.Object) 10L);
        boolean boolean12 = explicit7.isResolved();
        java.lang.String str13 = explicit7.toString();
        byte[] byteArray14 = explicit7.resolve();
        java.lang.String str15 = explicit7.toString();
        byte[] byteArray16 = explicit7.resolve();
        boolean boolean17 = illegal2.equals((java.lang.Object) explicit7);
        boolean boolean18 = explicit7.isResolved();
        byte[] byteArray19 = explicit7.resolve();
        byte[] byteArray23 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        byte[] byteArray25 = explicit24.resolve();
        boolean boolean26 = explicit24.isResolved();
        boolean boolean28 = explicit24.equals((java.lang.Object) 10L);
        boolean boolean29 = explicit24.isResolved();
        java.lang.String str30 = explicit24.toString();
        boolean boolean31 = explicit24.isResolved();
        boolean boolean32 = explicit24.isResolved();
        byte[] byteArray33 = explicit24.resolve();
        byte[] byteArray34 = explicit24.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}", byteArray34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}", byteArray19, classFileLocator35);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str30, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator36);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("");
        java.lang.String str34 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        java.lang.String str41 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray9);
        byte[] byteArray15 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        byte[] byteArray17 = explicit16.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray17);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        byte[] byteArray34 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray17, classFileLocator35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray9, classFileLocator37);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit39 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}", byteArray9);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator40);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution6 = compound4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = compound4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = compound4.locate("hi!");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution6);
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertNotNull(resolution10);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = classFileLocator13.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(resolution15);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        byte[] byteArray14 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean19 = illegal18.isResolved();
        java.lang.String str20 = illegal18.toString();
        java.lang.String str21 = illegal18.toString();
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray24);
        byte[] byteArray29 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit30 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray29);
        byte[] byteArray31 = explicit30.resolve();
        boolean boolean32 = explicit30.isResolved();
        boolean boolean34 = explicit30.equals((java.lang.Object) 10L);
        boolean boolean35 = explicit30.isResolved();
        java.lang.String str36 = explicit30.toString();
        byte[] byteArray37 = explicit30.resolve();
        java.lang.String str38 = explicit30.toString();
        boolean boolean39 = explicit26.equals((java.lang.Object) str38);
        byte[] byteArray40 = explicit26.resolve();
        boolean boolean41 = illegal18.equals((java.lang.Object) byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray14, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit44 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str20, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str21, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str36, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str38, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray14 = explicit13.resolve();
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean20 = explicit18.equals((java.lang.Object) noOp19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp19.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = noOp19.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution26 = noOp19.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution28 = noOp19.locate(".class");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray14, (net.bytebuddy.dynamic.ClassFileLocator) noOp19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit30 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertNotNull(resolution26);
        org.junit.Assert.assertNotNull(resolution28);
        org.junit.Assert.assertNotNull(classFileLocator29);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18, classFileLocator22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray18);
        boolean boolean26 = explicit3.equals((java.lang.Object) ".class");
        byte[] byteArray29 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit30 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray29);
        byte[] byteArray31 = explicit30.resolve();
        boolean boolean32 = explicit30.isResolved();
        boolean boolean34 = explicit30.equals((java.lang.Object) 10L);
        boolean boolean35 = explicit30.isResolved();
        java.lang.String str36 = explicit30.toString();
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray48 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray45, classFileLocator49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray45);
        boolean boolean53 = explicit30.equals((java.lang.Object) ".class");
        boolean boolean54 = explicit3.equals((java.lang.Object) boolean53);
        boolean boolean55 = explicit3.isResolved();
        boolean boolean56 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str36, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) -1, (byte) 1, (byte) -1, (byte) 0, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}", byteArray8);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, -1, 1, -1, 0, 100]");
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(classFileLocator11);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        byte[] byteArray9 = explicit3.resolve();
        byte[] byteArray10 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        boolean boolean13 = explicit12.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        byte[] byteArray9 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray12 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, classFileLocator13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray9);
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        byte[] byteArray27 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit28 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean30 = explicit28.equals((java.lang.Object) noOp29);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = noOp29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = noOp29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = noOp29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray21, (net.bytebuddy.dynamic.ClassFileLocator) noOp29);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray38 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, classFileLocator37 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound39 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit48 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit49 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        byte[] byteArray52 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit53 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray52);
        byte[] byteArray54 = explicit53.resolve();
        boolean boolean55 = explicit53.isResolved();
        boolean boolean57 = explicit53.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution60 = classFileLocator58.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean61 = explicit53.equals((java.lang.Object) classFileLocator58);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution63 = classFileLocator58.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator64 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray45, classFileLocator58);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit65 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        boolean boolean66 = compound40.equals((java.lang.Object) byteArray45);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(resolution32);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocatorArray38);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(resolution60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(resolution63);
        org.junit.Assert.assertNotNull(classFileLocator64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray9 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound10 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray9);
        byte[] byteArray13 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp15 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean16 = explicit14.equals((java.lang.Object) noOp15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp15.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp15.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str21 = noOp15.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp15.locate("");
        boolean boolean24 = compound10.equals((java.lang.Object) noOp15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray7, (net.bytebuddy.dynamic.ClassFileLocator) noOp15);
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray35 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray32, classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp38 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray48 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray45, classFileLocator49);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp51 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str52 = noOp51.toString();
        java.lang.String str53 = noOp51.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray54 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator36, noOp38, classFileLocator50, noOp51 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound55 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray54);
        boolean boolean57 = compound55.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray7, (net.bytebuddy.dynamic.ClassFileLocator) compound55);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit59 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        boolean boolean60 = explicit59.isResolved();
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(classFileLocatorArray9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp15 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp15.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertTrue("'" + noOp38 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp38.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + noOp51 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp51.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str52, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean3 = illegal1.equals((java.lang.Object) classFileLocator2);
        java.lang.String str4 = illegal1.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray5 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray5);
        java.lang.String str8 = compound7.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray9 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound10 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray9);
        boolean boolean11 = compound7.equals((java.lang.Object) classFileLocatorArray9);
        boolean boolean12 = illegal1.equals((java.lang.Object) compound7);
        boolean boolean13 = illegal1.isResolved();
        org.junit.Assert.assertNotNull(classFileLocator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertNotNull(classFileLocatorArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str8, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(classFileLocatorArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        byte[] byteArray13 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp15 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean16 = explicit14.equals((java.lang.Object) noOp15);
        java.lang.String str17 = noOp15.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp15.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp15.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp15.locate("ClassFileLocator.NoOp.INSTANCE");
        boolean boolean24 = illegal7.equals((java.lang.Object) "ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str25 = illegal7.toString();
        java.lang.String str26 = illegal7.toString();
        boolean boolean27 = illegal7.isResolved();
        java.lang.String str28 = illegal7.toString();
        java.lang.String str29 = illegal7.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp15 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp15.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str25, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str26, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str28, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str29, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray23, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str30 = noOp29.toString();
        java.lang.String str31 = noOp29.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray32 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator14, noOp16, classFileLocator28, noOp29 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound33 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray32);
        boolean boolean35 = compound33.equals((java.lang.Object) "hi!");
        boolean boolean37 = compound33.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound33.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound33.locate("");
        boolean boolean42 = illegal3.equals((java.lang.Object) "");
        java.lang.String str43 = illegal3.toString();
        java.lang.String str44 = illegal3.toString();
        byte[] byteArray47 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit48 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray47);
        byte[] byteArray49 = explicit48.resolve();
        boolean boolean50 = explicit48.isResolved();
        boolean boolean52 = explicit48.equals((java.lang.Object) 10L);
        boolean boolean53 = explicit48.isResolved();
        boolean boolean54 = explicit48.isResolved();
        boolean boolean55 = illegal3.equals((java.lang.Object) explicit48);
        byte[] byteArray56 = explicit48.resolve();
        byte[] byteArray57 = explicit48.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray57);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray57);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution61 = classFileLocator59.locate("");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str30, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str43, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str44, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(resolution61);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        byte[] byteArray12 = explicit3.resolve();
        boolean boolean13 = explicit3.isResolved();
        byte[] byteArray14 = explicit3.resolve();
        java.lang.Object obj15 = null;
        boolean boolean16 = explicit3.equals(obj15);
        java.lang.String str17 = explicit3.toString();
        byte[] byteArray18 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str17, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        byte[] byteArray11 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        byte[] byteArray13 = explicit12.resolve();
        boolean boolean14 = explicit12.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution3 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str4 = noOp0.toString();
        java.lang.Class<?> wildcardClass5 = noOp0.getClass();
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str4, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18, classFileLocator22);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp24 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray34 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray31, classFileLocator35);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp37 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str38 = noOp37.toString();
        java.lang.String str39 = noOp37.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray40 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator22, noOp24, classFileLocator36, noOp37 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound41 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray40);
        boolean boolean43 = compound41.equals((java.lang.Object) "hi!");
        boolean boolean45 = compound41.equals((java.lang.Object) (-1.0d));
        java.lang.String str46 = compound41.toString();
        byte[] byteArray55 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray55);
        byte[] byteArray61 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit62 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray61);
        byte[] byteArray63 = explicit62.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator64 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray63);
        byte[] byteArray72 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray75 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator76 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray75);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator77 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray72, classFileLocator76);
        byte[] byteArray80 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator81 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray80);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator82 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray72, classFileLocator81);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator83 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray63, classFileLocator81);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator84 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray55, classFileLocator83);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution86 = classFileLocator83.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean87 = compound41.equals((java.lang.Object) resolution86);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator88 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) compound41);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution90 = compound41.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertTrue("'" + noOp24 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp24.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertTrue("'" + noOp37 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp37.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str38, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str39, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator64);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator76);
        org.junit.Assert.assertNotNull(classFileLocator77);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator81);
        org.junit.Assert.assertNotNull(classFileLocator82);
        org.junit.Assert.assertNotNull(classFileLocator83);
        org.junit.Assert.assertNotNull(classFileLocator84);
        org.junit.Assert.assertNotNull(resolution86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(classFileLocator88);
        org.junit.Assert.assertNotNull(resolution90);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound31.locate("");
        boolean boolean36 = illegal1.equals((java.lang.Object) resolution35);
        java.lang.String str37 = illegal1.toString();
        byte[] byteArray40 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        boolean boolean42 = illegal1.equals((java.lang.Object) explicit41);
        byte[] byteArray43 = explicit41.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit44 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray43);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str37, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-1, 100]");
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray10 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        byte[] byteArray12 = explicit11.resolve();
        boolean boolean13 = explicit11.isResolved();
        boolean boolean15 = explicit11.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = classFileLocator16.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean19 = explicit11.equals((java.lang.Object) classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = classFileLocator16.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        boolean boolean22 = explicit7.equals((java.lang.Object) resolution21);
        byte[] byteArray23 = explicit7.resolve();
        byte[] byteArray24 = explicit7.resolve();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100]");
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str6 = illegal5.toString();
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        byte[] byteArray11 = explicit10.resolve();
        boolean boolean12 = explicit10.isResolved();
        boolean boolean14 = explicit10.equals((java.lang.Object) 10L);
        java.lang.String str15 = explicit10.toString();
        byte[] byteArray16 = explicit10.resolve();
        boolean boolean17 = illegal5.equals((java.lang.Object) byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        byte[] byteArray24 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit25 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit27 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray24);
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray39 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray36, classFileLocator40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray36);
        boolean boolean44 = explicit27.equals((java.lang.Object) byteArray36);
        byte[] byteArray47 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator48 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray47);
        byte[] byteArray55 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray58 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray58);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator60 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray55, classFileLocator59);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp61 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray68 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray71 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator72 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray71);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray68, classFileLocator72);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp74 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str75 = noOp74.toString();
        java.lang.String str76 = noOp74.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray77 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator59, noOp61, classFileLocator73, noOp74 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound78 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray77);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution80 = compound78.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray81 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator48, compound78 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound82 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray81);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound83 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray81);
        java.lang.String str84 = compound83.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator85 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray36, (net.bytebuddy.dynamic.ClassFileLocator) compound83);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator86 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}", byteArray16, classFileLocator85);
        byte[] byteArray91 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit92 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray91);
        byte[] byteArray93 = explicit92.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator94 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}", byteArray93);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator95 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray93);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator96 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}", byteArray16, classFileLocator95);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str6, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator48);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(classFileLocator60);
        org.junit.Assert.assertTrue("'" + noOp61 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp61.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator72);
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertTrue("'" + noOp74 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp74.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str75, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str76, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray77);
        org.junit.Assert.assertNotNull(resolution80);
        org.junit.Assert.assertNotNull(classFileLocatorArray81);
        org.junit.Assert.assertNotNull(classFileLocator85);
        org.junit.Assert.assertNotNull(classFileLocator86);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray93), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator94);
        org.junit.Assert.assertNotNull(classFileLocator95);
        org.junit.Assert.assertNotNull(classFileLocator96);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        boolean boolean10 = explicit4.isResolved();
        boolean boolean11 = explicit4.isResolved();
        byte[] byteArray12 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        boolean boolean8 = explicit7.isResolved();
        boolean boolean9 = explicit7.isResolved();
        byte[] byteArray10 = explicit7.resolve();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = classFileLocator11.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = illegal7.equals((java.lang.Object) resolution13);
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        boolean boolean16 = illegal1.isResolved();
        java.lang.String str17 = illegal1.toString();
        boolean boolean18 = illegal1.isResolved();
        boolean boolean19 = illegal1.isResolved();
        boolean boolean20 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray21 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str17, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean11 = explicit9.isResolved();
        boolean boolean13 = explicit9.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit9.isResolved();
        java.lang.String str15 = explicit9.toString();
        byte[] byteArray16 = explicit9.resolve();
        java.lang.String str17 = explicit9.toString();
        boolean boolean18 = explicit5.equals((java.lang.Object) str17);
        byte[] byteArray19 = explicit5.resolve();
        byte[] byteArray25 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray25);
        byte[] byteArray27 = explicit26.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray29 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        byte[] byteArray33 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit34 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray33);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp35 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean36 = explicit34.equals((java.lang.Object) noOp35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = noOp35.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = noOp35.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str41 = noOp35.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = noOp35.locate("");
        boolean boolean44 = compound30.equals((java.lang.Object) noOp35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray27, (net.bytebuddy.dynamic.ClassFileLocator) noOp35);
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray55 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray55);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray52, classFileLocator56);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp58 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray68 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray68);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray65, classFileLocator69);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp71 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str72 = noOp71.toString();
        java.lang.String str73 = noOp71.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray74 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator56, noOp58, classFileLocator70, noOp71 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound75 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray74);
        boolean boolean77 = compound75.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator78 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray27, (net.bytebuddy.dynamic.ClassFileLocator) compound75);
        boolean boolean79 = explicit5.equals((java.lang.Object) classFileLocator78);
        byte[] byteArray80 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit81 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray80);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator82 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}", byteArray80);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str17, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocatorArray29);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp35 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp35.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str41, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertTrue("'" + noOp58 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp58.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertNotNull(classFileLocator70);
        org.junit.Assert.assertTrue("'" + noOp71 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp71.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str72, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str73, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(classFileLocator78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator82);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = classFileLocator11.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = illegal7.equals((java.lang.Object) resolution13);
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        boolean boolean16 = illegal1.isResolved();
        boolean boolean17 = illegal1.isResolved();
        boolean boolean18 = illegal1.isResolved();
        boolean boolean19 = illegal1.isResolved();
        boolean boolean20 = illegal1.isResolved();
        java.lang.String str21 = illegal1.toString();
        boolean boolean22 = illegal1.isResolved();
        boolean boolean23 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str21, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp18 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str32 = noOp31.toString();
        java.lang.String str33 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray34 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator16, noOp18, classFileLocator30, noOp31 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray34);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound35.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound35.locate("");
        boolean boolean40 = explicit5.equals((java.lang.Object) compound35);
        byte[] byteArray41 = explicit5.resolve();
        byte[] byteArray42 = explicit5.resolve();
        byte[] byteArray43 = explicit5.resolve();
        java.lang.String str44 = explicit5.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertTrue("'" + noOp18 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp18.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray34);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str44, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray4 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        boolean boolean4 = illegal1.isResolved();
        java.lang.String str5 = illegal1.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str5, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp11 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean12 = explicit10.equals((java.lang.Object) noOp11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp11.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp11.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp11.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray3, (net.bytebuddy.dynamic.ClassFileLocator) noOp11);
        java.lang.String str20 = noOp11.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp11.locate("");
        java.lang.String str23 = noOp11.toString();
        java.lang.String str24 = noOp11.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution26 = noOp11.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution28 = noOp11.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp11 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp11.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str23, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str24, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution26);
        org.junit.Assert.assertNotNull(resolution28);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        byte[] byteArray9 = explicit3.resolve();
        java.lang.String str10 = explicit3.toString();
        boolean boolean11 = explicit3.isResolved();
        boolean boolean12 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str3 = compound2.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray4 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        boolean boolean6 = compound2.equals((java.lang.Object) classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound10 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound11 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        java.lang.String str12 = compound11.toString();
        java.lang.String str13 = compound11.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str3, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(classFileLocatorArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str12, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str13, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray12 = explicit3.resolve();
        byte[] byteArray13 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str15 = noOp14.toString();
        java.lang.String str16 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str19 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution25 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str26 = noOp14.toString();
        java.lang.String str27 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution29 = noOp14.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean30 = explicit3.equals((java.lang.Object) noOp14);
        boolean boolean31 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str19, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertNotNull(resolution25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, classFileLocator15);
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, classFileLocator20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11);
        byte[] byteArray25 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray25);
        byte[] byteArray27 = explicit26.resolve();
        boolean boolean28 = explicit26.isResolved();
        boolean boolean30 = explicit26.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = classFileLocator31.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean34 = explicit26.equals((java.lang.Object) classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray11, classFileLocator36);
        byte[] byteArray41 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit42 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray41);
        byte[] byteArray43 = explicit42.resolve();
        boolean boolean44 = explicit42.isResolved();
        boolean boolean46 = explicit42.equals((java.lang.Object) 10L);
        boolean boolean47 = explicit42.isResolved();
        java.lang.String str48 = explicit42.toString();
        byte[] byteArray49 = explicit42.resolve();
        byte[] byteArray50 = explicit42.resolve();
        byte[] byteArray54 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray54);
        byte[] byteArray58 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit59 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray58);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp60 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean61 = explicit59.equals((java.lang.Object) noOp60);
        java.lang.String str62 = noOp60.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray54, (net.bytebuddy.dynamic.ClassFileLocator) noOp60);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator64 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray50, (net.bytebuddy.dynamic.ClassFileLocator) noOp60);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp60);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution67 = noOp60.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution69 = noOp60.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str48, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp60 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp60.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str62, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertNotNull(classFileLocator64);
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertNotNull(resolution67);
        org.junit.Assert.assertNotNull(resolution69);
    }
}

