/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 21:56:19 GMT 2024
 */

package com.alibaba.fastjson2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;

import com.alibaba.fastjson2.reader.ObjectReaderProvider;
import com.alibaba.fastjson2.writer.ObjectWriterCreator;
import com.alibaba.fastjson2.writer.ObjectWriterProvider;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.charset.Charset;
import java.text.DecimalFormat;
import java.time.Instant;
import java.time.LocalTime;
import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Stack;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class EvosuiteJSONWriterJSONB_ESTest extends EvosuiteJSONWriterJSONB_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDateTime19((-91), 127, (-634), (-522), 0, (-523939657));
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNonStringKeyAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "m]>|\",%B6XKb";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "Z)V";
      stringArray0[4] = "";
      stringArray0[5] = "#-1";
      stringArray0[6] = "c)8s<";
      stringArray0[7] = "X|=2UevJ#Kk-";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      float[] floatArray0 = new float[4];
      floatArray0[2] = (-1868.0F);
      jSONWriterJSONB0.writeFloat(floatArray0);
      assertEquals(10, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "unsupported operation";
      stringArray0[2] = "C`zz";
      stringArray0[3] = "ZVjbLAB)QRg>_#QDu|";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeChar('/');
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "TimeUnit";
      stringArray0[1] = "";
      stringArray0[2] = "ORY`AYHAo,_GLt";
      stringArray0[3] = "E3ZGSUE*'\"i\"<cJL,";
      stringArray0[4] = "6=.@Qs>Twd'";
      stringArray0[5] = "";
      stringArray0[6] = "`?g~";
      stringArray0[7] = "?c:9m7(7`,H{el.";
      stringArray0[8] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      short[] shortArray0 = new short[7];
      shortArray0[5] = (short) (-16);
      jSONWriterJSONB0.writeInt16(shortArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "entryCnt must be 2, but ";
      stringArray0[1] = "xPdnBtQu48";
      stringArray0[2] = "java.net.Inet6Address";
      stringArray0[3] = "xMQo{en5rj\"]2";
      stringArray0[4] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      double[] doubleArray0 = new double[8];
      doubleArray0[2] = (-1362.1168524);
      jSONWriterJSONB0.writeDouble(doubleArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNonStringKeyAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "m]>|\",%B6XKb";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "Z)V";
      stringArray0[4] = "";
      stringArray0[5] = "#-1";
      stringArray0[6] = "c)8s<";
      stringArray0[7] = "X|=2UevJ#Kk-";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      float[] floatArray0 = new float[4];
      floatArray0[0] = 262143.0F;
      jSONWriterJSONB0.writeFloat(floatArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteThrowableClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "accept";
      stringArray0[1] = "=";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeMillis(100000000);
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithDashes;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "com.fasterxml.jackson.annotation.JsonAnyGetter";
      stringArray0[1] = "UG";
      stringArray0[2] = "";
      stringArray0[3] = "7@s8`)0m&o&-uwu";
      stringArray0[4] = "AnyOf";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeMillis(10L);
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider((ObjectWriterCreator) null);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      char[] charArray0 = new char[2];
      jSONWriterJSONB0.writeString(charArray0, (-4384), (-4384));
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NotWriteEmptyArray;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[2];
      jSONWriterJSONB0.writeString(charArray0, 0, (-2930), true);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v=Y{C46{Rjv0";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      boolean[] booleanArray0 = new boolean[15];
      jSONWriterJSONB0.writeBool(booleanArray0);
      assertEquals(16, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.BrowserCompatible;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[7] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[8] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.ensureCapacity(449);
      assertFalse(jSONWriterJSONB0.hasFilter());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider((ObjectWriterCreator) null);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      jSONWriterJSONB0.writeString((List<String>) arrayList0);
      jSONWriterJSONB0.toString();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider((ObjectWriterCreator) null);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteBigDecimalAsPlain;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      byte[] byteArray0 = new byte[4];
      jSONWriterJSONB0.writeHex(byteArray0);
      int int0 = jSONWriterJSONB0.size();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.OptimizedForAscii;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("|>.D^}?+ud$LC", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|>.D^}?+ud$LC";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(552);
      int int0 = jSONWriterJSONB0.flushTo((OutputStream) byteArrayOutputStream0);
      assertEquals(0, int0);
      assertEquals(0, jSONWriterJSONB0.size());
      assertEquals("", byteArrayOutputStream0.toString());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ErrorOnNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "k:+E]Ta*FuB/_";
      stringArray0[1] = "' to Byte";
      stringArray0[2] = "UnsupportedOperation";
      stringArray0[3] = "&=)/$Xy";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "0~Am,)ZiGfn";
      stringArray0[7] = "";
      stringArray0[8] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try {
        jSONWriterJSONB0.writeRaw((byte[]) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCamelCaseWithUnderScores;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "com.alibaba.fastjson2.JSONWriterJSONB";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try {
        jSONWriterJSONB0.writeNameRaw((byte[]) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ErrorOnNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("not support operator", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "not support operator";
      stringArray0[2] = "not support operator";
      stringArray0[3] = "level too large : ";
      stringArray0[4] = "not support operator";
      stringArray0[5] = "mnhNjw%T";
      stringArray0[6] = "not support operator";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try {
        jSONWriterJSONB0.writeAny(pipedInputStream0);
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // not support none serializable class java.io.PipedInputStream
         //
         verifyException("com.alibaba.fastjson2.writer.ObjectWriterAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ErrorOnNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[7] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "p6)fU)BrmR\"~vA@G";
      stringArray0[4] = "not support operator";
      stringArray0[5] = "Asia/Shanghai";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("_>.\"ins=p\"n oh", false);
      try {
        jSONWriterJSONB0.flushTo((OutputStream) mockFileOutputStream0);
        fail("Expecting exception: IOException");

      } catch(IOException e) {
         //
         // Error in writing to file
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JSONWriterJSONB jSONWriterJSONB0 = null;
      try {
        jSONWriterJSONB0 = new JSONWriterJSONB((JSONWriter.Context) null, (SymbolTable) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.JSONWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "create instance error ";
      stringArray0[1] = "#-1";
      stringArray0[2] = "F(u!T=R-|Vr5Xd";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeBool(false);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreErrorGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeBool(true);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.OptimizedForAscii;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("|>.D^}?+ud$LC", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|>.D^}?+ud$LC";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[3];
      jSONWriterJSONB0.writeBinary(byteArray0);
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.BrowserCompatible;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "U>UYYzxZ_kAQ.$m]N";
      stringArray0[1] = "com.alibaba.fastjson2.reader.ObjectReaderImplMapTyped";
      stringArray0[2] = ")6G R(7";
      stringArray0[3] = "_#HRWaT>x";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[8];
      jSONWriterJSONB0.writeRaw(byteArray0);
      assertEquals(8, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.OptimizedForAscii;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("|>.D^}?+ud$LC", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|>.D^}?+ud$LC";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeArrayNull();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider((ObjectWriterCreator) null);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeInt32((-4384));
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.OptimizedForAscii;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[4];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("yyy", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "yyy";
      stringArray0[1] = "yyy";
      stringArray0[2] = "yyy";
      stringArray0[3] = "yyy";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt32(0);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteMapNullValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeInt32(506);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.OptimizedForAscii;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("|>.D^}?+ud$LC", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|>.D^}?+ud$LC";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDouble((-68.0));
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNonStringKeyAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[3];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeDouble(0.0);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NotWriteRootClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("not support operator", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "not support operator";
      stringArray0[1] = "not support operator";
      stringArray0[2] = "not support operator";
      stringArray0[3] = "not support operator";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeFloat(0.0F);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNonStringValueAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("unsupported operation", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeFloat(1599.034F);
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[6] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[7] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[8] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeInt64((-825L));
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNulls;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("qV$zxay1f!pLxK:D<I;", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "qV$zxay1f!pLxK:D<I;";
      stringArray0[1] = "000";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeString("qV$zxay1f!pLxK:D<I;");
      assertEquals(20, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.UseSingleQuotes;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[4];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[5];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeNull();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNonStringValueAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[5];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[8] = jSONWriter_FeatureArray0[4];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(", bytes length ", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ", bytes length ";
      stringArray0[1] = ", bytes length ";
      stringArray0[2] = ", bytes length ";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.startArray((-1670613343));
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[8] = jSONWriter_FeatureArray0[7];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.endObject();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.startObject();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithDashes;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "com.alibaba.fastjson2.writer.FieldWriterList";
      stringArray0[1] = "UG";
      stringArray0[2] = "";
      stringArray0[3] = "7@s8`)0m&o&-uwu";
      stringArray0[4] = "AnyOf";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.endArray();
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider((ObjectWriterCreator) null);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      String string0 = jSONWriterJSONB0.toString();
      assertEquals("INT32 0, bytes length 0", string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      HashMap<Object, PipedInputStream> hashMap0 = new HashMap<Object, PipedInputStream>();
      jSONWriterJSONB0.write((Map) hashMap0);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.OptimizedForAscii;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("!98V2cd^<!Nij\"$h", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "!98V2cd^<!Nij\"$h";
      stringArray0[1] = "!98V2cd^<!Nij\"$h";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      LinkedList<InputStream> linkedList0 = new LinkedList<InputStream>();
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-100), 726);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)101);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      linkedList0.add((InputStream) dataInputStream0);
      jSONWriterJSONB0.write((List) linkedList0);
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteMapNullValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(",J~0??Tg", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "<empty>";
      stringArray0[1] = ",J~0??Tg";
      stringArray0[2] = ",J~0??Tg";
      stringArray0[3] = "";
      stringArray0[4] = ",J~0??Tg";
      stringArray0[5] = ",J~0??Tg";
      stringArray0[6] = ",J~0??Tg";
      stringArray0[7] = ",J~0??Tg";
      stringArray0[8] = ",J~0??Tg";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.write((List) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.OptimizedForAscii;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("!98V2cd^<!Nij\"$h", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "!98V2cd^<!Nij\"$h";
      stringArray0[1] = "!98V2cd^<!Nij\"$h";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeReference("!98V2cd^<!Nij\"$h");
      assertEquals(18, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v=Y{C46{Rjv0";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeBool((boolean[]) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NotWriteRootClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeBinary((byte[]) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      byte[] byteArray0 = new byte[7];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      jSONWriterJSONB0.writeBigInt(bigInteger0, 2486L);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      UUID uUID0 = MockUUID.randomUUID();
      jSONWriterJSONB0.writeUUID(uUID0);
      assertEquals(18, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteThrowableClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "uNEE%T)s9FEH`";
      stringArray0[1] = "RLkzQA^n[ %W^";
      stringArray0[2] = "b`SE,Mfz-G,O";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInstant((Instant) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCaseWithDashes;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteBooleanAsNumber;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "Ux9Q8sKW2gT5dEd";
      stringArray0[2] = "HFPMo4s~V\"w4>";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeZonedDateTime((ZonedDateTime) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullNumberAsZero;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "?hGz%0)N~A9:*";
      stringArray0[1] = "E.$b`\"7\"_$ATg [";
      stringArray0[2] = "fDI:oF{vO?";
      stringArray0[3] = "pZzT#ch\"E0AL<";
      stringArray0[4] = "69{XVFwVFdBQK(3T[Dp";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeLocalTime((LocalTime) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNonStringValueAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[5];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("Asia/Shanghai", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Asia/Shanghai";
      stringArray0[1] = "Asia/Shanghai";
      stringArray0[2] = "Asia/Shanghai";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[3];
      jSONWriterJSONB0.writeNameRaw(byteArray0, (-40L));
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteMapNullValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(",J~0??Tg", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "<empty>";
      stringArray0[1] = ",J~0??Tg";
      stringArray0[2] = ",J~0??Tg";
      stringArray0[3] = "";
      stringArray0[4] = ",J~0??Tg";
      stringArray0[5] = ",J~0??Tg";
      stringArray0[6] = ",J~0??Tg";
      stringArray0[7] = ",J~0??Tg";
      stringArray0[8] = ",J~0??Tg";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeSymbol(2436);
      assertEquals(4, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "success";
      stringArray0[1] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeSymbol((-152));
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NotWriteRootClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeSymbol(1);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteThrowableClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      JSONWriter.Feature jSONWriter_Feature1 = JSONWriter.Feature.WriteNullListAsEmpty;
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature1;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[4];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[5];
      jSONWriter_FeatureArray0[8] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "6!/}M)0P";
      stringArray0[1] = "";
      stringArray0[2] = "javax.sql.DataSource";
      stringArray0[3] = "Asia/Shanghai";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt32((int[]) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("\"%Y?Yh^)U]oA", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeInt32((-848095899));
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteMapNullValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeEnum(jSONWriter_Feature0);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteThrowableClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "accept";
      stringArray0[1] = "=";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt16((short) (-215));
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNulls;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("qV$zxay1f!pLxK:D<I;", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "qV$zxay1f!pLxK:D<I;";
      stringArray0[1] = "000";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt8((byte)67);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v=Y{C46{Rjv0";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      int[] intArray0 = new int[9];
      intArray0[4] = (-1325958191);
      jSONWriterJSONB0.writeInt32(intArray0);
      assertEquals(14, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      int[] intArray0 = new int[8];
      intArray0[2] = 100000000;
      jSONWriterJSONB0.writeInt32(intArray0);
      assertEquals(13, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      int[] intArray0 = new int[8];
      intArray0[6] = (-8179);
      jSONWriterJSONB0.writeInt32(intArray0);
      assertEquals(11, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      int[] intArray0 = new int[8];
      intArray0[0] = 1473;
      jSONWriterJSONB0.writeInt32(intArray0);
      assertEquals(10, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "com.alibaba.fastjson2.JSONPath$PreviousPath";
      stringArray0[1] = "Ljava/lang/Object;)Ljava/lang/String;";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "bj";
      stringArray0[5] = "UnsupportedOperation";
      stringArray0[6] = "";
      stringArray0[7] = "',\"kh";
      stringArray0[8] = "unsupported operation";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt16((short[]) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      Float float0 = new Float(516.7F);
      jSONWriterJSONB0.writeFloat(float0);
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCamelCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WritePairAsJavaBean;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[6] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      double[] doubleArray0 = new double[7];
      doubleArray0[3] = 1.0E12;
      jSONWriterJSONB0.writeDouble(doubleArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteMapNullValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(",J~0??Tg", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "<empty>";
      stringArray0[1] = ",J~0??Tg";
      stringArray0[2] = ",J~0??Tg";
      stringArray0[3] = "";
      stringArray0[4] = ",J~0??Tg";
      stringArray0[5] = ",J~0??Tg";
      stringArray0[6] = ",J~0??Tg";
      stringArray0[7] = ",J~0??Tg";
      stringArray0[8] = ",J~0??Tg";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDouble(1.0);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[4];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      float[] floatArray0 = new float[9];
      floatArray0[3] = (-344.94183F);
      jSONWriterJSONB0.writeFloat(floatArray0);
      assertEquals(22, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) 536870912L;
      jSONWriterJSONB0.writeFloat(floatArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "v=Y{C46{Rjv0";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      float[] floatArray0 = new float[6];
      floatArray0[5] = (float) (-1325958211);
      jSONWriterJSONB0.writeFloat(floatArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNonStringValueAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[8] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "P6WQ";
      stringArray0[1] = "features";
      stringArray0[2] = "O-";
      stringArray0[3] = "";
      stringArray0[4] = "8#8je0";
      stringArray0[5] = "U}3:s ";
      stringArray0[6] = "&EKP\"t4$Ny\"3Jq;o";
      stringArray0[7] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      long[] longArray0 = new long[4];
      longArray0[2] = (-4372L);
      jSONWriterJSONB0.writeInt64(longArray0);
      assertEquals(7, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteThrowableClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "accept";
      stringArray0[1] = "=";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      long[] longArray0 = new long[2];
      longArray0[0] = (long) 100000000;
      jSONWriterJSONB0.writeInt64(longArray0);
      assertEquals(11, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteEnumUsingToString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("not support operator", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      long[] longArray0 = new long[2];
      longArray0[1] = (long) (-990);
      jSONWriterJSONB0.writeInt64(longArray0);
      assertEquals(4, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullBooleanAsFalse;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(",", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      MockDate mockDate0 = new MockDate((-494), (-667), (-494), (-494), (-69), (-1494));
      Instant instant0 = mockDate0.toInstant();
      jSONWriterJSONB0.writeInstant(instant0);
      assertEquals(11, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "entryCnt must be 2, but ";
      stringArray0[1] = "xPdnBtQu48";
      stringArray0[2] = "java.net.Inet6Address";
      stringArray0[3] = "xMQo{en5rj\"]2";
      stringArray0[4] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      double[] doubleArray0 = new double[8];
      doubleArray0[1] = 3183.0;
      jSONWriterJSONB0.writeDouble(doubleArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[6];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeInt64(536870912L);
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCamelCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WritePairAsJavaBean;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[3];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      double[] doubleArray0 = new double[7];
      doubleArray0[4] = (-2.147483648E9);
      jSONWriterJSONB0.writeDouble(doubleArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteThrowableClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "accept";
      stringArray0[1] = "=";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      DecimalFormat decimalFormat0 = new DecimalFormat();
      jSONWriterJSONB0.writeDecimal(bigDecimal0, (long) (-3201), decimalFormat0);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeMillis((-1497L));
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithDashes;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "com.fasterxml.jackson.annotation.JsonAnyGetter";
      stringArray0[1] = "UG";
      stringArray0[2] = "";
      stringArray0[3] = "7@s8`)0m&o&-uwu";
      stringArray0[4] = "AnyOf";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      Stack<String> stack0 = new Stack<String>();
      stack0.addElement("e2SK7qeZq{iiGMv");
      jSONWriterJSONB0.writeString((List<String>) stack0);
      assertEquals(17, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNonFieldGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "<empty>";
      stringArray0[1] = "propertyName not match";
      stringArray0[2] = "XEp5a_>Uc6v{kgv4";
      stringArray0[3] = "/l1]3r-azP";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "com.alibaba.fastjson2.JSONWriterJSONB";
      stringArray0[7] = "9Z8xmiA J'k@)";
      stringArray0[8] = "fC";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeString((List<String>) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = JSONWriterJSONB.sizeOfInt(439);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = JSONWriterJSONB.sizeOfInt(0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = JSONWriterJSONB.sizeOfInt((-2847));
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NotWriteEmptyArray;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[4];
      jSONWriterJSONB0.writeTypeName(byteArray0, (-1093L));
      assertEquals(6, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.BrowserCompatible;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      byte[] byteArray0 = new byte[2];
      jSONWriterJSONB0.writeTypeName(byteArray0, 8589934592L);
      assertEquals(4, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "b{fX/; o5YSg|{";
      stringArray0[1] = ".z-ln2$x5";
      stringArray0[2] = "('E{:Yw.:0}+";
      stringArray0[3] = "";
      stringArray0[4] = "rB4ANnj]xFiEXl$I";
      stringArray0[5] = ");";
      stringArray0[6] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeTypeName("");
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeTypeName("b2ZMp2T8N>0n");
      assertEquals(16, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteEnumUsingToString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("not support operator", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeTypeName("com.alibaba.fastjson2.JSONPathSegment$RangeIndexSegment");
      assertEquals(60, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.PascalCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "O'XSa[t);Ttw UYd";
      stringArray0[1] = "can not cast to types ";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeSymbol("");
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ErrorOnNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "k:+E]Ta*FuB/_";
      stringArray0[1] = "' to Byte";
      stringArray0[2] = "UnsupportedOperation";
      stringArray0[3] = "&=)/$Xy";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "0~Am,)ZiGfn";
      stringArray0[7] = "";
      stringArray0[8] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeSymbol("");
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeSymbol(",UF_yx~z-?U?");
      assertEquals(13, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[5];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[6];
      jSONWriter_FeatureArray0[8] = jSONWriter_FeatureArray0[5];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "]%L)xkLG!)(A?H";
      stringArray0[4] = "W+0gKWD*YyF";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[1];
      jSONWriterJSONB0.writeString(charArray0, 3839, 10);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithDashes;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "com.alibaba.fastjson2.writer.FieldWriterList";
      stringArray0[1] = "UG";
      stringArray0[2] = "";
      stringArray0[3] = "7@s8`)0m&o&-uwu";
      stringArray0[4] = "AnyOf";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeString((char[]) null, 76, 76);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.BrowserCompatible;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[7] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[8] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      char[] charArray0 = new char[2];
      jSONWriterJSONB0.writeString(charArray0, 449, 822);
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider((ObjectWriterCreator) null);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteBigDecimalAsPlain;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      char[] charArray0 = new char[6];
      jSONWriterJSONB0.writeString(charArray0);
      assertEquals(7, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithDashes;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "com.fasterxml.jackson.annotation.JsonAnyGetter";
      stringArray0[1] = "UG";
      stringArray0[2] = "";
      stringArray0[3] = "7@s8`)0m&o&-uwu";
      stringArray0[4] = "AnyOf";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeStringLatin1((byte[]) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NotWriteEmptyArray;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[2];
      jSONWriterJSONB0.writeString(charArray0, 0, 0, true);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "_Ul%t";
      stringArray0[1] = "-Ae5<)Rc\"$B";
      stringArray0[2] = "L2yuRMD`[&oUi";
      stringArray0[3] = "s.u$W@ib:x}";
      stringArray0[4] = "N'D~mk3Txnq4G";
      stringArray0[5] = "";
      stringArray0[6] = "UnsupportedOperation";
      stringArray0[7] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeString((char[]) null, (-86), (-86), true);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NotWriteHashMapArrayListClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = ")q\"-ke&Q{~OLO";
      stringArray0[2] = "#-1";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try {
        jSONWriterJSONB0.writeString(charArray0, 0, 3204, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");

      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.UseSingleQuotes;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[4];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeStringNull();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeRaw((byte) (-20));
      byte[] byteArray0 = new byte[7];
      jSONWriterJSONB0.writeNameRaw(byteArray0);
      double[] doubleArray0 = new double[6];
      jSONWriterJSONB0.writeDouble(doubleArray0);
      byte[] byteArray1 = jSONWriterJSONB0.getBytes();
      BigInteger bigInteger0 = new BigInteger(byteArray1);
      jSONWriterJSONB0.writeBigInt(bigInteger0, 2486L);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullBooleanAsFalse;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(",", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.startArray(586);
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCamelCaseWithUnderScores;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "com.alibaba.fastjson2.JSONWriterJSONB";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      Integer integer0 = new Integer(0);
      jSONWriterJSONB0.startArray((Object) integer0, 133021628);
      assertEquals(6, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "com.alibaba.fastjson2.JSONPath$PreviousPath";
      stringArray0[1] = "Ljava/lang/Object;)Ljava/lang/String;";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "bj";
      stringArray0[5] = "UnsupportedOperation";
      stringArray0[6] = "";
      stringArray0[7] = "',\"kh";
      stringArray0[8] = "unsupported operation";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.startArray((Object) "bj", (-8183));
      assertEquals(1, jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NotWriteHashMapArrayListClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      JSONWriter.Feature jSONWriter_Feature1 = JSONWriter.Feature.BeanToArray;
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature1;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      JSONObject jSONObject0 = JSONObject.of((String) null, (Object) jSONWriter_Feature0, (String) null, (Object) jSONWriter_Feature0, "4ZDiyU{&V-\"m``CM;M", (Object) null, (String) null, (Object) jSONWriter_Feature1);
      jSONWriterJSONB0.write(jSONObject0);
      assertEquals(36, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNonFieldGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeAny((Object) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteThrowableClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "accept";
      stringArray0[1] = "=";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.close();
      assertFalse(jSONWriterJSONB0.isRefDetect());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.OptimizedForAscii;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("|>.D^}?+ud$LC", jSONWriter_FeatureArray0);
      ObjectReaderProvider objectReaderProvider0 = new ObjectReaderProvider();
      JSONReader.Feature[] jSONReader_FeatureArray0 = new JSONReader.Feature[3];
      JSONReader.Feature jSONReader_Feature0 = JSONReader.Feature.IgnoreSetNullValue;
      jSONReader_FeatureArray0[0] = jSONReader_Feature0;
      JSONReader.Feature jSONReader_Feature1 = JSONReader.Feature.Base64StringAsByteArray;
      jSONReader_FeatureArray0[1] = jSONReader_Feature1;
      JSONReader.Feature jSONReader_Feature2 = JSONReader.Feature.UseDefaultConstructorAsPossible;
      jSONReader_FeatureArray0[2] = jSONReader_Feature2;
      JSONReader.Context jSONReader_Context0 = new JSONReader.Context(objectReaderProvider0, jSONReader_FeatureArray0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)74;
      byteArray0[1] = (byte)45;
      byteArray0[2] = (byte)122;
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte) (-19);
      byteArray0[5] = (byte)89;
      byteArray0[6] = (byte)76;
      byteArray0[7] = (byte) (-15);
      JSONReaderJSONB jSONReaderJSONB0 = new JSONReaderJSONB(jSONReader_Context0, byteArray0, (byte)74, 2889);
      SymbolTable symbolTable0 = jSONReaderJSONB0.symbolTable;
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeStringLatin1(byteArray0);
      // Undeclared exception!
      try {
        jSONWriterJSONB0.writeNameRaw((byte[]) null, 1827L);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.BrowserCompatible;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[5];
      jSONWriter_FeatureArray0[8] = jSONWriter_FeatureArray0[4];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      // Undeclared exception!
      try {
        jSONWriterJSONB0.writeNameRaw((char[]) null);
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "entryCnt must be 2, but ";
      stringArray0[1] = "xPdnBtQu48";
      stringArray0[2] = "java.net.Inet6Address";
      stringArray0[3] = "xMQo{en5rj\"]2";
      stringArray0[4] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDateTime14((-2345), (-2345), 0, 0, (-458), (-1066));
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteThrowableClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try {
        jSONWriterJSONB0.writeColon();
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullStringAsEmpty;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Q{X%9_2!hHpP*Xr!^X";
      stringArray0[1] = "5&qK:j ";
      stringArray0[2] = "";
      stringArray0[3] = "5#sxP2`tb-d";
      stringArray0[4] = "unsupported operation";
      stringArray0[5] = "";
      stringArray0[6] = "UnsupportedOperation";
      stringArray0[7] = "97b!#";
      stringArray0[8] = "=!mx^hgo^Ng";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try {
        jSONWriterJSONB0.writeDateTimeISO8601((-1208), (-1208), (-1208), 0, 284, 0, 110, 1140, false);
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.MapSortField;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "mT!er(**@";
      stringArray0[1] = "unsupported operation";
      stringArray0[2] = "I&Q";
      stringArray0[3] = "NbIa[Kq 7~";
      stringArray0[4] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try {
        jSONWriterJSONB0.writeComma();
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "com.alibaba.fastjson2.JSONPath$PreviousPath";
      stringArray0[1] = "Ljava/lang/Object;)Ljava/lang/String;";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "bj";
      stringArray0[5] = "UnsupportedOperation";
      stringArray0[6] = "";
      stringArray0[7] = "',\"kh";
      stringArray0[8] = "unsupported operation";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try {
        jSONWriterJSONB0.writeTimeHHMMSS8(1941, (-8183), 8);
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithDashes;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "com.fasterxml.jackson.annotation.JsonAnyGetter";
      stringArray0[1] = "UG";
      stringArray0[2] = "";
      stringArray0[3] = "7@s8`)0m&o&-uwu";
      stringArray0[4] = "AnyOf";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try {
        jSONWriterJSONB0.write0('T');
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCamelCaseWithUnderScores;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteThrowableClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[6] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[8] = jSONWriter_FeatureArray0[7];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try {
        jSONWriterJSONB0.startArray();
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNonStringValueAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try {
        jSONWriterJSONB0.writeDateYYYMMDD10(250, 0, 8);
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      byte[] byteArray0 = jSONWriterJSONB0.getBytes();
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteMapNullValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(",J~0??Tg", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "<empty>";
      stringArray0[1] = ",J~0??Tg";
      stringArray0[2] = ",J~0??Tg";
      stringArray0[3] = "";
      stringArray0[4] = ",J~0??Tg";
      stringArray0[5] = ",J~0??Tg";
      stringArray0[6] = ",J~0??Tg";
      stringArray0[7] = ",J~0??Tg";
      stringArray0[8] = ",J~0??Tg";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDateYYYMMDD8((-459), (-459), 2436);
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteMapNullValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      // Undeclared exception!
      try {
        jSONWriterJSONB0.flushTo((OutputStream) null);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      int int0 = jSONWriterJSONB0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.BrowserCompatible;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try {
        jSONWriterJSONB0.writeNameRaw(charArray0, (int) (byte) (-77), (int) (byte)70);
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.BrowserCompatible;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "U>UYYzxZ_kAQ.$m]N";
      stringArray0[1] = "com.alibaba.fastjson2.reader.ObjectReaderImplMapTyped";
      stringArray0[2] = ")6G R(7";
      stringArray0[3] = "_#HRWaT>x";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try {
        jSONWriterJSONB0.writeBase64(byteArray0);
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNonFieldGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try {
        jSONWriterJSONB0.writeRaw("");
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeName("+Y;':%Q\"4Lyg.0!");
      assertEquals(16, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "create instance error ";
      stringArray0[1] = "#-1";
      stringArray0[2] = "F(u!T=R-|Vr5Xd";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try {
        jSONWriterJSONB0.getBytes(charset0);
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // not support operator
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteMapNullValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(",J~0??Tg", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "<empty>";
      stringArray0[1] = ",J~0??Tg";
      stringArray0[2] = ",J~0??Tg";
      stringArray0[3] = "";
      stringArray0[4] = ",J~0??Tg";
      stringArray0[5] = ",J~0??Tg";
      stringArray0[6] = ",J~0??Tg";
      stringArray0[7] = ",J~0??Tg";
      stringArray0[8] = ",J~0??Tg";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      File file0 = MockFile.createTempFile(",J~0??Tg", (String) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try {
        jSONWriterJSONB0.flushTo((OutputStream) mockPrintStream0, charset0);
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NotWriteEmptyArray;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      // Undeclared exception!
      try {
        jSONWriterJSONB0.writeRaw('c');
        fail("Expecting exception: RuntimeException");

      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }
}
