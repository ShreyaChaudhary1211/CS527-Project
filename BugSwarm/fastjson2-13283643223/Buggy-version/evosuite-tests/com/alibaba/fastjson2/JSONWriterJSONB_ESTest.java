/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 21:02:27 GMT 2024
 */

package com.alibaba.fastjson2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson2.JSONFactory;
import com.alibaba.fastjson2.JSONObject;
import com.alibaba.fastjson2.JSONWriter;
import com.alibaba.fastjson2.JSONWriterJSONB;
import com.alibaba.fastjson2.PropertyNamingStrategy;
import com.alibaba.fastjson2.SymbolTable;
import com.alibaba.fastjson2.writer.ObjectWriterCreator;
import com.alibaba.fastjson2.writer.ObjectWriterProvider;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.charset.Charset;
import java.text.DecimalFormat;
import java.time.Instant;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.Period;
import java.time.ZonedDateTime;
import java.time.chrono.ChronoLocalDate;
import java.time.temporal.TemporalAmount;
import java.util.IdentityHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Stack;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.MockLocalTime;
import org.evosuite.runtime.mock.java.time.MockZonedDateTime;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONWriterJSONB_ESTest extends JSONWriterJSONB_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDateTime14((-86), 0, (-983), (-983), 490, (-1139));
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNonStringValueAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeSymbol((-930));
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.UseSingleQuotes;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[7] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".G')\".\"";
      stringArray0[1] = "|wOG#0k_c";
      stringArray0[2] = "()Ljava/util/OptionalInt;";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      short[] shortArray0 = new short[8];
      shortArray0[5] = (short) (-2048);
      jSONWriterJSONB0.writeInt16(shortArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      double[] doubleArray0 = new double[7];
      doubleArray0[2] = (-681.5980749);
      jSONWriterJSONB0.writeDouble(doubleArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("readArrayMappingJSONBObject", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      float[] floatArray0 = new float[4];
      floatArray0[1] = 201.3F;
      jSONWriterJSONB0.writeFloat(floatArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNameAsSymbol;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      float[] floatArray0 = new float[5];
      floatArray0[3] = 262143.0F;
      jSONWriterJSONB0.writeFloat(floatArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreErrorGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "unsupported operation";
      stringArray0[1] = "com.alibaba.fastjson2.writer.FieldWriterEnumFunc";
      stringArray0[2] = "";
      stringArray0[3] = " d0wti0Ct1%+Z/p2";
      stringArray0[4] = "can not cast to decimal";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      long[] longArray0 = new long[9];
      longArray0[6] = (-16L);
      jSONWriterJSONB0.writeInt64(longArray0);
      assertEquals(10, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.BeanToArray;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeMillis(999L);
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int int0 = JSONWriterJSONB.sizeOfInt(262143);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      int int0 = JSONWriterJSONB.sizeOfInt(2047);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "2.)J;/D";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[9];
      jSONWriterJSONB0.writeString(charArray0, 0, 0, false);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNonStringKeyAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.ensureCapacity((-73));
      assertFalse(jSONWriterJSONB0.isBeanToArray());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ErrorOnNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("+{;XtRUYn;+W", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeDouble((-1.0));
      assertEquals(2, jSONWriterJSONB0.size());
      
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      int int0 = jSONWriterJSONB0.flushTo((OutputStream) byteArrayOutputStream0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeTypeName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteEnumUsingOrdinal;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeRaw((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider((ObjectWriterCreator) null);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteMapNullValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      MockFile mockFile0 = new MockFile(",$oo|={$CFkr");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      try { 
        jSONWriterJSONB0.flushTo((OutputStream) mockFileOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error in writing to file
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "Ti$vv^";
      stringArray0[2] = "ORg RmhV IZx;;)Jz7";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = null;
      try {
        jSONWriterJSONB0 = new JSONWriterJSONB((JSONWriter.Context) null, jSONFactory_SymbolTableImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.JSONWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullListAsEmpty;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeBool(true);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullListAsEmpty;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeBool(false);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      byte[] byteArray0 = new byte[7];
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeBinary(byteArray0);
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullListAsEmpty;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      byte[] byteArray0 = new byte[7];
      jSONWriterJSONB0.writeRaw(byteArray0);
      assertEquals(7, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteLongAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Feature jSONWriter_Feature1 = JSONWriter.Feature.WriteNullListAsEmpty;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature1;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "e+r:@3Si^,3/.*PA8F+";
      stringArray0[1] = "3S4 yH3+h";
      stringArray0[2] = "<empty>";
      stringArray0[3] = "com.alibaba.fastjson2.reader.FieldReaderBoolValFunc";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeArrayNull();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteLongAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "e+r:@3Si^,3/.*PA8F+";
      stringArray0[1] = "3S4 yH3+h";
      stringArray0[2] = "<empty>";
      stringArray0[3] = "com.alibaba.fastjson2.reader.FieldReaderBoolValFunc";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeArrayNull();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "%fa \"K";
      stringArray0[2] = "TRUE";
      stringArray0[3] = "<empty>";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt32((-2525));
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ErrorOnNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("+{;XtRUYn;+W", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeInt32(24);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "x";
      stringArray0[1] = "parse error : ";
      stringArray0[2] = "wYL$lV";
      stringArray0[3] = "(7n!M";
      stringArray0[4] = "GTt7I@(PK";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "qo~t!QR(&r[,^7@";
      stringArray0[8] = "create Exception error, class ";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt32(983);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteEnumUsingOrdinal;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "rc jC:4kF/OfM%";
      stringArray0[1] = ">";
      stringArray0[2] = "WSlm T`";
      stringArray0[3] = "%q3LBa& J|fgFlq";
      stringArray0[4] = "dsi%hA";
      stringArray0[5] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDouble(1.0E18);
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullListAsEmpty;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeFloat((-512.2F));
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Rgvt.xeTui2| b";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeFloat(1.0F);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithUnderScores;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(Ljava/lang/Object;J)B";
      stringArray0[1] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt64((-8L));
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.SnakeCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "|ovD[O>P=:Q*^YDB#Ub";
      stringArray0[1] = "";
      stringArray0[2] = "O!_63>qBIrm";
      stringArray0[3] = ":/(H*a`:Jh#k";
      stringArray0[4] = "V;arM<<*";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeString("b!LV_#^\"EdH~c368&ai");
      assertEquals(20, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Rgvt.xeTui2| b";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeTypeName("UnsupportedOperation");
      assertEquals(23, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeNull();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "com.alibaba.fastjson2.JSONWriterJSONB";
      stringArray0[1] = "%hG6ZB'J";
      stringArray0[2] = "1BT";
      stringArray0[3] = "";
      stringArray0[4] = "z60";
      stringArray0[5] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.startArray((int) (byte)0);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.FieldBased;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[4];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[w&6Bgu~T";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.endObject();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.startObject();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullStringAsEmpty;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "~1Nf9'~)ZRT(}rd#z'";
      stringArray0[1] = "TreeMap";
      stringArray0[2] = "java.lang.StringCoding";
      stringArray0[3] = ".";
      stringArray0[4] = "";
      stringArray0[5] = "y;bCsXS(lUlCzP.";
      stringArray0[6] = ",mUKW";
      stringArray0[7] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeAny(objectWriterCreator0);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      stringArray0[1] = "Ci/$fD(kY";
      stringArray0[2] = "org.graalvm.nativeimage.imagecode";
      stringArray0[3] = "' to Boolean";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      int int0 = (-1431655765);
      jSONWriter_Context0.getDateFormatter();
      jSONWriterJSONB0.writeSymbol((-1431655765));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Ci/$fD(kY", false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);
      boolean boolean0 = false;
      MockPrintStream mockPrintStream1 = null;
      try {
        mockPrintStream1 = new MockPrintStream(mockPrintStream0, false, "<empty>");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // <empty>
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "D";
      stringArray0[1] = ", bytes length ";
      stringArray0[2] = "org.springframework.security.web.csrf.DefaultCsrfToken";
      stringArray0[3] = "{~wA>G9Pb#{uGuh[K22";
      stringArray0[4] = "5=Q.[8[E!5wbMPd+cEZ";
      stringArray0[5] = "com.alibaba.fastjson2.reader.ObjectReader11";
      stringArray0[6] = "`gx";
      stringArray0[7] = ",=S5|L0f";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.write((JSONObject) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "D";
      stringArray0[1] = ", bytes length ";
      stringArray0[2] = "org.springframework.security.web.csrf.DefaultCsrfToken";
      stringArray0[3] = "{~wA>G9Pb#{uGuh[K22";
      stringArray0[4] = "5=Q.[8[E!5wbMPd+cEZ";
      stringArray0[5] = "com.alibaba.fastjson2.reader.ObjectReader11";
      stringArray0[6] = "`gx";
      stringArray0[7] = ",=S5|L0f";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      IdentityHashMap<ChronoLocalDate, Object> identityHashMap0 = new IdentityHashMap<ChronoLocalDate, Object>(3147);
      jSONWriterJSONB0.write((Map) identityHashMap0);
      jSONWriterJSONB0.getBytes();
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "s}hF}s";
      stringArray0[1] = "!]x6FKndC_gYE?v";
      stringArray0[2] = "qsXnn%7`SyL6Qu6Wv";
      stringArray0[3] = "";
      stringArray0[4] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      jSONWriterJSONB0.write((List) linkedList0);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeReference((String) null);
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeReference("");
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ErrorOnNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("+{;XtRUYn;+W", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[1] = true;
      jSONWriterJSONB0.writeBool(booleanArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "1cbph5";
      stringArray0[1] = "";
      stringArray0[2] = "}5lhJy";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      jSONWriterJSONB0.writeDecimal((BigDecimal) null, 1000L, decimalFormat0);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.EscapeNoneAscii;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[4];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      DecimalFormat decimalFormat0 = new DecimalFormat();
      jSONWriterJSONB0.writeDecimal(bigDecimal0, 6352L, decimalFormat0);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      BigInteger bigInteger0 = BigInteger.TEN;
      jSONWriterJSONB0.writeBigInt(bigInteger0, 4046190361520671643L);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeUUID((UUID) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "s}hF}s";
      stringArray0[1] = "!]x6FKndC_gYE?v";
      stringArray0[2] = "qsXnn%7`SyL6Qu6Wv";
      stringArray0[3] = "";
      stringArray0[4] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      UUID uUID0 = MockUUID.fromString("");
      jSONWriterJSONB0.writeUUID(uUID0);
      assertEquals(18, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NotWriteHashMapArrayListClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[8] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "com.alibaba.fastjson2.JSONWriterJSONB";
      stringArray0[1] = "#-1";
      stringArray0[2] = ".#xL[e";
      stringArray0[3] = "?6g";
      stringArray0[4] = "&C";
      stringArray0[5] = ", bytes length ";
      stringArray0[6] = " }E6y9";
      stringArray0[7] = "alphabetic";
      stringArray0[8] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      jSONWriterJSONB0.writeZonedDateTime(zonedDateTime0);
      assertEquals(17, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeLocalDateTime((LocalDateTime) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "JSONObject";
      stringArray0[2] = "";
      stringArray0[3] = "OpenJ9";
      stringArray0[4] = "Asia/Shanghai";
      stringArray0[5] = "L={q>d";
      stringArray0[6] = "m$9oDB'K4n+4zXd";
      stringArray0[7] = "v5YJ/0,evV4)";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeLocalTime((LocalTime) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.BrowserCompatible;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "<empty>";
      stringArray0[3] = "cWG)wIpHbnZR5@;";
      stringArray0[4] = "com.alibaba.fastjson2.JSONWriterJSONB";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "(4<tkt{9%]P8Jf[IIYQ";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      LocalTime localTime0 = MockLocalTime.ofSecondOfDay(0L);
      jSONWriterJSONB0.writeLocalTime(localTime0);
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteEnumUsingOrdinal;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[8] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "[k2i?5CFC 9'((07{%#";
      stringArray0[1] = "-";
      stringArray0[2] = "&\"4M$o";
      stringArray0[3] = "";
      stringArray0[4] = "can not cast to Short ";
      stringArray0[5] = ", line ";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeLocalDate((LocalDate) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("readArrayMappingJSONBObject", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-624L));
      jSONWriterJSONB0.writeLocalDate(localDate0);
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteEnumUsingToString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[4];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "iuC/bIO&ZE";
      stringArray0[3] = "startObject";
      stringArray0[4] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[5];
      jSONWriterJSONB0.writeNameRaw(byteArray0, (long) (byte)0);
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteLongAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[5];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "{'(5=3+";
      stringArray0[1] = "";
      stringArray0[2] = "V=k)gXT;3lf*<?%";
      stringArray0[3] = "com.alibaba.fastjson2.JSONWriterJSONB";
      stringArray0[4] = "";
      stringArray0[5] = "java.util.ImmutableCollections$SetN";
      stringArray0[6] = "&`BF0jszr^}JdP,<`UL";
      stringArray0[7] = "%s\"=@Rs";
      stringArray0[8] = "2X>Vk:5xvc$";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeNameRaw((byte[]) null, (-4863137578837233966L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNameAsSymbol;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("com.carrotsearch.hppc.FloatArrayList", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      byte[] byteArray0 = new byte[2];
      jSONWriterJSONB0.writeNameRaw(byteArray0, (-103L));
      assertEquals(4, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "QY3$^PE($Gq=}!Q";
      stringArray0[1] = "";
      stringArray0[2] = "org.springframework.security.web.savedrequest.SavedCookie";
      stringArray0[3] = "Z9_sbmV:";
      stringArray0[4] = "";
      stringArray0[5] = "L";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeSymbol(286973);
      assertEquals(6, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.FieldBased;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[w&6Bgu~T";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeSymbol(0);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.PascalCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.UseSingleQuotes;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      JSONWriter.Feature jSONWriter_Feature1 = JSONWriter.Feature.WriteNullListAsEmpty;
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature1;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "(@Gun.W+H";
      stringArray0[1] = ")m[Rq?zn|;";
      stringArray0[2] = "cQ";
      stringArray0[3] = "org.bson.types.Decimal128";
      stringArray0[4] = "can not cast to Number ";
      stringArray0[5] = "8r#1.nRXRYB4z";
      stringArray0[6] = "";
      stringArray0[7] = "[hfJ},1T3g6l<wqd<_";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeString((List<String>) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.FieldBased;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[w&6Bgu~T";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeEnum(jSONWriter_Feature0);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.BeanToArray;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt16((short) (-314));
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithUnderScores;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(Ljava/lang/Object;J)B";
      stringArray0[1] = "a";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt8((byte)0);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "1";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      int[] intArray0 = new int[4];
      intArray0[1] = (-112);
      jSONWriterJSONB0.writeInt32(intArray0);
      assertEquals(6, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "1";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      int[] intArray0 = new int[4];
      intArray0[2] = 4987;
      jSONWriterJSONB0.writeInt32(intArray0);
      assertEquals(7, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "1";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      int[] intArray0 = new int[4];
      intArray0[0] = (-323619040);
      jSONWriterJSONB0.writeInt32(intArray0);
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeInt32((int[]) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WritePairAsJavaBean;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("4G", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "4G";
      stringArray0[1] = "4G";
      stringArray0[2] = "4G";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt16((short[]) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullNumberAsZero;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "73Qb76R";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "Oa";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDouble((double[]) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.SnakeCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "|ovD[O>P=:Q*^YDB#Ub";
      stringArray0[1] = "";
      stringArray0[2] = "O!_63>qBIrm";
      stringArray0[3] = ":/(H*a`:Jh#k";
      stringArray0[4] = "V;arM<<*";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDouble(2634.06567282647);
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDouble(0.0);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.UseSingleQuotes;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[5];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".G')\".\"";
      stringArray0[1] = "|wOG#0k_c";
      stringArray0[2] = "()Ljava/util/OptionalInt;";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeFloat((float[]) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("readArrayMappingJSONBObject", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      float[] floatArray0 = new float[4];
      floatArray0[0] = Float.NEGATIVE_INFINITY;
      jSONWriterJSONB0.writeFloat(floatArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreErrorGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "unsupported operation";
      stringArray0[1] = "com.alibaba.fastjson2.writer.FieldWriterEnumFunc";
      stringArray0[2] = "";
      stringArray0[3] = " d0wti0Ct1%+Z/p2";
      stringArray0[4] = "can not cast to decimal";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      long[] longArray0 = new long[9];
      longArray0[1] = 3102L;
      jSONWriterJSONB0.writeInt64(longArray0);
      assertEquals(12, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreErrorGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[3];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "unsupported operation";
      stringArray0[1] = "com.alibaba.fastjson2.writer.FieldWriterEnumFunc";
      stringArray0[2] = "";
      stringArray0[3] = " d0wti0Ct1%+Z/p2";
      stringArray0[4] = "can not cast to decimal";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      long[] longArray0 = new long[9];
      longArray0[8] = (-3653547262287832698L);
      jSONWriterJSONB0.writeInt64(longArray0);
      assertEquals(18, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreErrorGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "unsupported operation";
      stringArray0[1] = "com.alibaba.fastjson2.writer.FieldWriterEnumFunc";
      stringArray0[2] = "";
      stringArray0[3] = " d0wti0Ct1%+Z/p2";
      stringArray0[4] = "can not cast to decimal";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      long[] longArray0 = new long[9];
      longArray0[0] = 72057594037927935L;
      jSONWriterJSONB0.writeInt64(longArray0);
      assertEquals(18, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreErrorGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "unsupported operation";
      stringArray0[1] = "com.alibaba.fastjson2.writer.FieldWriterEnumFunc";
      stringArray0[2] = "";
      stringArray0[3] = " d0wti0Ct1%+Z/p2";
      stringArray0[4] = "can not cast to decimal";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      long[] longArray0 = new long[9];
      longArray0[2] = (-969L);
      jSONWriterJSONB0.writeInt64(longArray0);
      assertEquals(11, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ErrorOnNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[5];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("+{;XtRUYn;+W", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeInt64(4294967296L);
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "com.alibaba.fastjson2.JSONWritrJSONB";
      stringArray0[1] = "%hG6ZB'J";
      stringArray0[2] = "1BT";
      stringArray0[3] = "com.alibaba.fastjson2.JSONWritrJSONB";
      stringArray0[4] = "z60";
      stringArray0[5] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      Instant instant0 = MockInstant.ofEpochSecond((long) 334);
      Period period0 = Period.ofDays(1791);
      Instant instant1 = MockInstant.minus(instant0, (TemporalAmount) period0);
      jSONWriterJSONB0.writeInstant(instant1);
      assertEquals(7, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "<empty>";
      stringArray0[2] = "";
      stringArray0[3] = "#9<RYT0";
      stringArray0[4] = "wKb";
      stringArray0[5] = "localDate only support string input";
      stringArray0[6] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt64(644L);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.UseSingleQuotes;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[4];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".G')\".\"";
      stringArray0[1] = "|wOG#0k_c";
      stringArray0[2] = "()Ljava/util/OptionalInt;";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDouble((-1713.0));
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeMillis((byte) (-42));
      jSONWriterJSONB0.toString();
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      Stack<String> stack0 = new Stack<String>();
      jSONWriterJSONB0.writeString((List<String>) stack0);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = JSONWriterJSONB.sizeOfInt(2147475433);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = JSONWriterJSONB.sizeOfInt(1027);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = JSONWriterJSONB.sizeOfInt(0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = JSONWriterJSONB.sizeOfInt(3211);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int int0 = JSONWriterJSONB.sizeOfInt((-2145436474));
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[6];
      jSONWriterJSONB0.writeTypeName(byteArray0, 2271L);
      assertEquals(8, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ErrorOnNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      JSONWriter.Feature jSONWriter_Feature1 = JSONWriter.Feature.WriteNameAsSymbol;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature1;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[6] = jSONWriter_Feature1;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("+{;XtRUYn;+W", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeTypeName((byte[]) null, 262143L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "illegal json";
      stringArray0[1] = "y_so";
      stringArray0[2] = "j3TaG`arr>l";
      stringArray0[3] = "gg1\"k}e";
      stringArray0[4] = "BMjGH-uZDh";
      stringArray0[5] = "*WpzFXfW_RrA\"";
      stringArray0[6] = "";
      stringArray0[7] = "2+i,>Y6]\"@3kbN,";
      stringArray0[8] = "l{#{d;iEs]";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[2];
      jSONWriterJSONB0.writeTypeName(byteArray0, 0L);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.UseSingleQuotes;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[6] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".G')\".\"";
      stringArray0[1] = "|wOG#0k_c";
      stringArray0[2] = "()Ljava/util/OptionalInt;";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeTypeName((byte[]) null, (-4061L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "-ry\"b1eWg)329~";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeTypeName("-ry\"b1eWg)329~");
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeTypeName("");
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.SnakeCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.BrowserCompatible;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeSymbol("AHV9z+HO&<.h#VC");
      assertEquals(16, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.UseSingleQuotes;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[4];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[3];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".G')\".\"";
      stringArray0[1] = "|wOG#0k_c";
      stringArray0[2] = "()Ljava/util/OptionalInt;";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeSymbol((String) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "x";
      stringArray0[1] = "parse error : ";
      stringArray0[2] = "wYLV";
      stringArray0[3] = "(7n!M";
      stringArray0[4] = "GTt7I@(PK";
      stringArray0[5] = "!";
      stringArray0[6] = "";
      stringArray0[7] = "qo~t!QR(&r[,^7@";
      stringArray0[8] = "create Exception error, class ";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeSymbol("");
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.SnakeCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "|ovD[O>P=:Q*^YDB#Ub";
      stringArray0[1] = "";
      stringArray0[2] = "O!_63>qBIrm";
      stringArray0[3] = ":/(H*a`:Jh#k";
      stringArray0[4] = "V;arM<<*";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[1];
      jSONWriterJSONB0.writeString(charArray0, 23723597, 23723597);
      assertEquals(7, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithUnderScores;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(Ljava/lang/Object;J)B";
      stringArray0[1] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeString(charArray0, 0, (int) '!');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Rgvt.xeTui2| b";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[1];
      jSONWriterJSONB0.writeString(charArray0, 1230, 1230);
      assertEquals(4, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithUnderScores;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(Ljava/lang/Object;J)B";
      stringArray0[1] = "a";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[2];
      jSONWriterJSONB0.writeString(charArray0, 0, (-2851));
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "x";
      stringArray0[1] = "parse error : ";
      stringArray0[2] = "wYLV";
      stringArray0[3] = "(7n!M";
      stringArray0[4] = "GTt7I@(PK";
      stringArray0[5] = "!";
      stringArray0[6] = "";
      stringArray0[7] = "qo~t!QR(&r[,^7@";
      stringArray0[8] = "create Exception error, class ";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeString((char[]) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteEnumUsingOrdinal;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[7];
      jSONWriterJSONB0.writeString(charArray0);
      assertEquals(8, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NullAsDefaultValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "WriteNullListAsEmpty";
      stringArray0[2] = "/OZ$7kW51;sxv,+";
      stringArray0[3] = "";
      stringArray0[4] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeStringLatin1((byte[]) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreErrorGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Hy;:N~$[Is";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = ";FHSC6l";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[4];
      jSONWriterJSONB0.writeString(charArray0, 0, (-339), true);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteLongAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "<empty>";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[4];
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeString(charArray0, (-8179), 1223, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -8179
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.FieldBased;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[w&6Bgu~T";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeStringNull();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.SnakeCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "|ovD[O>P=:Q*^YDB#Ub";
      stringArray0[1] = "";
      stringArray0[2] = "O!_63>qBIrm";
      stringArray0[3] = ":/(H*a`:Jh#k";
      stringArray0[4] = "V;arM<<*";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeChar('N');
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Rgvt.xeTui2| b";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeRaw((byte) (-20));
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.SnakeCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "|ovD[O>P=:Q*^YDB#Ub";
      stringArray0[1] = "";
      stringArray0[2] = "O!_63>qBIrm";
      stringArray0[3] = ":/(H*a`:Jh#k";
      stringArray0[4] = "V;arM<<*";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.startArray(28);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteEnumsUsingName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Feature jSONWriter_Feature1 = JSONWriter.Feature.WriteClassName;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature1;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[4];
      jSONWriter_FeatureArray0[8] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "G3ppm#mRCOg<'D)1g";
      stringArray0[1] = "G3ppm#mRCOg<'D)1g";
      stringArray0[2] = "G3ppm#mRCOg<'D)1g";
      stringArray0[3] = "";
      stringArray0[4] = "-w*h:n`wZbTj+@V";
      stringArray0[5] = "G3ppm#mRCOg<'D)1g";
      stringArray0[6] = "G3ppm#mRCOg<'D)1g";
      stringArray0[7] = "G3ppm#mRCOg<'D)1g";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.startArray((Object) jSONWriter_FeatureArray0[1], (-4112));
      assertEquals(1, jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "-ry\"b1eWg)329~";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.startArray((Object) "", 1027);
      int int0 = jSONWriterJSONB0.size();
      assertEquals(1, jSONWriterJSONB0.level());
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.FieldBased;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "[w&6Bgu~T";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeAny((Object) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "x";
      stringArray0[1] = "parse error : ";
      stringArray0[2] = "wYL$lV";
      stringArray0[3] = "(7n!M";
      stringArray0[4] = "GTt7I@(PK";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "qo~t!QR(&r[,^7@";
      stringArray0[8] = "create Exception error, class ";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      JSONObject jSONObject0 = JSONObject.of("dja", (Object) "wYL$lV");
      jSONWriterJSONB0.write(jSONObject0);
      assertEquals(13, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteLongAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "<empty>";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.close();
      assertFalse(jSONWriterJSONB0.isUTF8());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithUnderScores;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(Ljava/lang/Object;J)B";
      stringArray0[1] = "a";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = jSONWriterJSONB0.getBytes();
      jSONWriterJSONB0.writeStringLatin1(byteArray0);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.BrowserCompatible;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("1Q", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "1Q";
      stringArray0[1] = "_";
      stringArray0[2] = "1Q";
      stringArray0[3] = "1Q";
      stringArray0[4] = "1Q";
      stringArray0[5] = "1Q";
      stringArray0[6] = "1Q";
      stringArray0[7] = "1Q";
      stringArray0[8] = "1Q";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[9];
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeNameRaw(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteEnumUsingOrdinal;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeColon();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullBooleanAsFalse;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[8] = jSONWriter_FeatureArray0[5];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(":`lCvc]", jSONWriter_FeatureArray0);
      byte[] byteArray0 = new byte[4];
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeNameRaw(byteArray0);
      assertEquals(4, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullStringAsEmpty;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeDateTimeISO8601(0, (-1458), (-1458), 0, 0, (-1458), (-1458), (-1343), false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNonStringValueAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeComma();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeTimeHHMMSS8((-1263), 0, (-938));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("create address error", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "create address error";
      stringArray0[1] = "create address error";
      stringArray0[2] = "create address error";
      stringArray0[3] = "create address error";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.write0('u');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "h(!p.A}K2(L#{)%N";
      stringArray0[1] = "}SuCYA`E;";
      stringArray0[2] = "Vna";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[0];
      jSONWriterJSONB0.writeHex(byteArray0);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.BeanToArray;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "J+4\")2{NjWR}o";
      stringArray0[1] = "between";
      stringArray0[2] = ">";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "F'M;>F|!Z@{D+!8iP3x";
      stringArray0[6] = "<9+)jV)GE~U4O2szL";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.startArray();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullListAsEmpty;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeDateYYYMMDD10((byte) (-111), 2415, (-673));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithUnderScores;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(Ljava/lang/Object;J)B";
      stringArray0[1] = "(Ljava/lang/Object;J)B";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      String string0 = jSONWriterJSONB0.toString();
      assertEquals("INT32 0, bytes length 0", string0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "oaI32";
      stringArray0[1] = "{[__=";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDateYYYMMDD8((-229), (-229), 1440);
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ErrorOnNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("+{;XtRUYn;+W", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      int int0 = jSONWriterJSONB0.flushTo((OutputStream) byteArrayOutputStream0);
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, int0);
      assertEquals(0, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "-ry\"b1eWg)329~";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      int int0 = jSONWriterJSONB0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("dKGu*`,!{", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "dKGu*`,!{";
      stringArray0[1] = "dKGu*`,!{";
      stringArray0[2] = "dKGu*`,!{";
      stringArray0[3] = "dKGu*`,!{";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeNameRaw((char[]) null, 0, (-2144));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithUnderScores;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(Ljava/lang/Object;J)B";
      stringArray0[1] = "(Ljava/lang/Object;J)B";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.endArray();
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreErrorGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("Maz^.8m2,X[*o[ ", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Maz^.8m2,X[*o[ ";
      stringArray0[1] = "Maz^.8m2,X[*o[ ";
      stringArray0[2] = "Maz^.8m2,X[*o[ ";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeBase64(byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeRaw("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithDashes;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreErrorGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "A'vcaU&)YX";
      stringArray0[1] = "";
      stringArray0[2] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeName("");
      assertTrue(jSONWriterJSONB0.isIgnoreErrorGetter());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullBooleanAsFalse;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.getBytes(charset0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not support operator
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithUnderScores;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "(Ljava/lang/Object;J)B";
      stringArray0[1] = "(Ljava/lang/Object;J)B";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDateTime19((-2851), 0, (-2851), 317534141, 1004, (byte)0);
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCamelCaseWithDashes;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{Rg-;N^/ufHD:.", false);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.flushTo((OutputStream) mockFileOutputStream0, (Charset) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNonStringKeyAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeRaw('v');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }
}
