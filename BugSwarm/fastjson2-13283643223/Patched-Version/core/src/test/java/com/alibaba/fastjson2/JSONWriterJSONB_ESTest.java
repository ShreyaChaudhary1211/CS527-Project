/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 21:45:03 GMT 2024
 */

package com.alibaba.fastjson2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson2.JSONFactory;
import com.alibaba.fastjson2.JSONObject;
import com.alibaba.fastjson2.JSONWriter;
import com.alibaba.fastjson2.JSONWriterJSONB;
import com.alibaba.fastjson2.PropertyNamingStrategy;
import com.alibaba.fastjson2.SymbolTable;
import com.alibaba.fastjson2.writer.ObjectWriterCreator;
import com.alibaba.fastjson2.writer.ObjectWriterProvider;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.nio.charset.Charset;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.time.Clock;
import java.time.Instant;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.OffsetDateTime;
import java.time.ZoneOffset;
import java.time.ZonedDateTime;
import java.time.chrono.ThaiBuddhistEra;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockZonedDateTime;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONWriterJSONB_ESTest extends JSONWriterJSONB_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteMapNullValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[5];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[4];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeDateTime19((-2740), 94, (-2740), 611, 320, 0);
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteLongAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("CAS`#U\"tjnjR`d", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeDateTime14((-1492), (-1492), 18, 180, (-2931), 3407);
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteEnumUsingToString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "w1M";
      stringArray0[2] = "oel&'|Db";
      stringArray0[3] = "";
      stringArray0[4] = "^hflm";
      stringArray0[5] = "";
      stringArray0[6] = "{q=d3";
      stringArray0[7] = "Z";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      int[] intArray0 = new int[8];
      intArray0[6] = (-16);
      jSONWriterJSONB0.writeInt32(intArray0);
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.NeverUseThisValueExceptDefaultValue;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "J.iBZssm|z$)$E";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "x&l?U&<|#&^#aiX_O$5";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "L`3>";
      stringArray0[8] = "FB";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      double[] doubleArray0 = new double[6];
      doubleArray0[1] = 2555.17199;
      jSONWriterJSONB0.writeDouble(doubleArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.NeverUseThisValueExceptDefaultValue;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "J.iBZssm|z$)$E";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "x&l?U&<|#&^#aiX_O$5";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "L`3>";
      stringArray0[8] = "FB";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      double[] doubleArray0 = new double[6];
      doubleArray0[2] = 2.147483647E9;
      jSONWriterJSONB0.writeDouble(doubleArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) (byte)124;
      jSONWriterJSONB0.writeDouble(doubleArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.KebabCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteByteArrayAsBase64;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = ":/#";
      stringArray0[1] = "";
      stringArray0[2] = "t7h";
      stringArray0[3] = "\r+Y@lD9(5H0W9!ER";
      stringArray0[4] = "com.alibaba.fastjson2.JSONWriterJSONB";
      stringArray0[5] = "";
      stringArray0[6] = "92lN[p";
      stringArray0[7] = "~:SC]";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      float[] floatArray0 = new float[6];
      floatArray0[2] = 629.7F;
      jSONWriterJSONB0.writeFloat(floatArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "o Y$S7Rz*\"CY0B0";
      stringArray0[1] = "property %s invalid";
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("property %s invalid", jSONWriter_FeatureArray0);
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeMillis(24L);
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ErrorOnNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[4];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[4];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      char[] charArray0 = new char[1];
      jSONWriterJSONB0.writeString(charArray0, 136, (int) (byte) (-1));
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NotWriteEmptyArray;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[4];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[6];
      jSONWriterJSONB0.writeString(charArray0, 0, 0, false);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNonFieldGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "(Ljava/lang/Object;D)V";
      stringArray0[3] = "UnsupportedOperation";
      stringArray0[4] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt64((-442L));
      jSONWriterJSONB0.toString();
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteLongAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      double[] doubleArray0 = new double[0];
      jSONWriterJSONB0.writeDouble(doubleArray0);
      int int0 = jSONWriterJSONB0.size();
      assertEquals((-1), jSONWriterJSONB0.level());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ErrorOnNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("wExLYE", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "wExLYE";
      stringArray0[1] = "wExLYE";
      stringArray0[2] = "wExLYE";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeArrayNull();
      jSONWriterJSONB0.getBytes();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullListAsEmpty;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeBool(false);
      assertEquals(1, jSONWriterJSONB0.size());
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Hn0.$aWWJ~(!}x", false);
      int int0 = jSONWriterJSONB0.flushTo((OutputStream) mockFileOutputStream0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NotWriteDefaultValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "7}&|xx~pE^Me";
      stringArray0[1] = "=";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeTypeName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeRaw((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Asia/Shanghai";
      stringArray0[1] = "w8&Gn";
      stringArray0[2] = "HqKSd";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = null;
      try {
        jSONWriterJSONB0 = new JSONWriterJSONB((JSONWriter.Context) null, jSONFactory_SymbolTableImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.JSONWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteByteArrayAsBase64;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeBool(true);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.EscapeNoneAscii;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      BigDecimal bigDecimal0 = new BigDecimal(3709.78845078);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      jSONWriterJSONB0.writeDecimal(bigDecimal0, (long) (byte)0, decimalFormat0);
      assertEquals(23, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "?%.2L%0<C7un";
      stringArray0[1] = "";
      stringArray0[2] = "@gQ,";
      stringArray0[3] = "#-1";
      stringArray0[4] = "J X>rNv&8Tx)";
      stringArray0[5] = ", bytes length ";
      stringArray0[6] = "UnsupportedOperation";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[2];
      jSONWriterJSONB0.writeBinary(byteArray0);
      assertEquals(4, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("com.alibaba.fastjson2.reader.FieldReaderObjectField", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      byte[] byteArray0 = new byte[0];
      jSONWriterJSONB0.writeRaw(byteArray0);
      assertEquals(0, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullNumberAsZero;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      JSONWriter.Feature jSONWriter_Feature1 = JSONWriter.Feature.WriteNullListAsEmpty;
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature1;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("com.alibaba.fastjson2.function.impl.ToLong", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "com.alibaba.fastjson2.function.impl.ToLong";
      stringArray0[1] = "com.alibaba.fastjson2.function.impl.ToLong";
      stringArray0[2] = "com.alibaba.fastjson2.function.impl.ToLong";
      stringArray0[3] = "com.alibaba.fastjson2.function.impl.ToLong";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeArrayNull();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCaseWithDashes;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullStringAsEmpty;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[5];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[8] = jSONWriter_FeatureArray0[3];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "0.ki:uAd /+";
      stringArray0[1] = "";
      stringArray0[2] = "ZD~7sUg/2j]UD0-";
      stringArray0[3] = "UOQ|4b51@p:`ZR_B2";
      stringArray0[4] = "";
      stringArray0[5] = "_{+B;a]&P?T407";
      stringArray0[6] = "[aJ*egN>%D9'";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt32((-8114));
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteMapNullValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeInt32(8);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNameAsSymbol;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "/ ?iS";
      stringArray0[2] = "array not end, ";
      stringArray0[3] = "";
      stringArray0[4] = "com.alibaba.fastjson2.JSONPathTypedMultiNamesPrefixName2";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt32(4270);
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NotWriteEmptyArray;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context((String) null, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeFloat((float) (byte)91);
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNameAsSymbol;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("YhE|:Pqm", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "YhE|:Pqm";
      stringArray0[1] = "YhE|:Pqm";
      stringArray0[2] = "YhE|:Pqm";
      stringArray0[3] = "YhE|:Pqm";
      stringArray0[4] = "YhE|:Pqm";
      stringArray0[5] = "YhE|:Pqm";
      stringArray0[6] = "YhE|:Pqm";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeFloat((-2213.062F));
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNulls;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeString("68ZvPk0$ip<6NlrprKm");
      assertEquals(20, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "CG$E5Hq(jr/~B,S";
      stringArray0[1] = "/";
      stringArray0[2] = "ZR.}:;\"AjI+";
      stringArray0[3] = "[]";
      stringArray0[4] = "vs)k#m!";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeNull();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteLongAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.endObject();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.EscapeNoneAscii;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.startObject();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreErrorGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeAny(jSONWriter_FeatureArray0[0]);
      assertEquals(18, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.MapSortField;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Feature jSONWriter_Feature1 = JSONWriter.Feature.NullAsDefaultValue;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature1;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "bu}v8KDi>wksVTBX";
      stringArray0[1] = "";
      stringArray0[2] = "3woMRk";
      stringArray0[3] = "";
      stringArray0[4] = "1L";
      stringArray0[5] = "nW%Mu`A*;W7w1=Y:]x";
      stringArray0[6] = "com.alibaba.fastjson2.JSONWriterJSONB";
      stringArray0[7] = "BY5";
      stringArray0[8] = "(B)V";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeReference("(B)V");
      jSONWriterJSONB0.writeInt64(3547627781654598988L);
      assertEquals(15, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeComma();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.PrettyFormat;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[6] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[7] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.endArray();
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullNumberAsZero;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("com.alibaba.fastjson2.function.impl.ToLong", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "com.alibaba.fastjson2.function.impl.ToLong";
      stringArray0[1] = "com.alibaba.fastjson2.function.impl.ToLong";
      stringArray0[2] = "com.alibaba.fastjson2.function.impl.ToLong";
      stringArray0[3] = "com.alibaba.fastjson2.function.impl.ToLong";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      String string0 = jSONWriterJSONB0.toString();
      assertEquals("INT32 0, bytes length 0", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.write((JSONObject) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      Integer integer0 = new Integer(194);
      hashMap0.put(integer0, "=|7;eaF^9@");
      jSONWriterJSONB0.write((Map) hashMap0);
      assertEquals(15, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("com.alibaba.fastjson2.reader.FieldReaderObjectField", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      Vector<PushbackInputStream> vector0 = new Vector<PushbackInputStream>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 2170);
      vector0.add(pushbackInputStream0);
      jSONWriterJSONB0.write((List) vector0);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreErrorGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[5];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[5];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("m`8hz_", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.write((List) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("`l", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "`l";
      stringArray0[1] = "`l";
      stringArray0[2] = "`l";
      stringArray0[3] = "`r &Vc6U}:^DcUQ";
      stringArray0[4] = "`l";
      stringArray0[5] = "`l";
      stringArray0[6] = "`l";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeReference((String) null);
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "java.util.Collections$SingletonSet";
      stringArray0[2] = "REFERENCE ";
      stringArray0[3] = "6@Vp{Z@_9_4#Y`)#aa";
      stringArray0[4] = "]q+\"??]s2'KF[?q";
      stringArray0[5] = "A";
      stringArray0[6] = "illegal value";
      stringArray0[7] = "x?M=Yd?dxx]";
      stringArray0[8] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeBool((boolean[]) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = true;
      jSONWriterJSONB0.writeBool(booleanArray0);
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteBooleanAsNumber;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[5];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      DecimalFormat decimalFormat0 = new DecimalFormat("e ");
      jSONWriterJSONB0.writeDecimal(bigDecimal0, 0L, decimalFormat0);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[3];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteLongAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("CAS`#U\"tjnjR`d", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols();
      DecimalFormat decimalFormat0 = new DecimalFormat("CAS`#U\"tjnjR`d", decimalFormatSymbols0);
      jSONWriterJSONB0.writeDecimal((BigDecimal) null, (long) 3407, decimalFormat0);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteMapNullValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[3];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("Qk>", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Qk>";
      stringArray0[1] = "Qk>";
      stringArray0[2] = "Qk>";
      stringArray0[3] = "Qk>";
      stringArray0[4] = "Qk>";
      stringArray0[5] = "Qk>";
      stringArray0[6] = "Qk>";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      UUID uUID0 = MockUUID.fromString("Qk>");
      jSONWriterJSONB0.writeUUID(uUID0);
      assertEquals(18, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInstant((Instant) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.SnakeCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeOffsetDateTime((OffsetDateTime) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "o Y$S7Rz*\"CY0B0";
      stringArray0[1] = "property %s invalid";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      Clock clock0 = MockClock.system(zoneOffset0);
      Instant instant0 = MockInstant.now(clock0);
      OffsetDateTime offsetDateTime0 = MockInstant.atOffset(instant0, zoneOffset0);
      jSONWriterJSONB0.writeOffsetDateTime(offsetDateTime0);
      assertEquals(20, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ReferenceDetection;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^q^7F";
      stringArray0[1] = "d)q(%oSCTiF";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeZonedDateTime((ZonedDateTime) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNonFieldGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("+08:00", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      jSONWriterJSONB0.writeZonedDateTime(zonedDateTime0);
      assertEquals(17, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.PrettyFormat;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[7] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("4Q%GAI;J=)UPS8ntK{", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeLocalDateTime((LocalDateTime) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCamelCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeLocalDate((LocalDate) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullNumberAsZero;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "?2dzn{Ph+";
      stringArray0[2] = "sZJG00%xPIw;J!\" V98";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeNameRaw((byte[]) null, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ErrorOnNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[7] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      byte[] byteArray0 = new byte[2];
      jSONWriterJSONB0.writeNameRaw(byteArray0, (long) (byte) (-1));
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.SnakeCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeSymbol(102);
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteLongAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeSymbol((int) (byte) (-47));
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteMapNullValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeSymbol((int) (byte)12);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullNumberAsZero;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      JSONWriter.Feature jSONWriter_Feature1 = JSONWriter.Feature.WriteNullListAsEmpty;
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature1;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[4];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("com.alibaba.fastjson2.function.impl.ToLong", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "com.alibaba.fastjson2.function.impl.ToLong";
      stringArray0[1] = "com.alibaba.fastjson2.function.impl.ToLong";
      stringArray0[2] = "com.alibaba.fastjson2.function.impl.ToLong";
      stringArray0[3] = "com.alibaba.fastjson2.function.impl.ToLong";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeString((List<String>) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.KebabCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteByteArrayAsBase64;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = ":/#";
      stringArray0[1] = "";
      stringArray0[2] = "t7h";
      stringArray0[3] = "\r+Y@lD9(5H0W9!ER";
      stringArray0[4] = "com.alibaba.fastjson2.JSONWriterJSONB";
      stringArray0[5] = "";
      stringArray0[6] = "92lN[p";
      stringArray0[7] = "~:SC]";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      float[] floatArray0 = new float[6];
      floatArray0[1] = (-262144.0F);
      jSONWriterJSONB0.writeFloat(floatArray0);
      assertEquals(15, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "xf;x$8c";
      stringArray0[1] = "#ov";
      stringArray0[2] = "";
      stringArray0[3] = "com.alibaba.fastjson2.reader.FieldReaderMapMethodReadOnly";
      stringArray0[4] = "].&fmG?TO>>+{{AS";
      stringArray0[5] = "<empty>";
      stringArray0[6] = ".{tU*8-D=gu\"p4jI'g ";
      stringArray0[7] = "";
      stringArray0[8] = ")wy";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt32((-1759));
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteEnumUsingOrdinal;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      JSONWriter.Feature jSONWriter_Feature1 = JSONWriter.Feature.WriteEnumsUsingName;
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature1;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"";
      stringArray0[1] = "7f-`|+>hwX5R-5";
      stringArray0[2] = "n$,5'ls,Lzf+9";
      stringArray0[3] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeEnum(jSONWriter_Feature0);
      assertEquals(22, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("`l", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "`l";
      stringArray0[1] = "`l";
      stringArray0[2] = "`l";
      stringArray0[3] = "`r &Vc6U}:^DcUQ";
      stringArray0[4] = "`l";
      stringArray0[5] = "`l";
      stringArray0[6] = "`l";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeEnum(jSONWriter_FeatureArray0[0]);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNonFieldGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[3];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "unsupported operation";
      stringArray0[2] = "(Ljava/lang/Object;D)V";
      stringArray0[3] = "UnsupportedOperation";
      stringArray0[4] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt16((short) (-41));
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "xf;x$8c";
      stringArray0[1] = "#ov";
      stringArray0[2] = "";
      stringArray0[3] = "com.alibaba.fastjson2.reader.FieldReaderMapMethodReadOnly";
      stringArray0[4] = "].&fmG?TO>>+{{AS";
      stringArray0[5] = "<empty>";
      stringArray0[6] = ".{tU*8-D=gu\"p4jI'g ";
      stringArray0[7] = "";
      stringArray0[8] = ")wy";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt8((byte)0);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ErrorOnNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("o\"fc%1O", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "o\"fc%1O";
      stringArray0[1] = "o\"fc%1O";
      stringArray0[2] = "o\"fc%1O";
      stringArray0[3] = "o\"fc%1O";
      stringArray0[4] = "o\"fc%1O";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      int[] intArray0 = new int[9];
      intArray0[0] = 208401389;
      jSONWriterJSONB0.writeInt32(intArray0);
      assertEquals(14, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreErrorGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      int[] intArray0 = new int[7];
      intArray0[3] = (-3021);
      jSONWriterJSONB0.writeInt32(intArray0);
      assertEquals(10, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteMapNullValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (byte) (-73);
      jSONWriterJSONB0.writeInt32(intArray0);
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNonFieldGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "unsupported operation";
      stringArray0[2] = "(Ljava/lang/Object;D)V";
      stringArray0[3] = "UnsupportedOperation";
      stringArray0[4] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeInt32((int[]) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteEnumsUsingName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[4];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[8] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeInt16((short[]) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ReferenceDetection;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^q^7F";
      stringArray0[1] = "d)q(%oSCTiF";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      short[] shortArray0 = new short[7];
      jSONWriterJSONB0.writeInt16(shortArray0);
      assertEquals((-1), jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ErrorOnNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("wExLYE", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "wExLYE";
      stringArray0[1] = "wExLYE";
      stringArray0[2] = "wExLYE";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDouble((double[]) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WritePairAsJavaBean;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "0000\u5E7400\u670800\u65E5";
      stringArray0[1] = "java.util.Collections$SynchronizedMap";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDouble((-0.9415488257735772));
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCamelCaseWithDashes;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[9];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteLongAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[6] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[8] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "7/IWq";
      stringArray0[1] = "rz`pu";
      stringArray0[2] = "w:Di49&^4$~g,_;X";
      stringArray0[3] = "patternProperties";
      stringArray0[4] = "build";
      stringArray0[5] = "45j.uTla`7GE!e";
      stringArray0[6] = "else";
      stringArray0[7] = ":+>I?=";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDouble(0.0);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "y{+XhPtN,;I8t(P_%D";
      stringArray0[1] = ", bytes length ";
      stringArray0[2] = "";
      stringArray0[3] = "v'ac$uTY:|SwvI]";
      stringArray0[4] = "";
      stringArray0[5] = "L#@n.:K\"";
      stringArray0[6] = "EH7rirTRx3(vcgPe";
      stringArray0[7] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeFloat((float[]) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.SnakeCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeFloat(Float.NEGATIVE_INFINITY);
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      long[] longArray0 = new long[9];
      longArray0[8] = (long) 'o';
      jSONWriterJSONB0.writeInt64(longArray0);
      assertEquals(11, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      long[] longArray0 = new long[2];
      longArray0[0] = (-3046L);
      jSONWriterJSONB0.writeInt64(longArray0);
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "CG$E5Hq(jr/~B,S";
      stringArray0[1] = "/";
      stringArray0[2] = "ZR.}:;\"AjI+";
      stringArray0[3] = "[]";
      stringArray0[4] = "vs)k#m!";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-47);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      jSONWriterJSONB0.writeBigInt(bigInteger0, (long) (byte) (-35));
      assertEquals(6, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "?%.2L%0<C7un";
      stringArray0[1] = "";
      stringArray0[2] = "@gQ,";
      stringArray0[3] = "#-1";
      stringArray0[4] = "J X>rNv&8Tx)";
      stringArray0[5] = ", bytes length ";
      stringArray0[6] = "UnsupportedOperation";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      Instant instant0 = MockInstant.ofEpochSecond((-2048L));
      Instant instant1 = MockInstant.minusNanos(instant0, (byte)7);
      jSONWriterJSONB0.writeInstant(instant1);
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WritePairAsJavaBean;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "0000\u5E7400\u670800\u65E5";
      stringArray0[1] = "java.util.Collections$SynchronizedMap";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDouble((-1.0));
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "?%.2L%0<C7un";
      stringArray0[1] = "";
      stringArray0[2] = "@gQ,";
      stringArray0[3] = "#-1";
      stringArray0[4] = "J X>rNv&8Tx)";
      stringArray0[5] = ", bytes length ";
      stringArray0[6] = "UnsupportedOperation";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      Instant instant0 = MockInstant.ofEpochSecond((-2048L));
      jSONWriterJSONB0.writeInstant(instant0);
      assertEquals(4, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreErrorGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeMillis((-208L));
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "?%.2L%0<C7un";
      stringArray0[1] = "";
      stringArray0[2] = "@gQ,";
      stringArray0[3] = "#-1";
      stringArray0[4] = "J X>rNv&8Tx)";
      stringArray0[5] = ", bytes length ";
      stringArray0[6] = "UnsupportedOperation";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.ensureCapacity(64711720);
      assertFalse(jSONWriterJSONB0.isBeanToArray());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.PrettyFormat;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[2];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("4Q%GAI;J=)UPS8ntK{", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      jSONWriterJSONB0.writeString((List<String>) arrayList0);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = JSONWriterJSONB.sizeOfInt(0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = JSONWriterJSONB.sizeOfInt(4196);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = JSONWriterJSONB.sizeOfInt((byte) (-41));
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider((ObjectWriterCreator) null);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      byte[] byteArray0 = new byte[7];
      jSONWriterJSONB0.writeTypeName(byteArray0, 1125899906842624L);
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNameAsSymbol;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[0];
      boolean boolean0 = jSONWriterJSONB0.writeTypeName(byteArray0, (-2273L));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      byte[] byteArray0 = new byte[3];
      jSONWriterJSONB0.writeTypeName(byteArray0, (long) (byte)0);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.PrettyFormat;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[6] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[3];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("4Q%GAI;J=)UPS8ntK{", jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeTypeName("");
      jSONWriterJSONB0.writeTypeName("6pC");
      assertEquals(9, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WritePairAsJavaBean;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "0000\u5E7400\u670800\u65E5";
      stringArray0[1] = "java.util.Collections$SynchronizedMap";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeTypeName("java.util.Collections$SynchronizedMap");
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "vkD]f)c)<XcS>5b\"zb-";
      stringArray0[1] = "jJ![|M&";
      stringArray0[2] = "omj>qO/F3ueu,x";
      stringArray0[3] = "4H.]<kq]ySi";
      stringArray0[4] = "A^ :~i{T{!S!1";
      stringArray0[5] = "+l0;:ue_ZY'4C'i.E";
      stringArray0[6] = "3MeFE20";
      stringArray0[7] = "i.OsUP";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeSymbol("jJ![|M&");
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCamelCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeSymbol((String) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "not support operator";
      stringArray0[2] = "";
      stringArray0[3] = "A<[=";
      stringArray0[4] = "(Ljava/lang/Class;)Ljava/lang/Object;";
      stringArray0[5] = "zG>";
      stringArray0[6] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeSymbol("writeTypeInfo");
      assertEquals(14, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "?%.2L%0<C7un";
      stringArray0[1] = "";
      stringArray0[2] = "@gQ,";
      stringArray0[3] = "#-1";
      stringArray0[4] = "J X>rNv&8Tx)";
      stringArray0[5] = ", bytes length ";
      stringArray0[6] = "UnsupportedOperation";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[4];
      jSONWriterJSONB0.writeString(charArray0, (int) (byte)7, (int) (byte)7);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNonStringKeyAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[5];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("+08:00", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "+08:00";
      stringArray0[1] = "+08:00";
      stringArray0[2] = "+08:00";
      stringArray0[3] = "+08:00";
      stringArray0[4] = "+08:00";
      stringArray0[5] = "+08:00";
      stringArray0[6] = "+08:00";
      stringArray0[7] = "+08:00";
      stringArray0[8] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[9];
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeString(charArray0, (-1495), 8192);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1495
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteBooleanAsNumber;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeString((char[]) null, 6, 6);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WritePairAsJavaBean;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "0000\u5E7400\u670800\u65E5";
      stringArray0[1] = "java.util.Collections$SynchronizedMap";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeString(charArray0, (-162), 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -162
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[1];
      jSONWriterJSONB0.writeString(charArray0);
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "?%.2L%0<C7un";
      stringArray0[1] = "";
      stringArray0[2] = "@gQ,";
      stringArray0[3] = "#-1";
      stringArray0[4] = "J X>rNv&8Tx)";
      stringArray0[5] = ", bytes length ";
      stringArray0[6] = "UnsupportedOperation";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[2];
      jSONWriterJSONB0.writeStringLatin1(byteArray0);
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.SnakeCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[7];
      jSONWriterJSONB0.writeString(charArray0, 930, (-1578), false);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeString((char[]) null, 4, 4, false);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      char[] charArray0 = new char[4];
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeString(charArray0, 22, 22, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 22
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "o Y$S7Rz*\"CY0B0";
      stringArray0[1] = "property %s invalid";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeStringNull();
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullBooleanAsFalse;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[2];
      jSONWriter_FeatureArray0[4] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("Asia/Shanghai", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Asia/Shanghai";
      stringArray0[1] = "Asia/Shanghai";
      stringArray0[2] = "Asia/Shanghai";
      stringArray0[3] = "Asia/Shanghai";
      stringArray0[4] = "Asia/Shanghai";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeChar('#');
      assertEquals(2, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeRaw((byte) (-123));
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteMapNullValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.startArray(258);
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "?%.2L%0<C7un";
      stringArray0[1] = "";
      stringArray0[2] = "@gQ,";
      stringArray0[3] = "#-1";
      stringArray0[4] = "J X>rNv&8Tx)";
      stringArray0[5] = ", bytes length ";
      stringArray0[6] = "UnsupportedOperation";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      ThaiBuddhistEra thaiBuddhistEra0 = ThaiBuddhistEra.BE;
      jSONWriterJSONB0.startArray((Object) thaiBuddhistEra0, (int) (byte) (-25));
      assertEquals(1, jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "o Y$S7Rz*\"CY0B0";
      stringArray0[1] = "property %s invalid";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      Clock clock0 = MockClock.system(zoneOffset0);
      jSONWriterJSONB0.startArray((Object) clock0, 1352);
      assertEquals(1, jSONWriterJSONB0.level());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreErrorGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      JSONWriter.Feature[] jSONWriter_FeatureArray1 = new JSONWriter.Feature[2];
      jSONWriter_FeatureArray1[0] = jSONWriter_FeatureArray0[0];
      JSONWriter.Feature jSONWriter_Feature1 = JSONWriter.Feature.BeanToArray;
      jSONWriter_FeatureArray1[1] = jSONWriter_Feature1;
      jSONWriter_Context0.config(jSONWriter_FeatureArray1);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeAny(jSONWriter_Feature0);
      assertEquals(18, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeAny((Object) null);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "o Y$S7Rz*\"CY0B0";
      stringArray0[1] = "property %s invalid";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      JSONObject jSONObject0 = JSONObject.of("property %s invalid", (Object) zoneOffset0);
      jSONWriterJSONB0.write(jSONObject0);
      assertEquals(54, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.ErrorOnNoneSerializable;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[5];
      jSONWriter_FeatureArray0[7] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.close();
      assertEquals(0, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[7];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "#-1";
      stringArray0[3] = "";
      stringArray0[4] = "com.alibaba.fastjson2.reader.FieldReaderDoubleMethod";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[7];
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeNameRaw(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeColon();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.UpperCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[1];
      jSONWriterJSONB0.writeNameRaw(byteArray0);
      assertEquals(1, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteClassName;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "com.alibaba.fastjson2.JSONPathFilter$NameObjectOpSegment";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "IgnoreCheckClose";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeDateTimeISO8601((-2401), (-2401), (-45), 0, (-45), 676, (-573), 1041, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("SKnWokstOj@%abn0", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "SKnWokstOj@%abn0";
      stringArray0[1] = "SKnWokstOj@%abn0";
      stringArray0[2] = "SKnWokstOj@%abn0";
      stringArray0[3] = "SKnWokstOj@%abn0";
      stringArray0[4] = "SKnWokstOj@%abn0";
      stringArray0[5] = "SKnWokstOj@%abn0";
      stringArray0[6] = "SKnWokstOj@%abn0";
      stringArray0[7] = "SKnWokstOj@%abn0";
      stringArray0[8] = "SKnWokstOj@%abn0";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeTimeHHMMSS8(37, 704, 37);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.LowerCaseWithDots;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.write0('V');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.NullAsDefaultValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[4];
      jSONWriter_FeatureArray0[6] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "B";
      stringArray0[1] = "";
      stringArray0[2] = "T)~U|JH";
      stringArray0[3] = ";}{S:Vh#ZvwB9";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "$5";
      stringArray0[7] = "f";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[1];
      jSONWriterJSONB0.writeHex(byteArray0);
      assertEquals(3, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = new ObjectWriterCreator();
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[8];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteMapNullValue;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[3];
      jSONWriter_FeatureArray0[6] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[7] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.startArray();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.MapSortField;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[3];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "h=BF7ty/v'";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "tl@(wWnQB!li\"&V";
      stringArray0[5] = "!+<SZj4]LCvrj*\"~";
      stringArray0[6] = "x^NJ";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeDateYYYMMDD10(2921, 2921, 2921);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.SnakeCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = jSONWriterJSONB0.getBytes();
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.SnakeCase;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      jSONWriterJSONB0.writeDateYYYMMDD8((-2048), 102, (-2048));
      assertEquals(5, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[4];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteLongAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      int int0 = jSONWriterJSONB0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[1];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNameAsSymbol;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("YhE|:Pqm", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "YhE|:Pqm";
      stringArray0[1] = "YhE|:Pqm";
      stringArray0[2] = "YhE|:Pqm";
      stringArray0[3] = "YhE|:Pqm";
      stringArray0[4] = "YhE|:Pqm";
      stringArray0[5] = "YhE|:Pqm";
      stringArray0[6] = "YhE|:Pqm";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      char[] charArray0 = new char[7];
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeNameRaw(charArray0, 0, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[5];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.IgnoreNonFieldGetter;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[3];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "unsupported operation";
      stringArray0[2] = "(Ljava/lang/Object;D)V";
      stringArray0[3] = "UnsupportedOperation";
      stringArray0[4] = "";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeBase64(byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ObjectWriterCreator objectWriterCreator0 = ObjectWriterCreator.INSTANCE;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(objectWriterCreator0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeRaw((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unsupported operation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[2];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNonStringKeyAsString;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_FeatureArray0[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(jSONWriter_FeatureArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      jSONWriterJSONB0.writeName("7`&ciU<e}\"x5m");
      assertEquals(14, jSONWriterJSONB0.size());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      PropertyNamingStrategy propertyNamingStrategy0 = PropertyNamingStrategy.NeverUseThisValueExceptDefaultValue;
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider(propertyNamingStrategy0);
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, (SymbolTable) null);
      Charset charset0 = jSONWriterJSONB0.getCharset();
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.getBytes(charset0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not support operator
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[6];
      JSONWriter.Feature jSONWriter_Feature0 = JSONWriter.Feature.WriteNullBooleanAsFalse;
      jSONWriter_FeatureArray0[0] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[1] = jSONWriter_Feature0;
      jSONWriter_FeatureArray0[2] = jSONWriter_FeatureArray0[1];
      jSONWriter_FeatureArray0[3] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[4] = jSONWriter_FeatureArray0[0];
      jSONWriter_FeatureArray0[5] = jSONWriter_FeatureArray0[1];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context("Asia/Shanghai", jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Asia/Shanghai";
      stringArray0[1] = "Asia/Shanghai";
      stringArray0[2] = "Asia/Shanghai";
      stringArray0[3] = "Asia/Shanghai";
      stringArray0[4] = "Asia/Shanghai";
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      Charset charset0 = jSONWriterJSONB0.charset;
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.flushTo((OutputStream) null, charset0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ObjectWriterProvider objectWriterProvider0 = new ObjectWriterProvider();
      JSONWriter.Feature[] jSONWriter_FeatureArray0 = new JSONWriter.Feature[0];
      JSONWriter.Context jSONWriter_Context0 = new JSONWriter.Context(objectWriterProvider0, jSONWriter_FeatureArray0);
      String[] stringArray0 = new String[0];
      JSONFactory.SymbolTableImpl jSONFactory_SymbolTableImpl0 = new JSONFactory.SymbolTableImpl(stringArray0);
      JSONWriterJSONB jSONWriterJSONB0 = new JSONWriterJSONB(jSONWriter_Context0, jSONFactory_SymbolTableImpl0);
      // Undeclared exception!
      try { 
        jSONWriterJSONB0.writeRaw('S');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // UnsupportedOperation
         //
         verifyException("com.alibaba.fastjson2.JSONWriterJSONB", e);
      }
  }
}
