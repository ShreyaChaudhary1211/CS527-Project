/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 07:22:33 GMT 2024
 */

package com.alibaba.fastjson2.reader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson2.JSONReader;
import com.alibaba.fastjson2.SymbolTable;
import com.alibaba.fastjson2.filter.ContextAutoTypeBeforeHandler;
import com.alibaba.fastjson2.reader.ObjectReaderCreator;
import com.alibaba.fastjson2.reader.ObjectReaderImplEnum;
import com.alibaba.fastjson2.reader.ObjectReaderProvider;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.lang.reflect.Array;
import java.lang.reflect.Field;
import java.lang.reflect.Member;
import java.lang.reflect.Method;
import java.lang.reflect.Type;
import java.net.Proxy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ObjectReaderImplEnum_ESTest extends ObjectReaderImplEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<Float> class0 = Float.TYPE;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 1);
      long[] longArray0 = new long[8];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      Class class1 = objectReaderImplEnum0.getObjectClass();
      assertEquals("float", class1.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<Field> class0 = Field.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 5);
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      enumArray0[0] = (Enum<Proxy.Type>) proxy_Type0;
      long[] longArray0 = new long[7];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      Enum enum0 = objectReaderImplEnum0.getEnumByOrdinal(0);
      assertEquals(Proxy.Type.SOCKS, enum0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<Byte> class0 = Byte.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 4);
      Proxy.Type proxy_Type0 = Proxy.Type.HTTP;
      enumArray0[0] = (Enum<Proxy.Type>) proxy_Type0;
      long[] longArray0 = new long[8];
      longArray0[0] = (-2465L);
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      Enum enum0 = objectReaderImplEnum0.getEnumByHashCode((-2465L));
      assertEquals(Proxy.Type.HTTP, enum0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Double> class0 = Double.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 0);
      Enum<Proxy.Type>[] enumArray1 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 4);
      long[] longArray0 = new long[6];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray1, longArray0);
      // Undeclared exception!
      try { 
        objectReaderImplEnum0.readObject((JSONReader) null, (Type) class0, (Object) enumArray1[1], (-2782L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<Short> class0 = Short.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 1);
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, (long[]) null);
      byte[] byteArray0 = new byte[0];
      String[] stringArray0 = new String[6];
      stringArray0[0] = "not support enumType : ";
      stringArray0[1] = "com.alibaba.fastjson2.reader.ObjectReaderImplEnum";
      stringArray0[2] = "PPe";
      stringArray0[3] = "com.alibaba.fastjson2.function.impl.ToLong";
      stringArray0[4] = "u\"j\"z&=OB<B6(";
      stringArray0[5] = "C^o";
      SymbolTable symbolTable0 = new SymbolTable(stringArray0);
      JSONReader jSONReader0 = JSONReader.ofJSONB(byteArray0, (-2115), (-2115), symbolTable0);
      // Undeclared exception!
      try { 
        objectReaderImplEnum0.readObject(jSONReader0, (Type) class0, (Object) null, (-262144L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2115
         //
         verifyException("com.alibaba.fastjson2.JSONReaderJSONB", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<ContextAutoTypeBeforeHandler> class0 = ContextAutoTypeBeforeHandler.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 4);
      Proxy.Type proxy_Type0 = Proxy.Type.DIRECT;
      long[] longArray0 = new long[4];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      byte[] byteArray0 = new byte[5];
      ObjectReaderCreator objectReaderCreator0 = ObjectReaderCreator.INSTANCE;
      ObjectReaderProvider objectReaderProvider0 = new ObjectReaderProvider(objectReaderCreator0);
      JSONReader.Context jSONReader_Context0 = new JSONReader.Context(objectReaderProvider0);
      JSONReader jSONReader0 = JSONReader.of(byteArray0, jSONReader_Context0);
      // Undeclared exception!
      try { 
        objectReaderImplEnum0.readJSONBObject(jSONReader0, (Type) null, proxy_Type0, (-1L));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character \u001A, offset 0, character \u001A, line 1, column 1, fastjson-version 2.0.34 \u0000\u0000\u0000\u0000\u0000
         //
         verifyException("com.alibaba.fastjson2.JSONReaderUTF8", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<InputStream> class0 = InputStream.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 0);
      long[] longArray0 = new long[1];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      // Undeclared exception!
      try { 
        objectReaderImplEnum0.readJSONBObject((JSONReader) null, class0, class0, 517L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<Float> class0 = Float.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 1);
      Proxy.Type proxy_Type0 = Proxy.Type.HTTP;
      long[] longArray0 = new long[8];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      JSONReader jSONReader0 = JSONReader.of("None enum ordinal or value ");
      // Undeclared exception!
      try { 
        objectReaderImplEnum0.readJSONBObject(jSONReader0, (Type) null, proxy_Type0, (-1512L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("com.alibaba.fastjson2.JSONReaderUTF16", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<Field> class0 = Field.class;
      long[] longArray0 = new long[3];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, (Enum[]) null, (Enum[]) null, longArray0);
      // Undeclared exception!
      try { 
        objectReaderImplEnum0.of(729);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<JSONReader.AutoTypeBeforeHandler> class0 = JSONReader.AutoTypeBeforeHandler.class;
      long[] longArray0 = new long[4];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, (Enum[]) null, (Enum[]) null, longArray0);
      // Undeclared exception!
      try { 
        objectReaderImplEnum0.getEnumByOrdinal(3327);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<Field> class0 = Field.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 3);
      long[] longArray0 = new long[7];
      longArray0[5] = 4092L;
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      // Undeclared exception!
      try { 
        objectReaderImplEnum0.getEnumByHashCode(4092L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<String> class0 = String.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 0);
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, (long[]) null);
      // Undeclared exception!
      try { 
        objectReaderImplEnum0.getEnum("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 5);
      long[] longArray0 = new long[9];
      ObjectReaderImplEnum objectReaderImplEnum0 = null;
      try {
        objectReaderImplEnum0 = new ObjectReaderImplEnum((Class) null, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Class<Method> class0 = Method.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 3);
      Enum<Proxy.Type>[] enumArray1 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 5);
      long[] longArray0 = new long[9];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray1, longArray0);
      JSONReader jSONReader0 = JSONReader.of("4,#_s!/SEsvsG;`&");
      objectReaderImplEnum0.readObject(jSONReader0, (Type) null, (Object) enumArray1[2], 0L);
      assertEquals('#', jSONReader0.current());
      assertEquals(3, jSONReader0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<Method> class0 = Method.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 3);
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      Enum<Proxy.Type>[] enumArray1 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 5);
      enumArray1[4] = (Enum<Proxy.Type>) proxy_Type0;
      long[] longArray0 = new long[9];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray1, longArray0);
      JSONReader jSONReader0 = JSONReader.of("4,#_s!/SEsvsG;`&");
      objectReaderImplEnum0.readObject(jSONReader0, (Type) null, (Object) enumArray1[2], 0L);
      assertEquals('#', jSONReader0.current());
      assertEquals(3, jSONReader0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Class<Method> class0 = Method.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 3);
      long[] longArray0 = new long[9];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      JSONReader jSONReader0 = JSONReader.of("4,#_s!/SEsvsG;`&");
      // Undeclared exception!
      try { 
        objectReaderImplEnum0.readObject(jSONReader0, (Type) null, (Object) enumArray0[2], 0L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No enum ordinal java.lang.reflect.Method.4
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<Field> class0 = Field.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 5);
      long[] longArray0 = new long[7];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      Enum enum0 = objectReaderImplEnum0.getEnumByOrdinal(0);
      assertNull(enum0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Class<Byte> class0 = Byte.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 0);
      long[] longArray0 = new long[9];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      // Undeclared exception!
      try { 
        objectReaderImplEnum0.getEnumByOrdinal(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No enum ordinal java.lang.Byte.0
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<Short> class0 = Short.class;
      long[] longArray0 = new long[9];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, (Enum[]) null, (Enum[]) null, longArray0);
      // Undeclared exception!
      try { 
        objectReaderImplEnum0.getEnumByOrdinal((-77));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No enum ordinal java.lang.Short.-77
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Class<Byte> class0 = Byte.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 4);
      long[] longArray0 = new long[8];
      longArray0[0] = (-2465L);
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      Enum enum0 = objectReaderImplEnum0.getEnumByHashCode((-2465L));
      assertNull(enum0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Class<Byte> class0 = Byte.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 4);
      long[] longArray0 = new long[8];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      Enum enum0 = objectReaderImplEnum0.getEnumByHashCode((-2465L));
      assertNull(enum0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Class<Field> class0 = Field.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 2);
      long[] longArray0 = new long[6];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, (Enum[]) null, enumArray0, longArray0);
      Enum enum0 = objectReaderImplEnum0.getEnumByHashCode(0L);
      assertNull(enum0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 1);
      Proxy.Type proxy_Type0 = Proxy.Type.HTTP;
      enumArray0[0] = (Enum<Proxy.Type>) proxy_Type0;
      long[] longArray0 = new long[3];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      byte[] byteArray0 = new byte[8];
      JSONReader.Feature[] jSONReader_FeatureArray0 = new JSONReader.Feature[5];
      JSONReader.Feature jSONReader_Feature0 = JSONReader.Feature.UseBigDecimalForDoubles;
      jSONReader_FeatureArray0[0] = jSONReader_Feature0;
      jSONReader_FeatureArray0[1] = jSONReader_FeatureArray0[0];
      jSONReader_FeatureArray0[2] = jSONReader_FeatureArray0[1];
      jSONReader_FeatureArray0[3] = jSONReader_Feature0;
      jSONReader_FeatureArray0[4] = jSONReader_FeatureArray0[3];
      JSONReader jSONReader0 = JSONReader.ofJSONB(byteArray0, jSONReader_FeatureArray0);
      Object object0 = objectReaderImplEnum0.readJSONBObject(jSONReader0, (Type) null, (Object) null, (-1354L));
      assertSame(object0, proxy_Type0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 1);
      long[] longArray0 = new long[3];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      byte[] byteArray0 = new byte[8];
      JSONReader.Feature[] jSONReader_FeatureArray0 = new JSONReader.Feature[5];
      JSONReader.Feature jSONReader_Feature0 = JSONReader.Feature.UseBigDecimalForDoubles;
      jSONReader_FeatureArray0[0] = jSONReader_Feature0;
      jSONReader_FeatureArray0[1] = jSONReader_FeatureArray0[0];
      jSONReader_FeatureArray0[2] = jSONReader_FeatureArray0[1];
      jSONReader_FeatureArray0[3] = jSONReader_FeatureArray0[1];
      jSONReader_FeatureArray0[4] = jSONReader_FeatureArray0[1];
      JSONReader jSONReader0 = JSONReader.ofJSONB(byteArray0, jSONReader_FeatureArray0);
      objectReaderImplEnum0.readJSONBObject(jSONReader0, (Type) null, (Object) null, (-1354L));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Class<Field> class0 = Field.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 5);
      long[] longArray0 = new long[7];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      // Undeclared exception!
      try { 
        objectReaderImplEnum0.of(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // None enum ordinal or value 0
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Class<Field> class0 = Field.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 5);
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      enumArray0[0] = (Enum<Proxy.Type>) proxy_Type0;
      long[] longArray0 = new long[7];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      Enum enum0 = objectReaderImplEnum0.of(0);
      assertEquals(Proxy.Type.SOCKS, enum0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Class<Method> class0 = Method.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 3);
      Enum<Proxy.Type>[] enumArray1 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 5);
      long[] longArray0 = new long[9];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray1, longArray0);
      JSONReader jSONReader0 = JSONReader.of("4,#_s!/SEsvsG;`&");
      objectReaderImplEnum0.readObject(jSONReader0, 0L);
      objectReaderImplEnum0.readObject(jSONReader0, (Type) null, (Object) jSONReader0, 0L);
      assertEquals(3, jSONReader0.getOffset());
      assertEquals('#', jSONReader0.current());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Class<Float> class0 = Float.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 1);
      long[] longArray0 = new long[8];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      Enum enum0 = objectReaderImplEnum0.getEnum((String) null);
      assertNull(enum0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Class<PipedInputStream> class0 = PipedInputStream.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 0);
      long[] longArray0 = new long[9];
      longArray0[1] = (-3750763034362895579L);
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      // Undeclared exception!
      try { 
        objectReaderImplEnum0.getEnum("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.alibaba.fastjson2.reader.ObjectReaderImplEnum", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Class<Long> class0 = Long.class;
      long[] longArray0 = new long[5];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, (Enum[]) null, (Enum[]) null, longArray0);
      char[] charArray0 = new char[7];
      JSONReader jSONReader0 = JSONReader.of(charArray0);
      Byte byte0 = new Byte((byte)35);
      Object object0 = objectReaderImplEnum0.readJSONBObject(jSONReader0, class0, byte0, 2174L);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Class<ContextAutoTypeBeforeHandler> class0 = ContextAutoTypeBeforeHandler.class;
      Enum<Proxy.Type>[] enumArray0 = (Enum<Proxy.Type>[]) Array.newInstance(Enum.class, 4);
      long[] longArray0 = new long[4];
      ObjectReaderImplEnum objectReaderImplEnum0 = new ObjectReaderImplEnum(class0, (Method) null, (Member) null, enumArray0, enumArray0, longArray0);
      Class class1 = objectReaderImplEnum0.getObjectClass();
      assertFalse(class1.isEnum());
  }
}
