var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":65,"id":101425,"methods":[{"el":42,"sc":5,"sl":38},{"el":51,"sc":5,"sl":44},{"el":64,"sc":5,"sl":54}],"name":"SubClassAxiomTestCase","sl":36}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_115":{"methods":[{"sl":38}],"name":"testNQuads","pass":true,"statements":[{"sl":41}]},"test_1515":{"methods":[{"sl":38}],"name":"testOWLXML","pass":true,"statements":[{"sl":41}]},"test_1899":{"methods":[{"sl":38}],"name":"testFunctionalSyntax","pass":true,"statements":[{"sl":41}]},"test_205":{"methods":[{"sl":38}],"name":"testTrig","pass":true,"statements":[{"sl":41}]},"test_206":{"methods":[{"sl":38}],"name":"testNTriples","pass":true,"statements":[{"sl":41}]},"test_2196":{"methods":[{"sl":38},{"sl":44}],"name":"testCorrectAxioms","pass":true,"statements":[{"sl":41},{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":50}]},"test_2256":{"methods":[{"sl":38}],"name":"testManchesterOWLSyntax","pass":true,"statements":[{"sl":41}]},"test_2980":{"methods":[{"sl":38}],"name":"roundTripRDFXMLAndFunctionalShouldBeSame","pass":true,"statements":[{"sl":41}]},"test_3346":{"methods":[{"sl":38}],"name":"testRDFXML","pass":true,"statements":[{"sl":41}]},"test_3605":{"methods":[{"sl":54}],"name":"testIsGCIMethod","pass":true,"statements":[{"sl":56},{"sl":57},{"sl":58},{"sl":59},{"sl":60},{"sl":61},{"sl":62},{"sl":63}]},"test_3888":{"methods":[{"sl":38}],"name":"testTurtle","pass":true,"statements":[{"sl":41}]},"test_477":{"methods":[{"sl":38}],"name":"testRDFJSON","pass":true,"statements":[{"sl":41}]},"test_543":{"methods":[{"sl":38}],"name":"testJSONLD","pass":true,"statements":[{"sl":41}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [206, 543, 1899, 477, 205, 3346, 1515, 115, 2256, 2980, 2196, 3888], [], [], [206, 543, 1899, 477, 205, 3346, 1515, 115, 2256, 2980, 2196, 3888], [], [], [2196], [], [2196], [2196], [2196], [2196], [2196], [], [], [], [3605], [], [3605], [3605], [3605], [3605], [3605], [3605], [3605], [3605], [], []]
