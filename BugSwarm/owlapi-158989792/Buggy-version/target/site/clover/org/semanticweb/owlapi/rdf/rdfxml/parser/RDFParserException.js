var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":85,"id":41278,"methods":[{"el":37,"sc":5,"sl":35},{"el":54,"sc":5,"sl":47},{"el":64,"sc":5,"sl":56},{"el":69,"sc":5,"sl":67},{"el":74,"sc":5,"sl":72},{"el":79,"sc":5,"sl":77},{"el":84,"sc":5,"sl":82}],"name":"RDFParserException","sl":21}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1000":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testRDFJSON","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_1204":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testInvalidUTF8roundTrip","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_1240":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testIgnoreAnnotations","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_1310":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testBOMError16big","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_1320":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testBOMError8Reader","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_137":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"shouldFailWithBanningOfTriX","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_1374":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testBOMError32small","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_140":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testTrig","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_1415":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testTurtle","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_1448":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testManchesterOWLSyntax","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_1596":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"roundTripRDFXMLAndFunctionalShouldBeSame","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_1704":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testFunctionalSyntax","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_1969":{"methods":[{"sl":47},{"sl":56}],"name":"shouldThrowMeaningfulException","pass":false,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_2055":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testBOMError32big","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_2151":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"shouldDoCompleteRoundtripWithAnnotationsOWLXML","pass":false,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_2176":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testBOMError16small","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_2587":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testRDFXML","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_274":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testTrig","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_2824":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testOWLXML","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_2869":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testManchesterOWLSyntax","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_2901":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"roundTripRDFXMLAndFunctionalShouldBeSame","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_2907":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"shouldParseSWRLVariables","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_2922":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"shouldRemapImport","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_2993":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"shouldFindExpectedAxiomsForBlankNodes","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_3029":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testOntologyContainsAxiomsForOWLXML2","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_3099":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testTurtle","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_3164":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testOWLXML","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_3185":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"shouldRoundTripThroughOWLXMLToTurtle","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_3203":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"shouldDeclareAllDatatypes","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_3255":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testOntologyContainsAxiomsForOWLXML1","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_3431":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testFunctionalSyntax","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_3539":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"shouldRoundTripThroughOWLXML","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_355":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testRDFJSON","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_3625":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testBOMError8","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_3793":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testRDFXML","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_449":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testJSONLD","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_493":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testNQuads","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_548":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testNTriples","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_561":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"shouldRoundTripThroughOWLXMLOrTurtle","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_587":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"shouldRoundTripThroughOWLXMLToRioTurtle","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_722":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testNQuads","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_832":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testNTriples","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]},"test_913":{"methods":[{"sl":35},{"sl":47},{"sl":56}],"name":"testJSONLD","pass":true,"statements":[{"sl":36},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":57},{"sl":58},{"sl":59},{"sl":62}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [913, 3029, 3203, 3539, 2922, 1204, 493, 3099, 2587, 137, 1415, 2993, 355, 2055, 1704, 2907, 587, 548, 1000, 274, 449, 2869, 3164, 1310, 1596, 3431, 140, 3185, 722, 2151, 2901, 3625, 1448, 1240, 1374, 561, 3793, 832, 2176, 3255, 2824, 1320], [913, 3029, 3203, 3539, 2922, 1204, 493, 3099, 2587, 137, 1415, 2993, 355, 2055, 1704, 2907, 587, 548, 1000, 274, 449, 2869, 3164, 1310, 1596, 3431, 140, 3185, 722, 2151, 2901, 3625, 1448, 1240, 1374, 561, 3793, 832, 2176, 3255, 2824, 1320], [], [], [], [], [], [], [], [], [], [], [913, 3029, 3203, 3539, 2922, 1204, 493, 3099, 2587, 137, 1969, 1415, 2993, 355, 2055, 1704, 2907, 587, 548, 1000, 274, 449, 2869, 3164, 1310, 1596, 3431, 140, 3185, 722, 2151, 2901, 3625, 1448, 1240, 1374, 561, 3793, 832, 2176, 3255, 2824, 1320], [], [913, 3029, 3203, 3539, 2922, 1204, 493, 3099, 2587, 137, 1969, 1415, 2993, 355, 2055, 1704, 2907, 587, 548, 1000, 274, 449, 2869, 3164, 1310, 1596, 3431, 140, 3185, 722, 2151, 2901, 3625, 1448, 1240, 1374, 561, 3793, 832, 2176, 3255, 2824, 1320], [913, 3029, 3203, 3539, 2922, 1204, 493, 3099, 2587, 137, 1969, 1415, 2993, 355, 2055, 1704, 2907, 587, 548, 1000, 274, 449, 2869, 3164, 1310, 1596, 3431, 140, 3185, 722, 2151, 2901, 3625, 1448, 1240, 1374, 561, 3793, 832, 2176, 3255, 2824, 1320], [913, 3029, 3203, 3539, 2922, 1204, 493, 3099, 2587, 137, 1969, 1415, 2993, 355, 2055, 1704, 2907, 587, 548, 1000, 274, 449, 2869, 3164, 1310, 1596, 3431, 140, 3185, 722, 2151, 2901, 3625, 1448, 1240, 1374, 561, 3793, 832, 2176, 3255, 2824, 1320], [913, 3029, 3203, 3539, 2922, 1204, 493, 3099, 2587, 137, 1969, 1415, 2993, 355, 2055, 1704, 2907, 587, 548, 1000, 274, 449, 2869, 3164, 1310, 1596, 3431, 140, 3185, 722, 2151, 2901, 3625, 1448, 1240, 1374, 561, 3793, 832, 2176, 3255, 2824, 1320], [913, 3029, 3203, 3539, 2922, 1204, 493, 3099, 2587, 137, 1969, 1415, 2993, 355, 2055, 1704, 2907, 587, 548, 1000, 274, 449, 2869, 3164, 1310, 1596, 3431, 140, 3185, 722, 2151, 2901, 3625, 1448, 1240, 1374, 561, 3793, 832, 2176, 3255, 2824, 1320], [], [], [913, 3029, 3203, 3539, 2922, 1204, 493, 3099, 2587, 137, 1969, 1415, 2993, 355, 2055, 1704, 2907, 587, 548, 1000, 274, 449, 2869, 3164, 1310, 1596, 3431, 140, 3185, 722, 2151, 2901, 3625, 1448, 1240, 1374, 561, 3793, 832, 2176, 3255, 2824, 1320], [913, 3029, 3203, 3539, 2922, 1204, 493, 3099, 2587, 137, 1969, 1415, 2993, 355, 2055, 1704, 2907, 587, 548, 1000, 274, 449, 2869, 3164, 1310, 1596, 3431, 140, 3185, 722, 2151, 2901, 3625, 1448, 1240, 1374, 561, 3793, 832, 2176, 3255, 2824, 1320], [913, 3029, 3203, 3539, 2922, 1204, 493, 3099, 2587, 137, 1969, 1415, 2993, 355, 2055, 1704, 2907, 587, 548, 1000, 274, 449, 2869, 3164, 1310, 1596, 3431, 140, 3185, 722, 2151, 2901, 3625, 1448, 1240, 1374, 561, 3793, 832, 2176, 3255, 2824, 1320], [913, 3029, 3203, 3539, 2922, 1204, 493, 3099, 2587, 137, 1969, 1415, 2993, 355, 2055, 1704, 2907, 587, 548, 1000, 274, 449, 2869, 3164, 1310, 1596, 3431, 140, 3185, 722, 2151, 2901, 3625, 1448, 1240, 1374, 561, 3793, 832, 2176, 3255, 2824, 1320], [], [], [913, 3029, 3203, 3539, 2922, 1204, 493, 3099, 2587, 137, 1969, 1415, 2993, 355, 2055, 1704, 2907, 587, 548, 1000, 274, 449, 2869, 3164, 1310, 1596, 3431, 140, 3185, 722, 2151, 2901, 3625, 1448, 1240, 1374, 561, 3793, 832, 2176, 3255, 2824, 1320], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
