/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Apr 30 03:30:09 GMT 2024
 */

package com.coremedia.iso.boxes;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;

@EvoSuiteClassExclude
public class MetaBox_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.coremedia.iso.boxes.MetaBox"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/var/folders/70/9z8mmtr153x2znr25_zb57mr0000gn/T/"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/Users/shreyachaudhary/Desktop/extra/CS527-Project/Bugs/BugSwarm/2nd_round/mp4parser-133036862/Buggy-version"); 
    java.lang.System.setProperty("user.home", "/Users/shreyachaudhary"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "shreyachaudhary"); 
    java.lang.System.setProperty("user.timezone", "America/Chicago"); 
    java.lang.System.setProperty("sun.arch.data.model", "64"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MetaBox_ESTest_scaffolding.class.getClassLoader() ,
      "com.coremedia.iso.boxes.SampleToChunkBox",
      "com.coremedia.iso.boxes.MediaHeaderBox",
      "com.coremedia.iso.boxes.UserDataBox",
      "com.coremedia.iso.boxes.MovieHeaderBox",
      "com.coremedia.iso.boxes.EditBox",
      "com.googlecode.mp4parser.AbstractBox",
      "com.coremedia.iso.boxes.ProtectionSchemeInformationBox",
      "com.coremedia.iso.boxes.SampleTableBox",
      "com.coremedia.iso.boxes.FreeBox",
      "com.coremedia.iso.boxes.ItemProtectionBox",
      "com.coremedia.iso.boxes.ClassificationBox",
      "com.coremedia.iso.boxes.MediaInformationBox",
      "com.coremedia.iso.boxes.TrackBox",
      "com.coremedia.iso.IsoTypeReader",
      "com.googlecode.mp4parser.FileDataSourceViaHeapImpl",
      "com.coremedia.iso.boxes.Container",
      "com.googlecode.mp4parser.util.Logger",
      "com.coremedia.iso.PropertyBoxParserImpl",
      "com.googlecode.mp4parser.AbstractContainerBox",
      "com.coremedia.iso.boxes.SchemeInformationBox",
      "com.coremedia.iso.boxes.CompositionTimeToSample",
      "com.coremedia.iso.boxes.FullBox",
      "com.coremedia.iso.AbstractBoxParser$1",
      "com.googlecode.mp4parser.MultiFileDataSourceImpl",
      "com.coremedia.iso.boxes.sampleentry.AbstractSampleEntry",
      "com.googlecode.mp4parser.FileDataSourceImpl",
      "com.coremedia.iso.boxes.AbstractMediaHeaderBox",
      "com.coremedia.iso.boxes.DataInformationBox",
      "com.googlecode.mp4parser.AbstractFullBox",
      "com.coremedia.iso.boxes.MetaBox",
      "com.googlecode.mp4parser.util.JuliLogger",
      "com.coremedia.iso.boxes.MovieBox",
      "com.googlecode.mp4parser.BasicContainer$1",
      "com.coremedia.iso.boxes.MediaBox",
      "com.coremedia.iso.boxes.sampleentry.SampleEntry",
      "com.coremedia.iso.boxes.SampleDependencyTypeBox",
      "com.coremedia.iso.IsoTypeWriter",
      "com.coremedia.iso.AbstractBoxParser",
      "com.googlecode.mp4parser.DataSource",
      "com.coremedia.iso.boxes.SampleSizeBox",
      "com.googlecode.mp4parser.util.LazyList",
      "com.googlecode.mp4parser.util.CastUtils",
      "com.coremedia.iso.boxes.TimeToSampleBox",
      "com.googlecode.mp4parser.util.AndroidLogger",
      "com.coremedia.iso.boxes.Box",
      "com.coremedia.iso.boxes.SyncSampleBox",
      "com.coremedia.iso.boxes.SampleDescriptionBox",
      "com.coremedia.iso.boxes.DataReferenceBox",
      "com.coremedia.iso.boxes.TrackReferenceBox",
      "com.googlecode.mp4parser.MemoryDataSourceImpl",
      "com.googlecode.mp4parser.BasicContainer",
      "com.googlecode.mp4parser.DirectFileReadDataSource",
      "com.coremedia.iso.boxes.TrackHeaderBox",
      "com.coremedia.iso.BoxParser",
      "com.coremedia.iso.boxes.ChunkOffsetBox",
      "com.coremedia.iso.boxes.HandlerBox"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MetaBox_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.googlecode.mp4parser.util.Logger",
      "com.googlecode.mp4parser.util.JuliLogger",
      "com.googlecode.mp4parser.AbstractBox",
      "com.googlecode.mp4parser.BasicContainer$1",
      "com.googlecode.mp4parser.BasicContainer",
      "com.googlecode.mp4parser.AbstractContainerBox",
      "com.coremedia.iso.boxes.MetaBox",
      "com.coremedia.iso.IsoTypeReader",
      "com.coremedia.iso.IsoTypeWriter",
      "com.coremedia.iso.boxes.FreeBox",
      "com.googlecode.mp4parser.util.CastUtils",
      "com.googlecode.mp4parser.MultiFileDataSourceImpl",
      "com.googlecode.mp4parser.MemoryDataSourceImpl",
      "com.coremedia.iso.AbstractBoxParser",
      "com.coremedia.iso.PropertyBoxParserImpl",
      "com.coremedia.iso.AbstractBoxParser$1",
      "com.googlecode.mp4parser.DirectFileReadDataSource",
      "com.coremedia.iso.boxes.MediaBox",
      "com.coremedia.iso.boxes.MediaInformationBox",
      "com.googlecode.mp4parser.FileDataSourceImpl",
      "com.googlecode.mp4parser.FileDataSourceViaHeapImpl",
      "com.coremedia.iso.boxes.MovieBox",
      "com.coremedia.iso.boxes.SampleTableBox",
      "com.coremedia.iso.boxes.TrackBox",
      "com.coremedia.iso.boxes.ItemProtectionBox",
      "com.coremedia.iso.boxes.EditBox",
      "com.coremedia.iso.boxes.SchemeInformationBox",
      "com.coremedia.iso.boxes.DataReferenceBox",
      "com.coremedia.iso.boxes.SampleDescriptionBox",
      "com.googlecode.mp4parser.util.LazyList",
      "com.coremedia.iso.boxes.TrackReferenceBox",
      "com.coremedia.iso.boxes.DataInformationBox",
      "com.coremedia.iso.boxes.UserDataBox",
      "com.coremedia.iso.boxes.ProtectionSchemeInformationBox"
    );
  }
}
