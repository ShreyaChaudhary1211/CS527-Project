/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 14:36:06 GMT 2024
 */

package com.alibaba.fastjson2.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson2.filter.ValueFilter;
import com.alibaba.fastjson2.function.impl.StringToAny;
import com.alibaba.fastjson2.function.impl.ToBigDecimal;
import com.alibaba.fastjson2.function.impl.ToFloat;
import com.alibaba.fastjson2.function.impl.ToNumber;
import com.alibaba.fastjson2.function.impl.ToString;
import java.util.HashMap;
import java.util.Map;
import java.util.function.Function;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ValueFilter_ESTest extends ValueFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Long long0 = new Long((-2029L));
      ToNumber toNumber0 = new ToNumber(long0);
      ValueFilter valueFilter0 = ValueFilter.of(";*jq:B-O9hdA,3yA^R", (Function) toNumber0);
      ValueFilter valueFilter1 = ValueFilter.compose(valueFilter0, valueFilter0);
      ValueFilter valueFilter2 = ValueFilter.compose(valueFilter1, valueFilter0);
      assertFalse(valueFilter2.equals((Object)valueFilter0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      ValueFilter valueFilter0 = ValueFilter.of((String) null, (Map) hashMap0);
      Object object0 = valueFilter0.apply("", "lV,$)fe?&oHf<;/;&", (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ToString toString0 = new ToString();
      ToBigDecimal toBigDecimal0 = new ToBigDecimal();
      ValueFilter valueFilter0 = ValueFilter.of("", (Function) toString0);
      Object object0 = valueFilter0.apply(toBigDecimal0, "='l[p<Bcwi|[a\"", "");
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
      ValueFilter valueFilter0 = ValueFilter.of("FvwjB{&R|fJnPvu", (Map) hashMap0);
      Float float0 = new Float((-1025.0));
      ToNumber toNumber0 = new ToNumber(float0);
      ValueFilter valueFilter1 = ValueFilter.of((Predicate<String>) null, (Function) toNumber0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        valueFilter1.apply(object0, "", valueFilter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // can not cast to Number class com.alibaba.fastjson2.filter.ValueFilter$$Lambda$65/434982732
         //
         verifyException("com.alibaba.fastjson2.function.impl.ToNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ToString toString0 = new ToString();
      ToBigDecimal toBigDecimal0 = new ToBigDecimal();
      Function function0 = toString0.andThen((Function) toBigDecimal0);
      ValueFilter valueFilter0 = ValueFilter.of((Predicate<String>) null, function0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        valueFilter0.apply((Object) null, "??L6$fej/wdI5]3@SOc", object0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Float float0 = new Float(0.0F);
      ToFloat toFloat0 = new ToFloat(float0);
      ValueFilter valueFilter0 = ValueFilter.compose((ValueFilter) null, (ValueFilter) null);
      // Undeclared exception!
      try { 
        valueFilter0.apply(float0, "HuEr", toFloat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.filter.ValueFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<Object> class0 = Object.class;
      StringToAny stringToAny0 = new StringToAny(class0, class0);
      ValueFilter valueFilter0 = ValueFilter.of("]h", (Function) stringToAny0);
      // Undeclared exception!
      try { 
        valueFilter0.apply("]h", "]h", class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Class cannot be cast to java.lang.String
         //
         verifyException("com.alibaba.fastjson2.function.impl.StringToAny", e);
      }
  }
}
