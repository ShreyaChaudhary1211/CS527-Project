/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 14:31:39 GMT 2024
 */

package com.alibaba.fastjson2.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson2.filter.ValueFilter;
import com.alibaba.fastjson2.function.impl.StringToAny;
import com.alibaba.fastjson2.function.impl.ToBigDecimal;
import com.alibaba.fastjson2.function.impl.ToBigInteger;
import com.alibaba.fastjson2.function.impl.ToString;
import java.util.HashMap;
import java.util.Map;
import java.util.function.Function;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EvosuiteValueFilter_ESTest extends EvosuiteValueFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ValueFilter valueFilter0 = ValueFilter.of("com.alibaba.fastjson2.JSONPath$FunctionSegment", (Map) null);
      ValueFilter valueFilter1 = ValueFilter.compose(valueFilter0, valueFilter0);
      ValueFilter valueFilter2 = ValueFilter.compose(valueFilter0, valueFilter1);
      assertFalse(valueFilter2.equals((Object)valueFilter1));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ToBigInteger toBigInteger0 = new ToBigInteger();
      ValueFilter valueFilter0 = ValueFilter.of("PS5loa.YRI;QW#)K-1q", (Function) toBigInteger0);
      Object object0 = valueFilter0.apply(toBigInteger0, "com.alibaba.fastjson2.util.GuavaSupport$ArrayListMultimapConvertFunction", (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ToBigInteger toBigInteger0 = new ToBigInteger();
      ValueFilter valueFilter0 = ValueFilter.of("PS5loa.YRI;QW#)K-1q", (Function) toBigInteger0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        valueFilter0.apply(object0, "PS5loa.YRI;QW#)K-1q", object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // can not cast to BigInteger class java.lang.Object
         //
         verifyException("com.alibaba.fastjson2.function.impl.ToBigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      ValueFilter valueFilter0 = ValueFilter.of((String) null, (Map) hashMap0);
      Object object0 = new Object();
      Object object1 = valueFilter0.apply((Object) null, (String) null, hashMap0);
      hashMap0.put(object0, object1);
      // Undeclared exception!
      try { 
        valueFilter0.apply(object1, (String) null, object1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ToBigDecimal toBigDecimal0 = new ToBigDecimal();
      ValueFilter valueFilter0 = ValueFilter.of("", (Function) toBigDecimal0);
      // Undeclared exception!
      try { 
        valueFilter0.apply("", "", "");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ValueFilter valueFilter0 = ValueFilter.compose((ValueFilter) null, (ValueFilter) null);
      // Undeclared exception!
      try { 
        valueFilter0.apply((Object) null, "F", valueFilter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.filter.ValueFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ValueFilter valueFilter0 = ValueFilter.of("com.alibaba.fastjson2.JSONPath$FunctionSegment", (Map) null);
      Class<Integer> class0 = Integer.class;
      StringToAny stringToAny0 = new StringToAny(class0, valueFilter0);
      ValueFilter valueFilter1 = ValueFilter.of("", (Function) stringToAny0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        valueFilter1.apply(object0, "", valueFilter0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.alibaba.fastjson2.filter.ValueFilter$$Lambda$63/640153847 cannot be cast to java.lang.String
         //
         verifyException("com.alibaba.fastjson2.function.impl.StringToAny", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ToString toString0 = new ToString();
      ValueFilter valueFilter0 = ValueFilter.of((Predicate<String>) null, (Function) toString0);
      assertNotNull(valueFilter0);
  }
}
