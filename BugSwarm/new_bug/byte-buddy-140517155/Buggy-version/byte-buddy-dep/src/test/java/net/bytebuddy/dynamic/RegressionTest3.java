import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray8 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        boolean boolean10 = explicit9.isResolved();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        java.lang.String str9 = explicit4.toString();
        byte[] byteArray10 = explicit4.resolve();
        boolean boolean11 = explicit4.isResolved();
        byte[] byteArray12 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray12);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        java.lang.String str12 = explicit4.toString();
        boolean boolean13 = explicit4.isResolved();
        byte[] byteArray14 = explicit4.resolve();
        boolean boolean15 = explicit4.isResolved();
        byte[] byteArray16 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray27 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray24, classFileLocator28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray40 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray37, classFileLocator41);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp43 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str44 = noOp43.toString();
        java.lang.String str45 = noOp43.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray46 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator28, noOp30, classFileLocator42, noOp43 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound47 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray46);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution49 = compound47.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = compound47.locate("");
        java.lang.String str52 = compound47.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = compound47.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound47);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = compound47.locate("ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertTrue("'" + noOp43 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp43.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray46);
        org.junit.Assert.assertNotNull(resolution49);
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertNotNull(resolution54);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(resolution57);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = classFileLocator11.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = illegal7.equals((java.lang.Object) resolution13);
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        boolean boolean16 = illegal1.isResolved();
        java.lang.String str17 = illegal1.toString();
        boolean boolean18 = illegal1.isResolved();
        java.lang.String str19 = illegal1.toString();
        boolean boolean20 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str17, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str19, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean7 = explicit4.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean10 = illegal9.isResolved();
        java.lang.String str11 = illegal9.toString();
        boolean boolean12 = illegal9.isResolved();
        boolean boolean13 = explicit4.equals((java.lang.Object) illegal9);
        byte[] byteArray14 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray14);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound31.locate("");
        boolean boolean36 = illegal1.equals((java.lang.Object) resolution35);
        byte[] byteArray39 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit40 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        byte[] byteArray41 = explicit40.resolve();
        java.lang.String str42 = explicit40.toString();
        boolean boolean43 = explicit40.isResolved();
        java.lang.Class<?> wildcardClass44 = explicit40.getClass();
        boolean boolean45 = illegal1.equals((java.lang.Object) wildcardClass44);
        boolean boolean46 = illegal1.isResolved();
        boolean boolean47 = illegal1.isResolved();
        boolean boolean48 = illegal1.isResolved();
        java.lang.String str49 = illegal1.toString();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str42, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str49, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        boolean boolean4 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray5 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp47 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean48 = explicit46.equals((java.lang.Object) noOp47);
        java.lang.String str49 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray41, (net.bytebuddy.dynamic.ClassFileLocator) noOp47);
        boolean boolean51 = compound29.equals((java.lang.Object) byteArray41);
        byte[] byteArray54 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit55 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray54);
        byte[] byteArray56 = explicit55.resolve();
        boolean boolean57 = explicit55.isResolved();
        boolean boolean59 = explicit55.equals((java.lang.Object) 10L);
        boolean boolean60 = explicit55.isResolved();
        boolean boolean61 = explicit55.isResolved();
        boolean boolean62 = explicit55.isResolved();
        java.lang.String str63 = explicit55.toString();
        boolean boolean65 = explicit55.equals((java.lang.Object) 0);
        boolean boolean66 = compound29.equals((java.lang.Object) 0);
        byte[] byteArray69 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit70 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray69);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp71 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean72 = explicit70.equals((java.lang.Object) noOp71);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution74 = noOp71.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution76 = noOp71.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution78 = noOp71.locate("ClassFileLocator.NoOp.INSTANCE");
        boolean boolean79 = compound29.equals((java.lang.Object) noOp71);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution81 = noOp71.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp47 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp47.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str63, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp71 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp71.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(resolution74);
        org.junit.Assert.assertNotNull(resolution76);
        org.junit.Assert.assertNotNull(resolution78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(resolution81);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        boolean boolean33 = compound31.equals((java.lang.Object) "hi!");
        java.lang.String str34 = compound31.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean37 = illegal1.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean38 = illegal1.isResolved();
        java.lang.String str39 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray40 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str39, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean3 = illegal1.equals((java.lang.Object) classFileLocator2);
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        boolean boolean38 = compound36.equals((java.lang.Object) "hi!");
        boolean boolean40 = compound36.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound36.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray48 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray48);
        byte[] byteArray52 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit53 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray52);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp54 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean55 = explicit53.equals((java.lang.Object) noOp54);
        java.lang.String str56 = noOp54.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray48, (net.bytebuddy.dynamic.ClassFileLocator) noOp54);
        boolean boolean58 = compound36.equals((java.lang.Object) byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray48);
        boolean boolean60 = illegal1.equals((java.lang.Object) byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray48);
        java.lang.String str62 = explicit61.toString();
        java.lang.String str63 = explicit61.toString();
        org.junit.Assert.assertNotNull(classFileLocator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp54 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp54.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str56, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str62, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str63, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray4 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator5 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = classFileLocator5.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean8 = illegal1.equals((java.lang.Object) resolution7);
        java.lang.String str9 = illegal1.toString();
        boolean boolean10 = illegal1.isResolved();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator5);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str9, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        byte[] byteArray20 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator21);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12);
        byte[] byteArray26 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit27 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray26);
        byte[] byteArray28 = explicit27.resolve();
        boolean boolean29 = explicit27.isResolved();
        boolean boolean31 = explicit27.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = classFileLocator32.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean35 = explicit27.equals((java.lang.Object) classFileLocator32);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12, classFileLocator32);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit37 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12);
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray48 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray45, classFileLocator49);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp51 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray58 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray61 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator62 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray58, classFileLocator62);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp64 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str65 = noOp64.toString();
        java.lang.String str66 = noOp64.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray67 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator49, noOp51, classFileLocator63, noOp64 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound68 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray67);
        boolean boolean70 = compound68.equals((java.lang.Object) "hi!");
        boolean boolean72 = compound68.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution74 = compound68.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str75 = compound68.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal77 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean78 = illegal77.isResolved();
        java.lang.String str79 = illegal77.toString();
        java.lang.String str80 = illegal77.toString();
        boolean boolean81 = compound68.equals((java.lang.Object) str80);
        java.lang.String str82 = compound68.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator83 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}", byteArray12, (net.bytebuddy.dynamic.ClassFileLocator) compound68);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray84 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound85 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray84);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution87 = compound85.locate(".class");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp88 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str89 = noOp88.toString();
        java.lang.String str90 = noOp88.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution92 = noOp88.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str93 = noOp88.toString();
        boolean boolean94 = compound85.equals((java.lang.Object) str93);
        java.lang.String str95 = compound85.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator96 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}", byteArray12, (net.bytebuddy.dynamic.ClassFileLocator) compound85);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution98 = compound85.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + noOp51 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp51.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator62);
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertTrue("'" + noOp64 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp64.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str65, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str66, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(resolution74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str79, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str80, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(classFileLocator83);
        org.junit.Assert.assertNotNull(classFileLocatorArray84);
        org.junit.Assert.assertNotNull(resolution87);
        org.junit.Assert.assertTrue("'" + noOp88 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp88.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str89, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str90, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str93, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str95, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(classFileLocator96);
        org.junit.Assert.assertNotNull(resolution98);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp11 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean12 = explicit10.equals((java.lang.Object) noOp11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp11.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp11.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp11.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray3, (net.bytebuddy.dynamic.ClassFileLocator) noOp11);
        java.lang.String str20 = noOp11.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp11.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = noOp11.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution26 = noOp11.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp11 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp11.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertNotNull(resolution26);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        byte[] byteArray12 = explicit3.resolve();
        boolean boolean13 = explicit3.isResolved();
        byte[] byteArray14 = explicit3.resolve();
        java.lang.Object obj15 = null;
        boolean boolean16 = explicit3.equals(obj15);
        byte[] byteArray17 = explicit3.resolve();
        byte[] byteArray18 = explicit3.resolve();
        byte[] byteArray19 = explicit3.resolve();
        byte[] byteArray20 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.Class<?> wildcardClass9 = explicit3.getClass();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str7 = illegal6.toString();
        byte[] byteArray10 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        byte[] byteArray12 = explicit11.resolve();
        boolean boolean13 = explicit11.isResolved();
        boolean boolean15 = explicit11.equals((java.lang.Object) 10L);
        java.lang.String str16 = explicit11.toString();
        byte[] byteArray17 = explicit11.resolve();
        boolean boolean18 = illegal6.equals((java.lang.Object) byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray17);
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray33 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray33);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray30, classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp36 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray46 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator48 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray43, classFileLocator47);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp49 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str50 = noOp49.toString();
        java.lang.String str51 = noOp49.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray52 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator34, noOp36, classFileLocator48, noOp49 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound53 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray52);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound53.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray56 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator23, compound53 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound57 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray56);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray17, (net.bytebuddy.dynamic.ClassFileLocator) compound57);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator60 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray17);
        byte[] byteArray64 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray64);
        byte[] byteArray68 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit69 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray68);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp70 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean71 = explicit69.equals((java.lang.Object) noOp70);
        java.lang.String str72 = noOp70.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray64, (net.bytebuddy.dynamic.ClassFileLocator) noOp70);
        java.lang.String str74 = noOp70.toString();
        java.lang.String str75 = noOp70.toString();
        java.lang.String str76 = noOp70.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution78 = noOp70.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator79 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}", byteArray17, (net.bytebuddy.dynamic.ClassFileLocator) noOp70);
        java.lang.String str80 = noOp70.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str7, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertTrue("'" + noOp36 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp36.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertNotNull(classFileLocator48);
        org.junit.Assert.assertTrue("'" + noOp49 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp49.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str50, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str51, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray52);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertNotNull(classFileLocatorArray56);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(classFileLocator60);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp70 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp70.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str72, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str74, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str75, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str76, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution78);
        org.junit.Assert.assertNotNull(classFileLocator79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str80, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        java.lang.String str4 = illegal1.toString();
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean12 = explicit9.equals((java.lang.Object) (short) 0);
        byte[] byteArray13 = explicit9.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray22 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray22);
        boolean boolean25 = explicit24.isResolved();
        byte[] byteArray26 = explicit24.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray13, classFileLocator28);
        boolean boolean30 = illegal1.equals((java.lang.Object) classFileLocator28);
        java.lang.String str31 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray32 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str31, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean8 = explicit5.equals((java.lang.Object) (short) 0);
        byte[] byteArray9 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        byte[] byteArray16 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray18 = explicit17.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        boolean boolean21 = explicit20.isResolved();
        byte[] byteArray22 = explicit20.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray9, classFileLocator24);
        byte[] byteArray30 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit31 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray30);
        byte[] byteArray32 = explicit31.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}", byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray9, classFileLocator34);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(classFileLocator35);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str8 = noOp4.toString();
        java.lang.String str9 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str8, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str9, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str13 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp12);
        java.lang.String str17 = noOp12.toString();
        java.lang.String str18 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str21 = noOp12.toString();
        java.lang.String str22 = noOp12.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str18, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str22, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        byte[] byteArray5 = explicit3.resolve();
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean11 = explicit9.isResolved();
        boolean boolean13 = explicit9.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit9.isResolved();
        boolean boolean15 = explicit9.isResolved();
        boolean boolean16 = explicit9.isResolved();
        byte[] byteArray17 = explicit9.resolve();
        boolean boolean18 = explicit3.equals((java.lang.Object) explicit9);
        boolean boolean19 = explicit9.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray12 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        boolean boolean14 = explicit13.isResolved();
        byte[] byteArray15 = explicit13.resolve();
        boolean boolean16 = explicit13.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        boolean boolean12 = explicit3.isResolved();
        boolean boolean13 = explicit3.isResolved();
        java.lang.String str14 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("");
        java.lang.String str38 = compound29.toString();
        java.lang.String str39 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        boolean boolean43 = compound29.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray46 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray46);
        boolean boolean48 = explicit47.isResolved();
        byte[] byteArray49 = explicit47.resolve();
        boolean boolean50 = explicit47.isResolved();
        boolean boolean51 = compound29.equals((java.lang.Object) explicit47);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("");
        java.lang.String str34 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound2.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.Object obj5 = null;
        boolean boolean6 = compound2.equals(obj5);
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        boolean boolean14 = explicit5.isResolved();
        boolean boolean15 = illegal1.equals((java.lang.Object) explicit5);
        boolean boolean16 = explicit5.isResolved();
        byte[] byteArray19 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        byte[] byteArray21 = explicit20.resolve();
        boolean boolean22 = explicit20.isResolved();
        boolean boolean24 = explicit20.equals((java.lang.Object) 10L);
        java.lang.String str25 = explicit20.toString();
        java.lang.String str26 = explicit20.toString();
        byte[] byteArray27 = explicit20.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit28 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray27);
        boolean boolean29 = explicit5.equals((java.lang.Object) byteArray27);
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray39 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray36, classFileLocator40);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp42 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray52 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray52);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray49, classFileLocator53);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp55 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str56 = noOp55.toString();
        java.lang.String str57 = noOp55.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray58 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator40, noOp42, classFileLocator54, noOp55 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound59 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray58);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp60 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str61 = noOp60.toString();
        java.lang.String str62 = noOp60.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution64 = noOp60.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean65 = compound59.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal67 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean68 = compound59.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution70 = compound59.locate("");
        boolean boolean71 = explicit5.equals((java.lang.Object) compound59);
        byte[] byteArray74 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit75 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray74);
        byte[] byteArray76 = explicit75.resolve();
        boolean boolean77 = explicit75.isResolved();
        java.lang.String str78 = explicit75.toString();
        byte[] byteArray79 = explicit75.resolve();
        boolean boolean80 = compound59.equals((java.lang.Object) byteArray79);
        byte[] byteArray83 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit84 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray83);
        byte[] byteArray85 = explicit84.resolve();
        boolean boolean86 = explicit84.isResolved();
        boolean boolean88 = explicit84.equals((java.lang.Object) 10L);
        boolean boolean89 = explicit84.isResolved();
        java.lang.String str90 = explicit84.toString();
        byte[] byteArray91 = explicit84.resolve();
        java.lang.String str92 = explicit84.toString();
        boolean boolean93 = explicit84.isResolved();
        byte[] byteArray94 = explicit84.resolve();
        byte[] byteArray95 = explicit84.resolve();
        byte[] byteArray96 = explicit84.resolve();
        boolean boolean97 = compound59.equals((java.lang.Object) explicit84);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str25, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str26, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertTrue("'" + noOp42 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp42.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertTrue("'" + noOp55 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp55.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str56, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str57, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray58);
        org.junit.Assert.assertTrue("'" + noOp60 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp60.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str61, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str62, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(resolution70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str78, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str90, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str92, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(byteArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray94), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray95), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray96), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        java.lang.String str5 = explicit3.toString();
        boolean boolean6 = explicit3.isResolved();
        java.lang.String str7 = explicit3.toString();
        byte[] byteArray8 = explicit3.resolve();
        boolean boolean9 = explicit3.isResolved();
        byte[] byteArray10 = explicit3.resolve();
        byte[] byteArray11 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str5, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str7, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        java.lang.String str6 = explicit4.toString();
        boolean boolean7 = explicit4.isResolved();
        java.lang.String str8 = explicit4.toString();
        byte[] byteArray9 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str6, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.NoOp.INSTANCE");
        boolean boolean2 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str2 = illegal1.toString();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str31 = noOp30.toString();
        java.lang.String str32 = noOp30.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = noOp30.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean35 = compound29.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal37 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean38 = compound29.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound29.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution42);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean6 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean9 = illegal8.isResolved();
        java.lang.String str10 = illegal8.toString();
        boolean boolean11 = illegal8.isResolved();
        boolean boolean12 = explicit3.equals((java.lang.Object) illegal8);
        byte[] byteArray13 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray15 = explicit14.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str10, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        byte[] byteArray20 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator21);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12);
        byte[] byteArray26 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit27 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray26);
        byte[] byteArray28 = explicit27.resolve();
        boolean boolean29 = explicit27.isResolved();
        boolean boolean31 = explicit27.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = classFileLocator32.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean35 = explicit27.equals((java.lang.Object) classFileLocator32);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12, classFileLocator32);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit37 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12);
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray48 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray45, classFileLocator49);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp51 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray58 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray61 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator62 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray58, classFileLocator62);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp64 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str65 = noOp64.toString();
        java.lang.String str66 = noOp64.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray67 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator49, noOp51, classFileLocator63, noOp64 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound68 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray67);
        boolean boolean70 = compound68.equals((java.lang.Object) "hi!");
        boolean boolean72 = compound68.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution74 = compound68.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str75 = compound68.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal77 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean78 = illegal77.isResolved();
        java.lang.String str79 = illegal77.toString();
        java.lang.String str80 = illegal77.toString();
        boolean boolean81 = compound68.equals((java.lang.Object) str80);
        java.lang.String str82 = compound68.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator83 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}", byteArray12, (net.bytebuddy.dynamic.ClassFileLocator) compound68);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray84 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound85 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray84);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution87 = compound85.locate(".class");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp88 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str89 = noOp88.toString();
        java.lang.String str90 = noOp88.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution92 = noOp88.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str93 = noOp88.toString();
        boolean boolean94 = compound85.equals((java.lang.Object) str93);
        java.lang.String str95 = compound85.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator96 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}", byteArray12, (net.bytebuddy.dynamic.ClassFileLocator) compound85);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution98 = compound85.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + noOp51 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp51.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator62);
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertTrue("'" + noOp64 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp64.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str65, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str66, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(resolution74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str79, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str80, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(classFileLocator83);
        org.junit.Assert.assertNotNull(classFileLocatorArray84);
        org.junit.Assert.assertNotNull(resolution87);
        org.junit.Assert.assertTrue("'" + noOp88 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp88.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str89, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str90, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str93, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str95, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(classFileLocator96);
        org.junit.Assert.assertNotNull(resolution98);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        byte[] byteArray4 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator5 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        byte[] byteArray11 = explicit10.resolve();
        boolean boolean12 = explicit10.isResolved();
        boolean boolean14 = explicit10.equals((java.lang.Object) 10L);
        boolean boolean15 = explicit10.isResolved();
        java.lang.String str16 = explicit10.toString();
        byte[] byteArray17 = explicit10.resolve();
        java.lang.String str18 = explicit10.toString();
        boolean boolean19 = explicit6.equals((java.lang.Object) str18);
        byte[] byteArray20 = explicit6.resolve();
        byte[] byteArray26 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit27 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray26);
        byte[] byteArray28 = explicit27.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        byte[] byteArray34 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit35 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray34);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp36 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean37 = explicit35.equals((java.lang.Object) noOp36);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = noOp36.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = noOp36.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str42 = noOp36.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = noOp36.locate("");
        boolean boolean45 = compound31.equals((java.lang.Object) noOp36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray28, (net.bytebuddy.dynamic.ClassFileLocator) noOp36);
        byte[] byteArray53 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray56 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray53, classFileLocator57);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp59 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray69 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray69);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray66, classFileLocator70);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp72 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str73 = noOp72.toString();
        java.lang.String str74 = noOp72.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray75 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator57, noOp59, classFileLocator71, noOp72 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound76 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray75);
        boolean boolean78 = compound76.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator79 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray28, (net.bytebuddy.dynamic.ClassFileLocator) compound76);
        boolean boolean80 = explicit6.equals((java.lang.Object) classFileLocator79);
        byte[] byteArray81 = explicit6.resolve();
        byte[] byteArray82 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray83 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound84 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray83);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound85 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray83);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound86 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray83);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator87 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean88 = compound86.equals((java.lang.Object) classFileLocator87);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator89 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}", byteArray82, (net.bytebuddy.dynamic.ClassFileLocator) compound86);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator90 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray82);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit91 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray82);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str18, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp36 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp36.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertTrue("'" + noOp59 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp59.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator70);
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertTrue("'" + noOp72 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp72.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str73, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str74, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(classFileLocator79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[100]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray83);
        org.junit.Assert.assertNotNull(classFileLocator87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(classFileLocator89);
        org.junit.Assert.assertNotNull(classFileLocator90);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        java.lang.String str11 = illegal1.toString();
        boolean boolean12 = illegal1.isResolved();
        boolean boolean13 = illegal1.isResolved();
        boolean boolean14 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray15 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        java.lang.String str13 = explicit12.toString();
        java.lang.String str14 = explicit12.toString();
        java.lang.String str15 = explicit12.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str10 = noOp4.toString();
        java.lang.String str11 = noOp4.toString();
        java.lang.String str12 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        java.lang.String str4 = illegal1.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray5 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray5);
        java.lang.String str7 = compound6.toString();
        java.lang.String str8 = compound6.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = compound6.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = compound6.locate("hi!");
        boolean boolean13 = illegal1.equals((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(classFileLocatorArray5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str7, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str8, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        byte[] byteArray8 = explicit3.resolve();
        java.lang.String str9 = explicit3.toString();
        java.lang.String str10 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str34 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal42 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str43 = illegal42.toString();
        byte[] byteArray46 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray46);
        byte[] byteArray48 = explicit47.resolve();
        boolean boolean49 = explicit47.isResolved();
        boolean boolean51 = explicit47.equals((java.lang.Object) 10L);
        java.lang.String str52 = explicit47.toString();
        byte[] byteArray53 = explicit47.resolve();
        boolean boolean54 = illegal42.equals((java.lang.Object) byteArray53);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}", byteArray53);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray53);
        boolean boolean57 = compound29.equals((java.lang.Object) classFileLocator56);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str43, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str52, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray23, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str30 = noOp29.toString();
        java.lang.String str31 = noOp29.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray32 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator14, noOp16, classFileLocator28, noOp29 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound33 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray32);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound33.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray36 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator3, compound33 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound37 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound38 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound39 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound39.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str42 = compound39.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound39.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str30, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray32);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(classFileLocatorArray36);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(resolution44);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        byte[] byteArray5 = explicit3.resolve();
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean11 = explicit9.isResolved();
        boolean boolean13 = explicit9.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit9.isResolved();
        boolean boolean15 = explicit9.isResolved();
        boolean boolean16 = explicit9.isResolved();
        byte[] byteArray17 = explicit9.resolve();
        boolean boolean18 = explicit3.equals((java.lang.Object) explicit9);
        boolean boolean19 = explicit3.isResolved();
        boolean boolean20 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertNotNull(resolution12);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        boolean boolean4 = explicit3.isResolved();
        java.lang.String str5 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str5, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray5 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray39 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator6, compound36 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound41 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound42 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        boolean boolean43 = illegal1.equals((java.lang.Object) compound42);
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray53 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray53);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray50, classFileLocator54);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp56 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray63 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray66 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray66);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray63, classFileLocator67);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp69 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str70 = noOp69.toString();
        java.lang.String str71 = noOp69.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray72 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator54, noOp56, classFileLocator68, noOp69 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound73 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray72);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution75 = compound73.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution77 = compound73.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean78 = illegal1.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName=''}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray79 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Compound{classFileLocator=[]}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(classFileLocatorArray39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertTrue("'" + noOp56 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp56.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertTrue("'" + noOp69 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp69.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str70, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str71, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray72);
        org.junit.Assert.assertNotNull(resolution75);
        org.junit.Assert.assertNotNull(resolution77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        java.lang.String str11 = explicit6.toString();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit32 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray30);
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray42 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray42);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray39, classFileLocator43);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp45 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray55 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray55);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray52, classFileLocator56);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp58 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str59 = noOp58.toString();
        java.lang.String str60 = noOp58.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray61 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator43, noOp45, classFileLocator57, noOp58 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound62 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray61);
        boolean boolean64 = compound62.equals((java.lang.Object) "hi!");
        java.lang.String str65 = compound62.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray30, (net.bytebuddy.dynamic.ClassFileLocator) compound62);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21, (net.bytebuddy.dynamic.ClassFileLocator) compound62);
        boolean boolean68 = explicit6.equals((java.lang.Object) "hi!");
        boolean boolean69 = illegal1.equals((java.lang.Object) explicit6);
        byte[] byteArray70 = explicit6.resolve();
        boolean boolean71 = explicit6.isResolved();
        byte[] byteArray75 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator76 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray75);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit77 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray75);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit78 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray75);
        byte[] byteArray81 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit82 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray81);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp83 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean84 = explicit82.equals((java.lang.Object) noOp83);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution86 = noOp83.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution88 = noOp83.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution90 = noOp83.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator91 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray75, (net.bytebuddy.dynamic.ClassFileLocator) noOp83);
        java.lang.String str92 = noOp83.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution94 = noOp83.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution96 = noOp83.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution98 = noOp83.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        boolean boolean99 = explicit6.equals((java.lang.Object) noOp83);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertTrue("'" + noOp45 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp45.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertTrue("'" + noOp58 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp58.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str59, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str60, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator76);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp83 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp83.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(resolution86);
        org.junit.Assert.assertNotNull(resolution88);
        org.junit.Assert.assertNotNull(resolution90);
        org.junit.Assert.assertNotNull(classFileLocator91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str92, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution94);
        org.junit.Assert.assertNotNull(resolution96);
        org.junit.Assert.assertNotNull(resolution98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str2 = illegal1.toString();
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        byte[] byteArray18 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator19);
        boolean boolean21 = illegal1.equals((java.lang.Object) "");
        boolean boolean22 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean25 = illegal24.isResolved();
        boolean boolean26 = illegal24.isResolved();
        boolean boolean27 = illegal24.isResolved();
        boolean boolean28 = illegal1.equals((java.lang.Object) illegal24);
        java.lang.String str29 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray30 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}" + "'", str29, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str34 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray37 = resolution36.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution36);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        byte[] byteArray18 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10);
        byte[] byteArray24 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit25 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray24);
        byte[] byteArray26 = explicit25.resolve();
        boolean boolean27 = explicit25.isResolved();
        boolean boolean29 = explicit25.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = classFileLocator30.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean33 = explicit25.equals((java.lang.Object) classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit35 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray36 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound37 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        byte[] byteArray40 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp42 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean43 = explicit41.equals((java.lang.Object) noOp42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution45 = noOp42.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = noOp42.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str48 = noOp42.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = noOp42.locate("");
        boolean boolean51 = compound37.equals((java.lang.Object) noOp42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = noOp42.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = noOp42.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}", byteArray10, (net.bytebuddy.dynamic.ClassFileLocator) noOp42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution58 = classFileLocator56.locate("");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(resolution32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(classFileLocatorArray36);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp42 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp42.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(resolution45);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(resolution58);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        boolean boolean4 = explicit3.isResolved();
        boolean boolean5 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        boolean boolean14 = explicit5.isResolved();
        boolean boolean15 = illegal1.equals((java.lang.Object) explicit5);
        boolean boolean16 = explicit5.isResolved();
        java.lang.String str17 = explicit5.toString();
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray22 = explicit21.resolve();
        boolean boolean23 = explicit21.isResolved();
        boolean boolean25 = explicit21.equals((java.lang.Object) 10L);
        boolean boolean26 = explicit21.isResolved();
        java.lang.String str27 = explicit21.toString();
        boolean boolean28 = explicit21.isResolved();
        boolean boolean29 = explicit21.isResolved();
        boolean boolean30 = explicit5.equals((java.lang.Object) boolean29);
        boolean boolean31 = explicit5.isResolved();
        byte[] byteArray32 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp33 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str34 = noOp33.toString();
        java.lang.String str35 = noOp33.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = noOp33.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str38 = noOp33.toString();
        java.lang.String str39 = noOp33.toString();
        java.lang.String str40 = noOp33.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = noOp33.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = noOp33.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution46 = noOp33.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        boolean boolean47 = resolution46.isResolved();
        boolean boolean48 = explicit5.equals((java.lang.Object) boolean47);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str17, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str27, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp33 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp33.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str35, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str38, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str39, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str40, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertNotNull(resolution46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp5 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean6 = explicit4.equals((java.lang.Object) noOp5);
        java.lang.String str7 = explicit4.toString();
        boolean boolean8 = explicit4.isResolved();
        byte[] byteArray9 = explicit4.resolve();
        byte[] byteArray16 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, classFileLocator20);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp22 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray32 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray29, classFileLocator33);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp35 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str36 = noOp35.toString();
        java.lang.String str37 = noOp35.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray38 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator20, noOp22, classFileLocator34, noOp35 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound39 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound39.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, (net.bytebuddy.dynamic.ClassFileLocator) compound39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = classFileLocator42.locate("ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp5 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp5.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str7, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertTrue("'" + noOp22 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp22.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertTrue("'" + noOp35 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp35.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str37, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray38);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(resolution44);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        boolean boolean5 = explicit4.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean8 = illegal7.isResolved();
        java.lang.String str9 = illegal7.toString();
        boolean boolean10 = illegal7.isResolved();
        boolean boolean11 = illegal7.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = classFileLocator17.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean20 = illegal13.equals((java.lang.Object) resolution19);
        boolean boolean21 = illegal7.equals((java.lang.Object) boolean20);
        boolean boolean22 = illegal7.isResolved();
        boolean boolean23 = explicit4.equals((java.lang.Object) boolean22);
        byte[] byteArray24 = explicit4.resolve();
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        byte[] byteArray32 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit33 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp34 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean35 = explicit33.equals((java.lang.Object) noOp34);
        java.lang.String str36 = noOp34.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray28, (net.bytebuddy.dynamic.ClassFileLocator) noOp34);
        java.lang.String str38 = noOp34.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = noOp34.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str41 = noOp34.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray24, (net.bytebuddy.dynamic.ClassFileLocator) noOp34);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str9, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp34 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp34.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str38, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str41, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator42);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        boolean boolean14 = explicit5.isResolved();
        boolean boolean15 = illegal1.equals((java.lang.Object) explicit5);
        boolean boolean16 = explicit5.isResolved();
        java.lang.String str17 = explicit5.toString();
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray22 = explicit21.resolve();
        boolean boolean23 = explicit21.isResolved();
        boolean boolean25 = explicit21.equals((java.lang.Object) 10L);
        boolean boolean26 = explicit21.isResolved();
        java.lang.String str27 = explicit21.toString();
        boolean boolean28 = explicit21.isResolved();
        boolean boolean29 = explicit21.isResolved();
        boolean boolean30 = explicit5.equals((java.lang.Object) boolean29);
        boolean boolean31 = explicit5.isResolved();
        byte[] byteArray32 = explicit5.resolve();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str17, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str27, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, 100]");
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str6 = compound5.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = compound5.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str6, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution8);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        java.lang.String str4 = illegal1.toString();
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean12 = explicit9.equals((java.lang.Object) (short) 0);
        byte[] byteArray13 = explicit9.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray22 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray22);
        boolean boolean25 = explicit24.isResolved();
        byte[] byteArray26 = explicit24.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray13, classFileLocator28);
        boolean boolean30 = illegal1.equals((java.lang.Object) classFileLocator28);
        java.lang.Object obj31 = null;
        boolean boolean32 = illegal1.equals(obj31);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray33 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray10);
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray23, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray39 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray36, classFileLocator40);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp42 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str43 = noOp42.toString();
        java.lang.String str44 = noOp42.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray45 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator27, noOp29, classFileLocator41, noOp42 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound46 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray45);
        boolean boolean48 = compound46.equals((java.lang.Object) "hi!");
        boolean boolean50 = compound46.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound46.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = compound46.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray58 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray58);
        byte[] byteArray62 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit63 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray62);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp64 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean65 = explicit63.equals((java.lang.Object) noOp64);
        java.lang.String str66 = noOp64.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray58, (net.bytebuddy.dynamic.ClassFileLocator) noOp64);
        boolean boolean68 = compound46.equals((java.lang.Object) byteArray58);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution70 = compound46.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution72 = compound46.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray10, (net.bytebuddy.dynamic.ClassFileLocator) compound46);
        byte[] byteArray76 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit77 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray76);
        byte[] byteArray78 = explicit77.resolve();
        boolean boolean79 = explicit77.isResolved();
        boolean boolean81 = explicit77.equals((java.lang.Object) 10L);
        boolean boolean82 = explicit77.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray83 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound84 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray83);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound85 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray83);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution87 = compound85.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean88 = explicit77.equals((java.lang.Object) compound85);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator89 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray10, (net.bytebuddy.dynamic.ClassFileLocator) compound85);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator90 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}", byteArray10);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertTrue("'" + noOp42 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp42.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(resolution54);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp64 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp64.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str66, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(resolution70);
        org.junit.Assert.assertNotNull(resolution72);
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(classFileLocatorArray83);
        org.junit.Assert.assertNotNull(resolution87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(classFileLocator89);
        org.junit.Assert.assertNotNull(classFileLocator90);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str12 = noOp0.toString();
        java.lang.String str13 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        java.lang.String str18 = noOp0.toString();
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str18, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound31.locate("");
        boolean boolean36 = illegal1.equals((java.lang.Object) resolution35);
        byte[] byteArray39 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit40 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        byte[] byteArray41 = explicit40.resolve();
        java.lang.String str42 = explicit40.toString();
        boolean boolean43 = explicit40.isResolved();
        java.lang.Class<?> wildcardClass44 = explicit40.getClass();
        boolean boolean45 = illegal1.equals((java.lang.Object) wildcardClass44);
        boolean boolean46 = illegal1.isResolved();
        boolean boolean47 = illegal1.isResolved();
        boolean boolean48 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray49 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str42, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str36 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal38 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean39 = illegal38.isResolved();
        java.lang.String str40 = illegal38.toString();
        java.lang.String str41 = illegal38.toString();
        boolean boolean42 = compound29.equals((java.lang.Object) str41);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal44 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean45 = compound29.equals((java.lang.Object) ".class");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str40, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str41, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(resolution47);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        boolean boolean11 = explicit4.isResolved();
        java.lang.Object obj12 = null;
        boolean boolean13 = explicit4.equals(obj12);
        byte[] byteArray14 = explicit4.resolve();
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean20 = explicit18.equals((java.lang.Object) noOp19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp19.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = noOp19.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray14, (net.bytebuddy.dynamic.ClassFileLocator) noOp19);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertNotNull(classFileLocator25);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp11 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean12 = explicit10.equals((java.lang.Object) noOp11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp11.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp11.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp11.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray3, (net.bytebuddy.dynamic.ClassFileLocator) noOp11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp11.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp11.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        java.lang.String str24 = noOp11.toString();
        java.lang.Class<?> wildcardClass25 = noOp11.getClass();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp11 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp11.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str24, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str3 = compound2.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray4 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        boolean boolean6 = compound2.equals((java.lang.Object) classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = compound2.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray9 = resolution8.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str3, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(classFileLocatorArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(resolution8);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp4.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        java.lang.String str15 = noOp4.toString();
        java.lang.String str16 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str21 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution23);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray8);
        byte[] byteArray14 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        byte[] byteArray16 = explicit15.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray16);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        byte[] byteArray33 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray33);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray16, classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray8, classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = classFileLocator36.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.Class<?> wildcardClass40 = resolution39.getClass();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        java.lang.String str4 = illegal1.toString();
        java.lang.String str5 = illegal1.toString();
        boolean boolean6 = illegal1.isResolved();
        boolean boolean7 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str5, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp18 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str32 = noOp31.toString();
        java.lang.String str33 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray34 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator16, noOp18, classFileLocator30, noOp31 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray34);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound35.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound35.locate("");
        boolean boolean40 = explicit5.equals((java.lang.Object) compound35);
        byte[] byteArray41 = explicit5.resolve();
        byte[] byteArray42 = explicit5.resolve();
        boolean boolean43 = explicit5.isResolved();
        java.lang.String str44 = explicit5.toString();
        byte[] byteArray45 = explicit5.resolve();
        java.lang.Class<?> wildcardClass46 = byteArray45.getClass();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertTrue("'" + noOp18 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp18.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray34);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str44, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[100]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        byte[] byteArray13 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp15 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean16 = explicit14.equals((java.lang.Object) noOp15);
        java.lang.String str17 = noOp15.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp15.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp15.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp15.locate("ClassFileLocator.NoOp.INSTANCE");
        boolean boolean24 = illegal7.equals((java.lang.Object) "ClassFileLocator.NoOp.INSTANCE");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray25 = illegal7.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for hi!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp15 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp15.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp44 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str45 = noOp44.toString();
        java.lang.String str46 = noOp44.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray47 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator29, noOp31, classFileLocator43, noOp44 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound48 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray47);
        boolean boolean50 = compound48.equals((java.lang.Object) "hi!");
        java.lang.String str51 = compound48.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray7, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit54 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        java.lang.String str55 = explicit54.toString();
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + noOp44 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp44.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}" + "'", str55, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean6 = explicit3.equals((java.lang.Object) (short) 0);
        byte[] byteArray7 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str10 = illegal9.toString();
        java.lang.String str11 = illegal9.toString();
        boolean boolean12 = explicit3.equals((java.lang.Object) illegal9);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp13 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str14 = noOp13.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp13.locate("ClassFileLocator.NoOp.INSTANCE");
        boolean boolean17 = illegal9.equals((java.lang.Object) resolution16);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray18 = illegal9.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str10, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + noOp13 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp13.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        boolean boolean10 = explicit9.isResolved();
        byte[] byteArray11 = explicit9.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        java.lang.String str9 = explicit4.toString();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray13 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound14 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean20 = explicit18.equals((java.lang.Object) noOp19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp19.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = noOp19.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str25 = noOp19.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution27 = noOp19.locate("");
        boolean boolean28 = compound14.equals((java.lang.Object) noOp19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp19);
        java.lang.String str30 = noOp19.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = noOp19.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str25, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str30, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution32);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray13 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray18 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray13, classFileLocator19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6, classFileLocator20);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str36 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        byte[] byteArray47 = explicit46.resolve();
        boolean boolean48 = explicit46.isResolved();
        boolean boolean50 = explicit46.equals((java.lang.Object) 10L);
        boolean boolean51 = explicit46.isResolved();
        java.lang.String str52 = explicit46.toString();
        boolean boolean53 = explicit46.isResolved();
        byte[] byteArray54 = explicit46.resolve();
        boolean boolean55 = compound29.equals((java.lang.Object) explicit46);
        boolean boolean56 = explicit46.isResolved();
        java.lang.String str57 = explicit46.toString();
        byte[] byteArray58 = explicit46.resolve();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str52, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str57, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, 100]");
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        java.lang.String str11 = illegal1.toString();
        boolean boolean12 = illegal1.isResolved();
        boolean boolean13 = illegal1.isResolved();
        boolean boolean14 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray23, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray39 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray36, classFileLocator40);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp42 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str43 = noOp42.toString();
        java.lang.String str44 = noOp42.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray45 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator27, noOp29, classFileLocator41, noOp42 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound46 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray45);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution48 = compound46.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound46.locate("");
        boolean boolean51 = illegal16.equals((java.lang.Object) resolution50);
        java.lang.String str52 = illegal16.toString();
        byte[] byteArray55 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit56 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray55);
        byte[] byteArray57 = explicit56.resolve();
        boolean boolean58 = explicit56.isResolved();
        boolean boolean60 = explicit56.equals((java.lang.Object) 10L);
        boolean boolean61 = explicit56.isResolved();
        java.lang.String str62 = explicit56.toString();
        byte[] byteArray63 = explicit56.resolve();
        boolean boolean64 = illegal16.equals((java.lang.Object) byteArray63);
        byte[] byteArray67 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit68 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray67);
        byte[] byteArray69 = explicit68.resolve();
        boolean boolean70 = explicit68.isResolved();
        boolean boolean72 = explicit68.equals((java.lang.Object) 10L);
        boolean boolean73 = explicit68.isResolved();
        java.lang.String str74 = explicit68.toString();
        boolean boolean75 = explicit68.isResolved();
        boolean boolean76 = explicit68.isResolved();
        byte[] byteArray77 = explicit68.resolve();
        boolean boolean78 = illegal16.equals((java.lang.Object) explicit68);
        boolean boolean79 = illegal1.equals((java.lang.Object) explicit68);
        boolean boolean80 = explicit68.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertTrue("'" + noOp42 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp42.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray45);
        org.junit.Assert.assertNotNull(resolution48);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str52, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str62, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str74, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str36 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(resolution44);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.ClassLoader classLoader34 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.WeaklyReferenced.of(classLoader34);
        boolean boolean36 = compound29.equals((java.lang.Object) classLoader34);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(resolution38);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str10 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound2.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution6 = compound2.locate("hi!");
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        boolean boolean38 = compound36.equals((java.lang.Object) "hi!");
        boolean boolean40 = compound36.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound36.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound36.locate("");
        java.lang.String str45 = compound36.toString();
        java.lang.String str46 = compound36.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution48 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        boolean boolean49 = compound2.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str50 = compound2.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound2.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = compound2.locate("");
        java.lang.String str55 = compound2.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertNotNull(resolution6);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertNotNull(resolution48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str50, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(resolution54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str55, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str32 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution38);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        boolean boolean20 = explicit18.equals((java.lang.Object) 1.0d);
        byte[] byteArray23 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        byte[] byteArray25 = explicit24.resolve();
        boolean boolean26 = explicit24.isResolved();
        boolean boolean28 = explicit24.equals((java.lang.Object) 10L);
        java.lang.String str29 = explicit24.toString();
        byte[] byteArray30 = explicit24.resolve();
        java.lang.String str31 = explicit24.toString();
        boolean boolean32 = explicit18.equals((java.lang.Object) str31);
        byte[] byteArray33 = explicit18.resolve();
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str29, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str31, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, 10, -1, -1, 1]");
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        boolean boolean3 = illegal1.isResolved();
        boolean boolean4 = illegal1.isResolved();
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean12 = explicit8.equals((java.lang.Object) 10L);
        boolean boolean13 = explicit8.isResolved();
        boolean boolean14 = explicit8.isResolved();
        boolean boolean15 = explicit8.isResolved();
        java.lang.String str16 = explicit8.toString();
        boolean boolean18 = explicit8.equals((java.lang.Object) 0);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray19 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound20 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound21 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound22 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound23 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound24 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound25 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound26 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound27 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray19);
        boolean boolean28 = explicit8.equals((java.lang.Object) classFileLocatorArray19);
        boolean boolean29 = illegal1.equals((java.lang.Object) classFileLocatorArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray19);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classFileLocatorArray19);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp47 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean48 = explicit46.equals((java.lang.Object) noOp47);
        java.lang.String str49 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray41, (net.bytebuddy.dynamic.ClassFileLocator) noOp47);
        boolean boolean51 = compound29.equals((java.lang.Object) byteArray41);
        byte[] byteArray54 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit55 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray54);
        byte[] byteArray56 = explicit55.resolve();
        boolean boolean57 = explicit55.isResolved();
        boolean boolean59 = explicit55.equals((java.lang.Object) 10L);
        boolean boolean60 = explicit55.isResolved();
        boolean boolean61 = explicit55.isResolved();
        boolean boolean62 = explicit55.isResolved();
        java.lang.String str63 = explicit55.toString();
        boolean boolean65 = explicit55.equals((java.lang.Object) 0);
        boolean boolean66 = compound29.equals((java.lang.Object) 0);
        byte[] byteArray69 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit70 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray69);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp71 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean72 = explicit70.equals((java.lang.Object) noOp71);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution74 = noOp71.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution76 = noOp71.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution78 = noOp71.locate("ClassFileLocator.NoOp.INSTANCE");
        boolean boolean79 = compound29.equals((java.lang.Object) noOp71);
        java.lang.String str80 = noOp71.toString();
        java.lang.String str81 = noOp71.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution83 = noOp71.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp47 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp47.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str63, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp71 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp71.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(resolution74);
        org.junit.Assert.assertNotNull(resolution76);
        org.junit.Assert.assertNotNull(resolution78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str80, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str81, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution83);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        boolean boolean14 = explicit5.isResolved();
        boolean boolean15 = illegal1.equals((java.lang.Object) explicit5);
        boolean boolean16 = explicit5.isResolved();
        java.lang.String str17 = explicit5.toString();
        byte[] byteArray18 = explicit5.resolve();
        byte[] byteArray19 = explicit5.resolve();
        boolean boolean20 = explicit5.isResolved();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str17, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        boolean boolean14 = explicit5.isResolved();
        boolean boolean15 = illegal1.equals((java.lang.Object) explicit5);
        byte[] byteArray16 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray17 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound19 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = compound19.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean24 = illegal23.isResolved();
        java.lang.String str25 = illegal23.toString();
        java.lang.String str26 = illegal23.toString();
        java.lang.String str27 = illegal23.toString();
        boolean boolean28 = illegal23.isResolved();
        boolean boolean29 = compound19.equals((java.lang.Object) illegal23);
        boolean boolean30 = explicit5.equals((java.lang.Object) illegal23);
        java.lang.String str31 = illegal23.toString();
        boolean boolean32 = illegal23.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray33 = illegal23.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray17);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str25, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str26, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str27, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str31, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        boolean boolean6 = illegal1.isResolved();
        boolean boolean7 = illegal1.isResolved();
        byte[] byteArray10 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean13 = explicit11.equals((java.lang.Object) noOp12);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp12.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp12.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean18 = illegal1.equals((java.lang.Object) resolution17);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) 1, (byte) 100 };
        byte[] byteArray11 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        byte[] byteArray13 = explicit12.resolve();
        boolean boolean14 = explicit12.isResolved();
        boolean boolean16 = explicit12.equals((java.lang.Object) 10L);
        boolean boolean17 = explicit12.isResolved();
        java.lang.String str18 = explicit12.toString();
        byte[] byteArray19 = explicit12.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp20 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str21 = noOp20.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp20.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray19, (net.bytebuddy.dynamic.ClassFileLocator) noOp20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray6, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit27 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal30 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray40 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray37, classFileLocator41);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp43 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray53 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray53);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray50, classFileLocator54);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp56 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str57 = noOp56.toString();
        java.lang.String str58 = noOp56.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray59 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator41, noOp43, classFileLocator55, noOp56 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound60 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray59);
        boolean boolean62 = compound60.equals((java.lang.Object) "hi!");
        boolean boolean64 = compound60.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution66 = compound60.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution68 = compound60.locate("");
        boolean boolean69 = illegal30.equals((java.lang.Object) "");
        java.lang.String str70 = illegal30.toString();
        java.lang.String str71 = illegal30.toString();
        byte[] byteArray74 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit75 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray74);
        byte[] byteArray76 = explicit75.resolve();
        boolean boolean77 = explicit75.isResolved();
        boolean boolean79 = explicit75.equals((java.lang.Object) 10L);
        boolean boolean80 = explicit75.isResolved();
        boolean boolean81 = explicit75.isResolved();
        boolean boolean82 = illegal30.equals((java.lang.Object) explicit75);
        byte[] byteArray83 = explicit75.resolve();
        byte[] byteArray84 = explicit75.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator85 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray84);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator86 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6, classFileLocator85);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit87 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, 1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str18, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp20 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp20.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertTrue("'" + noOp43 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp43.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertTrue("'" + noOp56 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp56.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str57, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str58, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(resolution66);
        org.junit.Assert.assertNotNull(resolution68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str70, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str71, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator85);
        org.junit.Assert.assertNotNull(classFileLocator86);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        byte[] byteArray1 = null;
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp6 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean7 = explicit5.equals((java.lang.Object) noOp6);
        java.lang.String str8 = noOp6.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp6.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp6.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp6.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp6.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        java.lang.String str17 = noOp6.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray1, (net.bytebuddy.dynamic.ClassFileLocator) noOp6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp6.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp6 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp6.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str8, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(resolution20);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str12 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray17 = resolution16.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str6 = compound5.toString();
        java.lang.Class<?> wildcardClass7 = compound5.getClass();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str6, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean3 = illegal1.equals((java.lang.Object) classFileLocator2);
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        boolean boolean6 = illegal1.isResolved();
        boolean boolean7 = illegal1.isResolved();
        boolean boolean8 = illegal1.isResolved();
        java.lang.String str9 = illegal1.toString();
        boolean boolean10 = illegal1.isResolved();
        org.junit.Assert.assertNotNull(classFileLocator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str9, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray8 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        boolean boolean10 = explicit9.isResolved();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = explicit3.toString();
        boolean boolean7 = explicit3.isResolved();
        boolean boolean8 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str6, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        byte[] byteArray9 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray12 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, classFileLocator13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray9);
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp28 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray38 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray35, classFileLocator39);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp41 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str42 = noOp41.toString();
        java.lang.String str43 = noOp41.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray44 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator26, noOp28, classFileLocator40, noOp41 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound45 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray44);
        boolean boolean47 = compound45.equals((java.lang.Object) "hi!");
        boolean boolean49 = compound45.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = compound45.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound45.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray57 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray57);
        byte[] byteArray61 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit62 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp63 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean64 = explicit62.equals((java.lang.Object) noOp63);
        java.lang.String str65 = noOp63.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray57, (net.bytebuddy.dynamic.ClassFileLocator) noOp63);
        boolean boolean67 = compound45.equals((java.lang.Object) byteArray57);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution69 = compound45.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution71 = compound45.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator72 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray9, (net.bytebuddy.dynamic.ClassFileLocator) compound45);
        byte[] byteArray75 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit76 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray75);
        byte[] byteArray77 = explicit76.resolve();
        boolean boolean78 = explicit76.isResolved();
        boolean boolean80 = explicit76.equals((java.lang.Object) 10L);
        boolean boolean81 = explicit76.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray82 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound83 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray82);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound84 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray82);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution86 = compound84.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean87 = explicit76.equals((java.lang.Object) compound84);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator88 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray9, (net.bytebuddy.dynamic.ClassFileLocator) compound84);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution90 = compound84.locate("hi!");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertTrue("'" + noOp28 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp28.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertTrue("'" + noOp41 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp41.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp63 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp63.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str65, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(resolution69);
        org.junit.Assert.assertNotNull(resolution71);
        org.junit.Assert.assertNotNull(classFileLocator72);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(classFileLocatorArray82);
        org.junit.Assert.assertNotNull(resolution86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(classFileLocator88);
        org.junit.Assert.assertNotNull(resolution90);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution3 = compound1.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = compound1.locate("");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution3);
        org.junit.Assert.assertNotNull(resolution5);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp44 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str45 = noOp44.toString();
        java.lang.String str46 = noOp44.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray47 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator29, noOp31, classFileLocator43, noOp44 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound48 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray47);
        boolean boolean50 = compound48.equals((java.lang.Object) "hi!");
        java.lang.String str51 = compound48.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray7, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound48.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.Class<?> wildcardClass56 = compound48.getClass();
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + noOp44 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp44.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        java.lang.String str11 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("hi!");
        java.lang.String str14 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp4.locate(".class");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray17 = resolution16.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution16);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        java.lang.String str14 = explicit6.toString();
        byte[] byteArray15 = explicit6.resolve();
        boolean boolean16 = illegal1.equals((java.lang.Object) explicit6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str20 = illegal19.toString();
        byte[] byteArray23 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        byte[] byteArray25 = explicit24.resolve();
        boolean boolean26 = explicit24.isResolved();
        boolean boolean28 = explicit24.equals((java.lang.Object) 10L);
        java.lang.String str29 = explicit24.toString();
        byte[] byteArray30 = explicit24.resolve();
        boolean boolean31 = illegal19.equals((java.lang.Object) byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        boolean boolean33 = illegal1.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal35 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray39 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray51 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray51);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray48, classFileLocator52);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp54 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray64 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray64);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray61, classFileLocator65);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp67 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str68 = noOp67.toString();
        java.lang.String str69 = noOp67.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray70 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator52, noOp54, classFileLocator66, noOp67 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound71 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray70);
        boolean boolean73 = compound71.equals((java.lang.Object) "hi!");
        java.lang.String str74 = compound71.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator75 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray39, (net.bytebuddy.dynamic.ClassFileLocator) compound71);
        boolean boolean76 = illegal35.equals((java.lang.Object) classFileLocator75);
        boolean boolean77 = illegal35.isResolved();
        boolean boolean78 = illegal35.isResolved();
        boolean boolean79 = illegal1.equals((java.lang.Object) illegal35);
        java.lang.String str80 = illegal35.toString();
        boolean boolean81 = illegal35.isResolved();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str20, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str29, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertTrue("'" + noOp54 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp54.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertTrue("'" + noOp67 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp67.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str68, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str69, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(classFileLocator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str80, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        java.lang.String str11 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(resolution15);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray11 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound12 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound13 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound14 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        boolean boolean15 = explicit3.equals((java.lang.Object) classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound16 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        byte[] byteArray19 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        byte[] byteArray21 = explicit20.resolve();
        boolean boolean23 = explicit20.equals((java.lang.Object) (short) 0);
        byte[] byteArray24 = explicit20.resolve();
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        byte[] byteArray32 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit33 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp34 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean35 = explicit33.equals((java.lang.Object) noOp34);
        java.lang.String str36 = noOp34.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray28, (net.bytebuddy.dynamic.ClassFileLocator) noOp34);
        java.lang.String str38 = noOp34.toString();
        java.lang.String str39 = noOp34.toString();
        boolean boolean40 = explicit20.equals((java.lang.Object) str39);
        boolean boolean41 = explicit20.isResolved();
        byte[] byteArray42 = explicit20.resolve();
        boolean boolean43 = compound16.equals((java.lang.Object) explicit20);
        byte[] byteArray44 = explicit20.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(classFileLocatorArray11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp34 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp34.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str38, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str39, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, 100]");
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        boolean boolean6 = illegal1.isResolved();
        boolean boolean7 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str13 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp12);
        java.lang.String str17 = noOp12.toString();
        java.lang.String str18 = noOp12.toString();
        java.lang.String str19 = noOp12.toString();
        java.lang.String str20 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp12.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str18, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str19, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution22);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal2 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean3 = illegal2.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.NoOp.INSTANCE");
        java.lang.Class<?> wildcardClass6 = illegal5.getClass();
        boolean boolean7 = illegal2.equals((java.lang.Object) wildcardClass6);
        byte[] byteArray11 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        byte[] byteArray13 = explicit12.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray16 = explicit15.resolve();
        boolean boolean17 = illegal2.equals((java.lang.Object) byteArray16);
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray27 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray24, classFileLocator28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray40 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray37, classFileLocator41);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp43 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str44 = noOp43.toString();
        java.lang.String str45 = noOp43.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray46 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator28, noOp30, classFileLocator42, noOp43 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound47 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray46);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution49 = compound47.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str50 = compound47.toString();
        java.lang.String str51 = compound47.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound47.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound47);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertTrue("'" + noOp43 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp43.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray46);
        org.junit.Assert.assertNotNull(resolution49);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(classFileLocator54);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution3 = noOp0.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str4 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution6 = noOp0.locate("");
        java.lang.String str7 = noOp0.toString();
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str4, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str7, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str2 = illegal1.toString();
        boolean boolean3 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray4 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Compound{classFileLocator=[]}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        java.lang.String str6 = illegal1.toString();
        boolean boolean7 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str6, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        byte[] byteArray9 = explicit3.resolve();
        java.lang.String str10 = explicit3.toString();
        boolean boolean11 = explicit3.isResolved();
        boolean boolean12 = explicit3.isResolved();
        byte[] byteArray13 = explicit3.resolve();
        boolean boolean14 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        byte[] byteArray6 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray8 = explicit7.resolve();
        boolean boolean9 = explicit7.isResolved();
        boolean boolean11 = explicit7.equals((java.lang.Object) 10L);
        boolean boolean12 = explicit7.isResolved();
        java.lang.String str13 = explicit7.toString();
        byte[] byteArray14 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp15 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str16 = noOp15.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp15.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray14, (net.bytebuddy.dynamic.ClassFileLocator) noOp15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        byte[] byteArray23 = explicit22.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal25 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean27 = illegal25.equals((java.lang.Object) classFileLocator26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}", byteArray23, classFileLocator26);
        java.lang.Class<?> wildcardClass29 = classFileLocator26.getClass();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp15 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp15.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp10 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean11 = explicit9.equals((java.lang.Object) noOp10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp10.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp10.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        boolean boolean16 = explicit3.equals((java.lang.Object) noOp10);
        java.lang.Class<?> wildcardClass17 = noOp10.getClass();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp10 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp10.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean6 = explicit3.isResolved();
        java.lang.String str7 = explicit3.toString();
        byte[] byteArray8 = explicit3.resolve();
        java.lang.String str9 = explicit3.toString();
        java.lang.String str10 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str7, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        boolean boolean4 = explicit3.isResolved();
        byte[] byteArray5 = explicit3.resolve();
        boolean boolean6 = explicit3.isResolved();
        boolean boolean7 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound29.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound29.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(resolution43);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray17 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray14, classFileLocator18);
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray14, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray14);
        byte[] byteArray28 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit29 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray28);
        byte[] byteArray30 = explicit29.resolve();
        boolean boolean31 = explicit29.isResolved();
        boolean boolean33 = explicit29.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = classFileLocator34.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean37 = explicit29.equals((java.lang.Object) classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14, classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray14, classFileLocator39);
        byte[] byteArray44 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit45 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray44);
        byte[] byteArray46 = explicit45.resolve();
        boolean boolean47 = explicit45.isResolved();
        boolean boolean49 = explicit45.equals((java.lang.Object) 10L);
        boolean boolean50 = explicit45.isResolved();
        java.lang.String str51 = explicit45.toString();
        byte[] byteArray52 = explicit45.resolve();
        byte[] byteArray53 = explicit45.resolve();
        byte[] byteArray57 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray57);
        byte[] byteArray61 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit62 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp63 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean64 = explicit62.equals((java.lang.Object) noOp63);
        java.lang.String str65 = noOp63.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray57, (net.bytebuddy.dynamic.ClassFileLocator) noOp63);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray53, (net.bytebuddy.dynamic.ClassFileLocator) noOp63);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray14, (net.bytebuddy.dynamic.ClassFileLocator) noOp63);
        boolean boolean69 = illegal1.equals((java.lang.Object) noOp63);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution71 = noOp63.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution73 = noOp63.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str51, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp63 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp63.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str65, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(resolution71);
        org.junit.Assert.assertNotNull(resolution73);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean4 = illegal3.isResolved();
        byte[] byteArray16 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, classFileLocator20);
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16);
        byte[] byteArray30 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit31 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray30);
        byte[] byteArray32 = explicit31.resolve();
        boolean boolean33 = explicit31.isResolved();
        boolean boolean35 = explicit31.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = classFileLocator36.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean39 = explicit31.equals((java.lang.Object) classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16, classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray16, classFileLocator41);
        byte[] byteArray46 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray46);
        byte[] byteArray48 = explicit47.resolve();
        boolean boolean49 = explicit47.isResolved();
        boolean boolean51 = explicit47.equals((java.lang.Object) 10L);
        boolean boolean52 = explicit47.isResolved();
        java.lang.String str53 = explicit47.toString();
        byte[] byteArray54 = explicit47.resolve();
        byte[] byteArray55 = explicit47.resolve();
        byte[] byteArray59 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator60 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray59);
        byte[] byteArray63 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit64 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray63);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp65 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean66 = explicit64.equals((java.lang.Object) noOp65);
        java.lang.String str67 = noOp65.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray59, (net.bytebuddy.dynamic.ClassFileLocator) noOp65);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray55, (net.bytebuddy.dynamic.ClassFileLocator) noOp65);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) noOp65);
        boolean boolean71 = illegal3.equals((java.lang.Object) noOp65);
        java.lang.String str72 = noOp65.toString();
        boolean boolean73 = illegal1.equals((java.lang.Object) noOp65);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution75 = noOp65.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str76 = noOp65.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution78 = noOp65.locate("");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str53, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator60);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp65 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp65.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str67, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertNotNull(classFileLocator70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str72, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(resolution75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str76, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution78);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        boolean boolean33 = compound31.equals((java.lang.Object) "hi!");
        boolean boolean35 = compound31.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound31.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound31.locate("");
        boolean boolean40 = illegal1.equals((java.lang.Object) "");
        java.lang.String str41 = illegal1.toString();
        java.lang.String str42 = illegal1.toString();
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        byte[] byteArray47 = explicit46.resolve();
        boolean boolean48 = explicit46.isResolved();
        boolean boolean50 = explicit46.equals((java.lang.Object) 10L);
        boolean boolean51 = explicit46.isResolved();
        boolean boolean52 = explicit46.isResolved();
        boolean boolean53 = illegal1.equals((java.lang.Object) explicit46);
        boolean boolean54 = explicit46.isResolved();
        boolean boolean55 = explicit46.isResolved();
        byte[] byteArray60 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator62 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray60);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit63 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit64 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        byte[] byteArray67 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit68 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray67);
        byte[] byteArray69 = explicit68.resolve();
        boolean boolean70 = explicit68.isResolved();
        boolean boolean72 = explicit68.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution75 = classFileLocator73.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean76 = explicit68.equals((java.lang.Object) classFileLocator73);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution78 = classFileLocator73.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator79 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray60, classFileLocator73);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit80 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        boolean boolean81 = explicit46.equals((java.lang.Object) explicit80);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str41, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str42, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator62);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertNotNull(resolution75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(resolution78);
        org.junit.Assert.assertNotNull(classFileLocator79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        java.lang.String str14 = explicit6.toString();
        byte[] byteArray15 = explicit6.resolve();
        boolean boolean16 = illegal1.equals((java.lang.Object) explicit6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str20 = illegal19.toString();
        byte[] byteArray23 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        byte[] byteArray25 = explicit24.resolve();
        boolean boolean26 = explicit24.isResolved();
        boolean boolean28 = explicit24.equals((java.lang.Object) 10L);
        java.lang.String str29 = explicit24.toString();
        byte[] byteArray30 = explicit24.resolve();
        boolean boolean31 = illegal19.equals((java.lang.Object) byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        boolean boolean33 = illegal1.equals((java.lang.Object) "hi!");
        java.lang.String str34 = illegal1.toString();
        boolean boolean35 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal37 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str38 = illegal37.toString();
        boolean boolean39 = illegal37.isResolved();
        java.lang.String str40 = illegal37.toString();
        java.lang.String str41 = illegal37.toString();
        java.lang.String str42 = illegal37.toString();
        boolean boolean43 = illegal1.equals((java.lang.Object) str42);
        java.lang.String str44 = illegal1.toString();
        boolean boolean45 = illegal1.isResolved();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str20, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str29, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str34, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str38, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str40, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str41, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str42, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str44, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        byte[] byteArray12 = explicit4.resolve();
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp22 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean23 = explicit21.equals((java.lang.Object) noOp22);
        java.lang.String str24 = noOp22.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) noOp22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray12, (net.bytebuddy.dynamic.ClassFileLocator) noOp22);
        java.lang.Class<?> wildcardClass27 = noOp22.getClass();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp22 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp22.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str24, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}");
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        boolean boolean4 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean7 = illegal6.isResolved();
        java.lang.String str8 = illegal6.toString();
        boolean boolean9 = illegal6.isResolved();
        boolean boolean10 = illegal6.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = classFileLocator16.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean19 = illegal12.equals((java.lang.Object) resolution18);
        boolean boolean20 = illegal6.equals((java.lang.Object) boolean19);
        boolean boolean21 = illegal6.isResolved();
        boolean boolean22 = explicit3.equals((java.lang.Object) boolean21);
        java.lang.String str23 = explicit3.toString();
        byte[] byteArray26 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit27 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray26);
        byte[] byteArray28 = explicit27.resolve();
        boolean boolean29 = explicit27.isResolved();
        boolean boolean31 = explicit27.equals((java.lang.Object) 10L);
        boolean boolean32 = explicit27.isResolved();
        java.lang.String str33 = explicit27.toString();
        boolean boolean34 = explicit27.isResolved();
        byte[] byteArray35 = explicit27.resolve();
        java.lang.Class<?> wildcardClass36 = byteArray35.getClass();
        boolean boolean37 = explicit3.equals((java.lang.Object) byteArray35);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str23, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str33, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean6 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean9 = illegal8.isResolved();
        java.lang.String str10 = illegal8.toString();
        boolean boolean11 = illegal8.isResolved();
        boolean boolean12 = explicit3.equals((java.lang.Object) illegal8);
        byte[] byteArray13 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray18 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        byte[] byteArray20 = explicit19.resolve();
        boolean boolean21 = explicit19.isResolved();
        boolean boolean23 = explicit19.equals((java.lang.Object) 10L);
        boolean boolean24 = explicit19.isResolved();
        boolean boolean25 = explicit19.isResolved();
        boolean boolean26 = explicit19.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray27 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound28 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray27);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray27);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray27);
        boolean boolean31 = explicit19.equals((java.lang.Object) classFileLocatorArray27);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound32 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray27);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound33 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray27);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound34 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray27);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound34.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp37 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str38 = noOp37.toString();
        java.lang.String str39 = noOp37.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = noOp37.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str42 = noOp37.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = noOp37.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution46 = noOp37.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution48 = noOp37.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        boolean boolean49 = compound34.equals((java.lang.Object) noOp37);
        boolean boolean50 = explicit15.equals((java.lang.Object) compound34);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str10, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(classFileLocatorArray27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertTrue("'" + noOp37 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp37.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str38, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str39, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertNotNull(resolution46);
        org.junit.Assert.assertNotNull(resolution48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray14 = resolution13.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray8);
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray37 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray34, classFileLocator38);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp40 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str41 = noOp40.toString();
        java.lang.String str42 = noOp40.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray43 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator25, noOp27, classFileLocator39, noOp40 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound44 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray43);
        boolean boolean46 = compound44.equals((java.lang.Object) "hi!");
        boolean boolean48 = compound44.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound44.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray56 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray56);
        byte[] byteArray60 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp62 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean63 = explicit61.equals((java.lang.Object) noOp62);
        java.lang.String str64 = noOp62.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray56, (net.bytebuddy.dynamic.ClassFileLocator) noOp62);
        boolean boolean66 = compound44.equals((java.lang.Object) byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution68 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution70 = compound44.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound44);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal73 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str74 = illegal73.toString();
        boolean boolean75 = compound44.equals((java.lang.Object) illegal73);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution77 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertTrue("'" + noOp40 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp40.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str41, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp62 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp62.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str64, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(resolution68);
        org.junit.Assert.assertNotNull(resolution70);
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str74, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(resolution77);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        boolean boolean11 = illegal1.isResolved();
        boolean boolean12 = illegal1.isResolved();
        boolean boolean13 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray14 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray3 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for hi!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        java.lang.String str4 = illegal1.toString();
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean11 = explicit8.equals((java.lang.Object) (short) 0);
        boolean boolean12 = illegal1.equals((java.lang.Object) explicit8);
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        byte[] byteArray19 = explicit18.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        boolean boolean22 = explicit21.isResolved();
        byte[] byteArray23 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        boolean boolean25 = illegal1.equals((java.lang.Object) byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        java.lang.Class<?> wildcardClass27 = byteArray23.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp44 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str45 = noOp44.toString();
        java.lang.String str46 = noOp44.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray47 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator29, noOp31, classFileLocator43, noOp44 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound48 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray47);
        boolean boolean50 = compound48.equals((java.lang.Object) "hi!");
        java.lang.String str51 = compound48.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray7, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound48.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal57 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean58 = compound48.equals((java.lang.Object) illegal57);
        java.lang.String str59 = illegal57.toString();
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + noOp44 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp44.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str59, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray36 = resolution35.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution35);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        byte[] byteArray9 = explicit3.resolve();
        java.lang.String str10 = explicit3.toString();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray12 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str13 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp12);
        java.lang.String str17 = noOp12.toString();
        java.lang.String str18 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str21 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp12.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution25 = noOp12.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str18, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertNotNull(resolution25);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray12 = explicit3.resolve();
        byte[] byteArray13 = explicit3.resolve();
        byte[] byteArray14 = explicit3.resolve();
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean20 = explicit18.equals((java.lang.Object) noOp19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp19.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = noOp19.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution26 = noOp19.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution28 = noOp19.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean29 = explicit3.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        byte[] byteArray32 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit33 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray32);
        byte[] byteArray34 = explicit33.resolve();
        byte[] byteArray35 = explicit33.resolve();
        byte[] byteArray38 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit39 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray38);
        byte[] byteArray40 = explicit39.resolve();
        boolean boolean41 = explicit39.isResolved();
        boolean boolean43 = explicit39.equals((java.lang.Object) 10L);
        boolean boolean44 = explicit39.isResolved();
        boolean boolean45 = explicit39.isResolved();
        boolean boolean46 = explicit39.isResolved();
        byte[] byteArray47 = explicit39.resolve();
        boolean boolean48 = explicit33.equals((java.lang.Object) explicit39);
        byte[] byteArray49 = explicit33.resolve();
        boolean boolean50 = explicit3.equals((java.lang.Object) explicit33);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertNotNull(resolution26);
        org.junit.Assert.assertNotNull(resolution28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean3 = illegal1.equals((java.lang.Object) classFileLocator2);
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        boolean boolean38 = compound36.equals((java.lang.Object) "hi!");
        boolean boolean40 = compound36.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound36.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray48 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray48);
        byte[] byteArray52 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit53 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray52);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp54 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean55 = explicit53.equals((java.lang.Object) noOp54);
        java.lang.String str56 = noOp54.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray48, (net.bytebuddy.dynamic.ClassFileLocator) noOp54);
        boolean boolean58 = compound36.equals((java.lang.Object) byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray48);
        boolean boolean60 = illegal1.equals((java.lang.Object) byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray48);
        java.lang.String str62 = explicit61.toString();
        boolean boolean63 = explicit61.isResolved();
        org.junit.Assert.assertNotNull(classFileLocator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp54 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp54.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str56, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str62, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp13 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray23 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray20, classFileLocator24);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp26 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str27 = noOp26.toString();
        java.lang.String str28 = noOp26.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray29 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator11, noOp13, classFileLocator25, noOp26 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = compound30.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str33 = compound30.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound30.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        byte[] byteArray39 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit40 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        byte[] byteArray41 = explicit40.resolve();
        java.lang.String str42 = explicit40.toString();
        boolean boolean43 = explicit40.isResolved();
        java.lang.String str44 = explicit40.toString();
        byte[] byteArray45 = explicit40.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray45);
        boolean boolean47 = compound30.equals((java.lang.Object) byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit48 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        byte[] byteArray49 = explicit48.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit50 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray49);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertTrue("'" + noOp13 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp13.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertTrue("'" + noOp26 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp26.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray29);
        org.junit.Assert.assertNotNull(resolution32);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str42, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str44, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator51);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        java.lang.String str6 = noOp0.toString();
        java.lang.String str7 = noOp0.toString();
        java.lang.String str8 = noOp0.toString();
        java.lang.String str9 = noOp0.toString();
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str7, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str8, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str9, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        boolean boolean14 = explicit5.isResolved();
        byte[] byteArray15 = explicit5.resolve();
        boolean boolean16 = explicit5.isResolved();
        byte[] byteArray17 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray18 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound19 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray18);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound20 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray18);
        java.lang.String str21 = compound20.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = compound20.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray17, (net.bytebuddy.dynamic.ClassFileLocator) compound20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution27 = classFileLocator25.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str21, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(resolution27);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean7 = explicit4.equals((java.lang.Object) (short) 0);
        byte[] byteArray8 = explicit4.resolve();
        byte[] byteArray12 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12);
        byte[] byteArray16 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp18 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean19 = explicit17.equals((java.lang.Object) noOp18);
        java.lang.String str20 = noOp18.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray12, (net.bytebuddy.dynamic.ClassFileLocator) noOp18);
        java.lang.String str22 = noOp18.toString();
        java.lang.String str23 = noOp18.toString();
        boolean boolean24 = explicit4.equals((java.lang.Object) str23);
        boolean boolean25 = explicit4.isResolved();
        byte[] byteArray26 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}", byteArray26);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp18 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp18.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str22, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str23, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = classFileLocator11.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = illegal7.equals((java.lang.Object) resolution13);
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        boolean boolean16 = illegal1.isResolved();
        boolean boolean17 = illegal1.isResolved();
        boolean boolean18 = illegal1.isResolved();
        boolean boolean19 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray31 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28, classFileLocator32);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp34 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray44 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray44);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray41, classFileLocator45);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp47 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str48 = noOp47.toString();
        java.lang.String str49 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray50 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator32, noOp34, classFileLocator46, noOp47 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound51 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound51.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound51.locate("");
        boolean boolean56 = illegal21.equals((java.lang.Object) resolution55);
        boolean boolean57 = illegal1.equals((java.lang.Object) illegal21);
        boolean boolean58 = illegal21.isResolved();
        java.lang.String str59 = illegal21.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertTrue("'" + noOp34 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp34.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertTrue("'" + noOp47 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp47.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray50);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str59, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        byte[] byteArray5 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp11 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean12 = explicit10.equals((java.lang.Object) noOp11);
        java.lang.String str13 = noOp11.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray5, (net.bytebuddy.dynamic.ClassFileLocator) noOp11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray5);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp11 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp11.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        java.lang.String str11 = illegal1.toString();
        boolean boolean12 = illegal1.isResolved();
        boolean boolean13 = illegal1.isResolved();
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray27 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray24, classFileLocator28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray40 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray37, classFileLocator41);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp43 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str44 = noOp43.toString();
        java.lang.String str45 = noOp43.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray46 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator28, noOp30, classFileLocator42, noOp43 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound47 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray46);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution49 = compound47.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray50 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, compound47 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound51 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound52 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound53 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        boolean boolean54 = illegal1.equals((java.lang.Object) compound53);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray55 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertTrue("'" + noOp43 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp43.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray46);
        org.junit.Assert.assertNotNull(resolution49);
        org.junit.Assert.assertNotNull(classFileLocatorArray50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        boolean boolean11 = explicit5.isResolved();
        boolean boolean12 = illegal1.equals((java.lang.Object) explicit5);
        java.lang.String str13 = illegal1.toString();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str13, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        byte[] byteArray1 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}", byteArray1);
        org.junit.Assert.assertNotNull(classFileLocator2);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp6 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean7 = explicit5.equals((java.lang.Object) noOp6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp6.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp6.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str12 = noOp6.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp6.locate("");
        boolean boolean15 = compound1.equals((java.lang.Object) noOp6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = compound1.locate(".class");
        java.lang.String str18 = compound1.toString();
        java.lang.Class<?> wildcardClass19 = compound1.getClass();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp6 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp6.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str18, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        byte[] byteArray12 = explicit4.resolve();
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp22 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean23 = explicit21.equals((java.lang.Object) noOp22);
        java.lang.String str24 = noOp22.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) noOp22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray12, (net.bytebuddy.dynamic.ClassFileLocator) noOp22);
        java.lang.String str27 = noOp22.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution29 = noOp22.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp22 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp22.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str24, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution29);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        byte[] byteArray17 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray42 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray42);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray39, classFileLocator43);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp45 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str46 = noOp45.toString();
        java.lang.String str47 = noOp45.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray48 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator30, noOp32, classFileLocator44, noOp45 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound49 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        boolean boolean51 = compound49.equals((java.lang.Object) "hi!");
        java.lang.String str52 = compound49.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray17, (net.bytebuddy.dynamic.ClassFileLocator) compound49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit55 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray56 = explicit55.resolve();
        java.lang.String str57 = explicit55.toString();
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray67 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray67);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray64, classFileLocator68);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit70 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray64);
        java.lang.String str71 = explicit70.toString();
        boolean boolean72 = explicit55.equals((java.lang.Object) str71);
        byte[] byteArray73 = explicit55.resolve();
        byte[] byteArray74 = explicit55.resolve();
        byte[] byteArray75 = explicit55.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator76 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}", byteArray75);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertTrue("'" + noOp45 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp45.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str47, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}" + "'", str57, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}" + "'", str71, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(classFileLocator76);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str36 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound29.locate("hi!");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution42);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        byte[] byteArray8 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean12 = illegal10.equals((java.lang.Object) classFileLocator11);
        java.lang.String str13 = illegal10.toString();
        boolean boolean14 = illegal10.isResolved();
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp28 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray38 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray35, classFileLocator39);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp41 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str42 = noOp41.toString();
        java.lang.String str43 = noOp41.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray44 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator26, noOp28, classFileLocator40, noOp41 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound45 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray44);
        boolean boolean47 = compound45.equals((java.lang.Object) "hi!");
        boolean boolean49 = compound45.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = compound45.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound45.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray57 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray57);
        byte[] byteArray61 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit62 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp63 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean64 = explicit62.equals((java.lang.Object) noOp63);
        java.lang.String str65 = noOp63.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray57, (net.bytebuddy.dynamic.ClassFileLocator) noOp63);
        boolean boolean67 = compound45.equals((java.lang.Object) byteArray57);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray57);
        boolean boolean69 = illegal10.equals((java.lang.Object) byteArray57);
        boolean boolean70 = explicit3.equals((java.lang.Object) illegal10);
        byte[] byteArray71 = explicit3.resolve();
        boolean boolean72 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str13, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertTrue("'" + noOp28 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp28.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertTrue("'" + noOp41 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp41.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp63 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp63.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str65, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = classFileLocator8.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean11 = explicit3.equals((java.lang.Object) classFileLocator8);
        boolean boolean13 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit3.isResolved();
        byte[] byteArray15 = explicit3.resolve();
        byte[] byteArray16 = explicit3.resolve();
        java.lang.String str17 = explicit3.toString();
        byte[] byteArray18 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str17, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, classFileLocator15);
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, classFileLocator20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11);
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray34 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray31, classFileLocator35);
        byte[] byteArray39 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray31, classFileLocator40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11, classFileLocator42);
        boolean boolean44 = illegal1.equals((java.lang.Object) classFileLocator42);
        boolean boolean45 = illegal1.isResolved();
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray2 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean11 = compound4.equals((java.lang.Object) boolean10);
        boolean boolean12 = illegal1.equals((java.lang.Object) compound4);
        java.lang.String str13 = illegal1.toString();
        boolean boolean14 = illegal1.isResolved();
        org.junit.Assert.assertNotNull(classFileLocatorArray2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str13, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray5 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray5);
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp11 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean12 = explicit10.equals((java.lang.Object) noOp11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp11.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp11.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str17 = noOp11.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp11.locate("");
        boolean boolean20 = compound6.equals((java.lang.Object) noOp11);
        boolean boolean21 = illegal1.equals((java.lang.Object) compound6);
        boolean boolean22 = illegal1.isResolved();
        java.lang.String str23 = illegal1.toString();
        java.lang.Object obj24 = null;
        boolean boolean25 = illegal1.equals(obj24);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(classFileLocatorArray5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp11 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp11.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str23, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = classFileLocator11.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = illegal7.equals((java.lang.Object) resolution13);
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        boolean boolean16 = illegal1.isResolved();
        java.lang.String str17 = illegal1.toString();
        boolean boolean18 = illegal1.isResolved();
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        boolean boolean25 = explicit24.isResolved();
        byte[] byteArray26 = explicit24.resolve();
        boolean boolean27 = illegal1.equals((java.lang.Object) byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit28 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str17, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp18 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str32 = noOp31.toString();
        java.lang.String str33 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray34 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator16, noOp18, classFileLocator30, noOp31 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray34);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound35.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound35.locate("");
        boolean boolean40 = explicit5.equals((java.lang.Object) compound35);
        byte[] byteArray41 = explicit5.resolve();
        byte[] byteArray42 = explicit5.resolve();
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp47 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean48 = explicit46.equals((java.lang.Object) noOp47);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = noOp47.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str51 = noOp47.toString();
        java.lang.String str52 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = noOp47.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str55 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = noOp47.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean58 = explicit5.equals((java.lang.Object) noOp47);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution60 = noOp47.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution62 = noOp47.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        java.lang.String str63 = noOp47.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertTrue("'" + noOp18 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp18.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray34);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp47 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp47.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str51, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str52, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str55, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(resolution60);
        org.junit.Assert.assertNotNull(resolution62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str63, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray8);
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray37 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray34, classFileLocator38);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp40 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str41 = noOp40.toString();
        java.lang.String str42 = noOp40.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray43 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator25, noOp27, classFileLocator39, noOp40 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound44 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray43);
        boolean boolean46 = compound44.equals((java.lang.Object) "hi!");
        boolean boolean48 = compound44.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound44.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray56 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray56);
        byte[] byteArray60 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp62 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean63 = explicit61.equals((java.lang.Object) noOp62);
        java.lang.String str64 = noOp62.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray56, (net.bytebuddy.dynamic.ClassFileLocator) noOp62);
        boolean boolean66 = compound44.equals((java.lang.Object) byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution68 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution70 = compound44.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound44);
        java.lang.String str72 = compound44.toString();
        java.lang.String str73 = compound44.toString();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertTrue("'" + noOp40 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp40.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str41, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp62 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp62.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str64, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(resolution68);
        org.junit.Assert.assertNotNull(resolution70);
        org.junit.Assert.assertNotNull(classFileLocator71);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp44 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str45 = noOp44.toString();
        java.lang.String str46 = noOp44.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray47 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator29, noOp31, classFileLocator43, noOp44 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound48 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray47);
        boolean boolean50 = compound48.equals((java.lang.Object) "hi!");
        java.lang.String str51 = compound48.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray7, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound48.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean57 = compound48.equals((java.lang.Object) 0.0f);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution59 = compound48.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + noOp44 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp44.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(resolution59);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray8);
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray37 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray34, classFileLocator38);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp40 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str41 = noOp40.toString();
        java.lang.String str42 = noOp40.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray43 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator25, noOp27, classFileLocator39, noOp40 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound44 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray43);
        boolean boolean46 = compound44.equals((java.lang.Object) "hi!");
        boolean boolean48 = compound44.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound44.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray56 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray56);
        byte[] byteArray60 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp62 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean63 = explicit61.equals((java.lang.Object) noOp62);
        java.lang.String str64 = noOp62.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray56, (net.bytebuddy.dynamic.ClassFileLocator) noOp62);
        boolean boolean66 = compound44.equals((java.lang.Object) byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution68 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution70 = compound44.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound44);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution73 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        java.lang.String str74 = compound44.toString();
        java.lang.String str75 = compound44.toString();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertTrue("'" + noOp40 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp40.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str41, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp62 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp62.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str64, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(resolution68);
        org.junit.Assert.assertNotNull(resolution70);
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertNotNull(resolution73);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str13 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp4.locate("");
        java.lang.String str16 = noOp4.toString();
        java.lang.String str17 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = compound3.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = compound3.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = compound3.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        java.lang.String str10 = compound3.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution5);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str10, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp44 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str45 = noOp44.toString();
        java.lang.String str46 = noOp44.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray47 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator29, noOp31, classFileLocator43, noOp44 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound48 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray47);
        boolean boolean50 = compound48.equals((java.lang.Object) "hi!");
        java.lang.String str51 = compound48.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray7, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit54 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray55 = explicit54.resolve();
        byte[] byteArray56 = explicit54.resolve();
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + noOp44 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp44.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, 10, -1, -1, 1]");
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        boolean boolean4 = explicit3.isResolved();
        byte[] byteArray5 = explicit3.resolve();
        java.lang.String str6 = explicit3.toString();
        boolean boolean7 = explicit3.isResolved();
        byte[] byteArray8 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str6, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean6 = explicit3.isResolved();
        byte[] byteArray7 = explicit3.resolve();
        boolean boolean8 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        java.lang.String str9 = explicit4.toString();
        byte[] byteArray10 = explicit4.resolve();
        byte[] byteArray11 = explicit4.resolve();
        byte[] byteArray12 = explicit4.resolve();
        byte[] byteArray13 = explicit4.resolve();
        byte[] byteArray14 = explicit4.resolve();
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray37 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray34, classFileLocator38);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp40 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str41 = noOp40.toString();
        java.lang.String str42 = noOp40.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray43 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator25, noOp27, classFileLocator39, noOp40 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound44 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray43);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution46 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution48 = compound44.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.Object obj51 = null;
        boolean boolean52 = compound44.equals(obj51);
        java.lang.String str53 = compound44.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray14, (net.bytebuddy.dynamic.ClassFileLocator) compound44);
        java.lang.String str55 = compound44.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertTrue("'" + noOp40 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp40.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str41, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray43);
        org.junit.Assert.assertNotNull(resolution46);
        org.junit.Assert.assertNotNull(resolution48);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(classFileLocator54);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        byte[] byteArray15 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray18 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray15, classFileLocator19);
        byte[] byteArray23 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray15, classFileLocator24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray6, classFileLocator24);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit27 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str34 = compound31.toString();
        byte[] byteArray38 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit39 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray38);
        byte[] byteArray40 = explicit39.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit42 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        boolean boolean43 = compound31.equals((java.lang.Object) byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray40);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(classFileLocator45);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = classFileLocator11.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = illegal7.equals((java.lang.Object) resolution13);
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        boolean boolean16 = illegal1.isResolved();
        java.lang.String str17 = illegal1.toString();
        boolean boolean18 = illegal1.isResolved();
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        boolean boolean25 = explicit24.isResolved();
        byte[] byteArray26 = explicit24.resolve();
        boolean boolean27 = illegal1.equals((java.lang.Object) byteArray26);
        boolean boolean28 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str17, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        boolean boolean10 = explicit4.isResolved();
        boolean boolean11 = explicit4.isResolved();
        byte[] byteArray12 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        boolean boolean15 = explicit14.isResolved();
        byte[] byteArray16 = explicit14.resolve();
        boolean boolean17 = explicit14.isResolved();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str32 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = compound29.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound29.locate(".class");
        java.lang.String str41 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution43);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound32 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray33 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound34 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound37 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound38 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound39 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        boolean boolean41 = compound32.equals((java.lang.Object) classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound32.locate(".class");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution45 = compound32.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(classFileLocatorArray33);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertNotNull(resolution45);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        java.lang.String str10 = explicit5.toString();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray17);
        boolean boolean22 = explicit5.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        byte[] byteArray23 = explicit5.resolve();
        boolean boolean24 = illegal1.equals((java.lang.Object) explicit5);
        boolean boolean25 = illegal1.isResolved();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        boolean boolean10 = explicit9.isResolved();
        byte[] byteArray11 = explicit9.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        byte[] byteArray15 = explicit14.resolve();
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.Class<?> wildcardClass1 = noOp0.getClass();
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        byte[] byteArray9 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray12 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, classFileLocator13);
        byte[] byteArray17 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray9, classFileLocator18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = classFileLocator21.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.Class<?> wildcardClass24 = classFileLocator21.getClass();
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        boolean boolean6 = illegal1.isResolved();
        java.lang.String str7 = illegal1.toString();
        boolean boolean8 = illegal1.isResolved();
        boolean boolean9 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str7, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str2 = illegal1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='.class'}'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='.class'}'}");
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound32 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray33 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound34 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound37 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound38 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound39 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        boolean boolean41 = compound32.equals((java.lang.Object) classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound32.locate(".class");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution45 = compound32.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(classFileLocatorArray33);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertNotNull(resolution45);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str15 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray13, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray22 = explicit21.resolve();
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray12 = explicit3.resolve();
        byte[] byteArray13 = explicit3.resolve();
        byte[] byteArray14 = explicit3.resolve();
        byte[] byteArray15 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean18 = illegal17.isResolved();
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray32 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray29, classFileLocator33);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp35 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray42 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray45 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray42, classFileLocator46);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp48 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str49 = noOp48.toString();
        java.lang.String str50 = noOp48.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray51 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator33, noOp35, classFileLocator47, noOp48 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound52 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray51);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = compound52.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray55 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator22, compound52 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound56 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray55);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound57 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray55);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound58 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray55);
        boolean boolean59 = illegal17.equals((java.lang.Object) compound58);
        byte[] byteArray66 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray69 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray69);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray66, classFileLocator70);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp72 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray79 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray82 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator83 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray82);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator84 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray79, classFileLocator83);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp85 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str86 = noOp85.toString();
        java.lang.String str87 = noOp85.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray88 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator70, noOp72, classFileLocator84, noOp85 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound89 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray88);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution91 = compound89.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution93 = compound89.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean94 = illegal17.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean95 = illegal17.isResolved();
        boolean boolean96 = explicit3.equals((java.lang.Object) boolean95);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertTrue("'" + noOp35 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp35.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertTrue("'" + noOp48 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp48.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str50, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray51);
        org.junit.Assert.assertNotNull(resolution54);
        org.junit.Assert.assertNotNull(classFileLocatorArray55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator70);
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertTrue("'" + noOp72 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp72.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator83);
        org.junit.Assert.assertNotNull(classFileLocator84);
        org.junit.Assert.assertTrue("'" + noOp85 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp85.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str86, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str87, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray88);
        org.junit.Assert.assertNotNull(resolution91);
        org.junit.Assert.assertNotNull(resolution93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp4.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertNotNull(resolution20);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean11 = explicit9.isResolved();
        boolean boolean13 = explicit9.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit9.isResolved();
        java.lang.String str15 = explicit9.toString();
        byte[] byteArray16 = explicit9.resolve();
        java.lang.String str17 = explicit9.toString();
        boolean boolean18 = explicit5.equals((java.lang.Object) str17);
        byte[] byteArray19 = explicit5.resolve();
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray42 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray42);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray39, classFileLocator43);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp45 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str46 = noOp45.toString();
        java.lang.String str47 = noOp45.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray48 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator30, noOp32, classFileLocator44, noOp45 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound49 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp50 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str51 = noOp50.toString();
        java.lang.String str52 = noOp50.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = noOp50.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean55 = compound49.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal57 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean58 = compound49.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}", byteArray19, (net.bytebuddy.dynamic.ClassFileLocator) compound49);
        byte[] byteArray61 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator62 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution64 = classFileLocator62.locate("ClassFileLocator.NoOp.INSTANCE");
        boolean boolean65 = compound49.equals((java.lang.Object) "ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution67 = compound49.locate("ClassFileLocator.NoOp.INSTANCE");
        boolean boolean68 = resolution67.isResolved();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str17, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertTrue("'" + noOp45 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp45.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str47, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray48);
        org.junit.Assert.assertTrue("'" + noOp50 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp50.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str51, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str52, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(classFileLocator62);
        org.junit.Assert.assertNotNull(resolution64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(resolution67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("");
        byte[] byteArray40 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp42 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean43 = explicit41.equals((java.lang.Object) noOp42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution45 = noOp42.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = noOp42.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str48 = noOp42.toString();
        java.lang.String str49 = noOp42.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = noOp42.locate("hi!");
        boolean boolean52 = compound29.equals((java.lang.Object) noOp42);
        java.lang.String str53 = noOp42.toString();
        java.lang.String str54 = noOp42.toString();
        java.lang.String str55 = noOp42.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = noOp42.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp42 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp42.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(resolution45);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str54, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str55, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution57);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean11 = explicit9.isResolved();
        boolean boolean13 = explicit9.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit9.isResolved();
        java.lang.String str15 = explicit9.toString();
        byte[] byteArray16 = explicit9.resolve();
        java.lang.String str17 = explicit9.toString();
        boolean boolean18 = explicit5.equals((java.lang.Object) str17);
        byte[] byteArray19 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        byte[] byteArray21 = explicit20.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray21);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str17, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp13 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray23 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray20, classFileLocator24);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp26 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str27 = noOp26.toString();
        java.lang.String str28 = noOp26.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray29 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator11, noOp13, classFileLocator25, noOp26 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = compound30.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str33 = compound30.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound30.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        byte[] byteArray39 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit40 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        byte[] byteArray41 = explicit40.resolve();
        java.lang.String str42 = explicit40.toString();
        boolean boolean43 = explicit40.isResolved();
        java.lang.String str44 = explicit40.toString();
        byte[] byteArray45 = explicit40.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray45);
        boolean boolean47 = compound30.equals((java.lang.Object) byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit48 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        byte[] byteArray53 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit54 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray53);
        byte[] byteArray55 = explicit54.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray55);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray57 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound58 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray57);
        byte[] byteArray61 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit62 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp63 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean64 = explicit62.equals((java.lang.Object) noOp63);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution66 = noOp63.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution68 = noOp63.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str69 = noOp63.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution71 = noOp63.locate("");
        boolean boolean72 = compound58.equals((java.lang.Object) noOp63);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray55, (net.bytebuddy.dynamic.ClassFileLocator) noOp63);
        java.lang.String str74 = noOp63.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution76 = noOp63.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator77 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray45, (net.bytebuddy.dynamic.ClassFileLocator) noOp63);
        java.lang.String str78 = noOp63.toString();
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertTrue("'" + noOp13 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp13.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertTrue("'" + noOp26 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp26.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray29);
        org.junit.Assert.assertNotNull(resolution32);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str42, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str44, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(classFileLocatorArray57);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp63 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp63.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(resolution66);
        org.junit.Assert.assertNotNull(resolution68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str69, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str74, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution76);
        org.junit.Assert.assertNotNull(classFileLocator77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str78, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, classFileLocator15);
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, classFileLocator20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11);
        byte[] byteArray25 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray25);
        byte[] byteArray27 = explicit26.resolve();
        boolean boolean28 = explicit26.isResolved();
        boolean boolean30 = explicit26.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = classFileLocator31.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean34 = explicit26.equals((java.lang.Object) classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit36 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit37 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11);
        byte[] byteArray43 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit44 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator48 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}", byteArray11, classFileLocator47);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = classFileLocator47.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertNotNull(classFileLocator48);
        org.junit.Assert.assertNotNull(resolution50);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        java.lang.String str6 = noOp0.toString();
        java.lang.String str7 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str10 = noOp0.toString();
        java.lang.String str11 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        java.lang.String str16 = noOp0.toString();
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str7, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str15 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray13, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray22 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit25 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray22);
        boolean boolean26 = explicit25.isResolved();
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound31.locate("");
        boolean boolean36 = illegal1.equals((java.lang.Object) resolution35);
        java.lang.String str37 = illegal1.toString();
        byte[] byteArray40 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        byte[] byteArray42 = explicit41.resolve();
        boolean boolean43 = explicit41.isResolved();
        boolean boolean45 = explicit41.equals((java.lang.Object) 10L);
        boolean boolean46 = explicit41.isResolved();
        java.lang.String str47 = explicit41.toString();
        byte[] byteArray48 = explicit41.resolve();
        boolean boolean49 = illegal1.equals((java.lang.Object) byteArray48);
        byte[] byteArray52 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit53 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray52);
        byte[] byteArray54 = explicit53.resolve();
        boolean boolean55 = explicit53.isResolved();
        boolean boolean57 = explicit53.equals((java.lang.Object) 10L);
        boolean boolean58 = explicit53.isResolved();
        java.lang.String str59 = explicit53.toString();
        boolean boolean60 = explicit53.isResolved();
        boolean boolean61 = explicit53.isResolved();
        byte[] byteArray62 = explicit53.resolve();
        boolean boolean63 = illegal1.equals((java.lang.Object) explicit53);
        byte[] byteArray64 = explicit53.resolve();
        boolean boolean65 = explicit53.isResolved();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str37, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str47, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str59, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        java.lang.String str12 = explicit4.toString();
        boolean boolean13 = explicit4.isResolved();
        byte[] byteArray14 = explicit4.resolve();
        boolean boolean15 = explicit4.isResolved();
        byte[] byteArray16 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray17 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound19 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray17);
        java.lang.String str20 = compound19.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = compound19.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution25 = compound19.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean26 = resolution25.isResolved();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str20, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(resolution25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        byte[] byteArray9 = explicit3.resolve();
        boolean boolean10 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        boolean boolean12 = explicit3.isResolved();
        byte[] byteArray13 = explicit3.resolve();
        java.lang.String str14 = explicit3.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean17 = explicit3.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray18 = explicit3.resolve();
        byte[] byteArray19 = explicit3.resolve();
        byte[] byteArray20 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        boolean boolean11 = illegal1.isResolved();
        boolean boolean12 = illegal1.isResolved();
        boolean boolean13 = illegal1.isResolved();
        boolean boolean14 = illegal1.isResolved();
        boolean boolean15 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        boolean boolean3 = illegal1.isResolved();
        boolean boolean4 = illegal1.isResolved();
        java.lang.String str5 = illegal1.toString();
        java.lang.String str6 = illegal1.toString();
        boolean boolean7 = illegal1.isResolved();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str5, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str6, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        byte[] byteArray8 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        boolean boolean10 = explicit9.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal2 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        java.lang.String str14 = explicit6.toString();
        boolean boolean15 = explicit6.isResolved();
        boolean boolean16 = illegal2.equals((java.lang.Object) explicit6);
        boolean boolean17 = explicit6.isResolved();
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray22 = explicit21.resolve();
        boolean boolean23 = explicit21.isResolved();
        boolean boolean25 = explicit21.equals((java.lang.Object) 10L);
        java.lang.String str26 = explicit21.toString();
        java.lang.String str27 = explicit21.toString();
        byte[] byteArray28 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit29 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray28);
        boolean boolean30 = explicit6.equals((java.lang.Object) byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit32 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit33 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray28);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str26, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str27, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classFileLocator31);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean11 = explicit9.isResolved();
        boolean boolean13 = explicit9.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit9.isResolved();
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        java.lang.String str16 = illegal1.toString();
        boolean boolean17 = illegal1.isResolved();
        boolean boolean18 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str16, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        java.lang.String str11 = illegal7.toString();
        java.lang.String str12 = illegal7.toString();
        java.lang.String str13 = illegal7.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str12, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str13, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("hi!");
        java.lang.String str12 = noOp4.toString();
        java.lang.String str13 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str16 = noOp4.toString();
        java.lang.String str17 = noOp4.toString();
        java.lang.String str18 = noOp4.toString();
        java.lang.String str19 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str18, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str19, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        byte[] byteArray5 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray17 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray14, classFileLocator18);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp20 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray27, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp33 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str34 = noOp33.toString();
        java.lang.String str35 = noOp33.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray36 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator18, noOp20, classFileLocator32, noOp33 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound37 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        boolean boolean39 = compound37.equals((java.lang.Object) "hi!");
        java.lang.String str40 = compound37.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray5, (net.bytebuddy.dynamic.ClassFileLocator) compound37);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal44 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str45 = illegal44.toString();
        byte[] byteArray48 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit49 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray48);
        byte[] byteArray50 = explicit49.resolve();
        boolean boolean51 = explicit49.isResolved();
        boolean boolean53 = explicit49.equals((java.lang.Object) 10L);
        java.lang.String str54 = explicit49.toString();
        byte[] byteArray55 = explicit49.resolve();
        boolean boolean56 = illegal44.equals((java.lang.Object) byteArray55);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray55);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray5, classFileLocator57);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit60 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit62 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertTrue("'" + noOp20 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp20.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertTrue("'" + noOp33 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp33.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str35, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str45, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str54, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(classFileLocator59);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray23, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str30 = noOp29.toString();
        java.lang.String str31 = noOp29.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray32 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator14, noOp16, classFileLocator28, noOp29 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound33 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray32);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound33.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray36 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator3, compound33 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound37 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray38 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound39 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        boolean boolean41 = compound37.equals((java.lang.Object) classFileLocatorArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound37.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        byte[] byteArray52 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray52);
        byte[] byteArray58 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit59 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray58);
        byte[] byteArray60 = explicit59.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator61 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray60);
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray72 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray72);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator74 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray69, classFileLocator73);
        byte[] byteArray77 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator78 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray77);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator79 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray69, classFileLocator78);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator80 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray60, classFileLocator78);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator81 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray52, classFileLocator80);
        boolean boolean82 = compound37.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution84 = compound37.locate(".class");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str30, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray32);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(classFileLocatorArray36);
        org.junit.Assert.assertNotNull(classFileLocatorArray38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator61);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertNotNull(classFileLocator74);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator78);
        org.junit.Assert.assertNotNull(classFileLocator79);
        org.junit.Assert.assertNotNull(classFileLocator80);
        org.junit.Assert.assertNotNull(classFileLocator81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(resolution84);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        java.lang.String str11 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertNotNull(resolution23);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound2.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution6 = compound2.locate("hi!");
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        boolean boolean38 = compound36.equals((java.lang.Object) "hi!");
        boolean boolean40 = compound36.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound36.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound36.locate("");
        java.lang.String str45 = compound36.toString();
        java.lang.String str46 = compound36.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution48 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        boolean boolean49 = compound2.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str50 = compound2.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound2.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray53 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound54 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray53);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound55 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray53);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound56 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray53);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean58 = compound56.equals((java.lang.Object) classFileLocator57);
        boolean boolean59 = compound2.equals((java.lang.Object) boolean58);
        byte[] byteArray68 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray71 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator72 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray71);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray68, classFileLocator72);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator74 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray68);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator75 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray68);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit76 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray68);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit77 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray68);
        boolean boolean78 = compound2.equals((java.lang.Object) explicit77);
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertNotNull(resolution6);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertNotNull(resolution48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str50, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(classFileLocatorArray53);
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator72);
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertNotNull(classFileLocator74);
        org.junit.Assert.assertNotNull(classFileLocator75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound31.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str34 = compound31.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        byte[] byteArray40 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        byte[] byteArray42 = explicit41.resolve();
        java.lang.String str43 = explicit41.toString();
        boolean boolean44 = explicit41.isResolved();
        java.lang.String str45 = explicit41.toString();
        byte[] byteArray46 = explicit41.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray46);
        boolean boolean48 = compound31.equals((java.lang.Object) byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit49 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray46);
        byte[] byteArray54 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit55 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray54);
        byte[] byteArray56 = explicit55.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray58 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound59 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray58);
        byte[] byteArray62 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit63 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray62);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp64 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean65 = explicit63.equals((java.lang.Object) noOp64);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution67 = noOp64.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution69 = noOp64.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str70 = noOp64.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution72 = noOp64.locate("");
        boolean boolean73 = compound59.equals((java.lang.Object) noOp64);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator74 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray56, (net.bytebuddy.dynamic.ClassFileLocator) noOp64);
        java.lang.String str75 = noOp64.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution77 = noOp64.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator78 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray46, (net.bytebuddy.dynamic.ClassFileLocator) noOp64);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator79 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray46);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str43, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str45, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(classFileLocatorArray58);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp64 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp64.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(resolution67);
        org.junit.Assert.assertNotNull(resolution69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str70, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(classFileLocator74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str75, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution77);
        org.junit.Assert.assertNotNull(classFileLocator78);
        org.junit.Assert.assertNotNull(classFileLocator79);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str31 = noOp30.toString();
        java.lang.String str32 = noOp30.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = noOp30.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean35 = compound29.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        byte[] byteArray42 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit43 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray42);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp44 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean45 = explicit43.equals((java.lang.Object) noOp44);
        byte[] byteArray46 = explicit43.resolve();
        boolean boolean47 = compound29.equals((java.lang.Object) byteArray46);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp44 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp44.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str15 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray13, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = classFileLocator11.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = illegal7.equals((java.lang.Object) resolution13);
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        boolean boolean16 = illegal1.isResolved();
        java.lang.String str17 = illegal1.toString();
        java.lang.String str18 = illegal1.toString();
        boolean boolean19 = illegal1.isResolved();
        boolean boolean20 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str17, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str18, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str14 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray8 = explicit7.resolve();
        byte[] byteArray11 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp13 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean14 = explicit12.equals((java.lang.Object) noOp13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp13.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str17 = noOp13.toString();
        java.lang.String str18 = noOp13.toString();
        java.lang.String str19 = noOp13.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp13.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.Class<?> wildcardClass22 = noOp13.getClass();
        boolean boolean23 = explicit7.equals((java.lang.Object) wildcardClass22);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp13 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp13.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str18, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str19, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray8 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray8);
        byte[] byteArray12 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean15 = explicit13.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str20 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp14.locate("");
        boolean boolean23 = compound9.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        java.lang.String str25 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution27 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str28 = noOp14.toString();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(classFileLocatorArray8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str25, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        byte[] byteArray9 = explicit3.resolve();
        java.lang.String str10 = explicit3.toString();
        boolean boolean11 = explicit3.isResolved();
        java.lang.String str12 = explicit3.toString();
        java.lang.String str13 = explicit3.toString();
        java.lang.Class<?> wildcardClass14 = explicit3.getClass();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str2 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray3 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName=''}");
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        byte[] byteArray1 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray1);
        org.junit.Assert.assertNotNull(classFileLocator2);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray2 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean11 = compound4.equals((java.lang.Object) boolean10);
        boolean boolean12 = illegal1.equals((java.lang.Object) compound4);
        java.lang.String str13 = illegal1.toString();
        boolean boolean14 = illegal1.isResolved();
        boolean boolean15 = illegal1.isResolved();
        org.junit.Assert.assertNotNull(classFileLocatorArray2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str13, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean6 = explicit3.equals((java.lang.Object) (short) 0);
        byte[] byteArray7 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray12 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        byte[] byteArray14 = explicit13.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        byte[] byteArray17 = explicit16.resolve();
        boolean boolean18 = explicit8.equals((java.lang.Object) byteArray17);
        boolean boolean19 = explicit8.isResolved();
        boolean boolean20 = explicit8.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        byte[] byteArray12 = explicit4.resolve();
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp22 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean23 = explicit21.equals((java.lang.Object) noOp22);
        java.lang.String str24 = noOp22.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) noOp22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray12, (net.bytebuddy.dynamic.ClassFileLocator) noOp22);
        java.lang.String str27 = noOp22.toString();
        java.lang.String str28 = noOp22.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp22 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp22.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str24, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        byte[] byteArray12 = explicit3.resolve();
        boolean boolean13 = explicit3.isResolved();
        byte[] byteArray14 = explicit3.resolve();
        java.lang.Object obj15 = null;
        boolean boolean16 = explicit3.equals(obj15);
        byte[] byteArray17 = explicit3.resolve();
        byte[] byteArray18 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        byte[] byteArray6 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray8 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray10 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound11 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray10);
        byte[] byteArray14 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean17 = explicit15.equals((java.lang.Object) noOp16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp16.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp16.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str22 = noOp16.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = noOp16.locate("");
        boolean boolean25 = compound11.equals((java.lang.Object) noOp16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) noOp16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8);
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray37 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray34, classFileLocator38);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp40 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray47 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray50 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray50);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray47, classFileLocator51);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp53 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str54 = noOp53.toString();
        java.lang.String str55 = noOp53.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray56 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator38, noOp40, classFileLocator52, noOp53 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound57 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray56);
        boolean boolean59 = compound57.equals((java.lang.Object) "hi!");
        boolean boolean61 = compound57.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution63 = compound57.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str64 = compound57.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal66 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean67 = illegal66.isResolved();
        java.lang.String str68 = illegal66.toString();
        java.lang.String str69 = illegal66.toString();
        boolean boolean70 = compound57.equals((java.lang.Object) str69);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound57);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit72 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray73 = explicit72.resolve();
        boolean boolean74 = explicit72.isResolved();
        byte[] byteArray75 = explicit72.resolve();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(classFileLocatorArray10);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str22, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertTrue("'" + noOp40 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp40.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertTrue("'" + noOp53 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp53.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str54, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str55, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(resolution63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str68, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str69, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[-1, 100]");
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        boolean boolean14 = explicit5.isResolved();
        byte[] byteArray15 = explicit5.resolve();
        boolean boolean16 = explicit5.isResolved();
        byte[] byteArray17 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp44 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str45 = noOp44.toString();
        java.lang.String str46 = noOp44.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray47 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator29, noOp31, classFileLocator43, noOp44 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound48 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray47);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound48.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound48.locate("");
        java.lang.String str53 = compound48.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound48.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray17, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit58 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + noOp44 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp44.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray47);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(classFileLocator57);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound36.locate("");
        boolean boolean41 = explicit6.equals((java.lang.Object) compound36);
        byte[] byteArray42 = explicit6.resolve();
        byte[] byteArray43 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit44 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}", byteArray43);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator45);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        boolean boolean14 = explicit5.isResolved();
        boolean boolean15 = illegal1.equals((java.lang.Object) explicit5);
        boolean boolean16 = explicit5.isResolved();
        byte[] byteArray19 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        byte[] byteArray21 = explicit20.resolve();
        boolean boolean22 = explicit20.isResolved();
        boolean boolean24 = explicit20.equals((java.lang.Object) 10L);
        java.lang.String str25 = explicit20.toString();
        java.lang.String str26 = explicit20.toString();
        byte[] byteArray27 = explicit20.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit28 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray27);
        boolean boolean29 = explicit5.equals((java.lang.Object) byteArray27);
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray39 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray36, classFileLocator40);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp42 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray49 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray52 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray52);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray49, classFileLocator53);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp55 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str56 = noOp55.toString();
        java.lang.String str57 = noOp55.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray58 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator40, noOp42, classFileLocator54, noOp55 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound59 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray58);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp60 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str61 = noOp60.toString();
        java.lang.String str62 = noOp60.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution64 = noOp60.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean65 = compound59.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal67 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean68 = compound59.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution70 = compound59.locate("");
        boolean boolean71 = explicit5.equals((java.lang.Object) compound59);
        byte[] byteArray72 = explicit5.resolve();
        boolean boolean73 = explicit5.isResolved();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str25, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str26, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertTrue("'" + noOp42 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp42.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertTrue("'" + noOp55 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp55.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str56, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str57, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray58);
        org.junit.Assert.assertTrue("'" + noOp60 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp60.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str61, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str62, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(resolution70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution2 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str3 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str6 = noOp0.toString();
        java.lang.String str7 = noOp0.toString();
        java.lang.String str8 = noOp0.toString();
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(resolution2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str3, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str7, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str8, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean6 = explicit3.equals((java.lang.Object) (short) 0);
        boolean boolean7 = explicit3.isResolved();
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        byte[] byteArray12 = explicit3.resolve();
        boolean boolean13 = explicit3.isResolved();
        byte[] byteArray14 = explicit3.resolve();
        java.lang.String str15 = explicit3.toString();
        java.lang.String str16 = explicit3.toString();
        java.lang.Object obj17 = null;
        boolean boolean18 = explicit3.equals(obj17);
        java.lang.String str19 = explicit3.toString();
        byte[] byteArray20 = explicit3.resolve();
        byte[] byteArray23 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        boolean boolean25 = explicit24.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal27 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean28 = illegal27.isResolved();
        java.lang.String str29 = illegal27.toString();
        boolean boolean30 = illegal27.isResolved();
        boolean boolean31 = illegal27.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal33 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray36 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = classFileLocator37.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean40 = illegal33.equals((java.lang.Object) resolution39);
        boolean boolean41 = illegal27.equals((java.lang.Object) boolean40);
        boolean boolean42 = illegal27.isResolved();
        boolean boolean43 = explicit24.equals((java.lang.Object) boolean42);
        byte[] byteArray44 = explicit24.resolve();
        boolean boolean45 = explicit3.equals((java.lang.Object) explicit24);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str19, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str29, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        byte[] byteArray11 = explicit3.resolve();
        byte[] byteArray12 = explicit3.resolve();
        byte[] byteArray13 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        java.lang.String str11 = explicit3.toString();
        byte[] byteArray12 = explicit3.resolve();
        boolean boolean13 = explicit3.isResolved();
        boolean boolean14 = explicit3.isResolved();
        java.lang.Object obj15 = null;
        boolean boolean16 = explicit3.equals(obj15);
        java.lang.String str17 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str17, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = compound9.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = compound9.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = compound9.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(resolution15);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18, classFileLocator22);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp24 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray34 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray31, classFileLocator35);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp37 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str38 = noOp37.toString();
        java.lang.String str39 = noOp37.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray40 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator22, noOp24, classFileLocator36, noOp37 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound41 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray40);
        boolean boolean43 = compound41.equals((java.lang.Object) "hi!");
        boolean boolean45 = compound41.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = compound41.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution49 = compound41.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = compound41.locate("hi!");
        boolean boolean52 = explicit3.equals((java.lang.Object) "hi!");
        byte[] byteArray55 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit56 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray55);
        byte[] byteArray57 = explicit56.resolve();
        boolean boolean58 = explicit56.isResolved();
        boolean boolean60 = explicit56.equals((java.lang.Object) 10L);
        boolean boolean61 = explicit56.isResolved();
        java.lang.String str62 = explicit56.toString();
        byte[] byteArray63 = explicit56.resolve();
        java.lang.String str64 = explicit56.toString();
        byte[] byteArray65 = explicit56.resolve();
        boolean boolean66 = explicit56.isResolved();
        byte[] byteArray67 = explicit56.resolve();
        java.lang.Class<?> wildcardClass68 = byteArray67.getClass();
        boolean boolean69 = explicit3.equals((java.lang.Object) byteArray67);
        java.lang.String str70 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertTrue("'" + noOp24 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp24.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertTrue("'" + noOp37 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp37.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str38, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str39, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertNotNull(resolution49);
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str62, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str64, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str70, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        boolean boolean14 = explicit5.isResolved();
        byte[] byteArray15 = explicit5.resolve();
        boolean boolean16 = explicit5.isResolved();
        byte[] byteArray17 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp44 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str45 = noOp44.toString();
        java.lang.String str46 = noOp44.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray47 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator29, noOp31, classFileLocator43, noOp44 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound48 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray47);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound48.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound48.locate("");
        java.lang.String str53 = compound48.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound48.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray17, (net.bytebuddy.dynamic.ClassFileLocator) compound48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray17);
        java.lang.Class<?> wildcardClass58 = byteArray17.getClass();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + noOp44 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp44.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray47);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray8 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray12 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean15 = explicit13.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp14.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp14.locate("hi!");
        java.lang.String str22 = noOp14.toString();
        java.lang.String str23 = noOp14.toString();
        boolean boolean24 = explicit9.equals((java.lang.Object) str23);
        boolean boolean25 = explicit9.isResolved();
        boolean boolean26 = explicit9.isResolved();
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit31 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit32 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray29);
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray42 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray42);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray39, classFileLocator43);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp45 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray55 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray55);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray52, classFileLocator56);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp58 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str59 = noOp58.toString();
        java.lang.String str60 = noOp58.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray61 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator43, noOp45, classFileLocator57, noOp58 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound62 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray61);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution64 = compound62.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution66 = compound62.locate("");
        boolean boolean67 = explicit32.equals((java.lang.Object) compound62);
        java.lang.String str68 = explicit32.toString();
        byte[] byteArray69 = explicit32.resolve();
        boolean boolean70 = explicit9.equals((java.lang.Object) explicit32);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str22, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str23, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertTrue("'" + noOp45 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp45.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertTrue("'" + noOp58 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp58.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str59, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str60, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray61);
        org.junit.Assert.assertNotNull(resolution64);
        org.junit.Assert.assertNotNull(resolution66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str68, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[100]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound2.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean6 = compound2.equals((java.lang.Object) 10.0d);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = compound2.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray11 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        byte[] byteArray13 = explicit12.resolve();
        java.lang.String str14 = explicit12.toString();
        boolean boolean15 = explicit12.isResolved();
        java.lang.String str16 = explicit12.toString();
        byte[] byteArray17 = explicit12.resolve();
        boolean boolean18 = explicit12.isResolved();
        byte[] byteArray19 = explicit12.resolve();
        boolean boolean20 = compound2.equals((java.lang.Object) byteArray19);
        java.lang.Class<?> wildcardClass21 = byteArray19.getClass();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        java.lang.String str6 = noOp0.toString();
        java.lang.String str7 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str10 = noOp0.toString();
        java.lang.String str11 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str14 = noOp0.toString();
        java.lang.String str15 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str20 = noOp0.toString();
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str7, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        boolean boolean21 = explicit20.isResolved();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp13 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray23 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray20, classFileLocator24);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp26 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str27 = noOp26.toString();
        java.lang.String str28 = noOp26.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray29 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator11, noOp13, classFileLocator25, noOp26 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        boolean boolean32 = compound30.equals((java.lang.Object) "hi!");
        boolean boolean34 = compound30.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound30.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound30.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray42 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray42);
        byte[] byteArray46 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp48 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean49 = explicit47.equals((java.lang.Object) noOp48);
        java.lang.String str50 = noOp48.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray42, (net.bytebuddy.dynamic.ClassFileLocator) noOp48);
        boolean boolean52 = compound30.equals((java.lang.Object) byteArray42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = compound30.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = compound30.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        byte[] byteArray59 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit60 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray59);
        byte[] byteArray61 = explicit60.resolve();
        boolean boolean62 = explicit60.isResolved();
        boolean boolean64 = explicit60.equals((java.lang.Object) 10L);
        boolean boolean65 = explicit60.isResolved();
        boolean boolean66 = explicit60.isResolved();
        boolean boolean67 = explicit60.isResolved();
        boolean boolean68 = explicit60.isResolved();
        boolean boolean69 = explicit60.isResolved();
        boolean boolean70 = compound30.equals((java.lang.Object) explicit60);
        byte[] byteArray71 = explicit60.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator72 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray71);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit73 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray71);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertTrue("'" + noOp13 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp13.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertTrue("'" + noOp26 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp26.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp48 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp48.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str50, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(resolution54);
        org.junit.Assert.assertNotNull(resolution56);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator72);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        java.lang.String str11 = illegal1.toString();
        boolean boolean12 = illegal1.isResolved();
        boolean boolean13 = illegal1.isResolved();
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray27 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray24, classFileLocator28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray40 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray37, classFileLocator41);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp43 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str44 = noOp43.toString();
        java.lang.String str45 = noOp43.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray46 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator28, noOp30, classFileLocator42, noOp43 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound47 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray46);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution49 = compound47.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray50 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, compound47 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound51 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound52 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound53 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        boolean boolean54 = illegal1.equals((java.lang.Object) compound53);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray55 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertTrue("'" + noOp43 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp43.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray46);
        org.junit.Assert.assertNotNull(resolution49);
        org.junit.Assert.assertNotNull(classFileLocatorArray50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str8 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str15 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str8, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        java.util.Map<java.lang.String, byte[]> strMap0 = null;
        net.bytebuddy.dynamic.ClassFileLocator.Simple simple1 = new net.bytebuddy.dynamic.ClassFileLocator.Simple(strMap0);
        // The following exception was thrown during execution in test generation
        try {
            net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution3 = simple1.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray15 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray18 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray15, classFileLocator19);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp21 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray31 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28, classFileLocator32);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp34 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str35 = noOp34.toString();
        java.lang.String str36 = noOp34.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray37 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator19, noOp21, classFileLocator33, noOp34 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound38 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray37);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound38.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str41 = compound38.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound38.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) compound38);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution46 = compound38.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution48 = compound38.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound38.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertTrue("'" + noOp21 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp21.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertTrue("'" + noOp34 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp34.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str35, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray37);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(resolution46);
        org.junit.Assert.assertNotNull(resolution48);
        org.junit.Assert.assertNotNull(resolution50);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean11 = explicit9.isResolved();
        boolean boolean13 = explicit9.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit9.isResolved();
        java.lang.String str15 = explicit9.toString();
        byte[] byteArray16 = explicit9.resolve();
        java.lang.String str17 = explicit9.toString();
        boolean boolean18 = explicit5.equals((java.lang.Object) str17);
        byte[] byteArray19 = explicit5.resolve();
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray42 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray42);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray39, classFileLocator43);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp45 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str46 = noOp45.toString();
        java.lang.String str47 = noOp45.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray48 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator30, noOp32, classFileLocator44, noOp45 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound49 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp50 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str51 = noOp50.toString();
        java.lang.String str52 = noOp50.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = noOp50.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean55 = compound49.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal57 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean58 = compound49.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}", byteArray19, (net.bytebuddy.dynamic.ClassFileLocator) compound49);
        byte[] byteArray61 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator62 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution64 = classFileLocator62.locate("ClassFileLocator.NoOp.INSTANCE");
        boolean boolean65 = compound49.equals((java.lang.Object) "ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution67 = compound49.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution69 = compound49.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        java.lang.String str70 = compound49.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str17, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertTrue("'" + noOp45 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp45.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str47, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray48);
        org.junit.Assert.assertTrue("'" + noOp50 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp50.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str51, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str52, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(classFileLocator62);
        org.junit.Assert.assertNotNull(resolution64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(resolution67);
        org.junit.Assert.assertNotNull(resolution69);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray43 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray40, classFileLocator44);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp46 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray53 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray56 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray53, classFileLocator57);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp59 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str60 = noOp59.toString();
        java.lang.String str61 = noOp59.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray62 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator44, noOp46, classFileLocator58, noOp59 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound63 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray62);
        boolean boolean65 = compound63.equals((java.lang.Object) "hi!");
        boolean boolean67 = compound63.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution69 = compound63.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution71 = compound63.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray75 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator76 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray75);
        byte[] byteArray79 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit80 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray79);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp81 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean82 = explicit80.equals((java.lang.Object) noOp81);
        java.lang.String str83 = noOp81.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator84 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray75, (net.bytebuddy.dynamic.ClassFileLocator) noOp81);
        boolean boolean85 = compound63.equals((java.lang.Object) byteArray75);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution87 = compound63.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean88 = compound29.equals((java.lang.Object) resolution87);
        java.lang.String str89 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution91 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution93 = compound29.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution95 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertTrue("'" + noOp46 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp46.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertTrue("'" + noOp59 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp59.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str60, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str61, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(resolution69);
        org.junit.Assert.assertNotNull(resolution71);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator76);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp81 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp81.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str83, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(resolution87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(resolution91);
        org.junit.Assert.assertNotNull(resolution93);
        org.junit.Assert.assertNotNull(resolution95);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        java.io.File file0 = null;
        net.bytebuddy.dynamic.ClassFileLocator.ForFolder forFolder1 = new net.bytebuddy.dynamic.ClassFileLocator.ForFolder(file0);
        java.io.File file2 = null;
        net.bytebuddy.dynamic.ClassFileLocator.ForFolder forFolder3 = new net.bytebuddy.dynamic.ClassFileLocator.ForFolder(file2);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = forFolder1.equals((java.lang.Object) forFolder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate(".class");
        java.lang.Class<?> wildcardClass12 = noOp4.getClass();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        java.lang.String str4 = illegal1.toString();
        byte[] byteArray7 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray20 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray17, classFileLocator21);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp23 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray33 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray33);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray30, classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp36 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str37 = noOp36.toString();
        java.lang.String str38 = noOp36.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray39 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator21, noOp23, classFileLocator35, noOp36 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound40.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound40.locate("");
        boolean boolean45 = explicit10.equals((java.lang.Object) compound40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = compound40.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean48 = resolution47.isResolved();
        boolean boolean49 = illegal1.equals((java.lang.Object) boolean48);
        boolean boolean50 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertTrue("'" + noOp23 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp23.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertTrue("'" + noOp36 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp36.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str37, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str38, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray39);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray7);
        byte[] byteArray16 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, classFileLocator20);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp22 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray32 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray29, classFileLocator33);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp35 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str36 = noOp35.toString();
        java.lang.String str37 = noOp35.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray38 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator20, noOp22, classFileLocator34, noOp35 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound39 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        boolean boolean41 = compound39.equals((java.lang.Object) "hi!");
        boolean boolean43 = compound39.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution45 = compound39.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str46 = compound39.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution48 = compound39.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound39.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, (net.bytebuddy.dynamic.ClassFileLocator) compound39);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertTrue("'" + noOp22 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp22.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertTrue("'" + noOp35 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp35.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str37, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(resolution45);
        org.junit.Assert.assertNotNull(resolution48);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertNotNull(classFileLocator51);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        java.lang.String str9 = explicit4.toString();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray17);
        boolean boolean20 = explicit13.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName=''}");
        byte[] byteArray21 = explicit13.resolve();
        byte[] byteArray26 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit27 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray26);
        byte[] byteArray28 = explicit27.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit30 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray28);
        byte[] byteArray37 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray40 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray37, classFileLocator41);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp43 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray50 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray53 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray53);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray50, classFileLocator54);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp56 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str57 = noOp56.toString();
        java.lang.String str58 = noOp56.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray59 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator41, noOp43, classFileLocator55, noOp56 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound60 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray59);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution62 = compound60.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str63 = compound60.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution65 = compound60.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray28, (net.bytebuddy.dynamic.ClassFileLocator) compound60);
        java.lang.String str67 = compound60.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray21, (net.bytebuddy.dynamic.ClassFileLocator) compound60);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit69 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertTrue("'" + noOp43 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp43.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertTrue("'" + noOp56 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp56.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str57, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str58, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray59);
        org.junit.Assert.assertNotNull(resolution62);
        org.junit.Assert.assertNotNull(resolution65);
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertNotNull(classFileLocator68);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        java.util.jar.JarFile jarFile0 = null;
        net.bytebuddy.dynamic.ClassFileLocator.ForJarFile forJarFile1 = new net.bytebuddy.dynamic.ClassFileLocator.ForJarFile(jarFile0);
        // The following exception was thrown during execution in test generation
        try {
            net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution3 = forJarFile1.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='.class'}'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution3 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str6 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str9 = noOp0.toString();
        java.lang.String str10 = noOp0.toString();
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution3);
        org.junit.Assert.assertNotNull(resolution5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str9, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        byte[] byteArray4 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator5 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        byte[] byteArray11 = explicit10.resolve();
        boolean boolean12 = explicit10.isResolved();
        boolean boolean14 = explicit10.equals((java.lang.Object) 10L);
        boolean boolean15 = explicit10.isResolved();
        java.lang.String str16 = explicit10.toString();
        byte[] byteArray17 = explicit10.resolve();
        java.lang.String str18 = explicit10.toString();
        boolean boolean19 = explicit6.equals((java.lang.Object) str18);
        byte[] byteArray20 = explicit6.resolve();
        byte[] byteArray21 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}", byteArray21);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str18, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocator24);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str2 = compound1.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound1.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        byte[] byteArray20 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        java.lang.Class<?> wildcardClass24 = byteArray12.getClass();
        boolean boolean25 = compound1.equals((java.lang.Object) byteArray12);
        java.lang.String str26 = compound1.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str2, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str26, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        byte[] byteArray17 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray42 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray42);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray39, classFileLocator43);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp45 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str46 = noOp45.toString();
        java.lang.String str47 = noOp45.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray48 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator30, noOp32, classFileLocator44, noOp45 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound49 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        boolean boolean51 = compound49.equals((java.lang.Object) "hi!");
        java.lang.String str52 = compound49.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray17, (net.bytebuddy.dynamic.ClassFileLocator) compound49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound49);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit55 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray56 = explicit55.resolve();
        java.lang.String str57 = explicit55.toString();
        byte[] byteArray64 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray67 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray67);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray64, classFileLocator68);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit70 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray64);
        java.lang.String str71 = explicit70.toString();
        boolean boolean72 = explicit55.equals((java.lang.Object) str71);
        byte[] byteArray73 = explicit55.resolve();
        byte[] byteArray74 = explicit55.resolve();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray75 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound76 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray75);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound77 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray75);
        java.lang.String str78 = compound77.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray79 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound80 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray79);
        boolean boolean81 = compound77.equals((java.lang.Object) classFileLocatorArray79);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound82 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray79);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound83 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray79);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound84 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray79);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound85 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray79);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution87 = compound85.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator88 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray74, (net.bytebuddy.dynamic.ClassFileLocator) compound85);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertTrue("'" + noOp45 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp45.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str47, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}" + "'", str57, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}" + "'", str71, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(classFileLocatorArray75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str78, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(classFileLocatorArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(resolution87);
        org.junit.Assert.assertNotNull(classFileLocator88);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        java.lang.String str5 = explicit3.toString();
        boolean boolean6 = explicit3.isResolved();
        java.lang.String str7 = explicit3.toString();
        boolean boolean8 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str5, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str7, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("");
        byte[] byteArray40 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp42 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean43 = explicit41.equals((java.lang.Object) noOp42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution45 = noOp42.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = noOp42.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str48 = noOp42.toString();
        java.lang.String str49 = noOp42.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = noOp42.locate("hi!");
        boolean boolean52 = compound29.equals((java.lang.Object) noOp42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = noOp42.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp42 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp42.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(resolution45);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(resolution54);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        byte[] byteArray7 = explicit4.resolve();
        boolean boolean8 = explicit4.isResolved();
        boolean boolean9 = explicit4.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str13 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp12);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        byte[] byteArray18 = explicit17.resolve();
        byte[] byteArray19 = explicit17.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray25 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray25);
        byte[] byteArray27 = explicit26.resolve();
        boolean boolean28 = explicit26.isResolved();
        boolean boolean30 = explicit26.equals((java.lang.Object) 10L);
        boolean boolean31 = explicit26.isResolved();
        java.lang.String str32 = explicit26.toString();
        byte[] byteArray33 = explicit26.resolve();
        java.lang.String str34 = explicit26.toString();
        boolean boolean35 = explicit26.isResolved();
        boolean boolean36 = illegal22.equals((java.lang.Object) explicit26);
        boolean boolean37 = explicit26.isResolved();
        java.lang.String str38 = explicit26.toString();
        byte[] byteArray41 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit42 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray41);
        byte[] byteArray43 = explicit42.resolve();
        boolean boolean44 = explicit42.isResolved();
        boolean boolean46 = explicit42.equals((java.lang.Object) 10L);
        boolean boolean47 = explicit42.isResolved();
        java.lang.String str48 = explicit42.toString();
        boolean boolean49 = explicit42.isResolved();
        boolean boolean50 = explicit42.isResolved();
        boolean boolean51 = explicit26.equals((java.lang.Object) boolean50);
        byte[] byteArray52 = explicit26.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp53 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str54 = noOp53.toString();
        java.lang.String str55 = noOp53.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = noOp53.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str58 = noOp53.toString();
        java.lang.String str59 = noOp53.toString();
        java.lang.String str60 = noOp53.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution62 = noOp53.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str63 = noOp53.toString();
        java.lang.String str64 = noOp53.toString();
        java.lang.String str65 = noOp53.toString();
        java.lang.String str66 = noOp53.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution68 = noOp53.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray52, (net.bytebuddy.dynamic.ClassFileLocator) noOp53);
        boolean boolean70 = explicit17.equals((java.lang.Object) noOp53);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str32, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str34, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str38, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str48, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp53 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp53.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str54, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str55, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str58, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str59, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str60, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str63, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str64, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str65, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str66, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution68);
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        byte[] byteArray1 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray1);
        org.junit.Assert.assertNotNull(classFileLocator2);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        byte[] byteArray12 = explicit3.resolve();
        boolean boolean13 = explicit3.isResolved();
        byte[] byteArray14 = explicit3.resolve();
        java.lang.Object obj15 = null;
        boolean boolean16 = explicit3.equals(obj15);
        byte[] byteArray17 = explicit3.resolve();
        byte[] byteArray18 = explicit3.resolve();
        boolean boolean19 = explicit3.isResolved();
        boolean boolean20 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean3 = illegal1.equals((java.lang.Object) classFileLocator2);
        java.lang.String str4 = illegal1.toString();
        java.lang.String str5 = illegal1.toString();
        org.junit.Assert.assertNotNull(classFileLocator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str5, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        boolean boolean33 = compound31.equals((java.lang.Object) "hi!");
        java.lang.String str34 = compound31.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean37 = illegal1.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean38 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal40 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str41 = illegal40.toString();
        java.lang.String str42 = illegal40.toString();
        boolean boolean43 = illegal40.isResolved();
        boolean boolean44 = illegal1.equals((java.lang.Object) illegal40);
        boolean boolean45 = illegal1.isResolved();
        boolean boolean46 = illegal1.isResolved();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str41, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str42, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        boolean boolean33 = compound31.equals((java.lang.Object) "hi!");
        boolean boolean35 = compound31.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound31.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound31.locate("");
        boolean boolean40 = illegal1.equals((java.lang.Object) "");
        java.lang.String str41 = illegal1.toString();
        java.lang.String str42 = illegal1.toString();
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        byte[] byteArray47 = explicit46.resolve();
        boolean boolean48 = explicit46.isResolved();
        boolean boolean50 = explicit46.equals((java.lang.Object) 10L);
        boolean boolean51 = explicit46.isResolved();
        boolean boolean52 = explicit46.isResolved();
        boolean boolean53 = illegal1.equals((java.lang.Object) explicit46);
        boolean boolean54 = explicit46.isResolved();
        java.lang.String str55 = explicit46.toString();
        java.lang.Class<?> wildcardClass56 = explicit46.getClass();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str41, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str42, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str55, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray8 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray12 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean15 = explicit13.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp14.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp14.locate("hi!");
        java.lang.String str22 = noOp14.toString();
        java.lang.String str23 = noOp14.toString();
        boolean boolean24 = explicit9.equals((java.lang.Object) str23);
        byte[] byteArray25 = explicit9.resolve();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str22, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str23, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        java.lang.String str4 = illegal1.toString();
        byte[] byteArray7 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray20 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray17, classFileLocator21);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp23 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray33 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray33);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray30, classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp36 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str37 = noOp36.toString();
        java.lang.String str38 = noOp36.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray39 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator21, noOp23, classFileLocator35, noOp36 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound40.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound40.locate("");
        boolean boolean45 = explicit10.equals((java.lang.Object) compound40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = compound40.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean48 = resolution47.isResolved();
        boolean boolean49 = illegal1.equals((java.lang.Object) boolean48);
        boolean boolean50 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertTrue("'" + noOp23 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp23.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertTrue("'" + noOp36 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp36.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str37, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str38, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray39);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean3 = illegal1.equals((java.lang.Object) classFileLocator2);
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        boolean boolean6 = illegal1.isResolved();
        boolean boolean7 = illegal1.isResolved();
        boolean boolean8 = illegal1.isResolved();
        boolean boolean9 = illegal1.isResolved();
        org.junit.Assert.assertNotNull(classFileLocator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        boolean boolean12 = explicit3.isResolved();
        byte[] byteArray13 = explicit3.resolve();
        java.lang.String str14 = explicit3.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean17 = explicit3.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray18 = explicit3.resolve();
        byte[] byteArray19 = explicit3.resolve();
        byte[] byteArray20 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        byte[] byteArray38 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit39 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray38);
        byte[] byteArray40 = explicit39.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray42 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound43 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray42);
        byte[] byteArray46 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp48 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean49 = explicit47.equals((java.lang.Object) noOp48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = noOp48.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = noOp48.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str54 = noOp48.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = noOp48.locate("");
        boolean boolean57 = compound43.equals((java.lang.Object) noOp48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray40, (net.bytebuddy.dynamic.ClassFileLocator) noOp48);
        java.lang.String str59 = noOp48.toString();
        java.lang.String str60 = noOp48.toString();
        boolean boolean61 = compound29.equals((java.lang.Object) noOp48);
        java.lang.String str62 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution64 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution66 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocatorArray42);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp48 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp48.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str54, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str59, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str60, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(resolution64);
        org.junit.Assert.assertNotNull(resolution66);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        java.lang.String str11 = explicit3.toString();
        byte[] byteArray12 = explicit3.resolve();
        boolean boolean13 = explicit3.isResolved();
        boolean boolean14 = explicit3.isResolved();
        java.lang.Object obj15 = null;
        boolean boolean16 = explicit3.equals(obj15);
        byte[] byteArray20 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray25 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray25);
        byte[] byteArray27 = explicit26.resolve();
        boolean boolean28 = explicit26.isResolved();
        boolean boolean30 = explicit26.equals((java.lang.Object) 10L);
        boolean boolean31 = explicit26.isResolved();
        java.lang.String str32 = explicit26.toString();
        byte[] byteArray33 = explicit26.resolve();
        java.lang.String str34 = explicit26.toString();
        boolean boolean35 = explicit22.equals((java.lang.Object) str34);
        byte[] byteArray36 = explicit22.resolve();
        byte[] byteArray37 = explicit22.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray37);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit39 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray37);
        boolean boolean40 = explicit3.equals((java.lang.Object) explicit39);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str32, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str34, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        byte[] byteArray1 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray1);
        org.junit.Assert.assertNotNull(classFileLocator2);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) -1, (byte) 1, (byte) -1, (byte) 0, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}", byteArray8);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, -1, 1, -1, 0, 100]");
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(classFileLocator12);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray8, classFileLocator15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        boolean boolean19 = explicit18.isResolved();
        boolean boolean20 = explicit18.isResolved();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray8 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray8);
        byte[] byteArray12 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean15 = explicit13.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str20 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp14.locate("");
        boolean boolean23 = compound9.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution26 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str27 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution29 = noOp14.locate(".class");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = noOp14.locate("ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(classFileLocatorArray8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(resolution26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution29);
        org.junit.Assert.assertNotNull(resolution31);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        boolean boolean33 = compound31.equals((java.lang.Object) "hi!");
        boolean boolean35 = compound31.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound31.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound31.locate("");
        boolean boolean40 = illegal1.equals((java.lang.Object) "");
        java.lang.String str41 = illegal1.toString();
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        byte[] byteArray47 = explicit46.resolve();
        java.lang.String str48 = explicit46.toString();
        boolean boolean49 = explicit46.isResolved();
        java.lang.String str50 = explicit46.toString();
        byte[] byteArray51 = explicit46.resolve();
        boolean boolean52 = explicit46.isResolved();
        byte[] byteArray53 = explicit46.resolve();
        byte[] byteArray58 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit59 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray58);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator60 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray58);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray58);
        byte[] byteArray63 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator64 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray63);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray58, classFileLocator64);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution67 = classFileLocator64.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray53, classFileLocator64);
        boolean boolean69 = illegal1.equals((java.lang.Object) byteArray53);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit70 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray53);
        java.lang.String str71 = explicit70.toString();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str41, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str48, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str50, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator60);
        org.junit.Assert.assertNotNull(classFileLocator64);
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertNotNull(resolution67);
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str71, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp7 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean8 = explicit6.equals((java.lang.Object) noOp7);
        boolean boolean9 = illegal1.equals((java.lang.Object) explicit6);
        java.lang.String str10 = illegal1.toString();
        java.lang.String str11 = illegal1.toString();
        java.lang.String str12 = illegal1.toString();
        byte[] byteArray15 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        byte[] byteArray17 = explicit16.resolve();
        boolean boolean18 = explicit16.isResolved();
        boolean boolean20 = explicit16.equals((java.lang.Object) 10L);
        boolean boolean21 = explicit16.isResolved();
        java.lang.String str22 = explicit16.toString();
        boolean boolean23 = explicit16.isResolved();
        boolean boolean24 = explicit16.isResolved();
        byte[] byteArray25 = explicit16.resolve();
        byte[] byteArray26 = explicit16.resolve();
        java.lang.Class<?> wildcardClass27 = byteArray26.getClass();
        boolean boolean28 = illegal1.equals((java.lang.Object) wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp7 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp7.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str10, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str12, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str22, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator0 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        java.lang.Class<?> wildcardClass1 = classFileLocator0.getClass();
        org.junit.Assert.assertNotNull(classFileLocator0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        boolean boolean6 = explicit3.isResolved();
        boolean boolean7 = explicit3.isResolved();
        java.lang.String str8 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp47 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean48 = explicit46.equals((java.lang.Object) noOp47);
        java.lang.String str49 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray41, (net.bytebuddy.dynamic.ClassFileLocator) noOp47);
        boolean boolean51 = compound29.equals((java.lang.Object) byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray54 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound55 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray54);
        java.lang.String str56 = compound55.toString();
        java.lang.String str57 = compound55.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution59 = compound55.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution61 = compound55.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution63 = compound55.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean64 = compound29.equals((java.lang.Object) compound55);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution66 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp47 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp47.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(classFileLocatorArray54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str56, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str57, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution59);
        org.junit.Assert.assertNotNull(resolution61);
        org.junit.Assert.assertNotNull(resolution63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(resolution66);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        byte[] byteArray14 = explicit5.resolve();
        boolean boolean15 = explicit5.isResolved();
        byte[] byteArray16 = explicit5.resolve();
        java.lang.Object obj17 = null;
        boolean boolean18 = explicit5.equals(obj17);
        byte[] byteArray19 = explicit5.resolve();
        java.lang.String str20 = explicit5.toString();
        byte[] byteArray21 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp22 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str23 = noOp22.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution25 = noOp22.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution27 = noOp22.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str28 = noOp22.toString();
        java.lang.String str29 = noOp22.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray21, (net.bytebuddy.dynamic.ClassFileLocator) noOp22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str20, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp22 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp22.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str23, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution25);
        org.junit.Assert.assertNotNull(resolution27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        byte[] byteArray12 = explicit3.resolve();
        boolean boolean13 = explicit3.isResolved();
        byte[] byteArray14 = explicit3.resolve();
        java.lang.Class<?> wildcardClass15 = explicit3.getClass();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        java.lang.String str9 = explicit4.toString();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray11 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound12 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound13 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound14 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        boolean boolean15 = explicit3.equals((java.lang.Object) classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound16 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound17 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = compound18.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = compound18.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='.class'}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(classFileLocatorArray11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertNotNull(resolution22);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound2.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean7 = illegal6.isResolved();
        java.lang.String str8 = illegal6.toString();
        java.lang.String str9 = illegal6.toString();
        java.lang.String str10 = illegal6.toString();
        boolean boolean11 = illegal6.isResolved();
        boolean boolean12 = compound2.equals((java.lang.Object) illegal6);
        boolean boolean13 = illegal6.isResolved();
        boolean boolean14 = illegal6.isResolved();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str9, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str10, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        byte[] byteArray5 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray17 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray14, classFileLocator18);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp20 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray27, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp33 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str34 = noOp33.toString();
        java.lang.String str35 = noOp33.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray36 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator18, noOp20, classFileLocator32, noOp33 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound37 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        boolean boolean39 = compound37.equals((java.lang.Object) "hi!");
        java.lang.String str40 = compound37.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray5, (net.bytebuddy.dynamic.ClassFileLocator) compound37);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal44 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str45 = illegal44.toString();
        byte[] byteArray48 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit49 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray48);
        byte[] byteArray50 = explicit49.resolve();
        boolean boolean51 = explicit49.isResolved();
        boolean boolean53 = explicit49.equals((java.lang.Object) 10L);
        java.lang.String str54 = explicit49.toString();
        byte[] byteArray55 = explicit49.resolve();
        boolean boolean56 = illegal44.equals((java.lang.Object) byteArray55);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray55);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray5, classFileLocator57);
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray68 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray68);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray65, classFileLocator69);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp71 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray78 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray81 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator82 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray81);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator83 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray78, classFileLocator82);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp84 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str85 = noOp84.toString();
        java.lang.String str86 = noOp84.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray87 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator69, noOp71, classFileLocator83, noOp84 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound88 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray87);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound89 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray87);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound90 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray87);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator91 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5, (net.bytebuddy.dynamic.ClassFileLocator) compound90);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution93 = classFileLocator91.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertTrue("'" + noOp20 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp20.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertTrue("'" + noOp33 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp33.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str35, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str45, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str54, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertNotNull(classFileLocator70);
        org.junit.Assert.assertTrue("'" + noOp71 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp71.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator82);
        org.junit.Assert.assertNotNull(classFileLocator83);
        org.junit.Assert.assertTrue("'" + noOp84 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp84.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str85, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str86, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray87);
        org.junit.Assert.assertNotNull(classFileLocator91);
        org.junit.Assert.assertNotNull(resolution93);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str34 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        java.lang.ClassLoader classLoader0 = null;
        java.security.AccessControlContext accessControlContext1 = null;
        net.bytebuddy.dynamic.ClassFileLocator.AgentBased.ClassLoadingDelegate classLoadingDelegate2 = net.bytebuddy.dynamic.ClassFileLocator.AgentBased.ClassLoadingDelegate.Default.of(classLoader0, accessControlContext1);
        java.lang.ClassLoader classLoader3 = classLoadingDelegate2.getClassLoader();
        java.lang.ClassLoader classLoader4 = classLoadingDelegate2.getClassLoader();
        java.lang.ClassLoader classLoader5 = classLoadingDelegate2.getClassLoader();
        // The following exception was thrown during execution in test generation
        try {
            net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.AgentBased.fromInstalledAgent(classLoader5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: The Byte Buddy agent is not installed or not accessible");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(classLoadingDelegate2);
        org.junit.Assert.assertNotNull(classLoader3);
        org.junit.Assert.assertNotNull(classLoader4);
        org.junit.Assert.assertNotNull(classLoader5);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator5 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        java.lang.String str7 = explicit6.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str7, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean3 = illegal1.equals((java.lang.Object) classFileLocator2);
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        boolean boolean38 = compound36.equals((java.lang.Object) "hi!");
        boolean boolean40 = compound36.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound36.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray48 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray48);
        byte[] byteArray52 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit53 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray52);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp54 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean55 = explicit53.equals((java.lang.Object) noOp54);
        java.lang.String str56 = noOp54.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray48, (net.bytebuddy.dynamic.ClassFileLocator) noOp54);
        boolean boolean58 = compound36.equals((java.lang.Object) byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray48);
        boolean boolean60 = illegal1.equals((java.lang.Object) byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray48);
        boolean boolean62 = explicit61.isResolved();
        java.lang.String str63 = explicit61.toString();
        org.junit.Assert.assertNotNull(classFileLocator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp54 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp54.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str56, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str63, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray8, classFileLocator15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        boolean boolean19 = explicit18.isResolved();
        byte[] byteArray20 = explicit18.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 10, -1, -1, 1]");
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp4.locate("");
        boolean boolean9 = resolution8.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound29.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str42 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(resolution41);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        java.lang.String str11 = illegal1.toString();
        java.lang.String str12 = illegal1.toString();
        boolean boolean13 = illegal1.isResolved();
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray22 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray24 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound25 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray24);
        byte[] byteArray28 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit29 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean31 = explicit29.equals((java.lang.Object) noOp30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = noOp30.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = noOp30.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str36 = noOp30.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = noOp30.locate("");
        boolean boolean39 = compound25.equals((java.lang.Object) noOp30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray22, (net.bytebuddy.dynamic.ClassFileLocator) noOp30);
        byte[] byteArray47 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray50 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray50);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray47, classFileLocator51);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp53 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray63 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator64 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray63);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray60, classFileLocator64);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp66 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str67 = noOp66.toString();
        java.lang.String str68 = noOp66.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray69 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator51, noOp53, classFileLocator65, noOp66 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound70 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray69);
        boolean boolean72 = compound70.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray22, (net.bytebuddy.dynamic.ClassFileLocator) compound70);
        byte[] byteArray76 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator77 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray76);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit78 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray76);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit79 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray76);
        boolean boolean80 = explicit79.isResolved();
        byte[] byteArray81 = explicit79.resolve();
        byte[] byteArray84 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit85 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray84);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp86 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean87 = explicit85.equals((java.lang.Object) noOp86);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution89 = noOp86.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution91 = noOp86.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution93 = noOp86.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        boolean boolean94 = explicit79.equals((java.lang.Object) noOp86);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator95 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22, (net.bytebuddy.dynamic.ClassFileLocator) noOp86);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution97 = noOp86.locate("hi!");
        boolean boolean98 = illegal1.equals((java.lang.Object) "hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str12, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocatorArray24);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertTrue("'" + noOp53 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp53.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator64);
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertTrue("'" + noOp66 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp66.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str67, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str68, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[100]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp86 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp86.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(resolution89);
        org.junit.Assert.assertNotNull(resolution91);
        org.junit.Assert.assertNotNull(resolution93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(classFileLocator95);
        org.junit.Assert.assertNotNull(resolution97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("");
        byte[] byteArray40 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp42 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean43 = explicit41.equals((java.lang.Object) noOp42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution45 = noOp42.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = noOp42.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str48 = noOp42.toString();
        java.lang.String str49 = noOp42.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = noOp42.locate("hi!");
        boolean boolean52 = compound29.equals((java.lang.Object) noOp42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp42 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp42.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(resolution45);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(resolution54);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean12 = explicit8.equals((java.lang.Object) 10L);
        boolean boolean13 = explicit8.isResolved();
        java.lang.String str14 = explicit8.toString();
        byte[] byteArray15 = explicit8.resolve();
        java.lang.String str16 = explicit8.toString();
        boolean boolean17 = explicit4.equals((java.lang.Object) str16);
        byte[] byteArray18 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        byte[] byteArray20 = explicit19.resolve();
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray31 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28, classFileLocator32);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit34 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}", byteArray28);
        boolean boolean36 = explicit19.equals((java.lang.Object) byteArray28);
        byte[] byteArray39 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit40 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp41 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean42 = explicit40.equals((java.lang.Object) noOp41);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = noOp41.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution46 = noOp41.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str47 = noOp41.toString();
        java.lang.String str48 = noOp41.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = noOp41.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        java.lang.String str51 = noOp41.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = noOp41.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        boolean boolean54 = explicit19.equals((java.lang.Object) resolution53);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp41 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp41.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertNotNull(resolution46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str47, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str51, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("");
        java.lang.String str38 = compound29.toString();
        java.lang.String str39 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound29.locate(".class");
        byte[] byteArray52 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray52);
        byte[] byteArray58 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit59 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray58);
        byte[] byteArray60 = explicit59.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator61 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray60);
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray72 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray72);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator74 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray69, classFileLocator73);
        byte[] byteArray77 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator78 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray77);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator79 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray69, classFileLocator78);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator80 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray60, classFileLocator78);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator81 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray52, classFileLocator80);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit82 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray52);
        boolean boolean83 = compound29.equals((java.lang.Object) explicit82);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution85 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str86 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution88 = compound29.locate("");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator61);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertNotNull(classFileLocator74);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator78);
        org.junit.Assert.assertNotNull(classFileLocator79);
        org.junit.Assert.assertNotNull(classFileLocator80);
        org.junit.Assert.assertNotNull(classFileLocator81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(resolution85);
        org.junit.Assert.assertNotNull(resolution88);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str34 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str37 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(resolution39);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str14 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution16);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("");
        java.lang.String str10 = noOp4.toString();
        java.lang.String str11 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray14 = resolution13.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22);
        byte[] byteArray36 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit37 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray36);
        byte[] byteArray38 = explicit37.resolve();
        boolean boolean39 = explicit37.isResolved();
        boolean boolean41 = explicit37.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = classFileLocator42.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean45 = explicit37.equals((java.lang.Object) classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray22);
        boolean boolean48 = explicit12.equals((java.lang.Object) explicit47);
        byte[] byteArray49 = explicit47.resolve();
        java.lang.String str50 = explicit47.toString();
        boolean boolean51 = explicit47.isResolved();
        byte[] byteArray52 = explicit47.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit53 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray52);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}" + "'", str50, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 10, -1, -1, 1]");
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean12 = explicit8.equals((java.lang.Object) 10L);
        boolean boolean13 = explicit8.isResolved();
        java.lang.String str14 = explicit8.toString();
        byte[] byteArray15 = explicit8.resolve();
        java.lang.String str16 = explicit8.toString();
        boolean boolean17 = explicit8.isResolved();
        boolean boolean18 = illegal4.equals((java.lang.Object) explicit8);
        boolean boolean19 = explicit8.isResolved();
        byte[] byteArray20 = explicit8.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray24 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound25 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray24);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound26 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray24);
        java.lang.String str27 = compound26.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean30 = compound26.equals((java.lang.Object) classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound32 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound33 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound34 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        java.lang.String str36 = compound35.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='.class'}'}", byteArray20, (net.bytebuddy.dynamic.ClassFileLocator) compound35);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocatorArray24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str27, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str36, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(classFileLocator37);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp7 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean8 = explicit6.equals((java.lang.Object) noOp7);
        boolean boolean9 = illegal1.equals((java.lang.Object) explicit6);
        boolean boolean10 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray11 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for hi!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp7 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp7.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean4 = illegal3.isResolved();
        byte[] byteArray16 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, classFileLocator20);
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16);
        byte[] byteArray30 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit31 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray30);
        byte[] byteArray32 = explicit31.resolve();
        boolean boolean33 = explicit31.isResolved();
        boolean boolean35 = explicit31.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = classFileLocator36.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean39 = explicit31.equals((java.lang.Object) classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16, classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray16, classFileLocator41);
        byte[] byteArray46 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray46);
        byte[] byteArray48 = explicit47.resolve();
        boolean boolean49 = explicit47.isResolved();
        boolean boolean51 = explicit47.equals((java.lang.Object) 10L);
        boolean boolean52 = explicit47.isResolved();
        java.lang.String str53 = explicit47.toString();
        byte[] byteArray54 = explicit47.resolve();
        byte[] byteArray55 = explicit47.resolve();
        byte[] byteArray59 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator60 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray59);
        byte[] byteArray63 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit64 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray63);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp65 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean66 = explicit64.equals((java.lang.Object) noOp65);
        java.lang.String str67 = noOp65.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray59, (net.bytebuddy.dynamic.ClassFileLocator) noOp65);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray55, (net.bytebuddy.dynamic.ClassFileLocator) noOp65);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) noOp65);
        boolean boolean71 = illegal3.equals((java.lang.Object) noOp65);
        java.lang.String str72 = noOp65.toString();
        boolean boolean73 = illegal1.equals((java.lang.Object) noOp65);
        java.lang.String str74 = illegal1.toString();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str53, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator60);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp65 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp65.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str67, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertNotNull(classFileLocator70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str72, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}'}" + "'", str74, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}'}");
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str34 = compound29.toString();
        java.lang.String str35 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str4 = illegal3.toString();
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean12 = explicit8.equals((java.lang.Object) 10L);
        boolean boolean13 = explicit8.isResolved();
        java.lang.String str14 = explicit8.toString();
        byte[] byteArray15 = explicit8.resolve();
        java.lang.String str16 = explicit8.toString();
        byte[] byteArray17 = explicit8.resolve();
        boolean boolean18 = illegal3.equals((java.lang.Object) explicit8);
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray38 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp44 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str45 = noOp44.toString();
        java.lang.String str46 = noOp44.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray47 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator29, noOp31, classFileLocator43, noOp44 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound48 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray47);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound48.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound48.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = compound48.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean55 = illegal3.equals((java.lang.Object) resolution54);
        boolean boolean56 = illegal1.equals((java.lang.Object) illegal3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertTrue("'" + noOp44 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp44.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray47);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(resolution54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        java.lang.String str12 = explicit4.toString();
        java.lang.String str13 = explicit4.toString();
        byte[] byteArray14 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        byte[] byteArray14 = explicit5.resolve();
        boolean boolean15 = explicit5.isResolved();
        byte[] byteArray16 = explicit5.resolve();
        java.lang.Object obj17 = null;
        boolean boolean18 = explicit5.equals(obj17);
        byte[] byteArray19 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray19);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound31.locate("");
        boolean boolean36 = illegal1.equals((java.lang.Object) resolution35);
        java.lang.String str37 = illegal1.toString();
        byte[] byteArray40 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        byte[] byteArray42 = explicit41.resolve();
        boolean boolean43 = explicit41.isResolved();
        boolean boolean45 = explicit41.equals((java.lang.Object) 10L);
        boolean boolean46 = explicit41.isResolved();
        java.lang.String str47 = explicit41.toString();
        byte[] byteArray48 = explicit41.resolve();
        boolean boolean49 = illegal1.equals((java.lang.Object) byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit50 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray48);
        java.lang.String str51 = explicit50.toString();
        java.lang.String str52 = explicit50.toString();
        boolean boolean53 = explicit50.isResolved();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str37, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str47, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str51, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str52, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        byte[] byteArray12 = explicit6.resolve();
        java.lang.String str13 = explicit6.toString();
        boolean boolean14 = explicit6.isResolved();
        java.lang.String str15 = explicit6.toString();
        byte[] byteArray16 = explicit6.resolve();
        byte[] byteArray17 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray17);
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        byte[] byteArray29 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray32 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray32);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray29, classFileLocator33);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp35 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray42 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray45 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray42, classFileLocator46);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp48 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str49 = noOp48.toString();
        java.lang.String str50 = noOp48.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray51 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator33, noOp35, classFileLocator47, noOp48 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound52 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray51);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution54 = compound52.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray55 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator22, compound52 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound56 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray55);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound57 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray55);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound58 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray55);
        java.lang.String str59 = compound58.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator60 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray17, (net.bytebuddy.dynamic.ClassFileLocator) compound58);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator61 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray17);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str15, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertTrue("'" + noOp35 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp35.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertTrue("'" + noOp48 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp48.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str50, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray51);
        org.junit.Assert.assertNotNull(resolution54);
        org.junit.Assert.assertNotNull(classFileLocatorArray55);
        org.junit.Assert.assertNotNull(classFileLocator60);
        org.junit.Assert.assertNotNull(classFileLocator61);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, classFileLocator15);
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, classFileLocator20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11);
        byte[] byteArray25 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray25);
        byte[] byteArray27 = explicit26.resolve();
        boolean boolean28 = explicit26.isResolved();
        boolean boolean30 = explicit26.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = classFileLocator31.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean34 = explicit26.equals((java.lang.Object) classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray11, classFileLocator36);
        byte[] byteArray41 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit42 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray41);
        byte[] byteArray43 = explicit42.resolve();
        boolean boolean44 = explicit42.isResolved();
        boolean boolean46 = explicit42.equals((java.lang.Object) 10L);
        boolean boolean47 = explicit42.isResolved();
        java.lang.String str48 = explicit42.toString();
        byte[] byteArray49 = explicit42.resolve();
        byte[] byteArray50 = explicit42.resolve();
        byte[] byteArray54 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator55 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray54);
        byte[] byteArray58 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit59 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray58);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp60 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean61 = explicit59.equals((java.lang.Object) noOp60);
        java.lang.String str62 = noOp60.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray54, (net.bytebuddy.dynamic.ClassFileLocator) noOp60);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator64 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray50, (net.bytebuddy.dynamic.ClassFileLocator) noOp60);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp60);
        java.lang.String str66 = noOp60.toString();
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str48, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator55);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp60 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp60.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str62, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertNotNull(classFileLocator64);
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str66, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        boolean boolean3 = illegal1.isResolved();
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        boolean boolean6 = illegal1.isResolved();
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray35 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray32, classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp38 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str39 = noOp38.toString();
        java.lang.String str40 = noOp38.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray41 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator23, noOp25, classFileLocator37, noOp38 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound42 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray41);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound42.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution46 = compound42.locate("");
        boolean boolean47 = explicit12.equals((java.lang.Object) compound42);
        boolean boolean48 = illegal1.equals((java.lang.Object) boolean47);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertTrue("'" + noOp38 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp38.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str39, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str40, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray41);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertNotNull(resolution46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        boolean boolean10 = explicit4.isResolved();
        boolean boolean11 = explicit4.isResolved();
        byte[] byteArray12 = explicit4.resolve();
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        byte[] byteArray19 = explicit18.resolve();
        java.lang.String str20 = explicit18.toString();
        boolean boolean21 = explicit18.isResolved();
        java.lang.String str22 = explicit18.toString();
        byte[] byteArray23 = explicit18.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray25 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound26 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray25);
        byte[] byteArray29 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit30 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean32 = explicit30.equals((java.lang.Object) noOp31);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = noOp31.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = noOp31.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str37 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = noOp31.locate("");
        boolean boolean40 = compound26.equals((java.lang.Object) noOp31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray23, (net.bytebuddy.dynamic.ClassFileLocator) noOp31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray12, classFileLocator41);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit43 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        byte[] byteArray44 = explicit43.resolve();
        boolean boolean45 = explicit43.isResolved();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str20, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str22, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocatorArray25);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str37, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        java.lang.String str11 = illegal1.toString();
        java.lang.String str12 = illegal1.toString();
        java.lang.String str13 = illegal1.toString();
        boolean boolean14 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str12, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str13, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray8 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        boolean boolean10 = explicit9.isResolved();
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray20 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray17, classFileLocator21);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp23 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray33 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray33);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray30, classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp36 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str37 = noOp36.toString();
        java.lang.String str38 = noOp36.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray39 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator21, noOp23, classFileLocator35, noOp36 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound40.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound40.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str45 = compound40.toString();
        byte[] byteArray48 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit49 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray48);
        byte[] byteArray50 = explicit49.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit51 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray50);
        boolean boolean52 = compound40.equals((java.lang.Object) explicit51);
        boolean boolean53 = explicit9.equals((java.lang.Object) boolean52);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertTrue("'" + noOp23 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp23.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertTrue("'" + noOp36 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp36.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str37, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str38, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray39);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        byte[] byteArray6 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray8 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray10 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound11 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray10);
        byte[] byteArray14 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean17 = explicit15.equals((java.lang.Object) noOp16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp16.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp16.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str22 = noOp16.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = noOp16.locate("");
        boolean boolean25 = compound11.equals((java.lang.Object) noOp16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) noOp16);
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray36 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray33, classFileLocator37);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp39 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray49 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray46, classFileLocator50);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp52 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str53 = noOp52.toString();
        java.lang.String str54 = noOp52.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray55 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator37, noOp39, classFileLocator51, noOp52 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound56 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray55);
        boolean boolean58 = compound56.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound56);
        byte[] byteArray62 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray62);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit64 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray62);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit65 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray62);
        boolean boolean66 = explicit65.isResolved();
        byte[] byteArray67 = explicit65.resolve();
        byte[] byteArray70 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit71 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray70);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp72 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean73 = explicit71.equals((java.lang.Object) noOp72);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution75 = noOp72.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution77 = noOp72.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution79 = noOp72.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        boolean boolean80 = explicit65.equals((java.lang.Object) noOp72);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator81 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) noOp72);
        java.lang.String str82 = noOp72.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution84 = noOp72.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(classFileLocatorArray10);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str22, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertTrue("'" + noOp39 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp39.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertTrue("'" + noOp52 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp52.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str54, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[100]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp72 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp72.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(resolution75);
        org.junit.Assert.assertNotNull(resolution77);
        org.junit.Assert.assertNotNull(resolution79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(classFileLocator81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str82, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution84);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        boolean boolean12 = resolution11.isResolved();
        boolean boolean13 = resolution11.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        java.lang.String str4 = illegal1.toString();
        byte[] byteArray7 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray20 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray17, classFileLocator21);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp23 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray33 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray33);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray30, classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp36 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str37 = noOp36.toString();
        java.lang.String str38 = noOp36.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray39 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator21, noOp23, classFileLocator35, noOp36 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = compound40.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound40.locate("");
        boolean boolean45 = explicit10.equals((java.lang.Object) compound40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = compound40.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean48 = resolution47.isResolved();
        boolean boolean49 = illegal1.equals((java.lang.Object) boolean48);
        byte[] byteArray55 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit56 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray55);
        byte[] byteArray57 = explicit56.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray57);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit59 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray57);
        boolean boolean60 = explicit59.isResolved();
        byte[] byteArray61 = explicit59.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator62 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}", byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit64 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray61);
        boolean boolean65 = illegal1.equals((java.lang.Object) byteArray61);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertTrue("'" + noOp23 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp23.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertTrue("'" + noOp36 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp36.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str37, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str38, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray39);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator62);
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray17 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray14, classFileLocator18);
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray14, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray14);
        byte[] byteArray28 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit29 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray28);
        byte[] byteArray30 = explicit29.resolve();
        boolean boolean31 = explicit29.isResolved();
        boolean boolean33 = explicit29.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = classFileLocator34.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean37 = explicit29.equals((java.lang.Object) classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14, classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray14, classFileLocator39);
        byte[] byteArray44 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit45 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray44);
        byte[] byteArray46 = explicit45.resolve();
        boolean boolean47 = explicit45.isResolved();
        boolean boolean49 = explicit45.equals((java.lang.Object) 10L);
        boolean boolean50 = explicit45.isResolved();
        java.lang.String str51 = explicit45.toString();
        byte[] byteArray52 = explicit45.resolve();
        byte[] byteArray53 = explicit45.resolve();
        byte[] byteArray57 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray57);
        byte[] byteArray61 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit62 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp63 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean64 = explicit62.equals((java.lang.Object) noOp63);
        java.lang.String str65 = noOp63.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray57, (net.bytebuddy.dynamic.ClassFileLocator) noOp63);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray53, (net.bytebuddy.dynamic.ClassFileLocator) noOp63);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray14, (net.bytebuddy.dynamic.ClassFileLocator) noOp63);
        boolean boolean69 = illegal1.equals((java.lang.Object) noOp63);
        boolean boolean70 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str51, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp63 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp63.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str65, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        boolean boolean8 = explicit7.isResolved();
        byte[] byteArray9 = explicit7.resolve();
        java.lang.String str10 = explicit7.toString();
        byte[] byteArray11 = explicit7.resolve();
        java.lang.String str12 = explicit7.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("hi!");
        java.lang.String str12 = noOp4.toString();
        java.lang.String str13 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp4.locate(".class");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(resolution17);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        java.util.jar.JarFile jarFile0 = null;
        net.bytebuddy.dynamic.ClassFileLocator.ForJarFile forJarFile1 = new net.bytebuddy.dynamic.ClassFileLocator.ForJarFile(jarFile0);
        // The following exception was thrown during execution in test generation
        try {
            net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution3 = forJarFile1.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        java.lang.String str5 = illegal1.toString();
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean11 = explicit9.isResolved();
        boolean boolean13 = explicit9.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit9.isResolved();
        boolean boolean15 = explicit9.isResolved();
        boolean boolean16 = explicit9.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray17 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound19 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound20 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray17);
        boolean boolean21 = explicit9.equals((java.lang.Object) classFileLocatorArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound22 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound23 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound24 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution26 = compound24.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str27 = compound24.toString();
        boolean boolean28 = illegal1.equals((java.lang.Object) str27);
        boolean boolean29 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str5, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(classFileLocatorArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(resolution26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str27, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str36 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution38);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = compound3.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = compound3.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = compound3.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        java.lang.Object obj10 = null;
        boolean boolean11 = compound3.equals(obj10);
        java.lang.String str12 = compound3.toString();
        java.lang.String str13 = compound3.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = compound3.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution5);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str12, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str13, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution15);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str3 = compound2.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray4 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        boolean boolean6 = compound2.equals((java.lang.Object) classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = compound8.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str3, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(classFileLocatorArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(resolution10);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        boolean boolean33 = compound31.equals((java.lang.Object) "hi!");
        boolean boolean35 = compound31.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound31.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound31.locate("");
        boolean boolean40 = illegal1.equals((java.lang.Object) "");
        java.lang.String str41 = illegal1.toString();
        java.lang.String str42 = illegal1.toString();
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        byte[] byteArray47 = explicit46.resolve();
        boolean boolean48 = explicit46.isResolved();
        boolean boolean50 = explicit46.equals((java.lang.Object) 10L);
        boolean boolean51 = explicit46.isResolved();
        boolean boolean52 = explicit46.isResolved();
        boolean boolean53 = illegal1.equals((java.lang.Object) explicit46);
        boolean boolean54 = explicit46.isResolved();
        boolean boolean55 = explicit46.isResolved();
        java.lang.String str56 = explicit46.toString();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str41, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str42, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str56, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(resolution15);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp6 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean7 = explicit5.equals((java.lang.Object) noOp6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp6.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp6.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str12 = noOp6.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp6.locate("");
        boolean boolean15 = compound1.equals((java.lang.Object) noOp6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = compound1.locate(".class");
        java.lang.String str18 = compound1.toString();
        java.lang.String str19 = compound1.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp6 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp6.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str18, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str19, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        boolean boolean8 = explicit7.isResolved();
        byte[] byteArray9 = explicit7.resolve();
        java.lang.String str10 = explicit7.toString();
        java.lang.Class<?> wildcardClass11 = explicit7.getClass();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp13 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str14 = noOp13.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp13.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray12, (net.bytebuddy.dynamic.ClassFileLocator) noOp13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        byte[] byteArray20 = explicit19.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean25 = illegal23.equals((java.lang.Object) classFileLocator24);
        java.lang.String str26 = illegal23.toString();
        boolean boolean27 = illegal23.isResolved();
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray38 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray35, classFileLocator39);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp41 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray51 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray51);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray48, classFileLocator52);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp54 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str55 = noOp54.toString();
        java.lang.String str56 = noOp54.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray57 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator39, noOp41, classFileLocator53, noOp54 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound58 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray57);
        boolean boolean60 = compound58.equals((java.lang.Object) "hi!");
        boolean boolean62 = compound58.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution64 = compound58.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution66 = compound58.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray70 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray70);
        byte[] byteArray74 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit75 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray74);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp76 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean77 = explicit75.equals((java.lang.Object) noOp76);
        java.lang.String str78 = noOp76.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator79 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray70, (net.bytebuddy.dynamic.ClassFileLocator) noOp76);
        boolean boolean80 = compound58.equals((java.lang.Object) byteArray70);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator81 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray70);
        boolean boolean82 = illegal23.equals((java.lang.Object) byteArray70);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator83 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray70);
        boolean boolean84 = explicit19.equals((java.lang.Object) byteArray70);
        boolean boolean85 = explicit19.isResolved();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp13 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp13.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str14, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str26, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertTrue("'" + noOp41 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp41.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertTrue("'" + noOp54 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp54.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str55, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str56, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(resolution64);
        org.junit.Assert.assertNotNull(resolution66);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp76 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp76.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str78, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(classFileLocator81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(classFileLocator83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean4 = illegal3.isResolved();
        boolean boolean5 = illegal3.isResolved();
        java.lang.String str6 = illegal3.toString();
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        byte[] byteArray11 = explicit10.resolve();
        boolean boolean13 = explicit10.equals((java.lang.Object) (short) 0);
        boolean boolean14 = illegal3.equals((java.lang.Object) explicit10);
        byte[] byteArray19 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        byte[] byteArray21 = explicit20.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        boolean boolean24 = explicit23.isResolved();
        byte[] byteArray25 = explicit23.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        boolean boolean27 = illegal3.equals((java.lang.Object) byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit28 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit29 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}", byteArray25);
        byte[] byteArray33 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit34 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray33);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp35 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean36 = explicit34.equals((java.lang.Object) noOp35);
        java.lang.String str37 = noOp35.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = noOp35.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = noOp35.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = noOp35.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str44 = noOp35.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}", byteArray25, (net.bytebuddy.dynamic.ClassFileLocator) noOp35);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str6, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp35 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp35.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str37, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator45);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray8);
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray37 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray34, classFileLocator38);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp40 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str41 = noOp40.toString();
        java.lang.String str42 = noOp40.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray43 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator25, noOp27, classFileLocator39, noOp40 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound44 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray43);
        boolean boolean46 = compound44.equals((java.lang.Object) "hi!");
        boolean boolean48 = compound44.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound44.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray56 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray56);
        byte[] byteArray60 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp62 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean63 = explicit61.equals((java.lang.Object) noOp62);
        java.lang.String str64 = noOp62.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray56, (net.bytebuddy.dynamic.ClassFileLocator) noOp62);
        boolean boolean66 = compound44.equals((java.lang.Object) byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution68 = compound44.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution70 = compound44.locate("");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound44);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal73 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str74 = illegal73.toString();
        boolean boolean75 = compound44.equals((java.lang.Object) illegal73);
        boolean boolean76 = illegal73.isResolved();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertTrue("'" + noOp40 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp40.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str41, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp62 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp62.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str64, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(resolution68);
        org.junit.Assert.assertNotNull(resolution70);
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str74, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str2 = illegal1.toString();
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        java.lang.String str11 = explicit6.toString();
        byte[] byteArray12 = explicit6.resolve();
        boolean boolean13 = illegal1.equals((java.lang.Object) byteArray12);
        boolean boolean14 = illegal1.isResolved();
        boolean boolean15 = illegal1.isResolved();
        boolean boolean17 = illegal1.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("");
        java.lang.String str38 = compound29.toString();
        java.lang.String str39 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound29.locate(".class");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal45 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray55 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray55);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray52, classFileLocator56);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp58 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray65 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray68 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray68);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray65, classFileLocator69);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp71 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str72 = noOp71.toString();
        java.lang.String str73 = noOp71.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray74 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator56, noOp58, classFileLocator70, noOp71 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound75 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray74);
        boolean boolean77 = compound75.equals((java.lang.Object) "hi!");
        boolean boolean79 = compound75.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution81 = compound75.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution83 = compound75.locate("");
        boolean boolean84 = illegal45.equals((java.lang.Object) "");
        java.lang.String str85 = illegal45.toString();
        java.lang.String str86 = illegal45.toString();
        byte[] byteArray89 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit90 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray89);
        byte[] byteArray91 = explicit90.resolve();
        boolean boolean92 = explicit90.isResolved();
        boolean boolean94 = explicit90.equals((java.lang.Object) 10L);
        boolean boolean95 = explicit90.isResolved();
        boolean boolean96 = explicit90.isResolved();
        boolean boolean97 = illegal45.equals((java.lang.Object) explicit90);
        boolean boolean98 = compound29.equals((java.lang.Object) illegal45);
        boolean boolean99 = illegal45.isResolved();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertTrue("'" + noOp58 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp58.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertNotNull(classFileLocator70);
        org.junit.Assert.assertTrue("'" + noOp71 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp71.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str72, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str73, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(resolution81);
        org.junit.Assert.assertNotNull(resolution83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str85, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str86, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        boolean boolean33 = compound31.equals((java.lang.Object) "hi!");
        boolean boolean35 = compound31.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound31.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound31.locate("");
        boolean boolean40 = illegal1.equals((java.lang.Object) "");
        java.lang.String str41 = illegal1.toString();
        java.lang.String str42 = illegal1.toString();
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        byte[] byteArray47 = explicit46.resolve();
        boolean boolean48 = explicit46.isResolved();
        boolean boolean50 = explicit46.equals((java.lang.Object) 10L);
        boolean boolean51 = explicit46.isResolved();
        boolean boolean52 = explicit46.isResolved();
        boolean boolean53 = illegal1.equals((java.lang.Object) explicit46);
        boolean boolean54 = explicit46.isResolved();
        boolean boolean55 = explicit46.isResolved();
        byte[] byteArray56 = explicit46.resolve();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str41, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str42, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1, 100]");
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str34 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution36);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp9 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean10 = explicit8.equals((java.lang.Object) noOp9);
        java.lang.String str11 = noOp9.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray3, (net.bytebuddy.dynamic.ClassFileLocator) noOp9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray14 = explicit13.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        boolean boolean16 = explicit15.isResolved();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp9 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp9.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean7 = explicit4.equals((java.lang.Object) (short) 0);
        byte[] byteArray8 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str11 = illegal10.toString();
        java.lang.String str12 = illegal10.toString();
        boolean boolean13 = explicit4.equals((java.lang.Object) illegal10);
        byte[] byteArray14 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        boolean boolean17 = explicit16.isResolved();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str11, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str12, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        byte[] byteArray5 = explicit3.resolve();
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean11 = explicit9.isResolved();
        boolean boolean13 = explicit9.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit9.isResolved();
        boolean boolean15 = explicit9.isResolved();
        boolean boolean16 = explicit9.isResolved();
        byte[] byteArray17 = explicit9.resolve();
        boolean boolean18 = explicit3.equals((java.lang.Object) explicit9);
        byte[] byteArray19 = explicit3.resolve();
        boolean boolean20 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        java.lang.String str14 = explicit6.toString();
        byte[] byteArray15 = explicit6.resolve();
        boolean boolean16 = illegal1.equals((java.lang.Object) explicit6);
        boolean boolean17 = explicit6.isResolved();
        byte[] byteArray18 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        boolean boolean20 = explicit19.isResolved();
        boolean boolean21 = explicit19.isResolved();
        byte[] byteArray22 = explicit19.resolve();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str34 = compound29.toString();
        java.lang.String str35 = compound29.toString();
        java.lang.String str36 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution38);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        boolean boolean6 = illegal1.isResolved();
        boolean boolean7 = illegal1.isResolved();
        boolean boolean8 = illegal1.isResolved();
        boolean boolean9 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22);
        byte[] byteArray36 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit37 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray36);
        byte[] byteArray38 = explicit37.resolve();
        boolean boolean39 = explicit37.isResolved();
        boolean boolean41 = explicit37.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = classFileLocator42.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean45 = explicit37.equals((java.lang.Object) classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22, classFileLocator42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray22);
        boolean boolean48 = explicit12.equals((java.lang.Object) explicit47);
        byte[] byteArray49 = explicit12.resolve();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[1, 10, -1, -1, 1]");
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        byte[] byteArray15 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray15);
        boolean boolean20 = explicit3.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean21 = explicit3.isResolved();
        byte[] byteArray22 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        java.util.Map<java.lang.String, byte[]> strMap0 = null;
        net.bytebuddy.dynamic.ClassFileLocator.Simple simple1 = new net.bytebuddy.dynamic.ClassFileLocator.Simple(strMap0);
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray9);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = simple1.equals((java.lang.Object) classFileLocator10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        boolean boolean12 = explicit3.isResolved();
        byte[] byteArray13 = explicit3.resolve();
        boolean boolean14 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp13 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray23 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray20, classFileLocator24);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp26 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str27 = noOp26.toString();
        java.lang.String str28 = noOp26.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray29 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator11, noOp13, classFileLocator25, noOp26 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = compound30.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str33 = compound30.toString();
        java.lang.Object obj34 = null;
        boolean boolean35 = compound30.equals(obj34);
        byte[] byteArray38 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit39 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray38);
        byte[] byteArray40 = explicit39.resolve();
        boolean boolean41 = explicit39.isResolved();
        boolean boolean42 = explicit39.isResolved();
        byte[] byteArray43 = explicit39.resolve();
        boolean boolean44 = compound30.equals((java.lang.Object) byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp45 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str46 = noOp45.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution48 = noOp45.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = noOp45.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str51 = noOp45.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = noOp45.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray43, (net.bytebuddy.dynamic.ClassFileLocator) noOp45);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = noOp45.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}'}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertTrue("'" + noOp13 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp13.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertTrue("'" + noOp26 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp26.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray29);
        org.junit.Assert.assertNotNull(resolution32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + noOp45 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp45.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution48);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str51, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(resolution56);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal2 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        java.lang.String str14 = explicit6.toString();
        boolean boolean15 = explicit6.isResolved();
        boolean boolean16 = illegal2.equals((java.lang.Object) explicit6);
        boolean boolean17 = explicit6.isResolved();
        java.lang.String str18 = explicit6.toString();
        byte[] byteArray21 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        byte[] byteArray23 = explicit22.resolve();
        boolean boolean24 = explicit22.isResolved();
        boolean boolean26 = explicit22.equals((java.lang.Object) 10L);
        boolean boolean27 = explicit22.isResolved();
        java.lang.String str28 = explicit22.toString();
        boolean boolean29 = explicit22.isResolved();
        boolean boolean30 = explicit22.isResolved();
        boolean boolean31 = explicit6.equals((java.lang.Object) boolean30);
        byte[] byteArray32 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp33 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str34 = noOp33.toString();
        java.lang.String str35 = noOp33.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = noOp33.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str38 = noOp33.toString();
        java.lang.String str39 = noOp33.toString();
        java.lang.String str40 = noOp33.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = noOp33.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str43 = noOp33.toString();
        java.lang.String str44 = noOp33.toString();
        java.lang.String str45 = noOp33.toString();
        java.lang.String str46 = noOp33.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution48 = noOp33.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray32, (net.bytebuddy.dynamic.ClassFileLocator) noOp33);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = noOp33.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str18, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str28, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp33 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp33.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str35, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str38, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str39, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str40, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str46, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution48);
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(resolution51);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        java.lang.String str6 = noOp0.toString();
        java.lang.String str7 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str10 = noOp0.toString();
        java.lang.String str11 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray14 = resolution13.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str7, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        boolean boolean10 = resolution9.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean12 = explicit8.equals((java.lang.Object) 10L);
        boolean boolean13 = explicit8.isResolved();
        java.lang.String str14 = explicit8.toString();
        byte[] byteArray15 = explicit8.resolve();
        java.lang.String str16 = explicit8.toString();
        boolean boolean17 = explicit4.equals((java.lang.Object) str16);
        boolean boolean18 = explicit4.isResolved();
        boolean boolean19 = explicit4.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = compound9.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = compound9.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = compound9.locate("hi!");
        java.lang.Class<?> wildcardClass16 = resolution15.getClass();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray9 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound10 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray9);
        byte[] byteArray13 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp15 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean16 = explicit14.equals((java.lang.Object) noOp15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp15.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp15.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str21 = noOp15.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp15.locate("");
        boolean boolean24 = compound10.equals((java.lang.Object) noOp15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray7, (net.bytebuddy.dynamic.ClassFileLocator) noOp15);
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray35 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray32, classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp38 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray48 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray45, classFileLocator49);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp51 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str52 = noOp51.toString();
        java.lang.String str53 = noOp51.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray54 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator36, noOp38, classFileLocator50, noOp51 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound55 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray54);
        boolean boolean57 = compound55.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray7, (net.bytebuddy.dynamic.ClassFileLocator) compound55);
        java.lang.Class<?> wildcardClass59 = classFileLocator58.getClass();
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(classFileLocatorArray9);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp15 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp15.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertTrue("'" + noOp38 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp38.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + noOp51 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp51.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str52, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray8 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray8);
        byte[] byteArray12 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean15 = explicit13.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str20 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp14.locate("");
        boolean boolean23 = compound9.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        java.lang.String str25 = noOp14.toString();
        java.lang.String str26 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution28 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray29 = resolution28.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(classFileLocatorArray8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str25, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution28);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray23, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str30 = noOp29.toString();
        java.lang.String str31 = noOp29.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray32 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator14, noOp16, classFileLocator28, noOp29 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound33 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray32);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound33.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray36 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator3, compound33 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound37 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray38 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound39 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray38);
        boolean boolean41 = compound37.equals((java.lang.Object) classFileLocatorArray38);
        java.lang.String str42 = compound37.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound37.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='.class'}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str30, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray32);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(classFileLocatorArray36);
        org.junit.Assert.assertNotNull(classFileLocatorArray38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(resolution44);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertNotNull(resolution14);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        byte[] byteArray36 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit37 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray36);
        byte[] byteArray38 = explicit37.resolve();
        boolean boolean40 = explicit37.equals((java.lang.Object) (short) 0);
        byte[] byteArray41 = explicit37.resolve();
        byte[] byteArray45 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray45);
        byte[] byteArray49 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit50 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp51 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean52 = explicit50.equals((java.lang.Object) noOp51);
        java.lang.String str53 = noOp51.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray45, (net.bytebuddy.dynamic.ClassFileLocator) noOp51);
        java.lang.String str55 = noOp51.toString();
        java.lang.String str56 = noOp51.toString();
        boolean boolean57 = explicit37.equals((java.lang.Object) str56);
        boolean boolean58 = explicit37.isResolved();
        boolean boolean59 = compound29.equals((java.lang.Object) boolean58);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp51 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp51.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str55, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str56, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        boolean boolean6 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        boolean boolean8 = explicit7.isResolved();
        byte[] byteArray9 = explicit7.resolve();
        java.lang.String str10 = explicit7.toString();
        byte[] byteArray11 = explicit7.resolve();
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        byte[] byteArray19 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        byte[] byteArray21 = explicit20.resolve();
        boolean boolean22 = explicit20.isResolved();
        boolean boolean24 = explicit20.equals((java.lang.Object) 10L);
        boolean boolean25 = explicit20.isResolved();
        java.lang.String str26 = explicit20.toString();
        byte[] byteArray27 = explicit20.resolve();
        java.lang.String str28 = explicit20.toString();
        boolean boolean29 = explicit16.equals((java.lang.Object) str28);
        byte[] byteArray30 = explicit16.resolve();
        java.lang.String str31 = explicit16.toString();
        boolean boolean32 = explicit7.equals((java.lang.Object) explicit16);
        boolean boolean33 = explicit7.isResolved();
        java.lang.String str34 = explicit7.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str26, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str28, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str31, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str34, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = classFileLocator8.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean11 = explicit3.equals((java.lang.Object) classFileLocator8);
        boolean boolean12 = explicit3.isResolved();
        byte[] byteArray13 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        boolean boolean15 = explicit14.isResolved();
        java.lang.String str16 = explicit14.toString();
        boolean boolean17 = explicit14.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        boolean boolean10 = explicit4.isResolved();
        boolean boolean11 = explicit4.isResolved();
        java.lang.String str12 = explicit4.toString();
        byte[] byteArray13 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}", byteArray13);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray23, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str30 = noOp29.toString();
        java.lang.String str31 = noOp29.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray32 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator14, noOp16, classFileLocator28, noOp29 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound33 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray32);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound33.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray36 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator3, compound33 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound37 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound38 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        java.lang.String str39 = compound38.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound38.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound38.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str30, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray32);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(classFileLocatorArray36);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(resolution43);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        boolean boolean13 = explicit6.isResolved();
        boolean boolean14 = explicit6.isResolved();
        byte[] byteArray15 = explicit6.resolve();
        byte[] byteArray16 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray16);
        byte[] byteArray21 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        byte[] byteArray23 = explicit22.resolve();
        boolean boolean24 = explicit22.isResolved();
        boolean boolean26 = explicit22.equals((java.lang.Object) 10L);
        java.lang.String str27 = explicit22.toString();
        java.lang.String str28 = explicit22.toString();
        byte[] byteArray29 = explicit22.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit30 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray31 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound32 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray31);
        byte[] byteArray35 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit36 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray35);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp37 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean38 = explicit36.equals((java.lang.Object) noOp37);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = noOp37.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution42 = noOp37.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str43 = noOp37.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution45 = noOp37.locate("");
        boolean boolean46 = compound32.equals((java.lang.Object) noOp37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray29, (net.bytebuddy.dynamic.ClassFileLocator) noOp37);
        java.lang.String str48 = noOp37.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) noOp37);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray16);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str27, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str28, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray31);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp37 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp37.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertNotNull(resolution42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(classFileLocator50);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str8 = noOp4.toString();
        java.lang.String str9 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str12 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean15 = resolution14.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str8, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str9, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        java.lang.String str6 = explicit4.toString();
        boolean boolean7 = explicit4.isResolved();
        byte[] byteArray8 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray8);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str6, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator9);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean6 = explicit3.equals((java.lang.Object) (short) 0);
        byte[] byteArray7 = explicit3.resolve();
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        byte[] byteArray15 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp17 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean18 = explicit16.equals((java.lang.Object) noOp17);
        java.lang.String str19 = noOp17.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp17);
        java.lang.String str21 = noOp17.toString();
        java.lang.String str22 = noOp17.toString();
        boolean boolean23 = explicit3.equals((java.lang.Object) str22);
        boolean boolean24 = explicit3.isResolved();
        byte[] byteArray25 = explicit3.resolve();
        boolean boolean26 = explicit3.isResolved();
        byte[] byteArray27 = explicit3.resolve();
        java.lang.String str28 = explicit3.toString();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str30 = noOp29.toString();
        java.lang.String str31 = noOp29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = noOp29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str34 = noOp29.toString();
        java.lang.String str35 = noOp29.toString();
        java.lang.String str36 = noOp29.toString();
        java.lang.String str37 = noOp29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = noOp29.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = noOp29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        boolean boolean42 = explicit3.equals((java.lang.Object) noOp29);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp17 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp17.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str19, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str22, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str28, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str30, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str35, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str37, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        java.lang.String str4 = illegal1.toString();
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean11 = explicit8.equals((java.lang.Object) (short) 0);
        boolean boolean12 = illegal1.equals((java.lang.Object) explicit8);
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        byte[] byteArray19 = explicit18.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        boolean boolean22 = explicit21.isResolved();
        byte[] byteArray23 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        boolean boolean25 = illegal1.equals((java.lang.Object) byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit26 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit27 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        byte[] byteArray28 = explicit27.resolve();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean6 = explicit3.equals((java.lang.Object) (short) 0);
        byte[] byteArray7 = explicit3.resolve();
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        byte[] byteArray15 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp17 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean18 = explicit16.equals((java.lang.Object) noOp17);
        java.lang.String str19 = noOp17.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp17);
        java.lang.String str21 = noOp17.toString();
        java.lang.String str22 = noOp17.toString();
        boolean boolean23 = explicit3.equals((java.lang.Object) str22);
        boolean boolean24 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp17 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp17.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str19, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str22, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName=''}");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        java.lang.String str14 = explicit6.toString();
        boolean boolean15 = explicit6.isResolved();
        byte[] byteArray16 = explicit6.resolve();
        boolean boolean17 = explicit6.isResolved();
        byte[] byteArray18 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray19 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound20 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound21 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray19);
        java.lang.String str22 = compound21.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = compound21.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray18, (net.bytebuddy.dynamic.ClassFileLocator) compound21);
        boolean boolean26 = illegal1.equals((java.lang.Object) byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit27 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        byte[] byteArray28 = explicit27.resolve();
        java.lang.String str29 = explicit27.toString();
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str22, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str29, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        java.lang.String str13 = explicit5.toString();
        boolean boolean14 = explicit5.isResolved();
        boolean boolean15 = illegal1.equals((java.lang.Object) explicit5);
        boolean boolean16 = explicit5.isResolved();
        byte[] byteArray17 = explicit5.resolve();
        byte[] byteArray18 = explicit5.resolve();
        byte[] byteArray19 = explicit5.resolve();
        java.lang.String str20 = explicit5.toString();
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str13, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str20, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        byte[] byteArray37 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit38 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray37);
        byte[] byteArray39 = explicit38.resolve();
        boolean boolean40 = explicit38.isResolved();
        boolean boolean42 = explicit38.equals((java.lang.Object) 10L);
        boolean boolean43 = explicit38.isResolved();
        java.lang.String str44 = explicit38.toString();
        boolean boolean45 = explicit38.isResolved();
        boolean boolean46 = explicit38.isResolved();
        byte[] byteArray47 = explicit38.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator48 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray47);
        boolean boolean49 = compound29.equals((java.lang.Object) "hi!");
        java.lang.String str50 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str44, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(resolution52);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}", byteArray10);
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray27, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp33 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray40 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray43 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray40, classFileLocator44);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp46 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str47 = noOp46.toString();
        java.lang.String str48 = noOp46.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray49 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator31, noOp33, classFileLocator45, noOp46 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound50 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray10, (net.bytebuddy.dynamic.ClassFileLocator) compound50);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound50.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str54 = compound50.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution56 = compound50.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertTrue("'" + noOp33 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp33.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertTrue("'" + noOp46 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp46.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str47, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray49);
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(resolution56);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        boolean boolean6 = illegal1.isResolved();
        java.lang.String str7 = illegal1.toString();
        boolean boolean8 = illegal1.isResolved();
        java.lang.String str9 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray10 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str7, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str9, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound29.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(resolution43);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean6 = explicit3.equals((java.lang.Object) (short) 0);
        byte[] byteArray7 = explicit3.resolve();
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        java.lang.String str10 = explicit3.toString();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray14 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        byte[] byteArray16 = explicit15.resolve();
        boolean boolean18 = explicit15.equals((java.lang.Object) (short) 0);
        byte[] byteArray19 = explicit15.resolve();
        boolean boolean20 = explicit15.isResolved();
        boolean boolean21 = explicit15.isResolved();
        byte[] byteArray22 = explicit15.resolve();
        boolean boolean23 = explicit3.equals((java.lang.Object) explicit15);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        byte[] byteArray4 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator5 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        byte[] byteArray11 = explicit10.resolve();
        boolean boolean12 = explicit10.isResolved();
        boolean boolean14 = explicit10.equals((java.lang.Object) 10L);
        boolean boolean15 = explicit10.isResolved();
        java.lang.String str16 = explicit10.toString();
        byte[] byteArray17 = explicit10.resolve();
        java.lang.String str18 = explicit10.toString();
        boolean boolean19 = explicit6.equals((java.lang.Object) str18);
        byte[] byteArray20 = explicit6.resolve();
        byte[] byteArray21 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray21);
        byte[] byteArray26 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit27 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray26);
        byte[] byteArray28 = explicit27.resolve();
        boolean boolean29 = explicit27.isResolved();
        boolean boolean31 = explicit27.equals((java.lang.Object) 10L);
        boolean boolean32 = explicit27.isResolved();
        java.lang.String str33 = explicit27.toString();
        byte[] byteArray34 = explicit27.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp35 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str36 = noOp35.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = noOp35.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray34, (net.bytebuddy.dynamic.ClassFileLocator) noOp35);
        java.lang.String str40 = noOp35.toString();
        java.lang.String str41 = noOp35.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = noOp35.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str44 = noOp35.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray21, (net.bytebuddy.dynamic.ClassFileLocator) noOp35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = noOp35.locate("hi!");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str18, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str33, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp35 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp35.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str40, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str41, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertNotNull(resolution47);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean6 = explicit3.equals((java.lang.Object) (short) 0);
        byte[] byteArray7 = explicit3.resolve();
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        byte[] byteArray15 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp17 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean18 = explicit16.equals((java.lang.Object) noOp17);
        java.lang.String str19 = noOp17.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp17);
        java.lang.String str21 = noOp17.toString();
        java.lang.String str22 = noOp17.toString();
        boolean boolean23 = explicit3.equals((java.lang.Object) str22);
        boolean boolean24 = explicit3.isResolved();
        byte[] byteArray25 = explicit3.resolve();
        boolean boolean26 = explicit3.isResolved();
        boolean boolean27 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp17 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp17.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str19, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str22, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(resolution41);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = classFileLocator11.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = illegal7.equals((java.lang.Object) resolution13);
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        boolean boolean16 = illegal1.isResolved();
        java.lang.String str17 = illegal1.toString();
        boolean boolean18 = illegal1.isResolved();
        boolean boolean19 = illegal1.isResolved();
        boolean boolean20 = illegal1.isResolved();
        java.lang.String str21 = illegal1.toString();
        java.lang.String str22 = illegal1.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str17, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str21, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str22, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = explicit3.toString();
        boolean boolean7 = explicit3.isResolved();
        byte[] byteArray8 = explicit3.resolve();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        byte[] byteArray11 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str6, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray10, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray10);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator21);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7, classFileLocator11);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp13 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray20 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray23 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray20, classFileLocator24);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp26 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str27 = noOp26.toString();
        java.lang.String str28 = noOp26.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray29 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator11, noOp13, classFileLocator25, noOp26 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray29);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = compound30.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str33 = compound30.toString();
        java.lang.Object obj34 = null;
        boolean boolean35 = compound30.equals(obj34);
        byte[] byteArray38 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit39 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray38);
        byte[] byteArray40 = explicit39.resolve();
        boolean boolean41 = explicit39.isResolved();
        boolean boolean42 = explicit39.isResolved();
        byte[] byteArray43 = explicit39.resolve();
        boolean boolean44 = compound30.equals((java.lang.Object) byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray43);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertTrue("'" + noOp13 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp13.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertTrue("'" + noOp26 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp26.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray29);
        org.junit.Assert.assertNotNull(resolution32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(classFileLocator45);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray7);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(classFileLocator10);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        java.util.Map<java.lang.String, byte[]> strMap0 = null;
        net.bytebuddy.dynamic.ClassFileLocator.Simple simple1 = new net.bytebuddy.dynamic.ClassFileLocator.Simple(strMap0);
        // The following exception was thrown during execution in test generation
        try {
            net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution3 = simple1.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        boolean boolean6 = explicit3.isResolved();
        byte[] byteArray7 = explicit3.resolve();
        boolean boolean8 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray8 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray8);
        byte[] byteArray12 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean15 = explicit13.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str20 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp14.locate("");
        boolean boolean23 = compound9.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        java.lang.String str25 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution27 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(classFileLocatorArray8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str25, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution27);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp4.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        java.lang.String str15 = noOp4.toString();
        java.lang.String str16 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp4.locate("");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertNotNull(resolution12);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertNotNull(resolution20);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str3 = compound2.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray4 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        boolean boolean6 = compound2.equals((java.lang.Object) classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = compound9.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = compound9.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str3, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(classFileLocatorArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        java.lang.String str6 = noOp0.toString();
        java.lang.String str7 = noOp0.toString();
        java.lang.String str8 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str7, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str8, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution10);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        boolean boolean11 = explicit4.isResolved();
        boolean boolean12 = explicit4.isResolved();
        byte[] byteArray13 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = compound2.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str5 = compound2.toString();
        java.lang.String str6 = compound2.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str5, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str6, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        byte[] byteArray6 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray13 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray15 = explicit14.resolve();
        boolean boolean16 = explicit14.isResolved();
        boolean boolean18 = explicit14.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = classFileLocator19.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean22 = explicit14.equals((java.lang.Object) classFileLocator19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = classFileLocator19.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray6, classFileLocator19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}", byteArray6);
        byte[] byteArray31 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit32 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray31);
        byte[] byteArray33 = explicit32.resolve();
        boolean boolean34 = explicit32.isResolved();
        boolean boolean35 = explicit32.isResolved();
        java.lang.String str36 = explicit32.toString();
        byte[] byteArray37 = explicit32.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray37, classFileLocator38);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str42 = illegal41.toString();
        byte[] byteArray45 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray45);
        boolean boolean47 = illegal41.equals((java.lang.Object) classFileLocator46);
        byte[] byteArray50 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray50);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit52 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray50);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit53 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray50);
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray63 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator64 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray63);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray60, classFileLocator64);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp66 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray73 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray76 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator77 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray76);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator78 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray73, classFileLocator77);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp79 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str80 = noOp79.toString();
        java.lang.String str81 = noOp79.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray82 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator64, noOp66, classFileLocator78, noOp79 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound83 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray82);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution85 = compound83.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution87 = compound83.locate("");
        boolean boolean88 = explicit53.equals((java.lang.Object) compound83);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution90 = compound83.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        boolean boolean91 = illegal41.equals((java.lang.Object) compound83);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator92 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}", byteArray37, (net.bytebuddy.dynamic.ClassFileLocator) compound83);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator93 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}", byteArray6, classFileLocator92);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str36, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str42, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator64);
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertTrue("'" + noOp66 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp66.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator77);
        org.junit.Assert.assertNotNull(classFileLocator78);
        org.junit.Assert.assertTrue("'" + noOp79 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp79.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str80, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str81, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray82);
        org.junit.Assert.assertNotNull(resolution85);
        org.junit.Assert.assertNotNull(resolution87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(resolution90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(classFileLocator92);
        org.junit.Assert.assertNotNull(classFileLocator93);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        byte[] byteArray5 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray10 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        byte[] byteArray12 = explicit11.resolve();
        boolean boolean13 = explicit11.isResolved();
        boolean boolean15 = explicit11.equals((java.lang.Object) 10L);
        boolean boolean16 = explicit11.isResolved();
        java.lang.String str17 = explicit11.toString();
        byte[] byteArray18 = explicit11.resolve();
        java.lang.String str19 = explicit11.toString();
        boolean boolean20 = explicit7.equals((java.lang.Object) str19);
        byte[] byteArray21 = explicit7.resolve();
        byte[] byteArray22 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray22);
        byte[] byteArray27 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit28 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray27);
        byte[] byteArray29 = explicit28.resolve();
        boolean boolean30 = explicit28.isResolved();
        boolean boolean32 = explicit28.equals((java.lang.Object) 10L);
        boolean boolean33 = explicit28.isResolved();
        java.lang.String str34 = explicit28.toString();
        byte[] byteArray35 = explicit28.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp36 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str37 = noOp36.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = noOp36.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray35, (net.bytebuddy.dynamic.ClassFileLocator) noOp36);
        java.lang.String str41 = noOp36.toString();
        java.lang.String str42 = noOp36.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = noOp36.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str45 = noOp36.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray22, (net.bytebuddy.dynamic.ClassFileLocator) noOp36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}", byteArray22);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str17, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str19, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str34, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp36 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp36.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str37, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str41, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str45, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertNotNull(classFileLocator47);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        java.util.jar.JarFile jarFile0 = null;
        net.bytebuddy.dynamic.ClassFileLocator.ForJarFile forJarFile1 = new net.bytebuddy.dynamic.ClassFileLocator.ForJarFile(jarFile0);
        // The following exception was thrown during execution in test generation
        try {
            net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution3 = forJarFile1.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean6 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean9 = illegal8.isResolved();
        java.lang.String str10 = illegal8.toString();
        boolean boolean11 = illegal8.isResolved();
        boolean boolean12 = explicit3.equals((java.lang.Object) illegal8);
        byte[] byteArray13 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray15 = explicit14.resolve();
        java.lang.String str16 = explicit14.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str10, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        java.lang.String str6 = noOp0.toString();
        java.lang.String str7 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str10 = noOp0.toString();
        java.lang.String str11 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp0.locate(".class");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str7, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        byte[] byteArray15 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        byte[] byteArray17 = explicit16.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray19 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound20 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray19);
        byte[] byteArray23 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean26 = explicit24.equals((java.lang.Object) noOp25);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution28 = noOp25.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution30 = noOp25.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str31 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = noOp25.locate("");
        boolean boolean34 = compound20.equals((java.lang.Object) noOp25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray17, (net.bytebuddy.dynamic.ClassFileLocator) noOp25);
        java.lang.String str36 = noOp25.toString();
        boolean boolean37 = explicit3.equals((java.lang.Object) str36);
        byte[] byteArray40 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        byte[] byteArray42 = explicit41.resolve();
        boolean boolean43 = explicit41.isResolved();
        boolean boolean45 = explicit41.equals((java.lang.Object) 10L);
        boolean boolean46 = explicit41.isResolved();
        java.lang.String str47 = explicit41.toString();
        boolean boolean48 = explicit41.isResolved();
        java.lang.Object obj49 = null;
        boolean boolean50 = explicit41.equals(obj49);
        byte[] byteArray51 = explicit41.resolve();
        boolean boolean52 = explicit3.equals((java.lang.Object) byteArray51);
        java.lang.String str53 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocatorArray19);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(resolution28);
        org.junit.Assert.assertNotNull(resolution30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str47, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str53, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean6 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean9 = illegal8.isResolved();
        java.lang.String str10 = illegal8.toString();
        boolean boolean11 = illegal8.isResolved();
        boolean boolean12 = explicit3.equals((java.lang.Object) illegal8);
        byte[] byteArray13 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray15 = explicit14.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str17 = noOp16.toString();
        java.lang.String str18 = noOp16.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp16.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str21 = noOp16.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp16.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str24 = noOp16.toString();
        java.lang.String str25 = noOp16.toString();
        boolean boolean26 = explicit14.equals((java.lang.Object) noOp16);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str10, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str18, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str24, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str25, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean9 = explicit6.equals((java.lang.Object) (short) 0);
        byte[] byteArray10 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str13 = illegal12.toString();
        java.lang.String str14 = illegal12.toString();
        boolean boolean15 = explicit6.equals((java.lang.Object) illegal12);
        byte[] byteArray16 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray21 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp23 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean24 = explicit22.equals((java.lang.Object) noOp23);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution26 = noOp23.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str27 = noOp23.toString();
        java.lang.String str28 = noOp23.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution30 = noOp23.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) noOp23);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit33 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str13, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str14, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp23 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp23.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(resolution26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray10, classFileLocator14);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray23, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str30 = noOp29.toString();
        java.lang.String str31 = noOp29.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray32 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator14, noOp16, classFileLocator28, noOp29 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound33 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray32);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound33.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray36 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator3, compound33 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound37 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound38 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound39 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound41 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound42 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound42.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution46 = compound42.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        java.lang.Class<?> wildcardClass47 = compound42.getClass();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str30, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray32);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(classFileLocatorArray36);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertNotNull(resolution46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        java.lang.String str9 = explicit4.toString();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray13 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound14 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound15 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound16 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound17 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound19 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound20 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound21 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound22 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) compound22);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution25 = compound22.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution27 = compound22.locate(".class");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray13);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(resolution25);
        org.junit.Assert.assertNotNull(resolution27);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound31.locate("");
        boolean boolean36 = illegal1.equals((java.lang.Object) resolution35);
        java.lang.String str37 = illegal1.toString();
        byte[] byteArray40 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        boolean boolean42 = illegal1.equals((java.lang.Object) explicit41);
        java.lang.String str43 = illegal1.toString();
        boolean boolean44 = illegal1.isResolved();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str37, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str43, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str32 = compound29.toString();
        byte[] byteArray36 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit37 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray36);
        byte[] byteArray38 = explicit37.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit40 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray38);
        boolean boolean41 = compound29.equals((java.lang.Object) byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal43 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean44 = illegal43.isResolved();
        java.lang.String str45 = illegal43.toString();
        boolean boolean46 = illegal43.isResolved();
        boolean boolean47 = illegal43.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal49 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str50 = illegal49.toString();
        boolean boolean51 = illegal49.isResolved();
        boolean boolean52 = illegal43.equals((java.lang.Object) illegal49);
        boolean boolean53 = compound29.equals((java.lang.Object) illegal49);
        boolean boolean54 = illegal49.isResolved();
        boolean boolean55 = illegal49.isResolved();
        boolean boolean56 = illegal49.isResolved();
        boolean boolean57 = illegal49.isResolved();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str45, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str50, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        byte[] byteArray13 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp15 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean16 = explicit14.equals((java.lang.Object) noOp15);
        java.lang.String str17 = noOp15.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp15.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp15.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp15.locate("ClassFileLocator.NoOp.INSTANCE");
        boolean boolean24 = illegal7.equals((java.lang.Object) "ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str25 = illegal7.toString();
        java.lang.String str26 = illegal7.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray27 = illegal7.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for hi!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp15 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp15.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str25, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str26, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        byte[] byteArray9 = explicit3.resolve();
        java.lang.String str10 = explicit3.toString();
        boolean boolean11 = explicit3.isResolved();
        boolean boolean12 = explicit3.isResolved();
        byte[] byteArray13 = explicit3.resolve();
        java.lang.String str14 = explicit3.toString();
        boolean boolean15 = explicit3.isResolved();
        byte[] byteArray16 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        boolean boolean9 = explicit3.isResolved();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray12 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp47 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean48 = explicit46.equals((java.lang.Object) noOp47);
        java.lang.String str49 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray41, (net.bytebuddy.dynamic.ClassFileLocator) noOp47);
        boolean boolean51 = compound29.equals((java.lang.Object) byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound29.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp47 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp47.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertNotNull(resolution57);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18, classFileLocator22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray18);
        boolean boolean26 = explicit3.equals((java.lang.Object) ".class");
        byte[] byteArray27 = explicit3.resolve();
        boolean boolean28 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp9 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean10 = explicit8.equals((java.lang.Object) noOp9);
        java.lang.String str11 = noOp9.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray3, (net.bytebuddy.dynamic.ClassFileLocator) noOp9);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray14 = explicit13.resolve();
        byte[] byteArray15 = explicit13.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp9 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp9.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("");
        java.lang.String str34 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str37 = compound29.toString();
        java.lang.String str38 = compound29.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution36);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound30 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound32 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray33 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound34 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound37 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound38 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound39 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        boolean boolean41 = compound32.equals((java.lang.Object) classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound42 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound43 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        java.lang.String str44 = compound43.toString();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(classFileLocatorArray33);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str44, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound10 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound11 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound12 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = compound12.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        boolean boolean15 = resolution14.isResolved();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str32 = compound29.toString();
        java.lang.String str33 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        java.lang.Class<?> wildcardClass36 = compound29.getClass();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        java.lang.String str10 = explicit5.toString();
        java.lang.String str11 = explicit5.toString();
        byte[] byteArray12 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str10 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution12);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str34 = compound31.toString();
        byte[] byteArray38 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit39 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray38);
        byte[] byteArray40 = explicit39.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit42 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        boolean boolean43 = compound31.equals((java.lang.Object) byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit44 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}", byteArray40);
        byte[] byteArray53 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray56 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray53, classFileLocator57);
        byte[] byteArray61 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator62 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray61);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray53, classFileLocator62);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator64 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray40, classFileLocator62);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator62);
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertNotNull(classFileLocator64);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean6 = explicit3.equals((java.lang.Object) (short) 0);
        byte[] byteArray7 = explicit3.resolve();
        boolean boolean8 = explicit3.isResolved();
        byte[] byteArray11 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        byte[] byteArray13 = explicit12.resolve();
        boolean boolean14 = explicit12.isResolved();
        boolean boolean16 = explicit12.equals((java.lang.Object) 10L);
        boolean boolean17 = explicit12.isResolved();
        java.lang.String str18 = explicit12.toString();
        byte[] byteArray19 = explicit12.resolve();
        java.lang.String str20 = explicit12.toString();
        byte[] byteArray21 = explicit12.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        byte[] byteArray23 = explicit22.resolve();
        boolean boolean24 = explicit3.equals((java.lang.Object) byteArray23);
        byte[] byteArray25 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str18, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str20, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, 100]");
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = classFileLocator8.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean11 = explicit3.equals((java.lang.Object) classFileLocator8);
        boolean boolean13 = explicit3.equals((java.lang.Object) 10L);
        byte[] byteArray14 = explicit3.resolve();
        byte[] byteArray15 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str2 = compound1.toString();
        java.lang.String str3 = compound1.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution5 = compound1.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = compound1.locate("hi!");
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray17 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray14, classFileLocator18);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp20 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray27 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray27, classFileLocator31);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp33 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str34 = noOp33.toString();
        java.lang.String str35 = noOp33.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray36 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator18, noOp20, classFileLocator32, noOp33 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound37 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray36);
        boolean boolean39 = compound37.equals((java.lang.Object) "hi!");
        java.lang.String str40 = compound37.toString();
        java.lang.Object obj41 = null;
        boolean boolean42 = compound37.equals(obj41);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = compound37.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean45 = compound1.equals((java.lang.Object) resolution44);
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str2, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str3, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution5);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertTrue("'" + noOp20 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp20.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertTrue("'" + noOp33 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp33.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str35, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        byte[] byteArray9 = explicit3.resolve();
        byte[] byteArray10 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        byte[] byteArray12 = explicit11.resolve();
        boolean boolean13 = explicit11.isResolved();
        boolean boolean14 = explicit11.isResolved();
        byte[] byteArray15 = explicit11.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean8 = explicit5.equals((java.lang.Object) (short) 0);
        byte[] byteArray9 = explicit5.resolve();
        byte[] byteArray13 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray13);
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean20 = explicit18.equals((java.lang.Object) noOp19);
        java.lang.String str21 = noOp19.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray13, (net.bytebuddy.dynamic.ClassFileLocator) noOp19);
        java.lang.String str23 = noOp19.toString();
        java.lang.String str24 = noOp19.toString();
        boolean boolean25 = explicit5.equals((java.lang.Object) str24);
        byte[] byteArray26 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray26);
        byte[] byteArray30 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit31 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean33 = explicit31.equals((java.lang.Object) noOp32);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = noOp32.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str36 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = noOp32.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray26, (net.bytebuddy.dynamic.ClassFileLocator) noOp32);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str23, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str24, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(classFileLocator39);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        boolean boolean12 = explicit5.isResolved();
        boolean boolean13 = explicit5.isResolved();
        byte[] byteArray16 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        byte[] byteArray18 = explicit17.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        boolean boolean20 = explicit5.equals((java.lang.Object) byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray18);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str8 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str8, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertNotNull(resolution12);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray2 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound10 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound11 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = compound11.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean14 = illegal1.equals((java.lang.Object) compound11);
        java.lang.String str15 = illegal1.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray2);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}" + "'", str15, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str13 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp12);
        java.lang.String str17 = noOp12.toString();
        java.lang.String str18 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        java.lang.String str21 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp12.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution25 = noOp12.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str26 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution28 = noOp12.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution30 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str18, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str21, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertNotNull(resolution25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution28);
        org.junit.Assert.assertNotNull(resolution30);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        boolean boolean11 = explicit5.isResolved();
        boolean boolean12 = explicit5.isResolved();
        byte[] byteArray13 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}", byteArray13);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator17);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray4 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator5 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = classFileLocator5.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean8 = illegal1.equals((java.lang.Object) resolution7);
        java.lang.String str9 = illegal1.toString();
        byte[] byteArray15 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        byte[] byteArray17 = explicit16.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray19 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound20 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray19);
        byte[] byteArray23 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean26 = explicit24.equals((java.lang.Object) noOp25);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution28 = noOp25.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution30 = noOp25.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str31 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = noOp25.locate("");
        boolean boolean34 = compound20.equals((java.lang.Object) noOp25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray17, (net.bytebuddy.dynamic.ClassFileLocator) noOp25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray17);
        boolean boolean37 = illegal1.equals((java.lang.Object) byteArray17);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray38 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for hi!");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator5);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str9, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocatorArray19);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(resolution28);
        org.junit.Assert.assertNotNull(resolution30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        boolean boolean9 = explicit8.isResolved();
        byte[] byteArray10 = explicit8.resolve();
        boolean boolean11 = illegal1.equals((java.lang.Object) explicit8);
        java.lang.String str12 = illegal1.toString();
        java.lang.String str13 = illegal1.toString();
        boolean boolean14 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str12, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str13, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        java.lang.String str12 = explicit3.toString();
        byte[] byteArray13 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        boolean boolean6 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray7 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound29.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound29.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound29.locate("");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(resolution43);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean6 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean9 = illegal8.isResolved();
        java.lang.String str10 = illegal8.toString();
        boolean boolean11 = illegal8.isResolved();
        boolean boolean12 = explicit3.equals((java.lang.Object) illegal8);
        byte[] byteArray13 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray15 = explicit14.resolve();
        boolean boolean16 = explicit14.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str10, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str13 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp12.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray11, (net.bytebuddy.dynamic.ClassFileLocator) noOp12);
        java.lang.String str17 = noOp12.toString();
        java.lang.String str18 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp12.locate(".class");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp12.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str23 = noOp12.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution25 = noOp12.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str18, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str23, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution25);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str12 = noOp0.toString();
        java.lang.String str13 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str13, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        boolean boolean3 = illegal1.isResolved();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        byte[] byteArray10 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        byte[] byteArray12 = explicit11.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray12);
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray12, classFileLocator30);
        boolean boolean33 = illegal1.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray36 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit37 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray36);
        java.lang.String str38 = explicit37.toString();
        boolean boolean39 = explicit37.isResolved();
        boolean boolean40 = illegal1.equals((java.lang.Object) explicit37);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str38, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        byte[] byteArray6 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray8 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray10 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound11 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray10);
        byte[] byteArray14 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean17 = explicit15.equals((java.lang.Object) noOp16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp16.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp16.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str22 = noOp16.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = noOp16.locate("");
        boolean boolean25 = compound11.equals((java.lang.Object) noOp16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) noOp16);
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray36 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray33, classFileLocator37);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp39 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray49 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray46, classFileLocator50);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp52 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str53 = noOp52.toString();
        java.lang.String str54 = noOp52.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray55 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator37, noOp39, classFileLocator51, noOp52 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound56 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray55);
        boolean boolean58 = compound56.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound56);
        byte[] byteArray62 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray62);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit64 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray62);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit65 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray62);
        boolean boolean66 = explicit65.isResolved();
        byte[] byteArray67 = explicit65.resolve();
        byte[] byteArray70 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit71 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray70);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp72 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean73 = explicit71.equals((java.lang.Object) noOp72);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution75 = noOp72.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution77 = noOp72.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution79 = noOp72.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        boolean boolean80 = explicit65.equals((java.lang.Object) noOp72);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator81 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) noOp72);
        java.lang.String str82 = noOp72.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution84 = noOp72.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution86 = noOp72.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='.class'}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(classFileLocatorArray10);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str22, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertTrue("'" + noOp39 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp39.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertTrue("'" + noOp52 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp52.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str54, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[100]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp72 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp72.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(resolution75);
        org.junit.Assert.assertNotNull(resolution77);
        org.junit.Assert.assertNotNull(resolution79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(classFileLocator81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str82, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution84);
        org.junit.Assert.assertNotNull(resolution86);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Compound{classFileLocator=[]}");
        java.lang.String str2 = illegal1.toString();
        boolean boolean3 = illegal1.isResolved();
        java.lang.String str4 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray5 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Compound{classFileLocator=[]}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray12 = explicit3.resolve();
        boolean boolean13 = explicit3.isResolved();
        boolean boolean14 = explicit3.isResolved();
        byte[] byteArray15 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str3 = compound2.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray4 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        boolean boolean6 = compound2.equals((java.lang.Object) classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = compound9.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = compound9.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = compound9.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = compound9.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        java.lang.String str18 = compound9.toString();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str3, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(classFileLocatorArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str18, "ClassFileLocator.Compound{classFileLocator=[]}");
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = classFileLocator11.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = illegal7.equals((java.lang.Object) resolution13);
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        boolean boolean16 = illegal1.isResolved();
        java.lang.String str17 = illegal1.toString();
        boolean boolean18 = illegal1.isResolved();
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        boolean boolean25 = explicit24.isResolved();
        byte[] byteArray26 = explicit24.resolve();
        boolean boolean27 = illegal1.equals((java.lang.Object) byteArray26);
        java.lang.Class<?> wildcardClass28 = byteArray26.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str17, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        boolean boolean33 = compound31.equals((java.lang.Object) "hi!");
        boolean boolean35 = compound31.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound31.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = compound31.locate("");
        boolean boolean40 = illegal1.equals((java.lang.Object) "");
        java.lang.String str41 = illegal1.toString();
        java.lang.String str42 = illegal1.toString();
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        byte[] byteArray47 = explicit46.resolve();
        boolean boolean48 = explicit46.isResolved();
        boolean boolean50 = explicit46.equals((java.lang.Object) 10L);
        boolean boolean51 = explicit46.isResolved();
        boolean boolean52 = explicit46.isResolved();
        boolean boolean53 = illegal1.equals((java.lang.Object) explicit46);
        byte[] byteArray54 = explicit46.resolve();
        java.lang.String str55 = explicit46.toString();
        byte[] byteArray56 = explicit46.resolve();
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str41, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str42, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str55, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1, 100]");
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = compound29.locate("ClassFileLocator.Compound{classFileLocator=[]}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str34 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        boolean boolean37 = resolution36.isResolved();
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray16 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = classFileLocator19.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray3, classFileLocator19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = classFileLocator19.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(resolution24);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean6 = illegal1.equals((java.lang.Object) 0);
        boolean boolean7 = illegal1.isResolved();
        java.lang.String str8 = illegal1.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        byte[] byteArray9 = explicit3.resolve();
        byte[] byteArray10 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        byte[] byteArray12 = explicit11.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        boolean boolean6 = illegal1.isResolved();
        java.lang.String str7 = illegal1.toString();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for .class");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str7, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str10 = noOp4.toString();
        java.lang.String str11 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.String str16 = noOp4.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(resolution15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.String str3 = compound2.toString();
        java.lang.String str4 = compound2.toString();
        byte[] byteArray11 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray11, classFileLocator15);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp17 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray27 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray24, classFileLocator28);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp30 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str31 = noOp30.toString();
        java.lang.String str32 = noOp30.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray33 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator15, noOp17, classFileLocator29, noOp30 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound34 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray33);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = compound34.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str37 = compound34.toString();
        byte[] byteArray41 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit42 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray41);
        byte[] byteArray43 = explicit42.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit45 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray43);
        boolean boolean46 = compound34.equals((java.lang.Object) byteArray43);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal48 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean49 = illegal48.isResolved();
        java.lang.String str50 = illegal48.toString();
        boolean boolean51 = illegal48.isResolved();
        boolean boolean52 = illegal48.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal54 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str55 = illegal54.toString();
        boolean boolean56 = illegal54.isResolved();
        boolean boolean57 = illegal48.equals((java.lang.Object) illegal54);
        boolean boolean58 = compound34.equals((java.lang.Object) illegal54);
        byte[] byteArray62 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray62);
        byte[] byteArray66 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit67 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray66);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp68 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean69 = explicit67.equals((java.lang.Object) noOp68);
        java.lang.String str70 = noOp68.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator71 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray62, (net.bytebuddy.dynamic.ClassFileLocator) noOp68);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit72 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray62);
        boolean boolean73 = illegal54.equals((java.lang.Object) explicit72);
        boolean boolean74 = compound2.equals((java.lang.Object) explicit72);
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str3, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str4, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertTrue("'" + noOp17 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp17.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertTrue("'" + noOp30 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp30.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str31, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray33);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str50, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str55, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp68 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp68.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str70, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray12 = explicit3.resolve();
        byte[] byteArray13 = explicit3.resolve();
        byte[] byteArray14 = explicit3.resolve();
        byte[] byteArray15 = explicit3.resolve();
        byte[] byteArray16 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator2 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        boolean boolean3 = illegal1.equals((java.lang.Object) classFileLocator2);
        java.lang.String str4 = illegal1.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray5 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray5);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray5);
        java.lang.String str8 = compound7.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray9 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound10 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray9);
        boolean boolean11 = compound7.equals((java.lang.Object) classFileLocatorArray9);
        boolean boolean12 = illegal1.equals((java.lang.Object) compound7);
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray35 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray32, classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp38 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str39 = noOp38.toString();
        java.lang.String str40 = noOp38.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray41 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator23, noOp25, classFileLocator37, noOp38 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound42 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray41);
        boolean boolean44 = compound42.equals((java.lang.Object) "hi!");
        boolean boolean46 = compound42.equals((java.lang.Object) (-1.0d));
        byte[] byteArray51 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit52 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray51);
        byte[] byteArray53 = explicit52.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray53);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit55 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray53);
        byte[] byteArray60 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator62 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray60);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit63 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray60);
        byte[] byteArray65 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray65);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray60, classFileLocator66);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray53, classFileLocator67);
        boolean boolean69 = compound42.equals((java.lang.Object) classFileLocator67);
        boolean boolean70 = illegal1.equals((java.lang.Object) classFileLocator67);
        boolean boolean71 = illegal1.isResolved();
        org.junit.Assert.assertNotNull(classFileLocator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='hi!'}'}");
        org.junit.Assert.assertNotNull(classFileLocatorArray5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str8, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(classFileLocatorArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertTrue("'" + noOp38 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp38.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str39, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str40, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator62);
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        byte[] byteArray10 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit11 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = classFileLocator12.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(resolution14);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray8 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray8);
        byte[] byteArray12 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean15 = explicit13.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution17 = noOp14.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str20 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp14.locate("");
        boolean boolean23 = compound9.equals((java.lang.Object) noOp14);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) noOp14);
        java.lang.String str25 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution27 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution29 = noOp14.locate("");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(classFileLocatorArray8);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(resolution17);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str20, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str25, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution27);
        org.junit.Assert.assertNotNull(resolution29);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        java.lang.String str6 = noOp0.toString();
        java.lang.String str7 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str10 = noOp0.toString();
        java.lang.String str11 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp0.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution15 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray16 = resolution15.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str7, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str10, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertNotNull(resolution15);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp6 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean7 = explicit5.equals((java.lang.Object) noOp6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp6.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp6.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str12 = noOp6.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp6.locate("");
        boolean boolean15 = compound1.equals((java.lang.Object) noOp6);
        byte[] byteArray18 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit20 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        boolean boolean22 = explicit21.isResolved();
        byte[] byteArray23 = explicit21.resolve();
        byte[] byteArray26 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit27 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp28 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean29 = explicit27.equals((java.lang.Object) noOp28);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution31 = noOp28.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = noOp28.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = noOp28.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        boolean boolean36 = explicit21.equals((java.lang.Object) noOp28);
        byte[] byteArray37 = explicit21.resolve();
        boolean boolean38 = compound1.equals((java.lang.Object) explicit21);
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp6 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp6.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp28 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp28.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(resolution31);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        java.lang.String str8 = explicit3.toString();
        byte[] byteArray9 = explicit3.resolve();
        byte[] byteArray10 = explicit3.resolve();
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray20 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray17, classFileLocator21);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit24 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        boolean boolean25 = explicit3.equals((java.lang.Object) explicit24);
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray35 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray32, classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp38 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray48 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray45, classFileLocator49);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp51 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str52 = noOp51.toString();
        java.lang.String str53 = noOp51.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray54 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator36, noOp38, classFileLocator50, noOp51 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound55 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray54);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp56 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str57 = noOp56.toString();
        java.lang.String str58 = noOp56.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution60 = noOp56.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean61 = compound55.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str62 = compound55.toString();
        byte[] byteArray66 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit67 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray66);
        byte[] byteArray68 = explicit67.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray68);
        boolean boolean70 = compound55.equals((java.lang.Object) byteArray68);
        java.lang.String str71 = compound55.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution73 = compound55.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        boolean boolean74 = explicit3.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str75 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertTrue("'" + noOp38 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp38.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + noOp51 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp51.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str52, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray54);
        org.junit.Assert.assertTrue("'" + noOp56 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp56.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str57, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str58, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(resolution73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str75, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = explicit3.toString();
        boolean boolean7 = explicit3.isResolved();
        java.lang.String str8 = explicit3.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str6, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str8, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        java.lang.String str12 = explicit4.toString();
        boolean boolean13 = explicit4.isResolved();
        byte[] byteArray14 = explicit4.resolve();
        boolean boolean15 = explicit4.isResolved();
        byte[] byteArray16 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray17 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray17);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound19 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray17);
        java.lang.String str20 = compound19.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = compound19.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound19);
        java.lang.String str24 = compound19.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution26 = compound19.locate("hi!");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str20, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str24, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution26);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        java.lang.String str12 = explicit4.toString();
        boolean boolean13 = explicit4.isResolved();
        byte[] byteArray14 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}", byteArray14);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean4 = illegal3.isResolved();
        byte[] byteArray16 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray19 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, classFileLocator20);
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16);
        byte[] byteArray30 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit31 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray30);
        byte[] byteArray32 = explicit31.resolve();
        boolean boolean33 = explicit31.isResolved();
        boolean boolean35 = explicit31.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = classFileLocator36.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean39 = explicit31.equals((java.lang.Object) classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16, classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = null;
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray16, classFileLocator41);
        byte[] byteArray46 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray46);
        byte[] byteArray48 = explicit47.resolve();
        boolean boolean49 = explicit47.isResolved();
        boolean boolean51 = explicit47.equals((java.lang.Object) 10L);
        boolean boolean52 = explicit47.isResolved();
        java.lang.String str53 = explicit47.toString();
        byte[] byteArray54 = explicit47.resolve();
        byte[] byteArray55 = explicit47.resolve();
        byte[] byteArray59 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator60 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray59);
        byte[] byteArray63 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit64 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray63);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp65 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean66 = explicit64.equals((java.lang.Object) noOp65);
        java.lang.String str67 = noOp65.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray59, (net.bytebuddy.dynamic.ClassFileLocator) noOp65);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray55, (net.bytebuddy.dynamic.ClassFileLocator) noOp65);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) noOp65);
        boolean boolean71 = illegal3.equals((java.lang.Object) noOp65);
        java.lang.String str72 = noOp65.toString();
        boolean boolean73 = illegal1.equals((java.lang.Object) noOp65);
        boolean boolean74 = illegal1.isResolved();
        java.lang.Class<?> wildcardClass75 = illegal1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str53, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator60);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp65 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp65.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str67, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertNotNull(classFileLocator70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str72, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        byte[] byteArray6 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator7 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray15 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray18 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator19 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray15, classFileLocator19);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp21 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray31 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28, classFileLocator32);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp34 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str35 = noOp34.toString();
        java.lang.String str36 = noOp34.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray37 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator19, noOp21, classFileLocator33, noOp34 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound38 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray37);
        boolean boolean40 = compound38.equals((java.lang.Object) "hi!");
        java.lang.String str41 = compound38.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) compound38);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal45 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        java.lang.String str46 = illegal45.toString();
        byte[] byteArray49 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit50 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray49);
        byte[] byteArray51 = explicit50.resolve();
        boolean boolean52 = explicit50.isResolved();
        boolean boolean54 = explicit50.equals((java.lang.Object) 10L);
        java.lang.String str55 = explicit50.toString();
        byte[] byteArray56 = explicit50.resolve();
        boolean boolean57 = illegal45.equals((java.lang.Object) byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator58 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray56);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray6, classFileLocator58);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator60 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit61 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit62 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray63 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound64 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray63);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound65 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray63);
        byte[] byteArray68 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit69 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray68);
        byte[] byteArray70 = explicit69.resolve();
        boolean boolean71 = explicit69.isResolved();
        boolean boolean72 = compound65.equals((java.lang.Object) boolean71);
        java.lang.String str73 = compound65.toString();
        java.lang.Object obj74 = null;
        boolean boolean75 = compound65.equals(obj74);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator76 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='.class'}'}", byteArray6, (net.bytebuddy.dynamic.ClassFileLocator) compound65);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator7);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator19);
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertTrue("'" + noOp21 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp21.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertTrue("'" + noOp34 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp34.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str35, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str36, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str46, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str55, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(classFileLocator58);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(classFileLocator60);
        org.junit.Assert.assertNotNull(classFileLocatorArray63);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str73, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(classFileLocator76);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp0 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str1 = noOp0.toString();
        java.lang.String str2 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution4 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str5 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        java.lang.String str8 = noOp0.toString();
        java.lang.String str9 = noOp0.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp0.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + noOp0 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp0.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str1, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str2, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str5, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str8, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str9, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution11);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        java.lang.String str11 = explicit6.toString();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        byte[] byteArray30 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit32 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray30);
        byte[] byteArray39 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray42 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray42);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator44 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray39, classFileLocator43);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp45 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray52 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray55 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator56 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray55);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator57 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray52, classFileLocator56);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp58 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str59 = noOp58.toString();
        java.lang.String str60 = noOp58.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray61 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator43, noOp45, classFileLocator57, noOp58 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound62 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray61);
        boolean boolean64 = compound62.equals((java.lang.Object) "hi!");
        java.lang.String str65 = compound62.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray30, (net.bytebuddy.dynamic.ClassFileLocator) compound62);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator67 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21, (net.bytebuddy.dynamic.ClassFileLocator) compound62);
        boolean boolean68 = explicit6.equals((java.lang.Object) "hi!");
        boolean boolean69 = illegal1.equals((java.lang.Object) explicit6);
        java.lang.String str70 = explicit6.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator43);
        org.junit.Assert.assertNotNull(classFileLocator44);
        org.junit.Assert.assertTrue("'" + noOp45 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp45.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator56);
        org.junit.Assert.assertNotNull(classFileLocator57);
        org.junit.Assert.assertTrue("'" + noOp58 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp58.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str59, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str60, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertNotNull(classFileLocator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str70, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Compound{classFileLocator=[]}");
        boolean boolean2 = illegal1.isResolved();
        byte[] byteArray5 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator6 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray5);
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray39 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator6, compound36 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound40 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound41 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound42 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray39);
        boolean boolean43 = illegal1.equals((java.lang.Object) compound42);
        java.lang.String str44 = compound42.toString();
        byte[] byteArray48 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit50 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray48);
        byte[] byteArray57 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray60 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator61 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray60);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator62 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray57, classFileLocator61);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp63 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray70 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray73 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator74 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray73);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator75 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray70, classFileLocator74);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp76 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str77 = noOp76.toString();
        java.lang.String str78 = noOp76.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray79 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator61, noOp63, classFileLocator75, noOp76 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound80 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray79);
        boolean boolean82 = compound80.equals((java.lang.Object) "hi!");
        java.lang.String str83 = compound80.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator84 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray48, (net.bytebuddy.dynamic.ClassFileLocator) compound80);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit85 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray48);
        java.lang.String str86 = explicit85.toString();
        boolean boolean87 = compound42.equals((java.lang.Object) explicit85);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution89 = compound42.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator6);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(classFileLocatorArray39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator61);
        org.junit.Assert.assertNotNull(classFileLocator62);
        org.junit.Assert.assertTrue("'" + noOp63 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp63.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator74);
        org.junit.Assert.assertNotNull(classFileLocator75);
        org.junit.Assert.assertTrue("'" + noOp76 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp76.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str77, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str78, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(classFileLocator84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str86, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(resolution89);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean6 = explicit3.equals((java.lang.Object) (short) 0);
        byte[] byteArray7 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray12 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray12);
        byte[] byteArray14 = explicit13.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        byte[] byteArray17 = explicit16.resolve();
        boolean boolean18 = explicit8.equals((java.lang.Object) byteArray17);
        boolean boolean19 = explicit8.isResolved();
        java.lang.String str20 = explicit8.toString();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str20, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound10 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound11 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound12 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound13 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound14 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound15 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound16 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound17 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound18 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound19 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        boolean boolean9 = explicit4.isResolved();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        java.lang.String str12 = explicit4.toString();
        byte[] byteArray13 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray15 = explicit14.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray15);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        byte[] byteArray12 = explicit3.resolve();
        boolean boolean13 = explicit3.isResolved();
        byte[] byteArray14 = explicit3.resolve();
        java.lang.Object obj15 = null;
        boolean boolean16 = explicit3.equals(obj15);
        boolean boolean17 = explicit3.isResolved();
        boolean boolean18 = explicit3.isResolved();
        byte[] byteArray19 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        java.lang.String str4 = illegal1.toString();
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean11 = explicit8.equals((java.lang.Object) (short) 0);
        boolean boolean12 = illegal1.equals((java.lang.Object) explicit8);
        byte[] byteArray17 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray17);
        byte[] byteArray19 = explicit18.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray19);
        boolean boolean22 = explicit21.isResolved();
        byte[] byteArray23 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray23);
        boolean boolean25 = illegal1.equals((java.lang.Object) byteArray23);
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray35 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray35);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray32, classFileLocator36);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp38 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray48 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray45, classFileLocator49);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp51 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str52 = noOp51.toString();
        java.lang.String str53 = noOp51.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray54 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator36, noOp38, classFileLocator50, noOp51 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound55 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray54);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = compound55.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str58 = compound55.toString();
        byte[] byteArray62 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit63 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray62);
        byte[] byteArray64 = explicit63.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray64);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit66 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray64);
        boolean boolean67 = compound55.equals((java.lang.Object) byteArray64);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution69 = compound55.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution71 = compound55.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        boolean boolean72 = illegal1.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        java.lang.String str73 = illegal1.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertTrue("'" + noOp38 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp38.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + noOp51 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp51.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str52, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray54);
        org.junit.Assert.assertNotNull(resolution57);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(resolution69);
        org.junit.Assert.assertNotNull(resolution71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str73, "ClassFileLocator.Resolution.Illegal{typeName=''}");
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        java.lang.String str11 = explicit5.toString();
        boolean boolean12 = explicit5.isResolved();
        boolean boolean13 = explicit5.isResolved();
        byte[] byteArray14 = explicit5.resolve();
        byte[] byteArray15 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='hi!'}", byteArray15);
        byte[] byteArray20 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray22 = explicit21.resolve();
        boolean boolean23 = explicit21.isResolved();
        boolean boolean25 = explicit21.equals((java.lang.Object) 10L);
        java.lang.String str26 = explicit21.toString();
        java.lang.String str27 = explicit21.toString();
        byte[] byteArray28 = explicit21.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit29 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        byte[] byteArray34 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit35 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray34);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp36 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean37 = explicit35.equals((java.lang.Object) noOp36);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution39 = noOp36.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = noOp36.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str42 = noOp36.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution44 = noOp36.locate("");
        boolean boolean45 = compound31.equals((java.lang.Object) noOp36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray28, (net.bytebuddy.dynamic.ClassFileLocator) noOp36);
        java.lang.String str47 = noOp36.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator48 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray15, (net.bytebuddy.dynamic.ClassFileLocator) noOp36);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = noOp36.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str26, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str27, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp36 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp36.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(resolution39);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str47, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator48);
        org.junit.Assert.assertNotNull(resolution50);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean9 = compound2.equals((java.lang.Object) boolean8);
        java.lang.String str10 = compound2.toString();
        java.lang.String str11 = compound2.toString();
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit18 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        byte[] byteArray21 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp23 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean24 = explicit22.equals((java.lang.Object) noOp23);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution26 = noOp23.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution28 = noOp23.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution30 = noOp23.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray15, (net.bytebuddy.dynamic.ClassFileLocator) noOp23);
        java.lang.String str32 = noOp23.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = noOp23.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution36 = noOp23.locate("hi!");
        boolean boolean37 = resolution36.isResolved();
        boolean boolean38 = compound2.equals((java.lang.Object) resolution36);
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str10, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str11, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp23 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp23.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(resolution26);
        org.junit.Assert.assertNotNull(resolution28);
        org.junit.Assert.assertNotNull(resolution30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertNotNull(resolution36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str2 = illegal1.toString();
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        boolean boolean8 = explicit6.isResolved();
        boolean boolean10 = explicit6.equals((java.lang.Object) 10L);
        boolean boolean11 = explicit6.isResolved();
        java.lang.String str12 = explicit6.toString();
        byte[] byteArray13 = explicit6.resolve();
        java.lang.String str14 = explicit6.toString();
        byte[] byteArray15 = explicit6.resolve();
        boolean boolean16 = illegal1.equals((java.lang.Object) explicit6);
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray26 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray26);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator28 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray23, classFileLocator27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray36 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray39 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray36, classFileLocator40);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp42 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str43 = noOp42.toString();
        java.lang.String str44 = noOp42.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray45 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator27, noOp29, classFileLocator41, noOp42 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound46 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray45);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution48 = compound46.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution50 = compound46.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution52 = compound46.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean53 = illegal1.equals((java.lang.Object) resolution52);
        java.lang.Object obj54 = null;
        boolean boolean55 = illegal1.equals(obj54);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str2, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertNotNull(classFileLocator28);
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertTrue("'" + noOp42 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp42.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str44, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray45);
        org.junit.Assert.assertNotNull(resolution48);
        org.junit.Assert.assertNotNull(resolution50);
        org.junit.Assert.assertNotNull(resolution52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        byte[] byteArray6 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray6);
        byte[] byteArray8 = explicit7.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray10 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound11 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray10);
        byte[] byteArray14 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray14);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp16 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean17 = explicit15.equals((java.lang.Object) noOp16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp16.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp16.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str22 = noOp16.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = noOp16.locate("");
        boolean boolean25 = compound11.equals((java.lang.Object) noOp16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) noOp16);
        byte[] byteArray33 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray36 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray36);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator38 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray33, classFileLocator37);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp39 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray46 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray49 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray46, classFileLocator50);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp52 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str53 = noOp52.toString();
        java.lang.String str54 = noOp52.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray55 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator37, noOp39, classFileLocator51, noOp52 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound56 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray55);
        boolean boolean58 = compound56.equals((java.lang.Object) "hi!");
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator59 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray8, (net.bytebuddy.dynamic.ClassFileLocator) compound56);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit60 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray65 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit66 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray65);
        byte[] byteArray67 = explicit66.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator68 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray67);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator69 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray67);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator70 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}", byteArray8, classFileLocator69);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(classFileLocatorArray10);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp16 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp16.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str22, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertNotNull(classFileLocator38);
        org.junit.Assert.assertTrue("'" + noOp39 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp39.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertTrue("'" + noOp52 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp52.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str54, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(classFileLocator59);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator68);
        org.junit.Assert.assertNotNull(classFileLocator69);
        org.junit.Assert.assertNotNull(classFileLocator70);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray5 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray5);
        byte[] byteArray9 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit10 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp11 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean12 = explicit10.equals((java.lang.Object) noOp11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp11.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp11.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str17 = noOp11.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = noOp11.locate("");
        boolean boolean20 = compound6.equals((java.lang.Object) noOp11);
        boolean boolean21 = illegal1.equals((java.lang.Object) compound6);
        boolean boolean22 = illegal1.isResolved();
        java.lang.String str23 = illegal1.toString();
        boolean boolean24 = illegal1.isResolved();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray25 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(classFileLocatorArray5);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp11 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp11.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str17, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str23, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        boolean boolean4 = illegal1.isResolved();
        java.lang.Object obj5 = null;
        boolean boolean6 = illegal1.equals(obj5);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray7 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound31.locate("");
        boolean boolean36 = illegal1.equals((java.lang.Object) resolution35);
        java.lang.String str37 = illegal1.toString();
        java.lang.String str38 = illegal1.toString();
        boolean boolean39 = illegal1.isResolved();
        java.lang.String str40 = illegal1.toString();
        byte[] byteArray47 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray50 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray50);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray47, classFileLocator51);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp53 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray60 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray63 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator64 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray63);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray60, classFileLocator64);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp66 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str67 = noOp66.toString();
        java.lang.String str68 = noOp66.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray69 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator51, noOp53, classFileLocator65, noOp66 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound70 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray69);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp71 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str72 = noOp71.toString();
        java.lang.String str73 = noOp71.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution75 = noOp71.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        boolean boolean76 = compound70.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str77 = compound70.toString();
        byte[] byteArray81 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit82 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray81);
        byte[] byteArray83 = explicit82.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator84 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray83);
        boolean boolean85 = compound70.equals((java.lang.Object) byteArray83);
        java.lang.String str86 = compound70.toString();
        boolean boolean87 = illegal1.equals((java.lang.Object) compound70);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray88 = illegal1.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str37, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str38, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str40, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertTrue("'" + noOp53 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp53.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator64);
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertTrue("'" + noOp66 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp66.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str67, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str68, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray69);
        org.junit.Assert.assertTrue("'" + noOp71 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp71.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str72, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str73, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}'}");
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        byte[] byteArray4 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator5 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray4);
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp10 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean11 = explicit9.equals((java.lang.Object) noOp10);
        java.lang.String str12 = noOp10.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray4, (net.bytebuddy.dynamic.ClassFileLocator) noOp10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray15 = explicit14.resolve();
        byte[] byteArray16 = explicit14.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}", byteArray16);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator5);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp10 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp10.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray21 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator22 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray21);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18, classFileLocator22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray18);
        boolean boolean26 = explicit3.equals((java.lang.Object) ".class");
        byte[] byteArray29 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit30 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray29);
        byte[] byteArray31 = explicit30.resolve();
        boolean boolean32 = explicit30.isResolved();
        boolean boolean34 = explicit30.equals((java.lang.Object) 10L);
        boolean boolean35 = explicit30.isResolved();
        java.lang.String str36 = explicit30.toString();
        byte[] byteArray45 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray48 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator49 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray48);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray45, classFileLocator49);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator51 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator52 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray45);
        boolean boolean53 = explicit30.equals((java.lang.Object) ".class");
        boolean boolean54 = explicit3.equals((java.lang.Object) boolean53);
        byte[] byteArray55 = explicit3.resolve();
        java.lang.String str56 = explicit3.toString();
        java.lang.String str57 = explicit3.toString();
        byte[] byteArray58 = explicit3.resolve();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator22);
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str36, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator49);
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertNotNull(classFileLocator51);
        org.junit.Assert.assertNotNull(classFileLocator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str56, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str57, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, 100]");
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str12 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution14 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution16 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str12, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution14);
        org.junit.Assert.assertNotNull(resolution16);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        java.lang.String str9 = explicit4.toString();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        boolean boolean14 = explicit13.isResolved();
        byte[] byteArray18 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray33 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray33);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray30, classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray30);
        boolean boolean38 = explicit21.equals((java.lang.Object) byteArray30);
        byte[] byteArray39 = explicit21.resolve();
        boolean boolean40 = explicit13.equals((java.lang.Object) byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit42 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit43 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        byte[] byteArray44 = explicit43.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray44);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator45);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("");
        java.lang.String str38 = compound29.toString();
        java.lang.String str39 = compound29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution41 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution43 = compound29.locate(".class");
        byte[] byteArray52 = new byte[] { (byte) -1, (byte) 100, (byte) 10, (byte) 10, (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator53 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.NoOp.INSTANCE", byteArray52);
        byte[] byteArray58 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit59 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray58);
        byte[] byteArray60 = explicit59.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator61 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray60);
        byte[] byteArray69 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray72 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator73 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray72);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator74 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray69, classFileLocator73);
        byte[] byteArray77 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator78 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray77);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator79 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray69, classFileLocator78);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator80 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray60, classFileLocator78);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator81 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray52, classFileLocator80);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit82 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray52);
        boolean boolean83 = compound29.equals((java.lang.Object) explicit82);
        java.lang.String str84 = compound29.toString();
        boolean boolean86 = compound29.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution88 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(resolution41);
        org.junit.Assert.assertNotNull(resolution43);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 100, 10, 10, -1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator53);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator61);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator73);
        org.junit.Assert.assertNotNull(classFileLocator74);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator78);
        org.junit.Assert.assertNotNull(classFileLocator79);
        org.junit.Assert.assertNotNull(classFileLocator80);
        org.junit.Assert.assertNotNull(classFileLocator81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(resolution88);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("");
        byte[] byteArray40 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp42 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean43 = explicit41.equals((java.lang.Object) noOp42);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution45 = noOp42.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = noOp42.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str48 = noOp42.toString();
        java.lang.String str49 = noOp42.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution51 = noOp42.locate("hi!");
        boolean boolean52 = compound29.equals((java.lang.Object) noOp42);
        java.lang.String str53 = noOp42.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = noOp42.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = noOp42.locate(".class");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp42 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp42.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(resolution45);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str53, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertNotNull(resolution57);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        java.lang.String str9 = explicit4.toString();
        java.lang.String str10 = explicit4.toString();
        byte[] byteArray11 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit12 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit13 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray11);
        boolean boolean14 = explicit13.isResolved();
        byte[] byteArray18 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator20 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName=''}", byteArray18);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray18);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray33 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray33);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray30, classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator36 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray30);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator37 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}", byteArray30);
        boolean boolean38 = explicit21.equals((java.lang.Object) byteArray30);
        byte[] byteArray39 = explicit21.resolve();
        boolean boolean40 = explicit13.equals((java.lang.Object) byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit41 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray39);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit43 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray39);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str10, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator20);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertNotNull(classFileLocator36);
        org.junit.Assert.assertNotNull(classFileLocator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(classFileLocator42);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray12 = explicit3.resolve();
        byte[] byteArray13 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str15 = noOp14.toString();
        java.lang.String str16 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str19 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution21 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution23 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution25 = noOp14.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}");
        java.lang.String str26 = noOp14.toString();
        java.lang.String str27 = noOp14.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution29 = noOp14.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean30 = explicit3.equals((java.lang.Object) noOp14);
        boolean boolean31 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str15, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str16, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str19, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution21);
        org.junit.Assert.assertNotNull(resolution23);
        org.junit.Assert.assertNotNull(resolution25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        byte[] byteArray10 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = classFileLocator11.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = illegal7.equals((java.lang.Object) resolution13);
        boolean boolean15 = illegal1.equals((java.lang.Object) boolean14);
        boolean boolean16 = illegal1.isResolved();
        boolean boolean17 = illegal1.isResolved();
        boolean boolean18 = illegal1.isResolved();
        boolean boolean19 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal21 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        byte[] byteArray28 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray31 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator32 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray31);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator33 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray28, classFileLocator32);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp34 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray41 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray44 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator45 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray44);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray41, classFileLocator45);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp47 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str48 = noOp47.toString();
        java.lang.String str49 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray50 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator32, noOp34, classFileLocator46, noOp47 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound51 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray50);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound51.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound51.locate("");
        boolean boolean56 = illegal21.equals((java.lang.Object) resolution55);
        boolean boolean57 = illegal1.equals((java.lang.Object) illegal21);
        boolean boolean58 = illegal21.isResolved();
        boolean boolean59 = illegal21.isResolved();
        java.lang.String str60 = illegal21.toString();
        boolean boolean61 = illegal21.isResolved();
        boolean boolean62 = illegal21.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator32);
        org.junit.Assert.assertNotNull(classFileLocator33);
        org.junit.Assert.assertTrue("'" + noOp34 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp34.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator45);
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertTrue("'" + noOp47 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp47.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str48, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray50);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}" + "'", str60, "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}'}");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        byte[] byteArray2 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator3 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray7 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray9 = explicit8.resolve();
        boolean boolean10 = explicit8.isResolved();
        boolean boolean12 = explicit8.equals((java.lang.Object) 10L);
        boolean boolean13 = explicit8.isResolved();
        java.lang.String str14 = explicit8.toString();
        byte[] byteArray15 = explicit8.resolve();
        java.lang.String str16 = explicit8.toString();
        boolean boolean17 = explicit4.equals((java.lang.Object) str16);
        byte[] byteArray18 = explicit4.resolve();
        byte[] byteArray19 = explicit4.resolve();
        byte[] byteArray20 = explicit4.resolve();
        boolean boolean21 = explicit4.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator3);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str16, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        byte[] byteArray4 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray4);
        byte[] byteArray6 = explicit5.resolve();
        boolean boolean7 = explicit5.isResolved();
        boolean boolean9 = explicit5.equals((java.lang.Object) 10L);
        boolean boolean10 = explicit5.isResolved();
        boolean boolean11 = explicit5.isResolved();
        boolean boolean12 = explicit5.isResolved();
        byte[] byteArray13 = explicit5.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator14 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit15 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        byte[] byteArray16 = explicit15.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit17 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal19 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean20 = illegal19.isResolved();
        java.lang.String str21 = illegal19.toString();
        boolean boolean22 = illegal19.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray23 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound24 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray23);
        byte[] byteArray27 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit28 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray27);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp29 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean30 = explicit28.equals((java.lang.Object) noOp29);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution32 = noOp29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution34 = noOp29.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str35 = noOp29.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = noOp29.locate("");
        boolean boolean38 = compound24.equals((java.lang.Object) noOp29);
        boolean boolean39 = illegal19.equals((java.lang.Object) compound24);
        byte[] byteArray42 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit43 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray42);
        byte[] byteArray44 = explicit43.resolve();
        boolean boolean45 = explicit43.isResolved();
        boolean boolean47 = explicit43.equals((java.lang.Object) 10L);
        boolean boolean48 = explicit43.isResolved();
        java.lang.String str49 = explicit43.toString();
        byte[] byteArray50 = explicit43.resolve();
        java.lang.String str51 = explicit43.toString();
        boolean boolean52 = explicit43.isResolved();
        boolean boolean53 = compound24.equals((java.lang.Object) boolean52);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator54 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}", byteArray16, (net.bytebuddy.dynamic.ClassFileLocator) compound24);
        byte[] byteArray61 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray64 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray64);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator66 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray61, classFileLocator65);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp67 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray74 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray77 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator78 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray77);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator79 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray74, classFileLocator78);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp80 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str81 = noOp80.toString();
        java.lang.String str82 = noOp80.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray83 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator65, noOp67, classFileLocator79, noOp80 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound84 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray83);
        boolean boolean86 = compound84.equals((java.lang.Object) "hi!");
        boolean boolean88 = compound84.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution90 = compound84.locate("ClassFileLocator.NoOp.INSTANCE");
        java.lang.String str91 = compound84.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution93 = compound84.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        boolean boolean94 = compound24.equals((java.lang.Object) "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator14);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str21, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classFileLocatorArray23);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp29 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp29.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(resolution32);
        org.junit.Assert.assertNotNull(resolution34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str35, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str49, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str51, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(classFileLocator54);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator65);
        org.junit.Assert.assertNotNull(classFileLocator66);
        org.junit.Assert.assertTrue("'" + noOp67 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp67.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator78);
        org.junit.Assert.assertNotNull(classFileLocator79);
        org.junit.Assert.assertTrue("'" + noOp80 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp80.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str81, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str82, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(resolution90);
        org.junit.Assert.assertNotNull(resolution93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        java.lang.String str6 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution8 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        java.lang.String str11 = noOp4.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<5 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str6, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str11, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(resolution13);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        boolean boolean10 = explicit3.isResolved();
        boolean boolean11 = explicit3.isResolved();
        byte[] byteArray14 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        byte[] byteArray22 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray25 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray25);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator27 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray22, classFileLocator26);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp28 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray35 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray38 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray38);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator40 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray35, classFileLocator39);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp41 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str42 = noOp41.toString();
        java.lang.String str43 = noOp41.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray44 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator26, noOp28, classFileLocator40, noOp41 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound45 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray44);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution47 = compound45.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray48 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator15, compound45 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound49 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound50 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray48);
        boolean boolean51 = explicit3.equals((java.lang.Object) classFileLocatorArray48);
        byte[] byteArray52 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit53 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray52);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertNotNull(classFileLocator27);
        org.junit.Assert.assertTrue("'" + noOp28 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp28.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertNotNull(classFileLocator40);
        org.junit.Assert.assertTrue("'" + noOp41 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp41.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str42, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str43, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray44);
        org.junit.Assert.assertNotNull(resolution47);
        org.junit.Assert.assertNotNull(classFileLocatorArray48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, 100]");
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray11 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray11);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator13 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray8, classFileLocator12);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp14 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray24 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator25 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray24);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator26 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray21, classFileLocator25);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp27 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str28 = noOp27.toString();
        java.lang.String str29 = noOp27.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray30 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator12, noOp14, classFileLocator26, noOp27 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound31 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray30);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution33 = compound31.locate("ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        java.lang.String str34 = compound31.toString();
        byte[] byteArray38 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit39 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray38);
        byte[] byteArray40 = explicit39.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator41 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit42 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        boolean boolean43 = compound31.equals((java.lang.Object) byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit44 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit45 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit47 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        byte[] byteArray50 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit51 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray50);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp52 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean53 = explicit51.equals((java.lang.Object) noOp52);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = noOp52.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = noOp52.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution59 = noOp52.locate("hi!");
        java.lang.String str60 = noOp52.toString();
        java.lang.String str61 = noOp52.toString();
        java.lang.String str62 = noOp52.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}", byteArray40, (net.bytebuddy.dynamic.ClassFileLocator) noOp52);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit64 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray40);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator65 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='.class'}", byteArray40);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator12);
        org.junit.Assert.assertNotNull(classFileLocator13);
        org.junit.Assert.assertTrue("'" + noOp14 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp14.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator25);
        org.junit.Assert.assertNotNull(classFileLocator26);
        org.junit.Assert.assertTrue("'" + noOp27 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp27.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str28, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str29, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray30);
        org.junit.Assert.assertNotNull(resolution33);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp52 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp52.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertNotNull(resolution57);
        org.junit.Assert.assertNotNull(resolution59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str60, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str61, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str62, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertNotNull(classFileLocator65);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray16 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray16);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator18 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray13, classFileLocator17);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp19 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray26 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray29 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray29);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator31 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray26, classFileLocator30);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp32 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str33 = noOp32.toString();
        java.lang.String str34 = noOp32.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray35 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator17, noOp19, classFileLocator31, noOp32 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound36 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution38 = compound36.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution40 = compound36.locate("");
        boolean boolean41 = explicit6.equals((java.lang.Object) compound36);
        byte[] byteArray42 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator43 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray42);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertNotNull(classFileLocator18);
        org.junit.Assert.assertTrue("'" + noOp19 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp19.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertNotNull(classFileLocator31);
        org.junit.Assert.assertTrue("'" + noOp32 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp32.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str34, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray35);
        org.junit.Assert.assertNotNull(resolution38);
        org.junit.Assert.assertNotNull(resolution40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator43);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        byte[] byteArray6 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray9 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator10 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray9);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray6, classFileLocator10);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp12 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray22 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator23 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray22);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator24 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray19, classFileLocator23);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp25 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str26 = noOp25.toString();
        java.lang.String str27 = noOp25.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray28 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator10, noOp12, classFileLocator24, noOp25 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound29 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray28);
        boolean boolean31 = compound29.equals((java.lang.Object) "hi!");
        boolean boolean33 = compound29.equals((java.lang.Object) (-1.0d));
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution35 = compound29.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution37 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        byte[] byteArray41 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator42 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray41);
        byte[] byteArray45 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit46 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp47 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean48 = explicit46.equals((java.lang.Object) noOp47);
        java.lang.String str49 = noOp47.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator50 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray41, (net.bytebuddy.dynamic.ClassFileLocator) noOp47);
        boolean boolean51 = compound29.equals((java.lang.Object) byteArray41);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution53 = compound29.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray54 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound55 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray54);
        java.lang.String str56 = compound55.toString();
        java.lang.String str57 = compound55.toString();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution59 = compound55.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution61 = compound55.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution63 = compound55.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean64 = compound29.equals((java.lang.Object) compound55);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution66 = compound55.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray67 = resolution66.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator10);
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertTrue("'" + noOp12 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp12.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator23);
        org.junit.Assert.assertNotNull(classFileLocator24);
        org.junit.Assert.assertTrue("'" + noOp25 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp25.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str26, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str27, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(resolution35);
        org.junit.Assert.assertNotNull(resolution37);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator42);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp47 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp47.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str49, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocator50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(resolution53);
        org.junit.Assert.assertNotNull(classFileLocatorArray54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str56, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str57, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertNotNull(resolution59);
        org.junit.Assert.assertNotNull(resolution61);
        org.junit.Assert.assertNotNull(resolution63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(resolution66);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution10 = classFileLocator8.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean11 = explicit3.equals((java.lang.Object) classFileLocator8);
        boolean boolean13 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit3.isResolved();
        byte[] byteArray15 = explicit3.resolve();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit16 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray15);
        byte[] byteArray20 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator21 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit22 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit23 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray20);
        byte[] byteArray30 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray33 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator34 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray33);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator35 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray30, classFileLocator34);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp36 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray43 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray46 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray46);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator48 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray43, classFileLocator47);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp49 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str50 = noOp49.toString();
        java.lang.String str51 = noOp49.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray52 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator34, noOp36, classFileLocator48, noOp49 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound53 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray52);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution55 = compound53.locate("ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution57 = compound53.locate("");
        boolean boolean58 = explicit23.equals((java.lang.Object) compound53);
        byte[] byteArray59 = explicit23.resolve();
        byte[] byteArray60 = explicit23.resolve();
        java.lang.String str61 = explicit23.toString();
        byte[] byteArray62 = explicit23.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator63 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}", byteArray62);
        boolean boolean64 = explicit16.equals((java.lang.Object) "ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Explicit{binaryRepresentation=<6 bytes>}'}");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(resolution10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator21);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator34);
        org.junit.Assert.assertNotNull(classFileLocator35);
        org.junit.Assert.assertTrue("'" + noOp36 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp36.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertNotNull(classFileLocator48);
        org.junit.Assert.assertTrue("'" + noOp49 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp49.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str50, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str51, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray52);
        org.junit.Assert.assertNotNull(resolution55);
        org.junit.Assert.assertNotNull(resolution57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[100]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[100]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str61, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp18 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str32 = noOp31.toString();
        java.lang.String str33 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray34 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator16, noOp18, classFileLocator30, noOp31 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray34);
        boolean boolean37 = compound35.equals((java.lang.Object) "hi!");
        java.lang.String str38 = compound35.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray3, (net.bytebuddy.dynamic.ClassFileLocator) compound35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit40 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        boolean boolean41 = explicit40.isResolved();
        boolean boolean42 = explicit40.isResolved();
        java.lang.String str43 = explicit40.toString();
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertTrue("'" + noOp18 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp18.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}" + "'", str43, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<1 bytes>}");
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        byte[] byteArray5 = explicit3.resolve();
        byte[] byteArray8 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray8);
        byte[] byteArray10 = explicit9.resolve();
        boolean boolean11 = explicit9.isResolved();
        boolean boolean13 = explicit9.equals((java.lang.Object) 10L);
        boolean boolean14 = explicit9.isResolved();
        boolean boolean15 = explicit9.isResolved();
        boolean boolean16 = explicit9.isResolved();
        byte[] byteArray17 = explicit9.resolve();
        boolean boolean18 = explicit3.equals((java.lang.Object) explicit9);
        boolean boolean19 = explicit3.isResolved();
        boolean boolean20 = explicit3.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        byte[] byteArray3 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit4 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray5 = explicit4.resolve();
        boolean boolean6 = explicit4.isResolved();
        boolean boolean8 = explicit4.equals((java.lang.Object) 10L);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator9 = net.bytebuddy.dynamic.ClassFileLocator.ForClassLoader.ofClassPath();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = classFileLocator9.locate("ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        boolean boolean12 = explicit4.equals((java.lang.Object) classFileLocator9);
        boolean boolean13 = explicit4.isResolved();
        byte[] byteArray14 = explicit4.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator15 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray14);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(classFileLocator9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator15);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean7 = explicit3.equals((java.lang.Object) 10L);
        boolean boolean8 = explicit3.isResolved();
        java.lang.String str9 = explicit3.toString();
        byte[] byteArray10 = explicit3.resolve();
        java.lang.String str11 = explicit3.toString();
        java.lang.String str12 = explicit3.toString();
        byte[] byteArray13 = explicit3.resolve();
        java.lang.String str14 = explicit3.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray15 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound16 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray15);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound17 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution19 = compound17.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        java.lang.String str20 = compound17.toString();
        boolean boolean21 = explicit3.equals((java.lang.Object) str20);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str9, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str11, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str12, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}" + "'", str14, "ClassFileLocator.Resolution.Explicit{binaryRepresentation=<2 bytes>}");
        org.junit.Assert.assertNotNull(classFileLocatorArray15);
        org.junit.Assert.assertNotNull(resolution19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ClassFileLocator.Compound{classFileLocator=[]}" + "'", str20, "ClassFileLocator.Compound{classFileLocator=[]}");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound4 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound5 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound6 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound7 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound8 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound9 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound10 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution12 = compound10.locate("");
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertNotNull(resolution12);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp4 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean5 = explicit3.equals((java.lang.Object) noOp4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = noOp4.locate("ClassFileLocator.NoOp.INSTANCE");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution9 = noOp4.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = noOp4.locate("hi!");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution13 = noOp4.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean14 = resolution13.isResolved();
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp4 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp4.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertNotNull(resolution9);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertNotNull(resolution13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        byte[] byteArray2 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit3 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray2);
        byte[] byteArray4 = explicit3.resolve();
        boolean boolean5 = explicit3.isResolved();
        boolean boolean6 = explicit3.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal8 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("");
        boolean boolean9 = illegal8.isResolved();
        java.lang.String str10 = illegal8.toString();
        boolean boolean11 = illegal8.isResolved();
        boolean boolean12 = explicit3.equals((java.lang.Object) illegal8);
        boolean boolean14 = illegal8.equals((java.lang.Object) 10);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray15 = illegal8.resolve();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Could not locate class file for ");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName=''}" + "'", str10, "ClassFileLocator.Resolution.Illegal{typeName=''}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        boolean boolean3 = illegal1.isResolved();
        java.lang.String str4 = illegal1.toString();
        boolean boolean5 = illegal1.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str4, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal1 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal(".class");
        boolean boolean2 = illegal1.isResolved();
        java.lang.String str3 = illegal1.toString();
        boolean boolean4 = illegal1.isResolved();
        boolean boolean5 = illegal1.isResolved();
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal illegal7 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Illegal("hi!");
        java.lang.String str8 = illegal7.toString();
        boolean boolean9 = illegal7.isResolved();
        boolean boolean10 = illegal1.equals((java.lang.Object) illegal7);
        byte[] byteArray13 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit14 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray13);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp15 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        boolean boolean16 = explicit14.equals((java.lang.Object) noOp15);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution18 = noOp15.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution20 = noOp15.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution22 = noOp15.locate("");
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution24 = noOp15.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        boolean boolean25 = illegal1.equals((java.lang.Object) resolution24);
        boolean boolean26 = resolution24.isResolved();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='.class'}" + "'", str3, "ClassFileLocator.Resolution.Illegal{typeName='.class'}");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ClassFileLocator.Resolution.Illegal{typeName='hi!'}" + "'", str8, "ClassFileLocator.Resolution.Illegal{typeName='hi!'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 100]");
        org.junit.Assert.assertTrue("'" + noOp15 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp15.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(resolution18);
        org.junit.Assert.assertNotNull(resolution20);
        org.junit.Assert.assertNotNull(resolution22);
        org.junit.Assert.assertNotNull(resolution24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        byte[] byteArray3 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator4 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray3);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit5 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        byte[] byteArray12 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray15 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator16 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray15);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator17 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray12, classFileLocator16);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp18 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        byte[] byteArray25 = new byte[] { (byte) 1, (byte) 10, (byte) -1, (byte) -1, (byte) 1 };
        byte[] byteArray28 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator29 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray28);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator30 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray25, classFileLocator29);
        net.bytebuddy.dynamic.ClassFileLocator.NoOp noOp31 = net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE;
        java.lang.String str32 = noOp31.toString();
        java.lang.String str33 = noOp31.toString();
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray34 = new net.bytebuddy.dynamic.ClassFileLocator[] { classFileLocator16, noOp18, classFileLocator30, noOp31 };
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound35 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray34);
        boolean boolean37 = compound35.equals((java.lang.Object) "hi!");
        java.lang.String str38 = compound35.toString();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator39 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray3, (net.bytebuddy.dynamic.ClassFileLocator) compound35);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit40 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray3);
        boolean boolean41 = explicit40.isResolved();
        byte[] byteArray45 = new byte[] { (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator46 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("hi!", byteArray45);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator47 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of(".class", byteArray45);
        boolean boolean48 = explicit40.equals((java.lang.Object) byteArray45);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator4);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator16);
        org.junit.Assert.assertNotNull(classFileLocator17);
        org.junit.Assert.assertTrue("'" + noOp18 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp18.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[1, 10, -1, -1, 1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator29);
        org.junit.Assert.assertNotNull(classFileLocator30);
        org.junit.Assert.assertTrue("'" + noOp31 + "' != '" + net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE + "'", noOp31.equals(net.bytebuddy.dynamic.ClassFileLocator.NoOp.INSTANCE));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str32, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ClassFileLocator.NoOp.INSTANCE" + "'", str33, "ClassFileLocator.NoOp.INSTANCE");
        org.junit.Assert.assertNotNull(classFileLocatorArray34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(classFileLocator39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[100]");
        org.junit.Assert.assertNotNull(classFileLocator46);
        org.junit.Assert.assertNotNull(classFileLocator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        net.bytebuddy.dynamic.ClassFileLocator[] classFileLocatorArray0 = new net.bytebuddy.dynamic.ClassFileLocator[] {};
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound1 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound2 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        net.bytebuddy.dynamic.ClassFileLocator.Compound compound3 = new net.bytebuddy.dynamic.ClassFileLocator.Compound(classFileLocatorArray0);
        java.lang.Object obj4 = null;
        boolean boolean5 = compound3.equals(obj4);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution7 = compound3.locate("ClassFileLocator.Resolution.Illegal{typeName=''}");
        java.lang.Object obj8 = null;
        boolean boolean9 = compound3.equals(obj8);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution resolution11 = compound3.locate("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName=''}'}'}");
        boolean boolean12 = resolution11.isResolved();
        org.junit.Assert.assertNotNull(classFileLocatorArray0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resolution7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(resolution11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        byte[] byteArray5 = new byte[] { (byte) -1, (byte) 100 };
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit6 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray5);
        byte[] byteArray7 = explicit6.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator8 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("", byteArray7);
        net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit explicit9 = new net.bytebuddy.dynamic.ClassFileLocator.Resolution.Explicit(byteArray7);
        byte[] byteArray10 = explicit9.resolve();
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator11 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Compound{classFileLocator=[]}", byteArray10);
        net.bytebuddy.dynamic.ClassFileLocator classFileLocator12 = net.bytebuddy.dynamic.ClassFileLocator.Simple.of("ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Resolution.Illegal{typeName='ClassFileLocator.Compound{classFileLocator=[]}'}'}", byteArray10);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 100]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator8);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]");
        org.junit.Assert.assertNotNull(classFileLocator11);
        org.junit.Assert.assertNotNull(classFileLocator12);
    }
}

