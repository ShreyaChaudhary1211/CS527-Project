/* $$ This file has been instrumented by Clover 4.5.2#20240131180750 $$ *//* Generated By:JavaCC: Do not edit this line. ParseException.java Version 6.0 */
/* JavaCCOptions:KEEP_LINE_COL=null */
package org.semanticweb.owlapi.functional.parser;

import org.semanticweb.owlapi.io.OWLParserException;

/**
 * This exception is thrown when parse errors are encountered. You can
 * explicitly create objects of this exception type by calling the method
 * generateParseException in the generated parser. You can modify this class to
 * customize your error reporting mechanisms so long as you retain the public
 * fields.
 */
@SuppressWarnings({"javadoc","fallthrough"})
class ParseException extends OWLParserException {public static class __CLR4_5_28d38d3lvicma27{public static com_atlassian_clover.CoverageRecorder R;public static com_atlassian_clover.CloverProfile[] profiles = { };@java.lang.SuppressWarnings("unchecked") public static <I, T extends I> I lambdaInc(final int i,final T l,final int si){java.lang.reflect.InvocationHandler h=new java.lang.reflect.InvocationHandler(){public java.lang.Object invoke(java.lang.Object p,java.lang.reflect.Method m,java.lang.Object[] a) throws Throwable{R.inc(i);R.inc(si);try{return m.invoke(l,a);}catch(java.lang.reflect.InvocationTargetException e){throw e.getCause()!=null?e.getCause():new RuntimeException("Clover failed to invoke instrumented lambda",e);}}};return (I)java.lang.reflect.Proxy.newProxyInstance(l.getClass().getClassLoader(),l.getClass().getInterfaces(),h);}static{com_atlassian_clover.CoverageRecorder _R=null;try{com_atlassian_clover.CloverVersionInfo.An_old_version_of_clover_is_on_your_compilation_classpath___Please_remove___Required_version_is___4_5_2();if(20240131180750L!=com_atlassian_clover.CloverVersionInfo.getBuildStamp()){com_atlassian_clover.Clover.l("[CLOVER] WARNING: The Clover version used in instrumentation shall match the runtime version.");com_atlassian_clover.Clover.l("[CLOVER] WARNING: Instr=4.5.2#20240131180750,Runtime="+com_atlassian_clover.CloverVersionInfo.getReleaseNum()+"#"+com_atlassian_clover.CloverVersionInfo.getBuildStamp());}R=com_atlassian_clover.Clover.getNullRecorder();_R=com_atlassian_clover.Clover.getNullRecorder();_R=com_atlassian_clover.Clover.getRecorder("\u002f\u0055\u0073\u0065\u0072\u0073\u002f\u0073\u0068\u0072\u0065\u0079\u0061\u0063\u0068\u0061\u0075\u0064\u0068\u0061\u0072\u0079\u002f\u0044\u0065\u0073\u006b\u0074\u006f\u0070\u002f\u0065\u0078\u0074\u0072\u0061\u002f\u0043\u0053\u0035\u0032\u0037\u002d\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u002f\u0042\u0075\u0067\u0073\u002f\u0042\u0075\u0067\u0053\u0077\u0061\u0072\u006d\u002f\u0032\u006e\u0064\u005f\u0072\u006f\u0075\u006e\u0064\u002f\u006f\u0077\u006c\u0061\u0070\u0069\u002d\u0031\u0035\u0038\u0039\u0038\u0039\u0037\u0039\u0032\u002f\u0042\u0075\u0067\u0067\u0079\u002d\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u002f\u0070\u0061\u0072\u0073\u0065\u0072\u0073\u002f\u0074\u0061\u0072\u0067\u0065\u0074\u002f\u0063\u006c\u006f\u0076\u0065\u0072\u002f\u0063\u006c\u006f\u0076\u0065\u0072\u002e\u0064\u0062",1714237279647L,8589935092L,10938,profiles,new java.lang.String[]{"clover.distributed.coverage",null});}catch(java.lang.SecurityException e){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised because it has insufficient security privileges. Please consult the Clover documentation on the security policy file changes required. ("+e.getClass()+":"+e.getMessage()+")");}catch(java.lang.NoClassDefFoundError e){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised. Are you sure you have Clover in the runtime classpath? ("+e.getClass()+":"+e.getMessage()+")");}catch(java.lang.Throwable t){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised because of an unexpected error. ("+t.getClass()+":"+t.getMessage()+")");}R=_R;}}public static final com_atlassian_clover.TestNameSniffer __CLR4_5_2_TEST_NAME_SNIFFER=com_atlassian_clover.TestNameSniffer.NULL_INSTANCE;

    /**
     * The version identifier for this Serializable class. Increment only if the
     * <i>serialized</i> form of the class changes.
     */
    private static final long serialVersionUID = 1L;

    /**
     * This constructor is used by the method "generateParseException" in the
     * generated parser. Calling this constructor generates a new object of this
     * type with the fields "currentToken", "expectedTokenSequences", and
     * "tokenImage" set.
     */
    public ParseException(Token currentTokenVal,
            int[][] expectedTokenSequencesVal, String[] tokenImageVal) {
        super(initialise(currentTokenVal, expectedTokenSequencesVal,
                tokenImageVal));__CLR4_5_28d38d3lvicma27.R.inc(10840);try{__CLR4_5_28d38d3lvicma27.R.inc(10839);
        __CLR4_5_28d38d3lvicma27.R.inc(10841);currentToken = currentTokenVal;
        __CLR4_5_28d38d3lvicma27.R.inc(10842);expectedTokenSequences = expectedTokenSequencesVal;
        __CLR4_5_28d38d3lvicma27.R.inc(10843);tokenImage = tokenImageVal;
    }finally{__CLR4_5_28d38d3lvicma27.R.flushNeeded();}}

    /**
     * The following constructors are for use by you for whatever purpose you
     * can think of. Constructing the exception in this manner makes the
     * exception behave in the normal way - i.e., as documented in the class
     * "Throwable". The fields "errorToken", "expectedTokenSequences", and
     * "tokenImage" do not contain relevant information. The JavaCC generated
     * code does not use these constructors.
     */
    public ParseException() {
        super();__CLR4_5_28d38d3lvicma27.R.inc(10845);try{__CLR4_5_28d38d3lvicma27.R.inc(10844);
    }finally{__CLR4_5_28d38d3lvicma27.R.flushNeeded();}}

    /** Constructor with message. */
    public ParseException(String message) {
        super(message);__CLR4_5_28d38d3lvicma27.R.inc(10847);try{__CLR4_5_28d38d3lvicma27.R.inc(10846);
    }finally{__CLR4_5_28d38d3lvicma27.R.flushNeeded();}}

    /**
     * This is the last token that has been consumed successfully. If this
     * object has been created due to a parse error, the token followng this
     * token will (therefore) be the first error token.
     */
    public Token currentToken;
    /**
     * Each entry in this array is an array of integers. Each array of integers
     * represents a sequence of tokens (by their ordinal values) that is
     * expected at this point of the parse.
     */
    public int[][] expectedTokenSequences;
    /**
     * This is a reference to the "tokenImage" array of the generated parser
     * within which the parse error occurred. This array is defined in the
     * generated ...Constants interface.
     */
    public String[] tokenImage;

    /**
     * It uses "currentToken" and "expectedTokenSequences" to generate a parse
     * error message and returns it. If this object has been created due to a
     * parse error, and you do not catch it (it gets thrown from the parser) the
     * correct error message gets displayed.
     */
    private static String initialise(Token currentToken,
            int[][] expectedTokenSequences, String[] tokenImage) {try{__CLR4_5_28d38d3lvicma27.R.inc(10848);
        __CLR4_5_28d38d3lvicma27.R.inc(10849);String eol = System.getProperty("line.separator", "\n");
        __CLR4_5_28d38d3lvicma27.R.inc(10850);StringBuffer expected = new StringBuffer();
        __CLR4_5_28d38d3lvicma27.R.inc(10851);int maxSize = 0;
        __CLR4_5_28d38d3lvicma27.R.inc(10852);for (int i = 0; (((i < expectedTokenSequences.length)&&(__CLR4_5_28d38d3lvicma27.R.iget(10853)!=0|true))||(__CLR4_5_28d38d3lvicma27.R.iget(10854)==0&false)); i++) {{
            __CLR4_5_28d38d3lvicma27.R.inc(10855);if ((((maxSize < expectedTokenSequences[i].length)&&(__CLR4_5_28d38d3lvicma27.R.iget(10856)!=0|true))||(__CLR4_5_28d38d3lvicma27.R.iget(10857)==0&false))) {{
                __CLR4_5_28d38d3lvicma27.R.inc(10858);maxSize = expectedTokenSequences[i].length;
            }
            }__CLR4_5_28d38d3lvicma27.R.inc(10859);for (int j = 0; (((j < expectedTokenSequences[i].length)&&(__CLR4_5_28d38d3lvicma27.R.iget(10860)!=0|true))||(__CLR4_5_28d38d3lvicma27.R.iget(10861)==0&false)); j++) {{
                __CLR4_5_28d38d3lvicma27.R.inc(10862);expected.append(tokenImage[expectedTokenSequences[i][j]])
                        .append(' ');
            }
            }__CLR4_5_28d38d3lvicma27.R.inc(10863);if ((((expectedTokenSequences[i][expectedTokenSequences[i].length - 1] != 0)&&(__CLR4_5_28d38d3lvicma27.R.iget(10864)!=0|true))||(__CLR4_5_28d38d3lvicma27.R.iget(10865)==0&false))) {{
                __CLR4_5_28d38d3lvicma27.R.inc(10866);expected.append("...");
            }
            }__CLR4_5_28d38d3lvicma27.R.inc(10867);expected.append(eol).append("    ");
        }
        }__CLR4_5_28d38d3lvicma27.R.inc(10868);String retval = "Encountered \"";
        __CLR4_5_28d38d3lvicma27.R.inc(10869);Token tok = currentToken.next;
        __CLR4_5_28d38d3lvicma27.R.inc(10870);for (int i = 0; (((i < maxSize)&&(__CLR4_5_28d38d3lvicma27.R.iget(10871)!=0|true))||(__CLR4_5_28d38d3lvicma27.R.iget(10872)==0&false)); i++) {{
            __CLR4_5_28d38d3lvicma27.R.inc(10873);if ((((i != 0)&&(__CLR4_5_28d38d3lvicma27.R.iget(10874)!=0|true))||(__CLR4_5_28d38d3lvicma27.R.iget(10875)==0&false))) {{
                __CLR4_5_28d38d3lvicma27.R.inc(10876);retval += " ";
            }
            }__CLR4_5_28d38d3lvicma27.R.inc(10877);if ((((tok.kind == 0)&&(__CLR4_5_28d38d3lvicma27.R.iget(10878)!=0|true))||(__CLR4_5_28d38d3lvicma27.R.iget(10879)==0&false))) {{
                __CLR4_5_28d38d3lvicma27.R.inc(10880);retval += tokenImage[0];
                __CLR4_5_28d38d3lvicma27.R.inc(10881);break;
            }
            }__CLR4_5_28d38d3lvicma27.R.inc(10882);retval += " " + tokenImage[tok.kind];
            __CLR4_5_28d38d3lvicma27.R.inc(10883);retval += " \"";
            __CLR4_5_28d38d3lvicma27.R.inc(10884);retval += addEscapes(tok.image);
            __CLR4_5_28d38d3lvicma27.R.inc(10885);retval += " \"";
            __CLR4_5_28d38d3lvicma27.R.inc(10886);tok = tok.next;
        }
        }__CLR4_5_28d38d3lvicma27.R.inc(10887);retval += "\" at line " + currentToken.next.beginLine + ", column "
                + currentToken.next.beginColumn;
        __CLR4_5_28d38d3lvicma27.R.inc(10888);retval += "." + eol;
        __CLR4_5_28d38d3lvicma27.R.inc(10889);if ((((expectedTokenSequences.length == 1)&&(__CLR4_5_28d38d3lvicma27.R.iget(10890)!=0|true))||(__CLR4_5_28d38d3lvicma27.R.iget(10891)==0&false))) {{
            __CLR4_5_28d38d3lvicma27.R.inc(10892);retval += "Was expecting:" + eol + "    ";
        } }else {{
            __CLR4_5_28d38d3lvicma27.R.inc(10893);retval += "Was expecting one of:" + eol + "    ";
        }
        }__CLR4_5_28d38d3lvicma27.R.inc(10894);retval += expected.toString();
        __CLR4_5_28d38d3lvicma27.R.inc(10895);return retval;
    }finally{__CLR4_5_28d38d3lvicma27.R.flushNeeded();}}

    /**
     * The end of line string for this machine.
     */
    protected String eol = System.getProperty("line.separator", "\n");

    /**
     * Used to convert raw characters to their escaped version when these raw
     * version cannot be used as part of an ASCII string literal.
     */
    static String addEscapes(String str) {try{__CLR4_5_28d38d3lvicma27.R.inc(10896);
        __CLR4_5_28d38d3lvicma27.R.inc(10897);StringBuffer retval = new StringBuffer();
        __CLR4_5_28d38d3lvicma27.R.inc(10898);char ch;
        __CLR4_5_28d38d3lvicma27.R.inc(10899);for (int i = 0; (((i < str.length())&&(__CLR4_5_28d38d3lvicma27.R.iget(10900)!=0|true))||(__CLR4_5_28d38d3lvicma27.R.iget(10901)==0&false)); i++) {{
            boolean __CLB4_5_2_bool0=false;__CLR4_5_28d38d3lvicma27.R.inc(10902);switch (str.charAt(i)) {
                case 0:if (!__CLB4_5_2_bool0) {__CLR4_5_28d38d3lvicma27.R.inc(10903);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28d38d3lvicma27.R.inc(10904);continue;
                case '\b':if (!__CLB4_5_2_bool0) {__CLR4_5_28d38d3lvicma27.R.inc(10905);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28d38d3lvicma27.R.inc(10906);retval.append("\\b");
                    __CLR4_5_28d38d3lvicma27.R.inc(10907);continue;
                case '\t':if (!__CLB4_5_2_bool0) {__CLR4_5_28d38d3lvicma27.R.inc(10908);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28d38d3lvicma27.R.inc(10909);retval.append("\\t");
                    __CLR4_5_28d38d3lvicma27.R.inc(10910);continue;
                case '\n':if (!__CLB4_5_2_bool0) {__CLR4_5_28d38d3lvicma27.R.inc(10911);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28d38d3lvicma27.R.inc(10912);retval.append("\\n");
                    __CLR4_5_28d38d3lvicma27.R.inc(10913);continue;
                case '\f':if (!__CLB4_5_2_bool0) {__CLR4_5_28d38d3lvicma27.R.inc(10914);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28d38d3lvicma27.R.inc(10915);retval.append("\\f");
                    __CLR4_5_28d38d3lvicma27.R.inc(10916);continue;
                case '\r':if (!__CLB4_5_2_bool0) {__CLR4_5_28d38d3lvicma27.R.inc(10917);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28d38d3lvicma27.R.inc(10918);retval.append("\\r");
                    __CLR4_5_28d38d3lvicma27.R.inc(10919);continue;
                case '\"':if (!__CLB4_5_2_bool0) {__CLR4_5_28d38d3lvicma27.R.inc(10920);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28d38d3lvicma27.R.inc(10921);retval.append("\\\"");
                    __CLR4_5_28d38d3lvicma27.R.inc(10922);continue;
                case '\'':if (!__CLB4_5_2_bool0) {__CLR4_5_28d38d3lvicma27.R.inc(10923);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28d38d3lvicma27.R.inc(10924);retval.append("\\\'");
                    __CLR4_5_28d38d3lvicma27.R.inc(10925);continue;
                case '\\':if (!__CLB4_5_2_bool0) {__CLR4_5_28d38d3lvicma27.R.inc(10926);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28d38d3lvicma27.R.inc(10927);retval.append("\\\\");
                    __CLR4_5_28d38d3lvicma27.R.inc(10928);continue;
                default:if (!__CLB4_5_2_bool0) {__CLR4_5_28d38d3lvicma27.R.inc(10929);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28d38d3lvicma27.R.inc(10930);if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {{
                        __CLR4_5_28d38d3lvicma27.R.inc(10933);String s = "0000" + Integer.toString(ch, 16);
                        __CLR4_5_28d38d3lvicma27.R.inc(10934);retval.append("\\u"
                                + s.substring(s.length() - 4, s.length()));
                    } }else {{
                        __CLR4_5_28d38d3lvicma27.R.inc(10935);retval.append(ch);
                    }
                    }__CLR4_5_28d38d3lvicma27.R.inc(10936);continue;
            }
        }
        }__CLR4_5_28d38d3lvicma27.R.inc(10937);return retval.toString();
    }finally{__CLR4_5_28d38d3lvicma27.R.flushNeeded();}}
}
/* JavaCC - OriginalChecksum=c22e652657ce6f21fc78aa13c4fe2625 (do not edit this line) */
