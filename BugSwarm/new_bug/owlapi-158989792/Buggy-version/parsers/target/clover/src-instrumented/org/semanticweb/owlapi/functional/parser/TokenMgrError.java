/* $$ This file has been instrumented by Clover 4.5.2#20240131180750 $$ *//* Generated By:JavaCC: Do not edit this line. TokenMgrError.java Version 6.0 */
/* JavaCCOptions: */
package org.semanticweb.owlapi.functional.parser;

/** Token Manager Error. */
@SuppressWarnings({"all","fallthrough"})
class TokenMgrError extends Error {public static class __CLR4_5_28ni8nilvicma5p{public static com_atlassian_clover.CoverageRecorder R;public static com_atlassian_clover.CloverProfile[] profiles = { };@java.lang.SuppressWarnings("unchecked") public static <I, T extends I> I lambdaInc(final int i,final T l,final int si){java.lang.reflect.InvocationHandler h=new java.lang.reflect.InvocationHandler(){public java.lang.Object invoke(java.lang.Object p,java.lang.reflect.Method m,java.lang.Object[] a) throws Throwable{R.inc(i);R.inc(si);try{return m.invoke(l,a);}catch(java.lang.reflect.InvocationTargetException e){throw e.getCause()!=null?e.getCause():new RuntimeException("Clover failed to invoke instrumented lambda",e);}}};return (I)java.lang.reflect.Proxy.newProxyInstance(l.getClass().getClassLoader(),l.getClass().getInterfaces(),h);}static{com_atlassian_clover.CoverageRecorder _R=null;try{com_atlassian_clover.CloverVersionInfo.An_old_version_of_clover_is_on_your_compilation_classpath___Please_remove___Required_version_is___4_5_2();if(20240131180750L!=com_atlassian_clover.CloverVersionInfo.getBuildStamp()){com_atlassian_clover.Clover.l("[CLOVER] WARNING: The Clover version used in instrumentation shall match the runtime version.");com_atlassian_clover.Clover.l("[CLOVER] WARNING: Instr=4.5.2#20240131180750,Runtime="+com_atlassian_clover.CloverVersionInfo.getReleaseNum()+"#"+com_atlassian_clover.CloverVersionInfo.getBuildStamp());}R=com_atlassian_clover.Clover.getNullRecorder();_R=com_atlassian_clover.Clover.getNullRecorder();_R=com_atlassian_clover.Clover.getRecorder("\u002f\u0055\u0073\u0065\u0072\u0073\u002f\u0073\u0068\u0072\u0065\u0079\u0061\u0063\u0068\u0061\u0075\u0064\u0068\u0061\u0072\u0079\u002f\u0044\u0065\u0073\u006b\u0074\u006f\u0070\u002f\u0065\u0078\u0074\u0072\u0061\u002f\u0043\u0053\u0035\u0032\u0037\u002d\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u002f\u0042\u0075\u0067\u0073\u002f\u0042\u0075\u0067\u0053\u0077\u0061\u0072\u006d\u002f\u0032\u006e\u0064\u005f\u0072\u006f\u0075\u006e\u0064\u002f\u006f\u0077\u006c\u0061\u0070\u0069\u002d\u0031\u0035\u0038\u0039\u0038\u0039\u0037\u0039\u0032\u002f\u0042\u0075\u0067\u0067\u0079\u002d\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u002f\u0070\u0061\u0072\u0073\u0065\u0072\u0073\u002f\u0074\u0061\u0072\u0067\u0065\u0074\u002f\u0063\u006c\u006f\u0076\u0065\u0072\u002f\u0063\u006c\u006f\u0076\u0065\u0072\u002e\u0064\u0062",1714237279647L,8589935092L,11268,profiles,new java.lang.String[]{"clover.distributed.coverage",null});}catch(java.lang.SecurityException e){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised because it has insufficient security privileges. Please consult the Clover documentation on the security policy file changes required. ("+e.getClass()+":"+e.getMessage()+")");}catch(java.lang.NoClassDefFoundError e){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised. Are you sure you have Clover in the runtime classpath? ("+e.getClass()+":"+e.getMessage()+")");}catch(java.lang.Throwable t){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised because of an unexpected error. ("+t.getClass()+":"+t.getMessage()+")");}R=_R;}}public static final com_atlassian_clover.TestNameSniffer __CLR4_5_2_TEST_NAME_SNIFFER=com_atlassian_clover.TestNameSniffer.NULL_INSTANCE;

    /**
     * The version identifier for this Serializable class. Increment only if the
     * <i>serialized</i> form of the class changes.
     */
    private static final long serialVersionUID = 1L;
    /*
     * Ordinals for various reasons why an Error of this type can be thrown.
     */
    /**
     * Lexical error occurred.
     */
    static final int LEXICAL_ERROR = 0;
    /**
     * An attempt was made to create a second instance of a static token
     * manager.
     */
    static final int STATIC_LEXER_ERROR = 1;
    /**
     * Tried to change to an invalid lexical state.
     */
    static final int INVALID_LEXICAL_STATE = 2;
    /**
     * Detected (and bailed out of) an infinite loop in the token manager.
     */
    static final int LOOP_DETECTED = 3;
    /**
     * Indicates the reason why the exception is thrown. It will have one of the
     * above 4 values.
     */
    int errorCode;

    /**
     * Replaces unprintable characters by their escaped (or unicode escaped)
     * equivalents in the given string
     */
    protected static final String addEscapes(String str) {try{__CLR4_5_28ni8nilvicma5p.R.inc(11214);
        __CLR4_5_28ni8nilvicma5p.R.inc(11215);StringBuffer retval = new StringBuffer();
        __CLR4_5_28ni8nilvicma5p.R.inc(11216);char ch;
        __CLR4_5_28ni8nilvicma5p.R.inc(11217);for (int i = 0; (((i < str.length())&&(__CLR4_5_28ni8nilvicma5p.R.iget(11218)!=0|true))||(__CLR4_5_28ni8nilvicma5p.R.iget(11219)==0&false)); i++) {{
            boolean __CLB4_5_2_bool0=false;__CLR4_5_28ni8nilvicma5p.R.inc(11220);switch (str.charAt(i)) {
                case 0:if (!__CLB4_5_2_bool0) {__CLR4_5_28ni8nilvicma5p.R.inc(11221);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28ni8nilvicma5p.R.inc(11222);continue;
                case '\b':if (!__CLB4_5_2_bool0) {__CLR4_5_28ni8nilvicma5p.R.inc(11223);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28ni8nilvicma5p.R.inc(11224);retval.append("\\b");
                    __CLR4_5_28ni8nilvicma5p.R.inc(11225);continue;
                case '\t':if (!__CLB4_5_2_bool0) {__CLR4_5_28ni8nilvicma5p.R.inc(11226);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28ni8nilvicma5p.R.inc(11227);retval.append("\\t");
                    __CLR4_5_28ni8nilvicma5p.R.inc(11228);continue;
                case '\n':if (!__CLB4_5_2_bool0) {__CLR4_5_28ni8nilvicma5p.R.inc(11229);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28ni8nilvicma5p.R.inc(11230);retval.append("\\n");
                    __CLR4_5_28ni8nilvicma5p.R.inc(11231);continue;
                case '\f':if (!__CLB4_5_2_bool0) {__CLR4_5_28ni8nilvicma5p.R.inc(11232);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28ni8nilvicma5p.R.inc(11233);retval.append("\\f");
                    __CLR4_5_28ni8nilvicma5p.R.inc(11234);continue;
                case '\r':if (!__CLB4_5_2_bool0) {__CLR4_5_28ni8nilvicma5p.R.inc(11235);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28ni8nilvicma5p.R.inc(11236);retval.append("\\r");
                    __CLR4_5_28ni8nilvicma5p.R.inc(11237);continue;
                case '\"':if (!__CLB4_5_2_bool0) {__CLR4_5_28ni8nilvicma5p.R.inc(11238);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28ni8nilvicma5p.R.inc(11239);retval.append("\\\"");
                    __CLR4_5_28ni8nilvicma5p.R.inc(11240);continue;
                case '\'':if (!__CLB4_5_2_bool0) {__CLR4_5_28ni8nilvicma5p.R.inc(11241);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28ni8nilvicma5p.R.inc(11242);retval.append("\\\'");
                    __CLR4_5_28ni8nilvicma5p.R.inc(11243);continue;
                case '\\':if (!__CLB4_5_2_bool0) {__CLR4_5_28ni8nilvicma5p.R.inc(11244);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28ni8nilvicma5p.R.inc(11245);retval.append("\\\\");
                    __CLR4_5_28ni8nilvicma5p.R.inc(11246);continue;
                default:if (!__CLB4_5_2_bool0) {__CLR4_5_28ni8nilvicma5p.R.inc(11247);__CLB4_5_2_bool0=true;}
                    __CLR4_5_28ni8nilvicma5p.R.inc(11248);if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {{
                        __CLR4_5_28ni8nilvicma5p.R.inc(11251);String s = "0000" + Integer.toString(ch, 16);
                        __CLR4_5_28ni8nilvicma5p.R.inc(11252);retval.append("\\u"
                                + s.substring(s.length() - 4, s.length()));
                    } }else {{
                        __CLR4_5_28ni8nilvicma5p.R.inc(11253);retval.append(ch);
                    }
                    }__CLR4_5_28ni8nilvicma5p.R.inc(11254);continue;
            }
        }
        }__CLR4_5_28ni8nilvicma5p.R.inc(11255);return retval.toString();
    }finally{__CLR4_5_28ni8nilvicma5p.R.flushNeeded();}}

    /**
     * Returns a detailed message for the Error when it is thrown by the token
     * manager to indicate a lexical error. Parameters : EOFSeen : indicates if
     * EOF caused the lexical error curLexState : lexical state in which this
     * error occurred errorLine : line number when the error occurred
     * errorColumn : column number when the error occurred errorAfter : prefix
     * that was seen before this error occurred curchar : the offending
     * character Note: You can customize the lexical error message by modifying
     * this method.
     */
    protected static String LexicalError(boolean EOFSeen, int lexState,
            int errorLine, int errorColumn, String errorAfter, char curChar) {try{__CLR4_5_28ni8nilvicma5p.R.inc(11256);
        __CLR4_5_28ni8nilvicma5p.R.inc(11257);return "Lexical error at line "
                + errorLine
                + ", column "
                + errorColumn
                + ".  Encountered: "
                + ((((EOFSeen )&&(__CLR4_5_28ni8nilvicma5p.R.iget(11258)!=0|true))||(__CLR4_5_28ni8nilvicma5p.R.iget(11259)==0&false))? "<EOF> " : "\""
                        + addEscapes(String.valueOf(curChar)) + "\"" + " ("
                        + (int) curChar + "), ") + "after : \""
                + addEscapes(errorAfter) + "\"";
    }finally{__CLR4_5_28ni8nilvicma5p.R.flushNeeded();}}

    /**
     * You can also modify the body of this method to customize your error
     * messages. For example, cases like LOOP_DETECTED and INVALID_LEXICAL_STATE
     * are not of end-users concern, so you can return something like :
     * "Internal Error : Please file a bug report .... " from this method for
     * such cases in the release version of your parser.
     */
    public String getMessage() {try{__CLR4_5_28ni8nilvicma5p.R.inc(11260);
        __CLR4_5_28ni8nilvicma5p.R.inc(11261);return super.getMessage();
    }finally{__CLR4_5_28ni8nilvicma5p.R.flushNeeded();}}

    /*
     * Constructors of various flavors follow.
     */
    /** No arg constructor. */
    public TokenMgrError() {try{__CLR4_5_28ni8nilvicma5p.R.inc(11262);}finally{__CLR4_5_28ni8nilvicma5p.R.flushNeeded();}}

    /** Constructor with message and reason. */
    public TokenMgrError(String message, int reason) {
        super(message);__CLR4_5_28ni8nilvicma5p.R.inc(11264);try{__CLR4_5_28ni8nilvicma5p.R.inc(11263);
        __CLR4_5_28ni8nilvicma5p.R.inc(11265);errorCode = reason;
    }finally{__CLR4_5_28ni8nilvicma5p.R.flushNeeded();}}

    /** Full Constructor. */
    public TokenMgrError(boolean EOFSeen, int lexState, int errorLine,
            int errorColumn, String errorAfter, char curChar, int reason) {
        this(LexicalError(EOFSeen, lexState, errorLine, errorColumn,
                errorAfter, curChar), reason);__CLR4_5_28ni8nilvicma5p.R.inc(11267);try{__CLR4_5_28ni8nilvicma5p.R.inc(11266);
    }finally{__CLR4_5_28ni8nilvicma5p.R.flushNeeded();}}
}
/* JavaCC - OriginalChecksum=20be093a73612b60a8de68d7733e0421 (do not edit this line) */
