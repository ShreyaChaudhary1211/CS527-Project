/* $$ This file has been instrumented by Clover 4.1.10#20230822161652967 $$ *//*
 * Copyright 2018 Diffblue Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *    http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

package com.alibaba.fastjson;

import com.alibaba.fastjson.JSONPath;
import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;


public class JSONPathTest {static class __CLR4_1_10uq1uq1luszw43j{public static com_atlassian_clover.CoverageRecorder R;public static com_atlassian_clover.CloverProfile[] profiles = { };@java.lang.SuppressWarnings("unchecked") public static <I, T extends I> I lambdaInc(final int i,final T l,final int si){java.lang.reflect.InvocationHandler h=new java.lang.reflect.InvocationHandler(){public java.lang.Object invoke(java.lang.Object p,java.lang.reflect.Method m,java.lang.Object[] a) throws Throwable{R.inc(i);R.inc(si);try{return m.invoke(l,a);}catch(java.lang.reflect.InvocationTargetException e){throw e.getCause()!=null?e.getCause():new RuntimeException("Clover failed to invoke instrumented lambda",e);}}};return (I)java.lang.reflect.Proxy.newProxyInstance(l.getClass().getClassLoader(),l.getClass().getInterfaces(),h);}static{com_atlassian_clover.CoverageRecorder _R=null;try{com_atlassian_clover.CloverVersionInfo.An_old_version_of_clover_is_on_your_compilation_classpath___Please_remove___Required_version_is___4_1_10();if(20230822161652967L!=com_atlassian_clover.CloverVersionInfo.getBuildStamp()){com_atlassian_clover.Clover.l("[CLOVER] WARNING: The Clover version used in instrumentation does not match the runtime version. You need to run instrumented classes against the same version of Clover that you instrumented with.");com_atlassian_clover.Clover.l("[CLOVER] WARNING: Instr=4.1.10#20230822161652967,Runtime="+com_atlassian_clover.CloverVersionInfo.getReleaseNum()+"#"+com_atlassian_clover.CloverVersionInfo.getBuildStamp());}R=com_atlassian_clover.Clover.getNullRecorder();_R=com_atlassian_clover.Clover.getNullRecorder();_R=com_atlassian_clover.Clover.getRecorder("\u002f\u0055\u0073\u0065\u0072\u0073\u002f\u0073\u0068\u0072\u0065\u0079\u0061\u0063\u0068\u0061\u0075\u0064\u0068\u0061\u0072\u0079\u002f\u0044\u0065\u0073\u006b\u0074\u006f\u0070\u002f\u0063\u0073\u0035\u0032\u0037\u002f\u0043\u0053\u0035\u0032\u0037\u002d\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u002f\u0042\u0075\u0067\u0053\u0077\u0061\u0072\u006d\u002f\u0066\u0061\u0073\u0074\u006a\u0073\u006f\u006e\u002d\u0035\u0038\u0037\u0031\u0030\u0035\u0039\u0030\u0036\u002f\u0042\u0075\u0067\u0067\u0079\u002d\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u002f\u0074\u0061\u0072\u0067\u0065\u0074\u002f\u0063\u006c\u006f\u0076\u0065\u0072\u002f\u0063\u006c\u006f\u0076\u0065\u0072\u002e\u0064\u0062",1712704253720L,8589935092L,39876,profiles,new java.lang.String[]{"clover.distributed.coverage",null});}catch(java.lang.SecurityException e){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised because it has insufficient security privileges. Please consult the Clover documentation on the security policy file changes required. ("+e.getClass()+":"+e.getMessage()+")");}catch(java.lang.NoClassDefFoundError e){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised. Are you sure you have Clover in the runtime classpath? ("+e.getClass()+":"+e.getMessage()+")");}catch(java.lang.Throwable t){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised because of an unexpected error. ("+t.getClass()+":"+t.getMessage()+")");}R=_R;}}public static final com_atlassian_clover.TestNameSniffer __CLR4_1_10_TEST_NAME_SNIFFER=com_atlassian_clover.TestNameSniffer.NULL_INSTANCE;

  @Rule
  public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: JSONPath */

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 2547 branch to line 2551
   *  - conditional line 2551 branch to line 2551
   *  - conditional line 2551 branch to line 2552
   */
  @Test
  public void eq1() throws Throwable {__CLR4_1_10uq1uq1luszw43j.R.globalSliceStart(getClass().getName(),39817);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_1_10n6uafouq1();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_1_10uq1uq1luszw43j.R.rethrow($CLV_t2$);}finally{__CLR4_1_10uq1uq1luszw43j.R.globalSliceEnd(getClass().getName(),"com.alibaba.fastjson.JSONPathTest.eq1",__CLR4_1_10_TEST_NAME_SNIFFER.getTestName(),39817,$CLV_p$,$CLV_t$);}}private void  __CLR4_1_10n6uafouq1() throws Throwable{try{__CLR4_1_10uq1uq1luszw43j.R.inc(39817);
    // Arrange
    __CLR4_1_10uq1uq1luszw43j.R.inc(39818);Object a = -1;
    __CLR4_1_10uq1uq1luszw43j.R.inc(39819);Object b = null;
    // Act
    __CLR4_1_10uq1uq1luszw43j.R.inc(39820);Class<?> c = Reflector.forName("com.alibaba.fastjson.JSONPath");
    __CLR4_1_10uq1uq1luszw43j.R.inc(39821);Method m = c.getDeclaredMethod("eq", Reflector.forName("java.lang.Object"), Reflector.forName("java.lang.Object"));
    __CLR4_1_10uq1uq1luszw43j.R.inc(39822);m.setAccessible(true);
    __CLR4_1_10uq1uq1luszw43j.R.inc(39823);boolean retval = (Boolean)m.invoke(null, a, b);
    // Assert result
    __CLR4_1_10uq1uq1luszw43j.R.inc(39824);Assert.assertEquals(false, retval);
  }finally{__CLR4_1_10uq1uq1luszw43j.R.flushNeeded();}}

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 2547 branch to line 2548
   */
  @Test
  public void eq2() throws Throwable {__CLR4_1_10uq1uq1luszw43j.R.globalSliceStart(getClass().getName(),39825);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_1_10jxubn7uq9();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_1_10uq1uq1luszw43j.R.rethrow($CLV_t2$);}finally{__CLR4_1_10uq1uq1luszw43j.R.globalSliceEnd(getClass().getName(),"com.alibaba.fastjson.JSONPathTest.eq2",__CLR4_1_10_TEST_NAME_SNIFFER.getTestName(),39825,$CLV_p$,$CLV_t$);}}private void  __CLR4_1_10jxubn7uq9() throws Throwable{try{__CLR4_1_10uq1uq1luszw43j.R.inc(39825);
    // Arrange
    __CLR4_1_10uq1uq1luszw43j.R.inc(39826);Object a = null;
    __CLR4_1_10uq1uq1luszw43j.R.inc(39827);Object b = null;
    // Act
    __CLR4_1_10uq1uq1luszw43j.R.inc(39828);Class<?> c = Reflector.forName("com.alibaba.fastjson.JSONPath");
    __CLR4_1_10uq1uq1luszw43j.R.inc(39829);Method m = c.getDeclaredMethod("eq", Reflector.forName("java.lang.Object"), Reflector.forName("java.lang.Object"));
    __CLR4_1_10uq1uq1luszw43j.R.inc(39830);m.setAccessible(true);
    __CLR4_1_10uq1uq1luszw43j.R.inc(39831);boolean retval = (Boolean)m.invoke(null, a, b);
    // Assert result
    __CLR4_1_10uq1uq1luszw43j.R.inc(39832);Assert.assertEquals(true, retval);
  }finally{__CLR4_1_10uq1uq1luszw43j.R.flushNeeded();}}

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 1434 branch to line 1434
   */
  @Test
  public void isDigitFirst1() throws Throwable {__CLR4_1_10uq1uq1luszw43j.R.globalSliceStart(getClass().getName(),39833);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_1_1015reetuqh();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_1_10uq1uq1luszw43j.R.rethrow($CLV_t2$);}finally{__CLR4_1_10uq1uq1luszw43j.R.globalSliceEnd(getClass().getName(),"com.alibaba.fastjson.JSONPathTest.isDigitFirst1",__CLR4_1_10_TEST_NAME_SNIFFER.getTestName(),39833,$CLV_p$,$CLV_t$);}}private void  __CLR4_1_1015reetuqh() throws Throwable{try{__CLR4_1_10uq1uq1luszw43j.R.inc(39833);
    // Arrange
    __CLR4_1_10uq1uq1luszw43j.R.inc(39834);char ch = '2';
    // Act
    __CLR4_1_10uq1uq1luszw43j.R.inc(39835);Class<?> c = Reflector.forName("com.alibaba.fastjson.JSONPath$JSONPathParser");
    __CLR4_1_10uq1uq1luszw43j.R.inc(39836);Method m = c.getDeclaredMethod("isDigitFirst", Reflector.forName("char"));
    __CLR4_1_10uq1uq1luszw43j.R.inc(39837);m.setAccessible(true);
    __CLR4_1_10uq1uq1luszw43j.R.inc(39838);boolean retval = (Boolean)m.invoke(null, ch);
    // Assert result
    __CLR4_1_10uq1uq1luszw43j.R.inc(39839);Assert.assertEquals(true, retval);
  }finally{__CLR4_1_10uq1uq1luszw43j.R.flushNeeded();}}

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 1434 branch to line 1434
   */
  @Test
  public void isDigitFirst2() throws Throwable {__CLR4_1_10uq1uq1luszw43j.R.globalSliceStart(getClass().getName(),39840);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_1_10238kdouqo();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_1_10uq1uq1luszw43j.R.rethrow($CLV_t2$);}finally{__CLR4_1_10uq1uq1luszw43j.R.globalSliceEnd(getClass().getName(),"com.alibaba.fastjson.JSONPathTest.isDigitFirst2",__CLR4_1_10_TEST_NAME_SNIFFER.getTestName(),39840,$CLV_p$,$CLV_t$);}}private void  __CLR4_1_10238kdouqo() throws Throwable{try{__CLR4_1_10uq1uq1luszw43j.R.inc(39840);
    // Arrange
    __CLR4_1_10uq1uq1luszw43j.R.inc(39841);char ch = ':';
    // Act
    __CLR4_1_10uq1uq1luszw43j.R.inc(39842);Class<?> c = Reflector.forName("com.alibaba.fastjson.JSONPath$JSONPathParser");
    __CLR4_1_10uq1uq1luszw43j.R.inc(39843);Method m = c.getDeclaredMethod("isDigitFirst", Reflector.forName("char"));
    __CLR4_1_10uq1uq1luszw43j.R.inc(39844);m.setAccessible(true);
    __CLR4_1_10uq1uq1luszw43j.R.inc(39845);boolean retval = (Boolean)m.invoke(null, ch);
    // Assert result
    __CLR4_1_10uq1uq1luszw43j.R.inc(39846);Assert.assertEquals(false, retval);
  }finally{__CLR4_1_10uq1uq1luszw43j.R.flushNeeded();}}

   /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 1434 branch to line 1434
   */
  @Test
  public void isDigitFirst3() throws Throwable {__CLR4_1_10uq1uq1luszw43j.R.globalSliceStart(getClass().getName(),39847);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_1_105c8j65uqv();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_1_10uq1uq1luszw43j.R.rethrow($CLV_t2$);}finally{__CLR4_1_10uq1uq1luszw43j.R.globalSliceEnd(getClass().getName(),"com.alibaba.fastjson.JSONPathTest.isDigitFirst3",__CLR4_1_10_TEST_NAME_SNIFFER.getTestName(),39847,$CLV_p$,$CLV_t$);}}private void  __CLR4_1_105c8j65uqv() throws Throwable{try{__CLR4_1_10uq1uq1luszw43j.R.inc(39847);
    // Arrange
    __CLR4_1_10uq1uq1luszw43j.R.inc(39848);char ch = '\u0000';
    // Act
    __CLR4_1_10uq1uq1luszw43j.R.inc(39849);Class<?> c = Reflector.forName("com.alibaba.fastjson.JSONPath$JSONPathParser");
    __CLR4_1_10uq1uq1luszw43j.R.inc(39850);Method m = c.getDeclaredMethod("isDigitFirst", Reflector.forName("char"));
    __CLR4_1_10uq1uq1luszw43j.R.inc(39851);m.setAccessible(true);
    __CLR4_1_10uq1uq1luszw43j.R.inc(39852);boolean retval = (Boolean)m.invoke(null, ch);
    // Assert result
    __CLR4_1_10uq1uq1luszw43j.R.inc(39853);Assert.assertEquals(false, retval);
  }finally{__CLR4_1_10uq1uq1luszw43j.R.flushNeeded();}}

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 674 branch to line 674
   */
  @Test
  public void isEOF1() throws Throwable {__CLR4_1_10uq1uq1luszw43j.R.globalSliceStart(getClass().getName(),39854);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_1_10ijmu8qur2();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_1_10uq1uq1luszw43j.R.rethrow($CLV_t2$);}finally{__CLR4_1_10uq1uq1luszw43j.R.globalSliceEnd(getClass().getName(),"com.alibaba.fastjson.JSONPathTest.isEOF1",__CLR4_1_10_TEST_NAME_SNIFFER.getTestName(),39854,$CLV_p$,$CLV_t$);}}private void  __CLR4_1_10ijmu8qur2() throws Throwable{try{__CLR4_1_10uq1uq1luszw43j.R.inc(39854);
    // Arrange
    __CLR4_1_10uq1uq1luszw43j.R.inc(39855);Object objectUnderTest = Reflector.getInstance("com.alibaba.fastjson.JSONPath$JSONPathParser");
    __CLR4_1_10uq1uq1luszw43j.R.inc(39856);Reflector.setField(objectUnderTest, "path", "");
    __CLR4_1_10uq1uq1luszw43j.R.inc(39857);Reflector.setField(objectUnderTest, "pos", -2147483647);
    __CLR4_1_10uq1uq1luszw43j.R.inc(39858);Reflector.setField(objectUnderTest, "level", 0);
    __CLR4_1_10uq1uq1luszw43j.R.inc(39859);Reflector.setField(objectUnderTest, "ch", '\u0000');
    // Act
    __CLR4_1_10uq1uq1luszw43j.R.inc(39860);Class<?> c = Reflector.forName("com.alibaba.fastjson.JSONPath$JSONPathParser");
    __CLR4_1_10uq1uq1luszw43j.R.inc(39861);Method m = c.getDeclaredMethod("isEOF");
    __CLR4_1_10uq1uq1luszw43j.R.inc(39862);m.setAccessible(true);
    __CLR4_1_10uq1uq1luszw43j.R.inc(39863);boolean retval = (Boolean)m.invoke(objectUnderTest);
    // Assert result
    __CLR4_1_10uq1uq1luszw43j.R.inc(39864);Assert.assertEquals(false, retval);
  }finally{__CLR4_1_10uq1uq1luszw43j.R.flushNeeded();}}

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 674 branch to line 674
   */
  @Test
  public void isEOF2() throws Throwable {__CLR4_1_10uq1uq1luszw43j.R.globalSliceStart(getClass().getName(),39865);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_1_10famvg9urd();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_1_10uq1uq1luszw43j.R.rethrow($CLV_t2$);}finally{__CLR4_1_10uq1uq1luszw43j.R.globalSliceEnd(getClass().getName(),"com.alibaba.fastjson.JSONPathTest.isEOF2",__CLR4_1_10_TEST_NAME_SNIFFER.getTestName(),39865,$CLV_p$,$CLV_t$);}}private void  __CLR4_1_10famvg9urd() throws Throwable{try{__CLR4_1_10uq1uq1luszw43j.R.inc(39865);
    // Arrange
    __CLR4_1_10uq1uq1luszw43j.R.inc(39866);Object objectUnderTest = Reflector.getInstance("com.alibaba.fastjson.JSONPath$JSONPathParser");
    __CLR4_1_10uq1uq1luszw43j.R.inc(39867);Reflector.setField(objectUnderTest, "path", "!");
    __CLR4_1_10uq1uq1luszw43j.R.inc(39868);Reflector.setField(objectUnderTest, "pos", 1);
    __CLR4_1_10uq1uq1luszw43j.R.inc(39869);Reflector.setField(objectUnderTest, "level", 0);
    __CLR4_1_10uq1uq1luszw43j.R.inc(39870);Reflector.setField(objectUnderTest, "ch", '\u0000');
    // Act
    __CLR4_1_10uq1uq1luszw43j.R.inc(39871);Class<?> c = Reflector.forName("com.alibaba.fastjson.JSONPath$JSONPathParser");
    __CLR4_1_10uq1uq1luszw43j.R.inc(39872);Method m = c.getDeclaredMethod("isEOF");
    __CLR4_1_10uq1uq1luszw43j.R.inc(39873);m.setAccessible(true);
    __CLR4_1_10uq1uq1luszw43j.R.inc(39874);boolean retval = (Boolean)m.invoke(objectUnderTest);
    // Assert result
    __CLR4_1_10uq1uq1luszw43j.R.inc(39875);Assert.assertEquals(true, retval);
  }finally{__CLR4_1_10uq1uq1luszw43j.R.flushNeeded();}}
}
