/* $$ This file has been instrumented by Clover 4.5.2#20240131180750 $$ */package com.alibaba.json.bvt.parser;

import org.junit.Assert;
import junit.framework.TestCase;

import com.alibaba.fastjson.parser.Feature;
import com.alibaba.fastjson.parser.JSONScanner;
import com.alibaba.fastjson.parser.JSONToken;

public class JSONScannerTest_ISO8601 extends TestCase {static class __CLR4_5_21h761h76lusyjtp3{public static com_atlassian_clover.CoverageRecorder R;public static com_atlassian_clover.CloverProfile[] profiles = { };@java.lang.SuppressWarnings("unchecked") public static <I, T extends I> I lambdaInc(final int i,final T l,final int si){java.lang.reflect.InvocationHandler h=new java.lang.reflect.InvocationHandler(){public java.lang.Object invoke(java.lang.Object p,java.lang.reflect.Method m,java.lang.Object[] a) throws Throwable{R.inc(i);R.inc(si);try{return m.invoke(l,a);}catch(java.lang.reflect.InvocationTargetException e){throw e.getCause()!=null?e.getCause():new RuntimeException("Clover failed to invoke instrumented lambda",e);}}};return (I)java.lang.reflect.Proxy.newProxyInstance(l.getClass().getClassLoader(),l.getClass().getInterfaces(),h);}static{com_atlassian_clover.CoverageRecorder _R=null;try{com_atlassian_clover.CloverVersionInfo.An_old_version_of_clover_is_on_your_compilation_classpath___Please_remove___Required_version_is___4_5_2();if(20240131180750L!=com_atlassian_clover.CloverVersionInfo.getBuildStamp()){com_atlassian_clover.Clover.l("[CLOVER] WARNING: The Clover version used in instrumentation shall match the runtime version.");com_atlassian_clover.Clover.l("[CLOVER] WARNING: Instr=4.5.2#20240131180750,Runtime="+com_atlassian_clover.CloverVersionInfo.getReleaseNum()+"#"+com_atlassian_clover.CloverVersionInfo.getBuildStamp());}R=com_atlassian_clover.Clover.getNullRecorder();_R=com_atlassian_clover.Clover.getNullRecorder();_R=com_atlassian_clover.Clover.getRecorder("\u002f\u0055\u0073\u0065\u0072\u0073\u002f\u0073\u0068\u0072\u0065\u0079\u0061\u0063\u0068\u0061\u0075\u0064\u0068\u0061\u0072\u0079\u002f\u0044\u0065\u0073\u006b\u0074\u006f\u0070\u002f\u0063\u0073\u0035\u0032\u0037\u002f\u0043\u0053\u0035\u0032\u0037\u002d\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u002f\u0042\u0075\u0067\u0053\u0077\u0061\u0072\u006d\u002f\u0066\u0061\u0073\u0074\u006a\u0073\u006f\u006e\u002d\u0035\u0038\u0037\u0031\u0030\u0035\u0039\u0030\u0036\u002f\u0050\u0061\u0074\u0063\u0068\u0065\u0064\u002d\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u002f\u0074\u0061\u0072\u0067\u0065\u0074\u002f\u0063\u006c\u006f\u0076\u0065\u0072\u002f\u0063\u006c\u006f\u0076\u0065\u0072\u002e\u0064\u0062",1712701995271L,8589935092L,69056,profiles,new java.lang.String[]{"clover.distributed.coverage",null});}catch(java.lang.SecurityException e){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised because it has insufficient security privileges. Please consult the Clover documentation on the security policy file changes required. ("+e.getClass()+":"+e.getMessage()+")");}catch(java.lang.NoClassDefFoundError e){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised. Are you sure you have Clover in the runtime classpath? ("+e.getClass()+":"+e.getMessage()+")");}catch(java.lang.Throwable t){java.lang.System.err.println("[CLOVER] FATAL ERROR: Clover could not be initialised because of an unexpected error. ("+t.getClass()+":"+t.getMessage()+")");}R=_R;}}public static final com_atlassian_clover.TestNameSniffer __CLR4_5_2_TEST_NAME_SNIFFER=com_atlassian_clover.TestNameSniffer.NULL_INSTANCE;

    public void test_0() throws Exception {__CLR4_5_21h761h76lusyjtp3.R.globalSliceStart(getClass().getName(),68946);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_5_2n53hp21h76();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_5_21h761h76lusyjtp3.R.rethrow($CLV_t2$);}finally{__CLR4_5_21h761h76lusyjtp3.R.globalSliceEnd(getClass().getName(),"com.alibaba.json.bvt.parser.JSONScannerTest_ISO8601.test_0",__CLR4_5_2_TEST_NAME_SNIFFER.getTestName(),68946,$CLV_p$,$CLV_t$);}}private void  __CLR4_5_2n53hp21h76() throws Exception{try{__CLR4_5_21h761h76lusyjtp3.R.inc(68946);
        __CLR4_5_21h761h76lusyjtp3.R.inc(68947);Assert.assertEquals(false, new JSONScanner("1").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68948);Assert.assertEquals(false, new JSONScanner("2").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68949);Assert.assertEquals(false, new JSONScanner("3").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68950);Assert.assertEquals(true, new JSONScanner("3000-10-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68951);Assert.assertEquals(true, new JSONScanner("4000-10-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68952);Assert.assertEquals(true, new JSONScanner("5000-10-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68953);Assert.assertEquals(true, new JSONScanner("6000-10-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68954);Assert.assertEquals(true, new JSONScanner("7000-10-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68955);Assert.assertEquals(true, new JSONScanner("8000-10-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68956);Assert.assertEquals(false, new JSONScanner("A000-10-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68957);Assert.assertEquals(false, new JSONScanner("a000-10-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68958);Assert.assertEquals(false, new JSONScanner("1997").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68959);Assert.assertEquals(false, new JSONScanner("1997-2-2").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68960);Assert.assertEquals(true, new JSONScanner("1997-02-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68961);Assert.assertEquals(false, new JSONScanner("1997:02-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68962);Assert.assertEquals(false, new JSONScanner("1997-02:02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68963);Assert.assertEquals(false, new JSONScanner("2A00-02-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68964);Assert.assertEquals(false, new JSONScanner("2!00-02-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68965);Assert.assertEquals(false, new JSONScanner("20A0-02-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68966);Assert.assertEquals(false, new JSONScanner("20!0-02-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68967);Assert.assertEquals(false, new JSONScanner("200A-02-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68968);Assert.assertEquals(false, new JSONScanner("200!-02-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68969);Assert.assertEquals(false, new JSONScanner("2000-32-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68970);Assert.assertEquals(false, new JSONScanner("2000-1A-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68971);Assert.assertEquals(false, new JSONScanner("2000-1!-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68972);Assert.assertEquals(true, new JSONScanner("2000-10-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68973);Assert.assertEquals(true, new JSONScanner("2000-11-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68974);Assert.assertEquals(true, new JSONScanner("2000-12-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68975);Assert.assertEquals(false, new JSONScanner("2000-13-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68976);Assert.assertEquals(false, new JSONScanner("2000-20-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68977);Assert.assertEquals(false, new JSONScanner("2000-0A-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68978);Assert.assertEquals(false, new JSONScanner("2000-0!-02").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68979);Assert.assertEquals(true, new JSONScanner("2000-02-01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68980);Assert.assertEquals(false, new JSONScanner("2000-02-00").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68981);Assert.assertEquals(false, new JSONScanner("2000-02-0!").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68982);Assert.assertEquals(false, new JSONScanner("2000-02-0A").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68983);Assert.assertEquals(true, new JSONScanner("2000-02-10").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68984);Assert.assertEquals(true, new JSONScanner("2000-02-20").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68985);Assert.assertEquals(false, new JSONScanner("2000-02-2A").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68986);Assert.assertEquals(false, new JSONScanner("2000-02-2!").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68987);Assert.assertEquals(true, new JSONScanner("2000-02-30").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68988);Assert.assertEquals(true, new JSONScanner("2000-02-31").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68989);Assert.assertEquals(false, new JSONScanner("2000-02-32").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68990);Assert.assertEquals(false, new JSONScanner("2000-02-42").scanISO8601DateIfMatch());

        __CLR4_5_21h761h76lusyjtp3.R.inc(68991);Assert.assertEquals(false, new JSONScanner("2000-02-10T").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68992);Assert.assertEquals(true, new JSONScanner("2000-02-10T00:00:00").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68993);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:00-00").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68994);Assert.assertEquals(true, new JSONScanner("2000-02-10T01:01:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68995);Assert.assertEquals(false, new JSONScanner("2000-02-10T0A:01:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68996);Assert.assertEquals(false, new JSONScanner("2000-02-10T0!:01:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68997);Assert.assertEquals(true, new JSONScanner("2000-02-10T00:10:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68998);Assert.assertEquals(true, new JSONScanner("2000-02-10T00:11:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(68999);Assert.assertEquals(false, new JSONScanner("2000-02-10T10011:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69000);Assert.assertEquals(true, new JSONScanner("2000-02-10T10:11:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69001);Assert.assertEquals(false, new JSONScanner("2000-02-10T1!:11:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69002);Assert.assertEquals(false, new JSONScanner("2000-02-10T1a:11:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69003);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:1A:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69004);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:1!:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69005);Assert.assertEquals(true, new JSONScanner("2000-02-10T20:20:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69006);Assert.assertEquals(true, new JSONScanner("2000-02-10T21:21:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69007);Assert.assertEquals(true, new JSONScanner("2000-02-10T22:22:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69008);Assert.assertEquals(true, new JSONScanner("2000-02-10T23:23:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69009);Assert.assertEquals(true, new JSONScanner("2000-02-10T24:24:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69010);Assert.assertEquals(false, new JSONScanner("2000-02-10T25:25:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69011);Assert.assertEquals(false, new JSONScanner("2000-02-10T2!:20:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69012);Assert.assertEquals(false, new JSONScanner("2000-02-10T30:20:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69013);Assert.assertEquals(false, new JSONScanner("2000-02-10T00A22:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69014);Assert.assertEquals(true, new JSONScanner("2000-02-10T00:22:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69015);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:!2:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69016);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:A2:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69017);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:2A:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69018);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:2!:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69019);Assert.assertEquals(true, new JSONScanner("2000-02-10T00:60:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69020);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:61:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69021);Assert.assertEquals(true, new JSONScanner("2000-02-10T00:00:01").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69022);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:00:0!").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69023);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:00:0A").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69024);Assert.assertEquals(true, new JSONScanner("2000-02-10T00:00:60").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69025);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:00:61").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69026);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:00:70").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69027);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:00:!0").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69028);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:00:A0").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69029);Assert.assertEquals(true, new JSONScanner("2000-02-10T00:00:00").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69030);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:00:00.").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69031);Assert.assertEquals(true, new JSONScanner("2000-02-10T00:00:00.0").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69032);Assert.assertEquals(true, new JSONScanner("2000-02-10T00:00:00.00").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69033);Assert.assertEquals(true, new JSONScanner("2000-02-10T00:00:00.000").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69034);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:00:00.A00").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69035);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:00:00.!00").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69036);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:00:00.0A0").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69037);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:00:00.0!0").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69038);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:00:00.00!").scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69039);Assert.assertEquals(false, new JSONScanner("2000-02-10T00:00:00.00a").scanISO8601DateIfMatch());
    }finally{__CLR4_5_21h761h76lusyjtp3.R.flushNeeded();}}

    public void test_2() throws Exception {__CLR4_5_21h761h76lusyjtp3.R.globalSliceStart(getClass().getName(),69040);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_5_2gn3k441h9s();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_5_21h761h76lusyjtp3.R.rethrow($CLV_t2$);}finally{__CLR4_5_21h761h76lusyjtp3.R.globalSliceEnd(getClass().getName(),"com.alibaba.json.bvt.parser.JSONScannerTest_ISO8601.test_2",__CLR4_5_2_TEST_NAME_SNIFFER.getTestName(),69040,$CLV_p$,$CLV_t$);}}private void  __CLR4_5_2gn3k441h9s() throws Exception{try{__CLR4_5_21h761h76lusyjtp3.R.inc(69040);
        __CLR4_5_21h761h76lusyjtp3.R.inc(69041);JSONScanner lexer = new JSONScanner("2000-02-10T00:00:00.000");
        __CLR4_5_21h761h76lusyjtp3.R.inc(69042);lexer.config(Feature.AllowISO8601DateFormat, true);
        __CLR4_5_21h761h76lusyjtp3.R.inc(69043);Assert.assertEquals(true, lexer.scanISO8601DateIfMatch());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69044);Assert.assertEquals(JSONToken.LITERAL_ISO8601_DATE, lexer.token());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69045);lexer.nextToken();
        __CLR4_5_21h761h76lusyjtp3.R.inc(69046);Assert.assertEquals(JSONToken.EOF, lexer.token());
    }finally{__CLR4_5_21h761h76lusyjtp3.R.flushNeeded();}}

    public void test_3() throws Exception {__CLR4_5_21h761h76lusyjtp3.R.globalSliceStart(getClass().getName(),69047);int $CLV_p$=0;java.lang.Throwable $CLV_t$=null;try{__CLR4_5_2de3lbn1h9z();$CLV_p$=1;}catch(java.lang.Throwable $CLV_t2$){if($CLV_p$==0&&$CLV_t$==null){$CLV_t$=$CLV_t2$;}__CLR4_5_21h761h76lusyjtp3.R.rethrow($CLV_t2$);}finally{__CLR4_5_21h761h76lusyjtp3.R.globalSliceEnd(getClass().getName(),"com.alibaba.json.bvt.parser.JSONScannerTest_ISO8601.test_3",__CLR4_5_2_TEST_NAME_SNIFFER.getTestName(),69047,$CLV_p$,$CLV_t$);}}private void  __CLR4_5_2de3lbn1h9z() throws Exception{try{__CLR4_5_21h761h76lusyjtp3.R.inc(69047);
        __CLR4_5_21h761h76lusyjtp3.R.inc(69048);JSONScanner lexer = new JSONScanner("2000-2");
        __CLR4_5_21h761h76lusyjtp3.R.inc(69049);lexer.config(Feature.AllowISO8601DateFormat, true);
        __CLR4_5_21h761h76lusyjtp3.R.inc(69050);lexer.nextToken();
        __CLR4_5_21h761h76lusyjtp3.R.inc(69051);Assert.assertEquals(JSONToken.LITERAL_INT, lexer.token());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69052);lexer.nextToken();
        __CLR4_5_21h761h76lusyjtp3.R.inc(69053);Assert.assertEquals(JSONToken.LITERAL_INT, lexer.token());
        __CLR4_5_21h761h76lusyjtp3.R.inc(69054);lexer.nextToken();
        __CLR4_5_21h761h76lusyjtp3.R.inc(69055);Assert.assertEquals(JSONToken.EOF, lexer.token());
    }finally{__CLR4_5_21h761h76lusyjtp3.R.flushNeeded();}}
}
