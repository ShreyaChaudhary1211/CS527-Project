var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":272,"id":48368,"methods":[{"el":44,"sc":5,"sl":33},{"el":49,"sc":5,"sl":46},{"el":68,"sc":5,"sl":51},{"el":74,"sc":5,"sl":70},{"el":92,"sc":5,"sl":76},{"el":104,"sc":5,"sl":94},{"el":113,"sc":5,"sl":106},{"el":119,"sc":5,"sl":115},{"el":131,"sc":5,"sl":121},{"el":137,"sc":5,"sl":133},{"el":146,"sc":5,"sl":139},{"el":156,"sc":5,"sl":148},{"el":166,"sc":5,"sl":158},{"el":175,"sc":5,"sl":168},{"el":185,"sc":5,"sl":177},{"el":195,"sc":5,"sl":187},{"el":203,"sc":5,"sl":197},{"el":211,"sc":5,"sl":205},{"el":220,"sc":5,"sl":213},{"el":229,"sc":5,"sl":222},{"el":238,"sc":5,"sl":231},{"el":247,"sc":5,"sl":240},{"el":255,"sc":5,"sl":249},{"el":263,"sc":5,"sl":257},{"el":270,"sc":5,"sl":265}],"name":"MutableByteTest","sl":30}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1126":{"methods":[{"sl":51}],"name":"testGetSet","pass":true,"statements":[{"sl":53},{"sl":54},{"sl":55},{"sl":57},{"sl":58},{"sl":59},{"sl":61},{"sl":62},{"sl":63},{"sl":65},{"sl":66},{"sl":67}]},"test_1135":{"methods":[{"sl":249}],"name":"testSubtractValuePrimitive","pass":true,"statements":[{"sl":251},{"sl":252},{"sl":254}]},"test_1186":{"methods":[{"sl":115}],"name":"testCompareToNull","pass":true,"statements":[{"sl":117},{"sl":118}]},"test_1387":{"methods":[{"sl":158}],"name":"testGetAndIncrement","pass":true,"statements":[{"sl":160},{"sl":161},{"sl":163},{"sl":164},{"sl":165}]},"test_1668":{"methods":[{"sl":265}],"name":"testToString","pass":true,"statements":[{"sl":267},{"sl":268},{"sl":269}]},"test_1688":{"methods":[{"sl":168}],"name":"testDecrement","pass":true,"statements":[{"sl":170},{"sl":171},{"sl":173},{"sl":174}]},"test_20":{"methods":[{"sl":139}],"name":"testIncrement","pass":true,"statements":[{"sl":141},{"sl":142},{"sl":144},{"sl":145}]},"test_2092":{"methods":[{"sl":33}],"name":"testConstructors","pass":true,"statements":[{"sl":35},{"sl":37},{"sl":39},{"sl":40},{"sl":42}]},"test_2149":{"methods":[{"sl":76}],"name":"testEquals","pass":true,"statements":[{"sl":78},{"sl":79},{"sl":80},{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":90},{"sl":91}]},"test_2190":{"methods":[{"sl":231}],"name":"testAddAndGetValuePrimitive","pass":true,"statements":[{"sl":233},{"sl":234},{"sl":236},{"sl":237}]},"test_2212":{"methods":[{"sl":197}],"name":"testAddValuePrimitive","pass":true,"statements":[{"sl":199},{"sl":200},{"sl":202}]},"test_2240":{"methods":[{"sl":46}],"name":"testConstructorNull","pass":true,"statements":[{"sl":48}]},"test_2533":{"methods":[{"sl":240}],"name":"testAddAndGetValueObject","pass":true,"statements":[{"sl":242},{"sl":243},{"sl":245},{"sl":246}]},"test_2696":{"methods":[{"sl":133}],"name":"testToByte","pass":true,"statements":[{"sl":135},{"sl":136}]},"test_2958":{"methods":[{"sl":106}],"name":"testCompareTo","pass":true,"statements":[{"sl":108},{"sl":110},{"sl":111},{"sl":112}]},"test_3141":{"methods":[{"sl":177}],"name":"testDecrementAndGet","pass":true,"statements":[{"sl":179},{"sl":180},{"sl":182},{"sl":183},{"sl":184}]},"test_3518":{"methods":[{"sl":205}],"name":"testAddValueObject","pass":true,"statements":[{"sl":207},{"sl":208},{"sl":210}]},"test_3553":{"methods":[{"sl":121}],"name":"testPrimitiveValues","pass":true,"statements":[{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":129},{"sl":130}]},"test_3576":{"methods":[{"sl":70}],"name":"testSetNull","pass":true,"statements":[{"sl":72},{"sl":73}]},"test_3586":{"methods":[{"sl":187}],"name":"testGetAndDecrement","pass":true,"statements":[{"sl":189},{"sl":190},{"sl":192},{"sl":193},{"sl":194}]},"test_3590":{"methods":[{"sl":213}],"name":"testGetAndAddValuePrimitive","pass":true,"statements":[{"sl":215},{"sl":216},{"sl":218},{"sl":219}]},"test_3759":{"methods":[{"sl":94}],"name":"testHashCode","pass":true,"statements":[{"sl":96},{"sl":97},{"sl":98},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_3784":{"methods":[{"sl":257}],"name":"testSubtractValueObject","pass":true,"statements":[{"sl":259},{"sl":260},{"sl":262}]},"test_790":{"methods":[{"sl":222}],"name":"testGetAndAddValueObject","pass":true,"statements":[{"sl":224},{"sl":225},{"sl":227},{"sl":228}]},"test_87":{"methods":[{"sl":148}],"name":"testIncrementAndGet","pass":true,"statements":[{"sl":150},{"sl":151},{"sl":153},{"sl":154},{"sl":155}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [2092], [], [2092], [], [2092], [], [2092], [2092], [], [2092], [], [], [], [2240], [], [2240], [], [], [1126], [], [1126], [1126], [1126], [], [1126], [1126], [1126], [], [1126], [1126], [1126], [], [1126], [1126], [1126], [], [], [3576], [], [3576], [3576], [], [], [2149], [], [2149], [2149], [2149], [], [2149], [2149], [2149], [2149], [2149], [2149], [2149], [2149], [2149], [2149], [], [], [3759], [], [3759], [3759], [3759], [], [3759], [3759], [3759], [3759], [], [], [2958], [], [2958], [], [2958], [2958], [2958], [], [], [1186], [], [1186], [1186], [], [], [3553], [], [3553], [], [3553], [3553], [3553], [3553], [3553], [3553], [], [], [2696], [], [2696], [2696], [], [], [20], [], [20], [20], [], [20], [20], [], [], [87], [], [87], [87], [], [87], [87], [87], [], [], [1387], [], [1387], [1387], [], [1387], [1387], [1387], [], [], [1688], [], [1688], [1688], [], [1688], [1688], [], [], [3141], [], [3141], [3141], [], [3141], [3141], [3141], [], [], [3586], [], [3586], [3586], [], [3586], [3586], [3586], [], [], [2212], [], [2212], [2212], [], [2212], [], [], [3518], [], [3518], [3518], [], [3518], [], [], [3590], [], [3590], [3590], [], [3590], [3590], [], [], [790], [], [790], [790], [], [790], [790], [], [], [2190], [], [2190], [2190], [], [2190], [2190], [], [], [2533], [], [2533], [2533], [], [2533], [2533], [], [], [1135], [], [1135], [1135], [], [1135], [], [], [3784], [], [3784], [3784], [], [3784], [], [], [1668], [], [1668], [1668], [1668], [], [], []]
