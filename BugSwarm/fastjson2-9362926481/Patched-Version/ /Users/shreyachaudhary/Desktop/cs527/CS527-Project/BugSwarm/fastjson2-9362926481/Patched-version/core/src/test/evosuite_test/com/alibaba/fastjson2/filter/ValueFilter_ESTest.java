/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 22:54:46 GMT 2024
 */

package com.alibaba.fastjson2.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson2.filter.ValueFilter;
import com.alibaba.fastjson2.function.impl.StringToAny;
import com.alibaba.fastjson2.function.impl.ToBigInteger;
import com.alibaba.fastjson2.function.impl.ToDouble;
import java.util.HashMap;
import java.util.Map;
import java.util.function.Function;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ValueFilter_ESTest extends ValueFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
      ValueFilter valueFilter0 = ValueFilter.of("", (Map) hashMap0);
      Object object0 = new Object();
      Predicate<String> predicate0 = Predicate.isEqual(object0);
      ToBigInteger toBigInteger0 = new ToBigInteger();
      ValueFilter valueFilter1 = ValueFilter.of(predicate0, (Function) toBigInteger0);
      ValueFilter valueFilter2 = ValueFilter.compose(valueFilter0, valueFilter1);
      assertFalse(valueFilter2.equals((Object)valueFilter1));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      ValueFilter valueFilter0 = ValueFilter.of("p\"Gdm(w%", (Map) hashMap0);
      Object object0 = new Object();
      Object object1 = valueFilter0.apply(object0, "", (Object) null);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
      ValueFilter valueFilter0 = ValueFilter.of("", (Map) hashMap0);
      Object object0 = new Object();
      Object object1 = valueFilter0.apply(object0, "}`uB0@_LAIxeX]u1", "}`uB0@_LAIxeX]u1");
      assertEquals("}`uB0@_LAIxeX]u1", object1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      Predicate<String> predicate0 = Predicate.isEqual(object0);
      Predicate<String> predicate1 = predicate0.negate();
      ToBigInteger toBigInteger0 = new ToBigInteger();
      ValueFilter valueFilter0 = ValueFilter.of(predicate1, (Function) toBigInteger0);
      // Undeclared exception!
      try { 
        valueFilter0.apply("}`uB0@_LAIxeX]u1", "", valueFilter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // can not cast to BigInteger class com.alibaba.fastjson2.filter.ValueFilter$$Lambda$64/641232692
         //
         verifyException("com.alibaba.fastjson2.function.impl.ToBigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Double double0 = new Double(0.0);
      ToDouble toDouble0 = new ToDouble(double0);
      ValueFilter valueFilter0 = ValueFilter.of((String) null, (Function) toDouble0);
      // Undeclared exception!
      try { 
        valueFilter0.apply(double0, "( eK ", "( eK ");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ValueFilter valueFilter0 = ValueFilter.compose((ValueFilter) null, (ValueFilter) null);
      // Undeclared exception!
      try { 
        valueFilter0.apply((Object) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.filter.ValueFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<Object> class0 = Object.class;
      StringToAny stringToAny0 = new StringToAny(class0, "z1T0~m7&X@");
      ValueFilter valueFilter0 = ValueFilter.of("1$bQ\".5`JfAgCKpsh", (Function) stringToAny0);
      // Undeclared exception!
      try { 
        valueFilter0.apply((Object) null, "1$bQ\".5`JfAgCKpsh", class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Class cannot be cast to java.lang.String
         //
         verifyException("com.alibaba.fastjson2.function.impl.StringToAny", e);
      }
  }
}
