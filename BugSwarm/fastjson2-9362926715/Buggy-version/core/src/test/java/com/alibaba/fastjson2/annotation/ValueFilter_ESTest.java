/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 07 23:23:54 GMT 2024
 */

package com.alibaba.fastjson2.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson2.filter.ValueFilter;
import com.alibaba.fastjson2.function.impl.StringToAny;
import com.alibaba.fastjson2.function.impl.ToDouble;
import com.alibaba.fastjson2.function.impl.ToLong;
import java.util.HashMap;
import java.util.Map;
import java.util.function.Function;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ValueFilter_ESTest extends ValueFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ValueFilter valueFilter0 = ValueFilter.of((Predicate<String>) null, (Function) null);
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      ValueFilter valueFilter1 = ValueFilter.of("", (Map) hashMap0);
      ValueFilter valueFilter2 = ValueFilter.compose(valueFilter0, valueFilter1);
      assertFalse(valueFilter2.equals((Object)valueFilter0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      ValueFilter valueFilter0 = ValueFilter.of((String) null, (Map) hashMap0);
      Integer integer0 = new Integer(1863);
      Object object0 = valueFilter0.apply(integer0, "", (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Long long0 = new Long((-581L));
      ToLong toLong0 = new ToLong(long0);
      ValueFilter valueFilter0 = ValueFilter.of((Predicate<String>) null, (Function) toLong0);
      // Undeclared exception!
      try { 
        valueFilter0.apply("", "", valueFilter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // can not cast to Long class com.alibaba.fastjson2.filter.ValueFilter$$Lambda$64/1236816908
         //
         verifyException("com.alibaba.fastjson2.function.impl.ToLong", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Double double0 = new Double(0.0);
      ToDouble toDouble0 = new ToDouble(double0);
      ValueFilter valueFilter0 = ValueFilter.of("(l$H Z_4t*%'", (Function) toDouble0);
      // Undeclared exception!
      try { 
        valueFilter0.apply(double0, "(l$H Z_4t*%'", "(l$H Z_4t*%'");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ValueFilter valueFilter0 = ValueFilter.of((Predicate<String>) null, (Function) null);
      Integer integer0 = new Integer((-1));
      // Undeclared exception!
      try { 
        valueFilter0.apply(valueFilter0, "", integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson2.filter.ValueFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      ValueFilter valueFilter0 = ValueFilter.of("", (Map) hashMap0);
      Class<Integer> class0 = Integer.class;
      StringToAny stringToAny0 = new StringToAny(class0, "");
      ValueFilter valueFilter1 = ValueFilter.of("", (Function) stringToAny0);
      Predicate<String> predicate0 = Predicate.isEqual((Object) "sAxpPSF9<E4");
      Object object0 = valueFilter0.apply(valueFilter0, "sAxpPSF9<E4", predicate0);
      // Undeclared exception!
      try { 
        valueFilter1.apply((Object) null, "", object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.function.Predicate$$Lambda$45/2097180489 cannot be cast to java.lang.String
         //
         verifyException("com.alibaba.fastjson2.function.impl.StringToAny", e);
      }
  }
}
