[]
[<Line: -from verktyg.responses import Response
>, <Line: -    def test_template_view(self):
>, <Line: -        dispatcher = verktyg.Dispatcher()
>, <Line: -        class HelloEnv(object):
>, <Line: -            def get_renderer(self, name):
>, <Line: -                if name == 'hello':
>, <Line: -                    return lambda res: Response('hello %s' % res)
>, <Line: -        env = HelloEnv()
>, <Line: -        @vtv.expose_html(dispatcher, 'say-hello', template='hello')
>, <Line: -        def say_hello(env, req):
>, <Line: -            return 'world'
>, <Line: -        @vtv.expose_html(dispatcher, 'returns-response', template='hello')
>, <Line: -        def returns_response(env, req):
>, <Line: -            return Response('too slow')
>, <Line: -        self.assertEqual(
>, <Line: -            b'hello world',
>, <Line: -            dispatcher.lookup('say-hello')(env, None).get_data())
>, <Line: -        self.assertEqual(
>, <Line: -            b'too slow',
>, <Line: -            dispatcher.lookup('returns-response')(env, None).get_data())
>, <Line: -def suite():
>, <Line: -    suite = unittest.TestSuite()
>, <Line: -    suite.addTest(unittest.makeSuite(ViewsTestCase))
>, <Line: -    return suite
>]