[]
[<Line: -from verktyg.http import (
>, <Line: -    CharsetAccept, MIMEAccept, LanguageAccept, Accept,
>, <Line: -)
>, <Line: -    def test_accept_mixin(self):
>, <Line: -        request = Request({
>, <Line: -            'HTTP_ACCEPT': 'text/xml,application/xml,application/xhtml+xml,'
>, <Line: -                           'text/html;q=0.9,text/plain;q=0.8,image/png,'
>, <Line: -                           '*/*;q=0.5',
>, <Line: -            'HTTP_ACCEPT_CHARSET': 'ISO-8859-1,utf-8;q=0.7,*;q=0.7',
>, <Line: -            'HTTP_ACCEPT_ENCODING': 'gzip,deflate',
>, <Line: -            'HTTP_ACCEPT_LANGUAGE': 'en-us,en;q=0.5'
>, <Line: -        })
>, <Line: -        self.assertEqual(request.accept_mimetypes, MIMEAccept([
>, <Line: -            ('text/xml', 1), ('image/png', 1), ('application/xml', 1),
>, <Line: -            ('application/xhtml+xml', 1), ('text/html', 0.9),
>, <Line: -            ('text/plain', 0.8), ('*/*', 0.5)
>, <Line: -        ]))
>, <Line: -        self.assertEqual(request.accept_charsets, CharsetAccept([
>, <Line: -            ('ISO-8859-1', 1), ('utf-8', 0.7), ('*', 0.7)
>, <Line: -        ]))
>, <Line: -        self.assertEqual(request.accept_encodings, Accept([
>, <Line: -            ('gzip', 1), ('deflate', 1)]))
>, <Line: -        self.assertEqual(request.accept_languages, LanguageAccept([
>, <Line: -            ('en-us', 1), ('en', 0.5)]))
>, <Line: -        request = Request({'HTTP_ACCEPT': ''})
>, <Line: -        self.assertEqual(request.accept_mimetypes, MIMEAccept())
>, <Line: -def suite():
>, <Line: -    suite = unittest.TestSuite()
>, <Line: -    suite.addTest(unittest.makeSuite(RequestsTestCase))
>, <Line: -    return suite
>]