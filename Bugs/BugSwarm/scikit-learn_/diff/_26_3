[<Line: +  SVC(C=100.0, cache_size=200, class_weight=None, coef0=0.0,
>, <Line: +    decision_function_shape=None, degree=3, gamma=0.001, kernel='rbf',
>, <Line: +    max_iter=-1, probability=False, random_state=None, shrinking=True,
>, <Line: +    tol=0.001, verbose=False)
>, <Line: +  SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,
>, <Line: +    decision_function_shape=None, degree=3, gamma='auto', kernel='rbf',
>, <Line: +    max_iter=-1, probability=False, random_state=None, shrinking=True,
>, <Line: +    tol=0.001, verbose=False)
>, <Line: +    >>> clf.fit(iris.data, iris.target)  # doctest: +NORMALIZE_WHITESPACE
>, <Line: +    SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,
>, <Line: +      decision_function_shape=None, degree=3, gamma='auto', kernel='rbf',
>, <Line: +      max_iter=-1, probability=False, random_state=None, shrinking=True,
>, <Line: +      tol=0.001, verbose=False)
>, <Line: +    >>> clf.fit(iris.data, iris.target_names[iris.target])  # doctest: +NORMALIZE_WHITESPACE
>, <Line: +    SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,
>, <Line: +      decision_function_shape=None, degree=3, gamma='auto', kernel='rbf',
>, <Line: +      max_iter=-1, probability=False, random_state=None, shrinking=True,
>, <Line: +      tol=0.001, verbose=False)
>, <Line: +  >>> clf.set_params(kernel='linear').fit(X, y)  # doctest: +NORMALIZE_WHITESPACE
>, <Line: +  SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,
>, <Line: +    decision_function_shape=None, degree=3, gamma='auto', kernel='linear',
>, <Line: +    max_iter=-1, probability=False, random_state=None, shrinking=True,
>, <Line: +    tol=0.001, verbose=False)
>, <Line: +  >>> clf.set_params(kernel='rbf').fit(X, y)  # doctest: +NORMALIZE_WHITESPACE
>, <Line: +  SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,
>, <Line: +    decision_function_shape=None, degree=3, gamma='auto', kernel='rbf',
>, <Line: +    max_iter=-1, probability=False, random_state=None, shrinking=True,
>, <Line: +    tol=0.001, verbose=False)
>]
[<Line: -  SVC(C=100.0, cache_size=200, class_weight=None, coef0=0.0, degree=3,
>, <Line: -    gamma=0.001, kernel='rbf', max_iter=-1, probability=False,
>, <Line: -    random_state=None, shrinking=True, tol=0.001, verbose=False)
>, <Line: -  SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0, degree=3,
>, <Line: -    gamma='auto', kernel='rbf', max_iter=-1, probability=False,
>, <Line: -    random_state=None, shrinking=True, tol=0.001, verbose=False)
>, <Line: -    >>> clf.fit(iris.data, iris.target)
>, <Line: -    SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0, degree=3,
>, <Line: -      gamma='auto', kernel='rbf', max_iter=-1, probability=False,
>, <Line: -      random_state=None, shrinking=True, tol=0.001, verbose=False)
>, <Line: -    >>> clf.fit(iris.data, iris.target_names[iris.target])
>, <Line: -    SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0, degree=3,
>, <Line: -      gamma='auto', kernel='rbf', max_iter=-1, probability=False,
>, <Line: -      random_state=None, shrinking=True, tol=0.001, verbose=False)
>, <Line: -  >>> clf.set_params(kernel='linear').fit(X, y)
>, <Line: -  SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0, degree=3,
>, <Line: -    gamma='auto', kernel='linear', max_iter=-1, probability=False,
>, <Line: -    random_state=None, shrinking=True, tol=0.001, verbose=False)
>, <Line: -  >>> clf.set_params(kernel='rbf').fit(X, y)
>, <Line: -  SVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0, degree=3,
>, <Line: -    gamma='auto', kernel='rbf', max_iter=-1, probability=False,
>, <Line: -    random_state=None, shrinking=True, tol=0.001, verbose=False)
>]