[<Line: +		return project.getName() + " >> " + targetData.getTargetName();
>, <Line: +	public boolean isNormalBuildEnabled() {
>, <Line: +		return targetData.isNormalBuildEnabled();
>, <Line: +	}
>, <Line: +	public boolean isAutoBuildEnabled() {
>, <Line: +		return targetData.isAutoBuildEnabled();
>, <Line: +	public CommonBuildTargetOperation getBuildOperation(IOperationConsoleHandler opHandler)
>, <Line: +		return getBuildOperation(opHandler, buildToolPath);
>, <Line: +	public CommonBuildTargetOperation getBuildOperation(IOperationConsoleHandler opHandler, Path buildToolPath) 
>, <Line: +			throws CommonException {
>, <Line: +		String buildArguments = getEffectiveBuildArguments();
>]
[<Line: -		return project.getName() + "//" + targetData.getTargetName() + (targetData.isEnabled() ? " [ENABLED]" : "");
>, <Line: -	public boolean isEnabled() {
>, <Line: -		return targetData.isEnabled();
>, <Line: -	public String getDefaultCheckArguments() throws CommonException {
>, <Line: -		return getBuildType().getDefaultCheckArguments(this);
>, <Line: -	}
>, <Line: -	public String getEffectiveCheckArguments() throws CommonException {
>, <Line: -		String buildOptions = targetData.getCheckArguments();
>, <Line: -		if(buildOptions != null) {
>, <Line: -			return buildOptions;
>, <Line: -		}
>, <Line: -		return getDefaultCheckArguments();
>, <Line: -	}
>, <Line: -	/* -----------------  ----------------- */
>, <Line: -	public CommonBuildTargetOperation getBuildOperation(IOperationConsoleHandler opHandler, boolean isCheck)
>, <Line: -		return getBuildOperation(opHandler, isCheck, buildToolPath);
>, <Line: -	public CommonBuildTargetOperation getBuildOperation(IOperationConsoleHandler opHandler, boolean isCheck, 
>, <Line: -			Path buildToolPath) throws CommonException {
>, <Line: -		String buildArguments = isCheck ? getEffectiveCheckArguments() : getEffectiveBuildArguments();
>]