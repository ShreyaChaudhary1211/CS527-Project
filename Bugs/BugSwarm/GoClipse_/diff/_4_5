[<Line: +	public boolean isClosingBrace(char closeChar) {
>, <Line: +		for (BlockTokenRule blockTokenRule : blockRules) {
>, <Line: +			if(closeChar == blockTokenRule.close) {
>, <Line: +				return true;
>, <Line: +			}
>, <Line: +		}
>, <Line: +		return false;
>, <Line: +	}
>, <Line: +		protected abstract int advanceToken() ;
>, <Line: +		protected int advanceToken() {
>, <Line: +		protected int advanceToken() {
>, <Line: +		char blockClose = document.getChar(blockCloseOffset);
>, <Line: +		return scanToBlockStart(blockCloseOffset, blockClose);
>, <Line: +	}
>, <Line: +	public int scanToBlockStart(int blockCloseOffset, char blockClose) {
>, <Line: +	protected int scanToBlockEnd(char blockOpen) {
>, <Line: +	protected int scanToBlockStartForChar(char blockClose, FnTokenAdvance fnAdvance, BlockTokenRule[] blockTkRules) {
>, <Line: +	protected int scanToBlockPeer(int expectedTokenIx, FnTokenAdvance fnAdvance, BlockTokenRule[] blockTkRules) {
>, <Line: +	public int findBlockStart(int blockCloseOffset, char blockClose) {
>, <Line: +		scanToBlockStart(blockCloseOffset, blockClose);
>, <Line: +		return getPosition();
>, <Line: +	}
>, <Line: +	public boolean shouldCloseBlock(int blockOpenOffset) {
>, <Line: +		assertTrue(blockOpenOffset != -1);
>, <Line: +		char primaryBlockOpen = source.charAt(blockOpenOffset);
>, <Line: +	protected int findUnmatchedOpen(int requiredPriority) {
>]
[<Line: -		protected abstract int advanceToken() throws BadLocationException;
>, <Line: -		protected int advanceToken() throws BadLocationException {
>, <Line: -		protected int advanceToken() throws BadLocationException {
>, <Line: -		char blockClose = document.getChar(blockCloseOffset);
>, <Line: -	protected int scanToBlockEnd(char blockOpen) throws BadLocationException {
>, <Line: -	protected int scanToBlockStartForChar(char blockClose, FnTokenAdvance fnAdvance, BlockTokenRule[] blockTkRules)
>, <Line: -			throws BadLocationException {
>, <Line: -	protected int scanToBlockPeer(int expectedTokenIx, FnTokenAdvance fnAdvance, BlockTokenRule[] blockTkRules)
>, <Line: -			throws BadLocationException {
>, <Line: -	public boolean shouldCloseBlock(int blockOpenOffset) throws BadLocationException {
>, <Line: -		char primaryBlockOpen = document.getChar(blockOpenOffset);
>, <Line: -	protected int findUnmatchedOpen(int requiredPriority) throws BadLocationException {
>]