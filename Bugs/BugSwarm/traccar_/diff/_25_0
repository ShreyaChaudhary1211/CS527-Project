[<Line: +                if (getDeviceSession(channel, remoteAddress, imei) != null) {
>, <Line: +                Position position = new Position();
>, <Line: +                position.setDeviceId(deviceSession.getDeviceId());
>, <Line: +                position.setProtocol(getProtocolName());
>, <Line: +                if (type == MSG_LBS_EXTEND) {
>, <Line: +                    DateBuilder dateBuilder = new DateBuilder(timeZone)
>, <Line: +                            .setDate(buf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte())
>, <Line: +                            .setTime(buf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte());
>, <Line: +                    getLastLocation(position, dateBuilder.getDate());
>, <Line: +                    int mcc = buf.readUnsignedShort();
>, <Line: +                    int mnc = buf.readUnsignedByte();
>, <Line: +                    Network network = new Network();
>, <Line: +                    for (int i = 0; i < 7; i++) {
>, <Line: +                        network.addCellTower(CellTower.from(
>, <Line: +                                mcc, mnc, buf.readUnsignedShort(), buf.readUnsignedMedium(), -buf.readUnsignedByte()));
>, <Line: +                    }
>, <Line: +                    position.setNetwork(network);
>, <Line: +                } else if (type == MSG_STRING) {
>, <Line: +                    return null;
>, <Line: +                }
>, <Line: +                if (buf.readableBytes() > 6) {
>, <Line: +                    buf.skipBytes(buf.readableBytes() - 6);
>, <Line: +                sendResponse(channel, type, buf.readUnsignedShort());
>, <Line: +                return position;
>]
[<Line: -                DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);
>, <Line: -                if (deviceSession != null) {
>, <Line: -                if (type == MSG_STRING) {
>, <Line: -                    Position position = new Position();
>, <Line: -                    position.setDeviceId(deviceSession.getDeviceId());
>, <Line: -                    position.setProtocol(getProtocolName());
>, <Line: -                    buf.readUnsignedShort(); // language
>, <Line: -                    sendResponse(channel, type, buf.readUnsignedShort());
>, <Line: -                    return position;
>, <Line: -                    Position position = new Position();
>, <Line: -                    position.setDeviceId(deviceSession.getDeviceId());
>, <Line: -                    position.setProtocol(getProtocolName());
>, <Line: -                    if (buf.readableBytes() > 6) {
>, <Line: -                        buf.skipBytes(buf.readableBytes() - 6);
>, <Line: -                    }
>, <Line: -                    int index = buf.readUnsignedShort();
>, <Line: -                    position.set(Position.KEY_INDEX, index);
>, <Line: -                    sendResponse(channel, type, index);
>, <Line: -                    return position;
>]