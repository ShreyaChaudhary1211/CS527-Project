[<Line: + * Copyright 2014 - 2016 Anton Tananaev (anton.tananaev@gmail.com)
>, <Line: +    private boolean filterInvalid;
>, <Line: +    private boolean filterZero;
>, <Line: +    private boolean filterDuplicate;
>, <Line: +    private boolean filterFuture;
>, <Line: +    private boolean filterApproximate;
>, <Line: +    private boolean filterStatic;
>, <Line: +    private int filterDistance;
>, <Line: +    private long filterLimit;
>, <Line: +    public void setFilterInvalid(boolean filterInvalid) {
>, <Line: +    }
>, <Line: +    public void setFilterZero(boolean filterZero) {
>, <Line: +    }
>, <Line: +    public void setFilterDuplicate(boolean filterDuplicate) {
>, <Line: +    }
>, <Line: +    public void setFilterFuture(boolean filterFuture) {
>, <Line: +    }
>, <Line: +    public void setFilterApproximate(boolean filterApproximate) {
>, <Line: +    }
>, <Line: +    public void setFilterStatic(boolean filterStatic) {
>, <Line: +        this.filterStatic = filterStatic;
>, <Line: +    }
>, <Line: +    public void setFilterDistance(int filterDistance) {
>, <Line: +        this.filterDistance = filterDistance;
>, <Line: +    }
>, <Line: +    public void setFilterLimit(long filterLimit) {
>, <Line: +        if (config != null) {
>, <Line: +            filterInvalid = config.getBoolean("filter.invalid");
>, <Line: +            filterZero = config.getBoolean("filter.zero");
>, <Line: +            filterDuplicate = config.getBoolean("filter.duplicate");
>, <Line: +            filterFuture = config.getBoolean("filter.future");
>, <Line: +            filterApproximate = config.getBoolean("filter.approximate");
>, <Line: +            filterStatic = config.getBoolean("filter.static");
>, <Line: +            filterDistance = config.getInteger("filter.distance");
>, <Line: +            filterLimit = config.getLong("filter.limit") * 1000;
>, <Line: +        }
>, <Line: +    private boolean filterStatic(Position position) {
>, <Line: +        return filterStatic && position.getSpeed() == 0.0;
>, <Line: +    }
>, <Line: +                || filterFuture(p) || filterApproximate(p) || filterStatic(p)
>, <Line: +                || filterDistance(p);
>]
[<Line: - * Copyright 2014 Anton Tananaev (anton.tananaev@gmail.com)
>, <Line: -    private final boolean filterInvalid;
>, <Line: -    private final boolean filterZero;
>, <Line: -    private final boolean filterDuplicate;
>, <Line: -    private final boolean filterFuture;
>, <Line: -    private final boolean filterApproximate;
>, <Line: -    private final int filterDistance;
>, <Line: -    private final long filterLimit;
>, <Line: -    public FilterHandler(
>, <Line: -            boolean filterInvalid, boolean filterZero, boolean filterDuplicate, boolean filterFuture,
>, <Line: -            boolean filterApproximate, int filterDistance, long filterLimit) {
>, <Line: -        this.filterDistance = filterDistance;
>, <Line: -        filterInvalid = config.getBoolean("filter.invalid");
>, <Line: -        filterZero = config.getBoolean("filter.zero");
>, <Line: -        filterDuplicate = config.getBoolean("filter.duplicate");
>, <Line: -        filterFuture = config.getBoolean("filter.future");
>, <Line: -        filterApproximate = config.getBoolean("filter.approximate");
>, <Line: -        filterDistance = config.getInteger("filter.distance");
>, <Line: -        filterLimit = config.getLong("filter.limit") * 1000;
>, <Line: -                || filterFuture(p) || filterApproximate(p) || filterDistance(p);
>]