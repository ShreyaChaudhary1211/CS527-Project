[<Line: +/*
>, <Line: + * Copyright 2017 Anton Tananaev (anton@traccar.org)
>, <Line: + *
>, <Line: + * Licensed under the Apache License, Version 2.0 (the "License");
>, <Line: + * you may not use this file except in compliance with the License.
>, <Line: + * You may obtain a copy of the License at
>, <Line: + *
>, <Line: + *     http://www.apache.org/licenses/LICENSE-2.0
>, <Line: + *
>, <Line: + * Unless required by applicable law or agreed to in writing, software
>, <Line: + * distributed under the License is distributed on an "AS IS" BASIS,
>, <Line: + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>, <Line: + * See the License for the specific language governing permissions and
>, <Line: + * limitations under the License.
>, <Line: + */
>, <Line: +package org.traccar.protocol;
>, <Line: +import org.jboss.netty.buffer.ChannelBuffer;
>, <Line: +import org.jboss.netty.buffer.ChannelBuffers;
>, <Line: +import org.jboss.netty.channel.Channel;
>, <Line: +import org.jboss.netty.channel.ChannelHandlerContext;
>, <Line: +import org.jboss.netty.handler.codec.frame.FrameDecoder;
>, <Line: +import java.nio.charset.StandardCharsets;
>, <Line: +public class WatchFrameDecoder extends FrameDecoder {
>, <Line: +    public static final int MESSAGE_HEADER = 20;
>, <Line: +    @Override
>, <Line: +    protected Object decode(
>, <Line: +            ChannelHandlerContext ctx, Channel channel, ChannelBuffer buf) throws Exception {
>, <Line: +        if (buf.readableBytes() >= MESSAGE_HEADER) {
>, <Line: +            ChannelBuffer lengthBuffer = ChannelBuffers.dynamicBuffer();
>, <Line: +            buf.getBytes(buf.readerIndex() + MESSAGE_HEADER - 4 - 1, lengthBuffer, 4);
>, <Line: +            int length = Integer.parseInt(lengthBuffer.toString(StandardCharsets.US_ASCII), 16) + MESSAGE_HEADER + 1;
>, <Line: +            if (buf.readableBytes() >= length) {
>, <Line: +                return buf.readBytes(length);
>, <Line: +            }
>, <Line: +        }
>, <Line: +        return null;
>, <Line: +    }
>, <Line: +}
>]
[]