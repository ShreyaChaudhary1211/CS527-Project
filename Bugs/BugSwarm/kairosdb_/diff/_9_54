[<Line: +package org.kairosdb.util;
>, <Line: +/**
>, <Line: + Created by bhawkins on 1/26/17.
>, <Line: + */
>, <Line: +public class SimpleStats
>, <Line: +{
>, <Line: +	private long m_min;
>, <Line: +	private long m_max;
>, <Line: +	private long m_sum;
>, <Line: +	private long m_count;
>, <Line: +	private final Object m_dataLock = new Object();
>, <Line: +	public SimpleStats()
>, <Line: +	{
>, <Line: +		clear();
>, <Line: +	}
>, <Line: +	public void addValue(long value)
>, <Line: +	{
>, <Line: +		synchronized (m_dataLock)
>, <Line: +		{
>, <Line: +			m_min = Math.min(m_min, value);
>, <Line: +			m_max = Math.max(m_max, value);
>, <Line: +			m_sum += value;
>, <Line: +			m_count++;
>, <Line: +		}
>, <Line: +	}
>, <Line: +	private void clear()
>, <Line: +	{
>, <Line: +		m_min = Long.MAX_VALUE;
>, <Line: +		m_max = Long.MIN_VALUE;
>, <Line: +		m_sum = 0;
>, <Line: +		m_count = 0;
>, <Line: +	}
>, <Line: +	/**
>, <Line: +	 Not thread safe
>, <Line: +	 @return
>, <Line: +	 */
>, <Line: +	public long getCount()
>, <Line: +	{
>, <Line: +		return m_count;
>, <Line: +	}
>, <Line: +	public Data getAndClear()
>, <Line: +	{
>, <Line: +		synchronized (m_dataLock)
>, <Line: +		{
>, <Line: +			Data ret;
>, <Line: +			if (m_count != 0)
>, <Line: +				ret = new Data(m_min, m_max, m_sum, m_count, ((double)m_sum)/((double)m_count));
>, <Line: +			else
>, <Line: +				ret = new Data(0, 0, 0, 0, 0.0);
>, <Line: +			clear();
>, <Line: +			return ret;
>, <Line: +		}
>, <Line: +	}
>, <Line: +	public static class Data
>, <Line: +	{
>, <Line: +		public final long min;
>, <Line: +		public final long max;
>, <Line: +		public final long sum;
>, <Line: +		public final long count;
>, <Line: +		public final double avg;
>, <Line: +		public Data(long min, long max, long sum, long count, double avg)
>, <Line: +		{
>, <Line: +			this.min = min;
>, <Line: +			this.max = max;
>, <Line: +			this.sum = sum;
>, <Line: +			this.count = count;
>, <Line: +			this.avg = avg;
>, <Line: +		}
>, <Line: +	}
>, <Line: +}
>]
[]