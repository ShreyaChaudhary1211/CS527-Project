[<Line: +		'angular',
>, <Line: +		'app',
>, <Line: +		'lodash',
>, <Line: +		'jquery',
>, <Line: +	],
>, <Line: +	function (angular, app, _, $) {
>, <Line: +		'use strict';
>, <Line: +		angular
>, <Line: +			.module('grafana.directives')
>, <Line: +			.directive('dropdownTypeahead', function ($compile) {
>, <Line: +				var inputTemplate = '<input type="text"' +
>, <Line: +					' class="grafana-target-segment-input input-medium grafana-target-segment-input"' +
>, <Line: +					' spellcheck="false" style="display:none"></input>';
>, <Line: +				var buttonTemplate = '<a  class="grafana-target-segment grafana-target-function dropdown-toggle"' +
>, <Line: +					' tabindex="1" gf-dropdown="menuItems" data-toggle="dropdown"' +
>, <Line: +					' data-placement="top"><i class="icon-plus"></i></a>';
>, <Line: +				return {
>, <Line: +					scope: {
>, <Line: +						"menuItems": "=dropdownTypeahead",
>, <Line: +						"dropdownTypeaheadOnSelect": "&dropdownTypeaheadOnSelect"
>, <Line: +					},
>, <Line: +					link: function ($scope, elem) {
>, <Line: +						var $input = $(inputTemplate);
>, <Line: +						var $button = $(buttonTemplate);
>, <Line: +						$input.appendTo(elem);
>, <Line: +						$button.appendTo(elem);
>, <Line: +						var typeaheadValues = _.reduce($scope.menuItems, function (memo, value) {
>, <Line: +							_.each(value.submenu, function (item) {
>, <Line: +								memo.push(value.text + ' ' + item.text);
>, <Line: +							});
>, <Line: +							return memo;
>, <Line: +						}, []);
>, <Line: +						$scope.menuItemSelected = function (optionIndex, valueIndex) {
>, <Line: +							var option = $scope.menuItems[optionIndex];
>, <Line: +							var result = {
>, <Line: +								$item: option.submenu[valueIndex],
>, <Line: +								$optionIndex: optionIndex,
>, <Line: +								$valueIndex: valueIndex
>, <Line: +							};
>, <Line: +							$scope.dropdownTypeaheadOnSelect(result);
>, <Line: +						};
>, <Line: +						$input.attr('data-provide', 'typeahead');
>, <Line: +						$input.typeahead({
>, <Line: +							source: typeaheadValues,
>, <Line: +							minLength: 1,
>, <Line: +							items: 10,
>, <Line: +							updater: function (value) {
>, <Line: +								var result = {};
>, <Line: +								_.each($scope.menuItems, function (menuItem, optionIndex) {
>, <Line: +									_.each(menuItem.submenu, function (submenuItem, valueIndex) {
>, <Line: +										if (value === (menuItem.text + ' ' + submenuItem.text)) {
>, <Line: +											result.$item = submenuItem;
>, <Line: +											result.$optionIndex = optionIndex;
>, <Line: +											result.$valueIndex = valueIndex;
>, <Line: +										}
>, <Line: +									});
>, <Line: +								});
>, <Line: +								if (result.$item) {
>, <Line: +									$scope.$apply(function () {
>, <Line: +										$scope.dropdownTypeaheadOnSelect(result);
>, <Line: +									});
>, <Line: +								}
>, <Line: +								$input.trigger('blur');
>, <Line: +								return '';
>, <Line: +							}
>, <Line: +						});
>, <Line: +						$button.click(function () {
>, <Line: +							$button.hide();
>, <Line: +							$input.show();
>, <Line: +							$input.focus();
>, <Line: +						});
>, <Line: +						$input.keyup(function () {
>, <Line: +							elem.toggleClass('open', $input.val() === '');
>, <Line: +						});
>, <Line: +						$input.blur(function () {
>, <Line: +							$input.hide();
>, <Line: +							$input.val('');
>, <Line: +							$button.show();
>, <Line: +							$button.focus();
>, <Line: +							// clicking the function dropdown menu wont
>, <Line: +							// work if you remove class at once
>, <Line: +							setTimeout(function () {
>, <Line: +								elem.removeClass('open');
>, <Line: +							}, 200);
>, <Line: +						});
>, <Line: +						$compile(elem.contents())($scope);
>, <Line: +					}
>, <Line: +				};
>, <Line: +			});
>, <Line: +	});
>]
[<Line: -  'angular',
>, <Line: -  'app',
>, <Line: -  'lodash',
>, <Line: -  'jquery',
>, <Line: -],
>, <Line: -function (angular, app, _, $) {
>, <Line: -  'use strict';
>, <Line: -  angular
>, <Line: -    .module('grafana.directives')
>, <Line: -    .directive('dropdownTypeahead', function($compile) {
>, <Line: -      var inputTemplate = '<input type="text"'+
>, <Line: -                            ' class="grafana-target-segment-input input-medium grafana-target-segment-input"' +
>, <Line: -                            ' spellcheck="false" style="display:none"></input>';
>, <Line: -      var buttonTemplate = '<a  class="grafana-target-segment grafana-target-function dropdown-toggle"' +
>, <Line: -                              ' tabindex="1" gf-dropdown="menuItems" data-toggle="dropdown"' +
>, <Line: -                              ' data-placement="top"><i class="icon-plus"></i></a>';
>, <Line: -      return {
>, <Line: -        scope: {
>, <Line: -          "menuItems": "=dropdownTypeahead",
>, <Line: -          "dropdownTypeaheadOnSelect": "&dropdownTypeaheadOnSelect"
>, <Line: -        },
>, <Line: -        link: function($scope, elem) {
>, <Line: -          var $input = $(inputTemplate);
>, <Line: -          var $button = $(buttonTemplate);
>, <Line: -          $input.appendTo(elem);
>, <Line: -          $button.appendTo(elem);
>, <Line: -          var typeaheadValues = _.reduce($scope.menuItems, function(memo, value) {
>, <Line: -            _.each(value.submenu, function(item) {
>, <Line: -              memo.push(value.text + ' ' + item.text);
>, <Line: -            });
>, <Line: -            return memo;
>, <Line: -          }, []);
>, <Line: -          $scope.menuItemSelected = function(optionIndex, valueIndex) {
>, <Line: -            var option = $scope.menuItems[optionIndex];
>, <Line: -            var result = {
>, <Line: -              $item: option.submenu[valueIndex],
>, <Line: -              $optionIndex: optionIndex,
>, <Line: -              $valueIndex: valueIndex
>, <Line: -            };
>, <Line: -            $scope.dropdownTypeaheadOnSelect(result);
>, <Line: -          };
>, <Line: -          $input.attr('data-provide', 'typeahead');
>, <Line: -          $input.typeahead({
>, <Line: -            source: typeaheadValues,
>, <Line: -            minLength: 1,
>, <Line: -            items: 10,
>, <Line: -            updater: function (value) {
>, <Line: -              var result = {};
>, <Line: -              _.each($scope.menuItems, function(menuItem, optionIndex) {
>, <Line: -                _.each(menuItem.submenu, function(submenuItem, valueIndex) {
>, <Line: -                  if (value === (menuItem.text + ' ' + submenuItem.text)) {
>, <Line: -                    result.$item  = submenuItem;
>, <Line: -                    result.$optionIndex = optionIndex;
>, <Line: -                    result.$valueIndex = valueIndex;
>, <Line: -                  }
>, <Line: -                });
>, <Line: -              });
>, <Line: -              if (result.$item) {
>, <Line: -                $scope.$apply(function() {
>, <Line: -                  $scope.dropdownTypeaheadOnSelect(result);
>, <Line: -                });
>, <Line: -              }
>, <Line: -              $input.trigger('blur');
>, <Line: -              return '';
>, <Line: -            }
>, <Line: -          });
>, <Line: -          $button.click(function() {
>, <Line: -            $button.hide();
>, <Line: -            $input.show();
>, <Line: -            $input.focus();
>, <Line: -          });
>, <Line: -          $input.keyup(function() {
>, <Line: -            elem.toggleClass('open', $input.val() === '');
>, <Line: -          });
>, <Line: -          $input.blur(function() {
>, <Line: -            $input.hide();
>, <Line: -            $input.val('');
>, <Line: -            $button.show();
>, <Line: -            $button.focus();
>, <Line: -            // clicking the function dropdown menu wont
>, <Line: -            // work if you remove class at once
>, <Line: -            setTimeout(function() {
>, <Line: -              elem.removeClass('open');
>, <Line: -            }, 200);
>, <Line: -          });
>, <Line: -          $compile(elem.contents())($scope);
>, <Line: -        }
>, <Line: -      };
>, <Line: -    });
>, <Line: -});
>]