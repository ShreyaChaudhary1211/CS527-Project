[<Line: +import org.kairosdb.core.datastore.Order;
>, <Line: +import java.util.*;
>, <Line: +	public void sort(Order order)
>, <Line: +	{
>, <Line: +		if (order == Order.ASC)
>, <Line: +			Collections.sort(dataPoints, new DataPointComparator());
>, <Line: +		else
>, <Line: +			Collections.sort(dataPoints, Collections.reverseOrder(new DataPointComparator()));
>, <Line: +	}
>, <Line: +	private class DataPointComparator implements Comparator<DataPoint>
>, <Line: +	{
>, <Line: +		@Override
>, <Line: +		public int compare(DataPoint point1, DataPoint point2)
>, <Line: +		{
>, <Line: +			long ret = point1.getTimestamp() - point2.getTimestamp();
>, <Line: +			if (ret == 0L)
>, <Line: +				ret = Double.compare(point1.getDoubleValue(), point2.getDoubleValue());
>, <Line: +			if (ret == 0L)
>, <Line: +			{  //Simple hack to break a tie.
>, <Line: +				ret = System.identityHashCode(point1) - System.identityHashCode(point2);
>, <Line: +			}
>, <Line: +			return (ret < 0L ? -1 : 1);
>, <Line: +		}
>, <Line: +	}
>]
[<Line: -import java.util.ArrayList;
>, <Line: -import java.util.Iterator;
>, <Line: -import java.util.List;
>]