[<Line: +return function (callback) {
>, <Line: +	// Setup some variables
>, <Line: +	var dashboard;
>, <Line: +	// Intialize a skeleton with nothing but a rows array and service object
>, <Line: +	dashboard = {
>, <Line: +		rows: [],
>, <Line: +		services: {}
>, <Line: +	};
>, <Line: +	// Set a title
>, <Line: +	dashboard.title = 'Scripted dash';
>, <Line: +	// Set default time
>, <Line: +	// time can be overriden in the url using from/to parameteres, but this is
>, <Line: +	// handled automatically in grafana core during dashboard initialization
>, <Line: +	dashboard.time = {
>, <Line: +		from: "now-6h",
>, <Line: +		to: "now"
>, <Line: +	};
>, <Line: +	var rows = 1;
>, <Line: +	var seriesName = 'argName';
>, <Line: +	if (!_.isUndefined(ARGS.rows)) {
>, <Line: +		rows = parseInt(ARGS.rows, 10);
>, <Line: +	}
>, <Line: +	if (!_.isUndefined(ARGS.name)) {
>, <Line: +		seriesName = ARGS.name;
>, <Line: +	}
>, <Line: +	$.ajax({
>, <Line: +		method: 'GET',
>, <Line: +		url: '/'
>, <Line: +	})
>, <Line: +		.done(function (result) {
>, <Line: +			dashboard.rows.push({
>, <Line: +				title: 'Chart',
>, <Line: +				height: '300px',
>, <Line: +				panels: [
>, <Line: +					{
>, <Line: +						title: 'Async dashboard test',
>, <Line: +						type: 'text',
>, <Line: +						span: 12,
>, <Line: +						fill: 1,
>, <Line: +						content: '# Async test'
>, <Line: +					}
>, <Line: +				]
>, <Line: +			});
>, <Line: +			// when dashboard is composed call the callback
>, <Line: +			// function and pass the dashboard
>, <Line: +			callback(dashboard);
>, <Line: +		});
>]
[<Line: -return function(callback) {
>, <Line: -  // Setup some variables
>, <Line: -  var dashboard;
>, <Line: -  // Intialize a skeleton with nothing but a rows array and service object
>, <Line: -  dashboard = {
>, <Line: -    rows : [],
>, <Line: -    services : {}
>, <Line: -  };
>, <Line: -  // Set a title
>, <Line: -  dashboard.title = 'Scripted dash';
>, <Line: -  // Set default time
>, <Line: -  // time can be overriden in the url using from/to parameteres, but this is
>, <Line: -  // handled automatically in grafana core during dashboard initialization
>, <Line: -  dashboard.time = {
>, <Line: -      from: "now-6h",
>, <Line: -      to: "now"
>, <Line: -  };
>, <Line: -  var rows = 1;
>, <Line: -  var seriesName = 'argName';
>, <Line: -  if(!_.isUndefined(ARGS.rows)) {
>, <Line: -    rows = parseInt(ARGS.rows, 10);
>, <Line: -  }
>, <Line: -  if(!_.isUndefined(ARGS.name)) {
>, <Line: -    seriesName = ARGS.name;
>, <Line: -  }
>, <Line: -  $.ajax({
>, <Line: -    method: 'GET',
>, <Line: -    url: '/'
>, <Line: -  })
>, <Line: -  .done(function(result) {
>, <Line: -    dashboard.rows.push({
>, <Line: -      title: 'Chart',
>, <Line: -      height: '300px',
>, <Line: -      panels: [
>, <Line: -        {
>, <Line: -          title: 'Async dashboard test',
>, <Line: -          type: 'text',
>, <Line: -          span: 12,
>, <Line: -          fill: 1,
>, <Line: -          content: '# Async test'
>, <Line: -        }
>, <Line: -      ]
>, <Line: -    });
>, <Line: -    // when dashboard is composed call the callback
>, <Line: -    // function and pass the dashboard
>, <Line: -    callback(dashboard);
>, <Line: -  });
>]