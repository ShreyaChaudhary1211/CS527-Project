[<Line: +import com.datastax.driver.core.policies.LoadBalancingPolicy;
>, <Line: +import java.util.*;
>, <Line: +	private final Schema m_schema;
>, <Line: +	private final LoadBalancingPolicy m_loadBalancingPolicy;
>, <Line: +	//private Map<Host, BatchStatement> m_batchMap = new HashMap<>();
>, <Line: +			Schema schema, BatchStats batchStats,
>, <Line: +			LoadBalancingPolicy loadBalancingPolicy)
>, <Line: +		m_schema = schema;
>, <Line: +		m_loadBalancingPolicy = loadBalancingPolicy;
>, <Line: +		BoundStatement bs = m_schema.psRowKeyTimeInsert.bind()
>, <Line: +		bs = m_schema.psRowKeyInsert.bind()
>, <Line: +		BoundStatement bs = new BoundStatement(m_schema.psStringIndexInsert);
>, <Line: +		BoundStatement boundStatement = new BoundStatement(m_schema.psDataPointsInsert);
>, <Line: +		boundStatement.setIdempotent(true);
>, <Line: +		/*Iterator<Host> hosts = m_loadBalancingPolicy.newQueryPlan("kairosdb", boundStatement);
>, <Line: +		if (hosts.hasNext())
>, <Line: +		{
>, <Line: +			Host host = hosts.next();
>, <Line: +			BatchStatement batchStatement = m_batchMap.get(host);
>, <Line: +			if (batchStatement == null)
>, <Line: +			{
>, <Line: +				batchStatement = new BatchStatement(BatchStatement.Type.UNLOGGED);
>, <Line: +				m_batchMap.put(host, batchStatement);
>, <Line: +			}
>, <Line: +			batchStatement.add(boundStatement);
>, <Line: +		}*/
>, <Line: +			//rowKeyBatch.enableTracing();
>, <Line: +		/*for (BatchStatement batchStatement : m_batchMap.values())
>, <Line: +		{
>, <Line: +			m_session.executeAsync(batchStatement);
>, <Line: +			m_batchStats.addDatapointsBatch(batchStatement.size());
>, <Line: +		}*/
>]
[<Line: -import com.google.common.eventbus.EventBus;
>, <Line: -import org.kairosdb.core.queue.EventCompletionCallBack;
>, <Line: -import org.kairosdb.events.DataPointEvent;
>, <Line: -import java.util.Date;
>, <Line: -import java.util.List;
>, <Line: -	private final CassandraDatastore.PreparedStatements m_preparedStatements;
>, <Line: -			CassandraDatastore.PreparedStatements preparedStatements, BatchStats batchStats)
>, <Line: -		m_preparedStatements = preparedStatements;
>, <Line: -		BoundStatement bs = m_preparedStatements.psRowKeyTimeInsert.bind()
>, <Line: -		bs = m_preparedStatements.psRowKeyInsert.bind()
>, <Line: -		BoundStatement bs = new BoundStatement(m_preparedStatements.psStringIndexInsert);
>, <Line: -		BoundStatement boundStatement = new BoundStatement(m_preparedStatements.psDataPointsInsert);
>, <Line: -			rowKeyBatch.enableTracing();
>]