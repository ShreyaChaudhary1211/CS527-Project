[<Line: +		'angular',
>, <Line: +		'app',
>, <Line: +		'lodash',
>, <Line: +		'jquery',
>, <Line: +	],
>, <Line: +	function (angular, app, _, $) {
>, <Line: +		'use strict';
>, <Line: +		angular
>, <Line: +			.module('grafana.directives')
>, <Line: +			.directive('templateParamSelector', function ($compile) {
>, <Line: +				var inputTemplate = '<input type="text" data-provide="typeahead" ' +
>, <Line: +					' class="grafana-target-text-input input-medium"' +
>, <Line: +					' spellcheck="false" style="display:none"></input>';
>, <Line: +				var buttonTemplate = '<a  class="grafana-target-segment tabindex="1">{{variable.current.text}}</a>';
>, <Line: +				return {
>, <Line: +					link: function ($scope, elem) {
>, <Line: +						var $input = $(inputTemplate);
>, <Line: +						var $button = $(buttonTemplate);
>, <Line: +						var variable = $scope.variable;
>, <Line: +						$input.appendTo(elem);
>, <Line: +						$button.appendTo(elem);
>, <Line: +						function updateVariableValue(value) {
>, <Line: +							$scope.$apply(function () {
>, <Line: +								var selected = _.findWhere(variable.options, {text: value});
>, <Line: +								if (!selected) {
>, <Line: +									selected = {text: value, value: value};
>, <Line: +								}
>, <Line: +								$scope.setVariableValue($scope.variable, selected);
>, <Line: +							});
>, <Line: +						}
>, <Line: +						$input.attr('data-provide', 'typeahead');
>, <Line: +						$input.typeahead({
>, <Line: +							minLength: 0,
>, <Line: +							items: 1000,
>, <Line: +							updater: function (value) {
>, <Line: +								$input.val(value);
>, <Line: +								$input.trigger('blur');
>, <Line: +								return value;
>, <Line: +							}
>, <Line: +						});
>, <Line: +						var typeahead = $input.data('typeahead');
>, <Line: +						typeahead.lookup = function () {
>, <Line: +							var options = _.map(variable.options, function (option) {
>, <Line: +								return option.text;
>, <Line: +							});
>, <Line: +							this.query = this.$element.val() || '';
>, <Line: +							return this.process(options);
>, <Line: +						};
>, <Line: +						$button.click(function () {
>, <Line: +							$input.css('width', ($button.width() + 16) + 'px');
>, <Line: +							$button.hide();
>, <Line: +							$input.show();
>, <Line: +							$input.focus();
>, <Line: +							var typeahead = $input.data('typeahead');
>, <Line: +							if (typeahead) {
>, <Line: +								$input.val('');
>, <Line: +								typeahead.lookup();
>, <Line: +							}
>, <Line: +						});
>, <Line: +						$input.blur(function () {
>, <Line: +							if ($input.val() !== '') {
>, <Line: +								updateVariableValue($input.val());
>, <Line: +							}
>, <Line: +							$input.hide();
>, <Line: +							$button.show();
>, <Line: +							$button.focus();
>, <Line: +						});
>, <Line: +						$compile(elem.contents())($scope);
>, <Line: +					}
>, <Line: +				};
>, <Line: +			});
>, <Line: +	});
>]
[<Line: -  'angular',
>, <Line: -  'app',
>, <Line: -  'lodash',
>, <Line: -  'jquery',
>, <Line: -],
>, <Line: -function (angular, app, _, $) {
>, <Line: -  'use strict';
>, <Line: -  angular
>, <Line: -    .module('grafana.directives')
>, <Line: -    .directive('templateParamSelector', function($compile) {
>, <Line: -      var inputTemplate = '<input type="text" data-provide="typeahead" ' +
>, <Line: -                            ' class="grafana-target-text-input input-medium"' +
>, <Line: -                            ' spellcheck="false" style="display:none"></input>';
>, <Line: -      var buttonTemplate = '<a  class="grafana-target-segment tabindex="1">{{variable.current.text}}</a>';
>, <Line: -      return {
>, <Line: -        link: function($scope, elem) {
>, <Line: -          var $input = $(inputTemplate);
>, <Line: -          var $button = $(buttonTemplate);
>, <Line: -          var variable = $scope.variable;
>, <Line: -          $input.appendTo(elem);
>, <Line: -          $button.appendTo(elem);
>, <Line: -          function updateVariableValue(value) {
>, <Line: -            $scope.$apply(function() {
>, <Line: -              var selected = _.findWhere(variable.options, { text: value });
>, <Line: -              if (!selected) {
>, <Line: -                selected = { text: value, value: value };
>, <Line: -              }
>, <Line: -              $scope.setVariableValue($scope.variable, selected);
>, <Line: -            });
>, <Line: -          }
>, <Line: -          $input.attr('data-provide', 'typeahead');
>, <Line: -          $input.typeahead({
>, <Line: -            minLength: 0,
>, <Line: -            items: 1000,
>, <Line: -            updater: function(value) {
>, <Line: -              $input.val(value);
>, <Line: -              $input.trigger('blur');
>, <Line: -              return value;
>, <Line: -            }
>, <Line: -          });
>, <Line: -          var typeahead = $input.data('typeahead');
>, <Line: -          typeahead.lookup = function () {
>, <Line: -            var options = _.map(variable.options, function(option) { return option.text; });
>, <Line: -            this.query = this.$element.val() || '';
>, <Line: -            return this.process(options);
>, <Line: -          };
>, <Line: -          $button.click(function() {
>, <Line: -            $input.css('width', ($button.width() + 16) + 'px');
>, <Line: -            $button.hide();
>, <Line: -            $input.show();
>, <Line: -            $input.focus();
>, <Line: -            var typeahead = $input.data('typeahead');
>, <Line: -            if (typeahead) {
>, <Line: -              $input.val('');
>, <Line: -              typeahead.lookup();
>, <Line: -            }
>, <Line: -          });
>, <Line: -          $input.blur(function() {
>, <Line: -            if ($input.val() !== '') { updateVariableValue($input.val()); }
>, <Line: -            $input.hide();
>, <Line: -            $button.show();
>, <Line: -            $button.focus();
>, <Line: -          });
>, <Line: -          $compile(elem.contents())($scope);
>, <Line: -        }
>, <Line: -      };
>, <Line: -    });
>, <Line: -});
>]