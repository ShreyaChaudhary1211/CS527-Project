[<Line: +import org.kairosdb.core.annotation.FeatureCompoundProperty;
>, <Line: +import org.kairosdb.core.annotation.FeatureProperty;
>, <Line: +import java.util.List;
>, <Line: +public class FeaturePropertyMetadata
>, <Line: +    private ImmutableList<FeatureValidationMetadata> validations;
>, <Line: +    private ImmutableList<FeaturePropertyMetadata> properties;
>, <Line: +    public FeaturePropertyMetadata(String name, String type, String options, String defaultValue, FeatureProperty property)
>, <Line: +    public FeaturePropertyMetadata(String name, FeatureCompoundProperty property, List<FeaturePropertyMetadata> properties)
>, <Line: +        Comparator<FeaturePropertyMetadata> comparator = property.order().length > 0 ?
>, <Line: +    public ImmutableList<FeatureValidationMetadata> getValidations() { return validations; }
>, <Line: +    public ImmutableList<FeaturePropertyMetadata> getProperties()
>, <Line: +    private ImmutableList<FeatureValidationMetadata> extractValidators(FeatureProperty property)
>, <Line: +        LinkedList<FeatureValidationMetadata> validations = new LinkedList<FeatureValidationMetadata>();
>, <Line: +            validations.addFirst(new FeatureValidationMetadata(validator.expression(), validator.type(), validator.message()));
>, <Line: +    private class LabelComparator implements Comparator<FeaturePropertyMetadata>
>, <Line: +        public int compare(FeaturePropertyMetadata o1, FeaturePropertyMetadata o2)
>, <Line: +    private class ExplicitComparator implements Comparator<FeaturePropertyMetadata>
>, <Line: +        public int compare(FeaturePropertyMetadata left, FeaturePropertyMetadata right)
>]
[<Line: -import org.kairosdb.core.annotation.QueryCompoundProperty;
>, <Line: -import org.kairosdb.core.annotation.QueryProperty;
>, <Line: -import java.util.List;
>, <Line: -public class QueryPropertyMetadata
>, <Line: -    private ImmutableList<QueryValidationMetadata> validations;
>, <Line: -    private ImmutableList<QueryPropertyMetadata> properties;
>, <Line: -    public QueryPropertyMetadata(String name, String type, String options, String defaultValue, QueryProperty property)
>, <Line: -    public QueryPropertyMetadata(String name, QueryCompoundProperty property, List<QueryPropertyMetadata> properties)
>, <Line: -        Comparator<QueryPropertyMetadata> comparator = property.order().length > 0 ?
>, <Line: -    public ImmutableList<QueryValidationMetadata> getValidations() { return validations; }
>, <Line: -    public ImmutableList<QueryPropertyMetadata> getProperties()
>, <Line: -    private ImmutableList<QueryValidationMetadata> extractValidators(QueryProperty property)
>, <Line: -        LinkedList<QueryValidationMetadata> validations = new LinkedList<QueryValidationMetadata>();
>, <Line: -            validations.addFirst(new QueryValidationMetadata(validator.expression(), validator.type(), validator.message()));
>, <Line: -    private class LabelComparator implements Comparator<QueryPropertyMetadata>
>, <Line: -        public int compare(QueryPropertyMetadata o1, QueryPropertyMetadata o2)
>, <Line: -    private class ExplicitComparator implements Comparator<QueryPropertyMetadata>
>, <Line: -        public int compare(QueryPropertyMetadata left, QueryPropertyMetadata right)
>]