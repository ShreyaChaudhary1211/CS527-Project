[<Line: +import com.google.common.eventbus.EventBus;
>, <Line: +import com.google.inject.matcher.Matchers;
>, <Line: +import com.google.inject.spi.InjectionListener;
>, <Line: +import com.google.inject.spi.TypeEncounter;
>, <Line: +import com.google.inject.spi.TypeListener;
>, <Line: +	private static final EventBus m_eventBus = new EventBus();
>, <Line: +				bind(EventBus.class).toInstance(m_eventBus);
>, <Line: +				//Need to register an exception handler
>, <Line: +				bindListener(Matchers.any(), new TypeListener()
>, <Line: +				{
>, <Line: +					public <I> void hear(TypeLiteral<I> typeLiteral, TypeEncounter<I> typeEncounter)
>, <Line: +					{
>, <Line: +						typeEncounter.register(new InjectionListener<I>()
>, <Line: +						{
>, <Line: +							public void afterInjection(I i)
>, <Line: +							{
>, <Line: +								m_eventBus.register(i);
>, <Line: +							}
>, <Line: +						});
>, <Line: +					}
>, <Line: +				});
>]
[<Line: -				bind(new TypeLiteral<List<DataPointListener>>(){}).toProvider(DataPointListenerProvider.class);
>, <Line: -		@Override
>, <Line: -		public void putDataPoint(String metricName,
>, <Line: -				ImmutableSortedMap<String, String> tags,
>, <Line: -				DataPoint dataPoint, int ttl) throws DatastoreException
>, <Line: -		{
>, <Line: -		}
>]