[<Line: +		'angular',
>, <Line: +		'jquery',
>, <Line: +		'config',
>, <Line: +		'lodash',
>, <Line: +		'kbn',
>, <Line: +		'moment'
>, <Line: +	],
>, <Line: +	function (angular, $, config, _, kbn, moment) {
>, <Line: +		"use strict";
>, <Line: +		var module = angular.module('grafana.routes');
>, <Line: +		module.config(function ($routeProvider) {
>, <Line: +			$routeProvider
>, <Line: +				.when('/dashboard/script/:jsFile', {
>, <Line: +					templateUrl: 'app/partials/dashboard.html',
>, <Line: +					controller: 'DashFromScriptProvider',
>, <Line: +					reloadOnSearch: false,
>, <Line: +				});
>, <Line: +		});
>, <Line: +		module.controller('DashFromScriptProvider', function ($scope, $rootScope, $http, $routeParams, $q, dashboardSrv, datasourceSrv, $timeout) {
>, <Line: +			var execute_script = function (result) {
>, <Line: +				var services = {
>, <Line: +					dashboardSrv: dashboardSrv,
>, <Line: +					datasourceSrv: datasourceSrv,
>, <Line: +					$q: $q,
>, <Line: +				};
>, <Line: +				/*jshint -W054 */
>, <Line: +				var script_func = new Function('ARGS', 'kbn', '_', 'moment', 'window', 'document', '$', 'jQuery', 'services', result.data);
>, <Line: +				var script_result = script_func($routeParams, kbn, _, moment, window, document, $, $, services);
>, <Line: +				// Handle async dashboard scripts
>, <Line: +				if (_.isFunction(script_result)) {
>, <Line: +					var deferred = $q.defer();
>, <Line: +					script_result(function (dashboard) {
>, <Line: +						$timeout(function () {
>, <Line: +							deferred.resolve({data: dashboard});
>, <Line: +						});
>, <Line: +					});
>, <Line: +					return deferred.promise;
>, <Line: +				}
>, <Line: +				return {data: script_result};
>, <Line: +			};
>, <Line: +			var script_load = function (file) {
>, <Line: +				var url = 'app/dashboards/' + file.replace(/\.(?!js)/, "/") + '?' + new Date().getTime();
>, <Line: +				return $http({url: url, method: "GET"})
>, <Line: +					.then(execute_script)
>, <Line: +					.then(null, function (err) {
>, <Line: +						console.log('Script dashboard error ' + err);
>, <Line: +						$scope.appEvent('alert-error', ["Script Error", "Please make sure it exists and returns a valid dashboard"]);
>, <Line: +						return false;
>, <Line: +					});
>, <Line: +			};
>, <Line: +			script_load($routeParams.jsFile).then(function (result) {
>, <Line: +				$scope.initDashboard(result.data, $scope);
>, <Line: +			});
>, <Line: +		});
>, <Line: +	});
>]
[<Line: -  'angular',
>, <Line: -  'jquery',
>, <Line: -  'config',
>, <Line: -  'lodash',
>, <Line: -  'kbn',
>, <Line: -  'moment'
>, <Line: -],
>, <Line: -function (angular, $, config, _, kbn, moment) {
>, <Line: -  "use strict";
>, <Line: -  var module = angular.module('grafana.routes');
>, <Line: -  module.config(function($routeProvider) {
>, <Line: -    $routeProvider
>, <Line: -      .when('/dashboard/script/:jsFile', {
>, <Line: -        templateUrl: 'app/partials/dashboard.html',
>, <Line: -        controller : 'DashFromScriptProvider',
>, <Line: -        reloadOnSearch: false,
>, <Line: -      });
>, <Line: -  });
>, <Line: -  module.controller('DashFromScriptProvider', function($scope, $rootScope, $http, $routeParams, $q, dashboardSrv, datasourceSrv, $timeout) {
>, <Line: -    var execute_script = function(result) {
>, <Line: -      var services = {
>, <Line: -        dashboardSrv: dashboardSrv,
>, <Line: -        datasourceSrv: datasourceSrv,
>, <Line: -        $q: $q,
>, <Line: -      };
>, <Line: -      /*jshint -W054 */
>, <Line: -      var script_func = new Function('ARGS','kbn','_','moment','window','document','$','jQuery', 'services', result.data);
>, <Line: -      var script_result = script_func($routeParams, kbn, _ , moment, window, document, $, $, services);
>, <Line: -      // Handle async dashboard scripts
>, <Line: -      if (_.isFunction(script_result)) {
>, <Line: -        var deferred = $q.defer();
>, <Line: -        script_result(function(dashboard) {
>, <Line: -          $timeout(function() {
>, <Line: -            deferred.resolve({ data: dashboard });
>, <Line: -          });
>, <Line: -        });
>, <Line: -        return deferred.promise;
>, <Line: -      }
>, <Line: -      return { data: script_result };
>, <Line: -    };
>, <Line: -    var script_load = function(file) {
>, <Line: -      var url = 'app/dashboards/'+file.replace(/\.(?!js)/,"/") + '?' + new Date().getTime();
>, <Line: -      return $http({ url: url, method: "GET" })
>, <Line: -      .then(execute_script)
>, <Line: -      .then(null,function(err) {
>, <Line: -        console.log('Script dashboard error '+ err);
>, <Line: -        $scope.appEvent('alert-error', ["Script Error", "Please make sure it exists and returns a valid dashboard"]);
>, <Line: -        return false;
>, <Line: -      });
>, <Line: -    };
>, <Line: -    script_load($routeParams.jsFile).then(function(result) {
>, <Line: -      $scope.initDashboard(result.data, $scope);
>, <Line: -    });
>, <Line: -  });
>, <Line: -});
>]