[<Line: +	public static final String REPORTER_TTL = "kairosdb.reporter.ttl";
>, <Line: +	private final int m_ttl;
>, <Line: +			@Named(HOSTNAME) String hostname,
>, <Line: +			@Named(REPORTER_TTL) int ttl)
>, <Line: +		m_ttl = ttl;
>, <Line: +								dataPointSet.getTags(), dataPoint, m_ttl));
>, <Line: +					tags, m_dataPointFactory.createDataPoint(timestamp, runtime.freeMemory()), m_ttl));
>, <Line: +					tags, m_dataPointFactory.createDataPoint(timestamp, runtime.totalMemory()), m_ttl));
>, <Line: +					tags, m_dataPointFactory.createDataPoint(timestamp, runtime.maxMemory()), m_ttl));
>, <Line: +					tags, m_dataPointFactory.createDataPoint(timestamp, getThreadCount()), m_ttl));
>]
[<Line: -import org.kairosdb.core.datastore.KairosDatastore;
>, <Line: -	private KairosDatastore m_datastore;
>, <Line: -			@Named(HOSTNAME) String hostname)
>, <Line: -								dataPointSet.getTags(), dataPoint, 0));
>, <Line: -					tags, m_dataPointFactory.createDataPoint(timestamp, runtime.freeMemory()), 0));
>, <Line: -					tags, m_dataPointFactory.createDataPoint(timestamp, runtime.totalMemory()), 0));
>, <Line: -					tags, m_dataPointFactory.createDataPoint(timestamp, runtime.maxMemory()), 0));
>, <Line: -					tags, m_dataPointFactory.createDataPoint(timestamp, getThreadCount()), 0));
>]