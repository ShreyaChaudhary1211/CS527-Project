[<Line: +import org.kairosdb.core.processingstage.metadata.FeatureProcessingMetadata;
>, <Line: +import static org.kairosdb.core.processingstage.GenericFeatureProcessorFactoryTest.assertQueryProcessors;
>, <Line: +import static org.kairosdb.core.processingstage.GenericFeatureProcessorFactoryTest.factory_valid_metadata_generator;
>, <Line: +    private static FeatureProcessor processingChain;
>, <Line: +        GenericProcessingChainTest.processingChain = new TestKairosDBProcessor(new ArrayList<FeatureProcessingFactory<?>>()
>, <Line: +        new TestKairosDBProcessor(new ArrayList<>());
>, <Line: +        new TestKairosDBProcessor(null);
>, <Line: +        FeatureProcessingFactory<?> factory = GenericProcessingChainTest.processingChain.getFeatureProcessingFactory(Aggregator.class);
>, <Line: +        assertEquals("Invalid type of FeatureProcessingFactory", AggregatorFactory.class, factory.getClass());
>, <Line: +        FeatureProcessingFactory<?> factory = GenericProcessingChainTest.processingChain.getFeatureProcessingFactory(GroupBy.class);
>, <Line: +        assertEquals("Invalid type of FeatureProcessingFactory", null, factory);
>, <Line: +        FeatureProcessingFactory<?> factory = GenericProcessingChainTest.processingChain.getFeatureProcessingFactory("aggregators");
>, <Line: +        assertEquals("Invalid type of FeatureProcessingFactory", AggregatorFactory.class, factory.getClass());
>, <Line: +        FeatureProcessingFactory<?> factory = GenericProcessingChainTest.processingChain.getFeatureProcessingFactory("groupby");
>, <Line: +        assertEquals("Invalid type of FeatureProcessingFactory", null, factory);
>, <Line: +                this.processingChain.getFeatureProcessingMetadata()
>, <Line: +    static FeatureProcessingMetadata[] chain_valid_metadata_generator()
>, <Line: +        return new FeatureProcessingMetadata[]{
>, <Line: +                new FeatureProcessingMetadata(
>, <Line: +    static void assertQueryProcessorFactories(ImmutableList<FeatureProcessingMetadata> expectedProcessingChain,
>, <Line: +                                              ImmutableList<FeatureProcessingMetadata> actualProcessingChain)
>, <Line: +        assertEquals("Feature metadata size don't match", expectedProcessingChain.size(), actualProcessingChain.size());
>, <Line: +            FeatureProcessingMetadata expectedQueryProcessorStage = expectedProcessingChain.get(i);
>, <Line: +            FeatureProcessingMetadata actualQueryProcessorStage = actualProcessingChain.get(i);
>, <Line: +            assertEquals("Feature metadata name don't match", expectedQueryProcessorStage.getName(), actualQueryProcessorStage.getName());
>, <Line: +            assertEquals("Feature metadata label don't match", expectedQueryProcessorStage.getLabel(), actualQueryProcessorStage.getLabel());
>]
[<Line: -import org.kairosdb.core.processingstage.metadata.QueryProcessingStageMetadata;
>, <Line: -import static org.kairosdb.core.processingstage.GenericQueryProcessingStageFactoryTest.assertQueryProcessors;
>, <Line: -import static org.kairosdb.core.processingstage.GenericQueryProcessingStageFactoryTest.factory_valid_metadata_generator;
>, <Line: -    private static QueryProcessingChain processingChain;
>, <Line: -        GenericProcessingChainTest.processingChain = new TestKairosDBProcessingChain(new ArrayList<QueryProcessingStageFactory<?>>()
>, <Line: -        new TestKairosDBProcessingChain(new ArrayList<>());
>, <Line: -        new TestKairosDBProcessingChain(null);
>, <Line: -        QueryProcessingStageFactory<?> factory = GenericProcessingChainTest.processingChain.getQueryProcessingStageFactory(Aggregator.class);
>, <Line: -        assertEquals("Invalid type of QueryProcessingStageFactory", AggregatorFactory.class, factory.getClass());
>, <Line: -        QueryProcessingStageFactory<?> factory = GenericProcessingChainTest.processingChain.getQueryProcessingStageFactory(GroupBy.class);
>, <Line: -        assertEquals("Invalid type of QueryProcessingStageFactory", null, factory);
>, <Line: -        QueryProcessingStageFactory<?> factory = GenericProcessingChainTest.processingChain.getQueryProcessingStageFactory("aggregators");
>, <Line: -        assertEquals("Invalid type of QueryProcessingStageFactory", AggregatorFactory.class, factory.getClass());
>, <Line: -        QueryProcessingStageFactory<?> factory = GenericProcessingChainTest.processingChain.getQueryProcessingStageFactory("groupby");
>, <Line: -        assertEquals("Invalid type of QueryProcessingStageFactory", null, factory);
>, <Line: -                this.processingChain.getQueryProcessingChainMetadata()
>, <Line: -    static QueryProcessingStageMetadata[] chain_valid_metadata_generator()
>, <Line: -        return new QueryProcessingStageMetadata[]{
>, <Line: -                new QueryProcessingStageMetadata(
>, <Line: -    static void assertQueryProcessorFactories(ImmutableList<QueryProcessingStageMetadata> expectedProcessingChain,
>, <Line: -                                              ImmutableList<QueryProcessingStageMetadata> actualProcessingChain)
>, <Line: -        assertEquals("QueryProcessingStage metadata size don't match", expectedProcessingChain.size(), actualProcessingChain.size());
>, <Line: -            QueryProcessingStageMetadata expectedQueryProcessorStage = expectedProcessingChain.get(i);
>, <Line: -            QueryProcessingStageMetadata actualQueryProcessorStage = actualProcessingChain.get(i);
>, <Line: -            assertEquals("QueryProcessingStage metadata name don't match", expectedQueryProcessorStage.getName(), actualQueryProcessorStage.getName());
>, <Line: -            assertEquals("QueryProcessingStage metadata label don't match", expectedQueryProcessorStage.getLabel(), actualQueryProcessorStage.getLabel());
>]