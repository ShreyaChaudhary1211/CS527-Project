[<Line: +		'angular',
>, <Line: +		'lodash',
>, <Line: +		'jquery',
>, <Line: +	],
>, <Line: +	function (angular, _, $) {
>, <Line: +		'use strict';
>, <Line: +		angular
>, <Line: +			.module('grafana.directives')
>, <Line: +			.directive('influxdbFuncEditor', function ($compile) {
>, <Line: +				var funcSpanTemplate = '<a gf-dropdown="functionMenu" class="dropdown-toggle" ' +
>, <Line: +					'data-toggle="dropdown">{{target.function}}</a><span>(</span>';
>, <Line: +				var paramTemplate = '<input type="text" style="display:none"' +
>, <Line: +					' class="input-mini grafana-function-param-input"></input>';
>, <Line: +				return {
>, <Line: +					restrict: 'A',
>, <Line: +					link: function postLink($scope, elem) {
>, <Line: +						var $funcLink = $(funcSpanTemplate);
>, <Line: +						$scope.functionMenu = _.map($scope.functions, function (func) {
>, <Line: +							return {
>, <Line: +								text: func,
>, <Line: +								click: "changeFunction('" + func + "');"
>, <Line: +							};
>, <Line: +						});
>, <Line: +						function clickFuncParam() {
>, <Line: +							/*jshint validthis:true */
>, <Line: +							var $link = $(this);
>, <Line: +							var $input = $link.next();
>, <Line: +							$input.val($scope.target.column);
>, <Line: +							$input.css('width', ($link.width() + 16) + 'px');
>, <Line: +							$link.hide();
>, <Line: +							$input.show();
>, <Line: +							$input.focus();
>, <Line: +							$input.select();
>, <Line: +							var typeahead = $input.data('typeahead');
>, <Line: +							if (typeahead) {
>, <Line: +								$input.val('');
>, <Line: +								typeahead.lookup();
>, <Line: +							}
>, <Line: +						}
>, <Line: +						function inputBlur() {
>, <Line: +							/*jshint validthis:true */
>, <Line: +							var $input = $(this);
>, <Line: +							var $link = $input.prev();
>, <Line: +							if ($input.val() !== '') {
>, <Line: +								$link.text($input.val());
>, <Line: +								$scope.target.column = $input.val();
>, <Line: +								$scope.$apply($scope.get_data);
>, <Line: +							}
>, <Line: +							$input.hide();
>, <Line: +							$link.show();
>, <Line: +						}
>, <Line: +						function inputKeyPress(e) {
>, <Line: +							/*jshint validthis:true */
>, <Line: +							if (e.which === 13) {
>, <Line: +								inputBlur.call(this);
>, <Line: +							}
>, <Line: +						}
>, <Line: +						function inputKeyDown() {
>, <Line: +							/*jshint validthis:true */
>, <Line: +							this.style.width = (3 + this.value.length) * 8 + 'px';
>, <Line: +						}
>, <Line: +						function addTypeahead($input) {
>, <Line: +							$input.attr('data-provide', 'typeahead');
>, <Line: +							$input.typeahead({
>, <Line: +								source: function () {
>, <Line: +									return $scope.listColumns.apply(null, arguments);
>, <Line: +								},
>, <Line: +								minLength: 0,
>, <Line: +								items: 20,
>, <Line: +								updater: function (value) {
>, <Line: +									setTimeout(function () {
>, <Line: +										inputBlur.call($input[0]);
>, <Line: +									}, 0);
>, <Line: +									return value;
>, <Line: +								}
>, <Line: +							});
>, <Line: +							var typeahead = $input.data('typeahead');
>, <Line: +							typeahead.lookup = function () {
>, <Line: +								var items;
>, <Line: +								this.query = this.$element.val() || '';
>, <Line: +								items = this.source(this.query, $.proxy(this.process, this));
>, <Line: +								return items ? this.process(items) : items;
>, <Line: +							};
>, <Line: +						}
>, <Line: +						function addElementsAndCompile() {
>, <Line: +							$funcLink.appendTo(elem);
>, <Line: +							var $paramLink = $('<a ng-click="" class="graphite-func-param-link">' + $scope.target.column + '</a>');
>, <Line: +							var $input = $(paramTemplate);
>, <Line: +							$paramLink.appendTo(elem);
>, <Line: +							$input.appendTo(elem);
>, <Line: +							$input.blur(inputBlur);
>, <Line: +							$input.keyup(inputKeyDown);
>, <Line: +							$input.keypress(inputKeyPress);
>, <Line: +							$paramLink.click(clickFuncParam);
>, <Line: +							addTypeahead($input);
>, <Line: +							$('<span>)</span>').appendTo(elem);
>, <Line: +							$compile(elem.contents())($scope);
>, <Line: +						}
>, <Line: +						addElementsAndCompile();
>, <Line: +					}
>, <Line: +				};
>, <Line: +			});
>, <Line: +	});
>]
[<Line: -  'angular',
>, <Line: -  'lodash',
>, <Line: -  'jquery',
>, <Line: -],
>, <Line: -function (angular, _, $) {
>, <Line: -  'use strict';
>, <Line: -  angular
>, <Line: -    .module('grafana.directives')
>, <Line: -    .directive('influxdbFuncEditor', function($compile) {
>, <Line: -      var funcSpanTemplate = '<a gf-dropdown="functionMenu" class="dropdown-toggle" ' +
>, <Line: -                             'data-toggle="dropdown">{{target.function}}</a><span>(</span>';
>, <Line: -      var paramTemplate = '<input type="text" style="display:none"' +
>, <Line: -                          ' class="input-mini grafana-function-param-input"></input>';
>, <Line: -      return {
>, <Line: -        restrict: 'A',
>, <Line: -        link: function postLink($scope, elem) {
>, <Line: -          var $funcLink = $(funcSpanTemplate);
>, <Line: -          $scope.functionMenu = _.map($scope.functions, function(func) {
>, <Line: -            return {
>, <Line: -              text: func,
>, <Line: -              click: "changeFunction('" + func + "');"
>, <Line: -            };
>, <Line: -          });
>, <Line: -          function clickFuncParam() {
>, <Line: -            /*jshint validthis:true */
>, <Line: -            var $link = $(this);
>, <Line: -            var $input = $link.next();
>, <Line: -            $input.val($scope.target.column);
>, <Line: -            $input.css('width', ($link.width() + 16) + 'px');
>, <Line: -            $link.hide();
>, <Line: -            $input.show();
>, <Line: -            $input.focus();
>, <Line: -            $input.select();
>, <Line: -            var typeahead = $input.data('typeahead');
>, <Line: -            if (typeahead) {
>, <Line: -              $input.val('');
>, <Line: -              typeahead.lookup();
>, <Line: -            }
>, <Line: -          }
>, <Line: -          function inputBlur() {
>, <Line: -            /*jshint validthis:true */
>, <Line: -            var $input = $(this);
>, <Line: -            var $link = $input.prev();
>, <Line: -            if ($input.val() !== '') {
>, <Line: -              $link.text($input.val());
>, <Line: -              $scope.target.column = $input.val();
>, <Line: -              $scope.$apply($scope.get_data);
>, <Line: -            }
>, <Line: -            $input.hide();
>, <Line: -            $link.show();
>, <Line: -          }
>, <Line: -          function inputKeyPress(e) {
>, <Line: -            /*jshint validthis:true */
>, <Line: -            if(e.which === 13) {
>, <Line: -              inputBlur.call(this);
>, <Line: -            }
>, <Line: -          }
>, <Line: -          function inputKeyDown() {
>, <Line: -            /*jshint validthis:true */
>, <Line: -            this.style.width = (3 + this.value.length) * 8 + 'px';
>, <Line: -          }
>, <Line: -          function addTypeahead($input) {
>, <Line: -            $input.attr('data-provide', 'typeahead');
>, <Line: -            $input.typeahead({
>, <Line: -              source: function () {
>, <Line: -                return $scope.listColumns.apply(null, arguments);
>, <Line: -              },
>, <Line: -              minLength: 0,
>, <Line: -              items: 20,
>, <Line: -              updater: function (value) {
>, <Line: -                setTimeout(function() {
>, <Line: -                  inputBlur.call($input[0]);
>, <Line: -                }, 0);
>, <Line: -                return value;
>, <Line: -              }
>, <Line: -            });
>, <Line: -            var typeahead = $input.data('typeahead');
>, <Line: -            typeahead.lookup = function () {
>, <Line: -              var items;
>, <Line: -              this.query = this.$element.val() || '';
>, <Line: -              items = this.source(this.query, $.proxy(this.process, this));
>, <Line: -              return items ? this.process(items) : items;
>, <Line: -            };
>, <Line: -          }
>, <Line: -          function addElementsAndCompile() {
>, <Line: -            $funcLink.appendTo(elem);
>, <Line: -            var $paramLink = $('<a ng-click="" class="graphite-func-param-link">' + $scope.target.column + '</a>');
>, <Line: -            var $input = $(paramTemplate);
>, <Line: -            $paramLink.appendTo(elem);
>, <Line: -            $input.appendTo(elem);
>, <Line: -            $input.blur(inputBlur);
>, <Line: -            $input.keyup(inputKeyDown);
>, <Line: -            $input.keypress(inputKeyPress);
>, <Line: -            $paramLink.click(clickFuncParam);
>, <Line: -            addTypeahead($input);
>, <Line: -            $('<span>)</span>').appendTo(elem);
>, <Line: -            $compile(elem.contents())($scope);
>, <Line: -          }
>, <Line: -          addElementsAndCompile();
>, <Line: -        }
>, <Line: -      };
>, <Line: -    });
>, <Line: -});
>]