[<Line: +import org.kairosdb.core.processingstage.metadata.FeaturePropertyMetadata;
>, <Line: +    public static List<FeaturePropertyMetadata> getPropertyMetadata(Class clazz)
>, <Line: +        List<FeaturePropertyMetadata> properties = new ArrayList<>();
>, <Line: +            if (field.getAnnotation(FeatureProperty.class) != null) {
>, <Line: +                FeatureProperty property = field.getAnnotation(FeatureProperty.class);
>, <Line: +                properties.add(new FeaturePropertyMetadata(field.getName(), type, options,
>, <Line: +            FeatureCompoundProperty annotation = field.getAnnotation(FeatureCompoundProperty.class);
>, <Line: +                properties.add(new FeaturePropertyMetadata(field.getName(), annotation, getPropertyMetadata(field.getType())));
>, <Line: +        properties.sort(new Comparator<FeaturePropertyMetadata>()
>, <Line: +            public int compare(FeaturePropertyMetadata o1, FeaturePropertyMetadata o2)
>]
[<Line: -import org.kairosdb.core.processingstage.metadata.QueryPropertyMetadata;
>, <Line: -    public static List<QueryPropertyMetadata> getPropertyMetadata(Class clazz)
>, <Line: -        List<QueryPropertyMetadata> properties = new ArrayList<>();
>, <Line: -            if (field.getAnnotation(QueryProperty.class) != null) {
>, <Line: -                QueryProperty property = field.getAnnotation(QueryProperty.class);
>, <Line: -                properties.add(new QueryPropertyMetadata(field.getName(), type, options,
>, <Line: -            QueryCompoundProperty annotation = field.getAnnotation(QueryCompoundProperty.class);
>, <Line: -                properties.add(new QueryPropertyMetadata(field.getName(), annotation, getPropertyMetadata(field.getType())));
>, <Line: -        properties.sort(new Comparator<QueryPropertyMetadata>()
>, <Line: -            public int compare(QueryPropertyMetadata o1, QueryPropertyMetadata o2)
>]