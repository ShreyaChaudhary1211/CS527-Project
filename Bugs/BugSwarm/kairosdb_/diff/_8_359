[<Line: +			else if (name == "bin") {
>, <Line: +				var bins = $(groupBy).find(".groupByBinValue").val().split(',');
>, <Line: +				if (bins.length < 1) {
>, <Line: +					showErrorMessage("Missing Bin Group By size. Values must be separated by commas.");
>, <Line: +					hasError = true;
>, <Line: +					return true;
>, <Line: +				}
>, <Line: +				metric.addGroupBy(new kairosdb.BinGroupBy(bins));
>, <Line: +	var time_zone = $(".timeZone").val();
>, <Line: +	if (time_zone != '')
>, <Line: +		query.setTimeZone(time_zone)
>, <Line: +		if (tabContainerMap[index] === count) {
>, <Line: +			tabContainerMap.splice(index, 1);
>, <Line: +		else if (newName == "bin") {
>, <Line: +			$groupBy = $("#groupByBinTemplate").clone();
>, <Line: +			$groupBy.removeAttr("id").appendTo(groupByContainer);
>, <Line: +			$groupBy.show();
>, <Line: +						if (value.length > 0) {
>, <Line: +							if (!first)
>, <Line: +								groupByMessage += ", ";
>, <Line: +							groupByMessage += key + '=' + value;
>, <Line: +							first = false;
>, <Line: +						}
>]
[<Line: -			else if(name == "bin"){
>, <Line: -			    var bins = $(groupBy).find(".groupByBinValue").val().split(',');
>, <Line: -			    if(bins.length < 1){
>, <Line: -			        showErrorMessage("Missing Bin Group By size. Values must be separated by commas.");
>, <Line: -                    hasError = true;
>, <Line: -                    return true;
>, <Line: -			    }
>, <Line: -			    metric.addGroupBy(new kairosdb.BinGroupBy(bins));
>, <Line: -		if(tabContainerMap[index]===count) {
>, <Line: -			tabContainerMap.splice(index,1);
>, <Line: -		else if(newName == "bin"){
>, <Line: -		    $groupBy = $("#groupByBinTemplate").clone();
>, <Line: -            $groupBy.removeAttr("id").appendTo(groupByContainer);
>, <Line: -            $groupBy.show();
>, <Line: -                        if (value.length > 0) {
>, <Line: -                            if (!first)
>, <Line: -                                groupByMessage += ", ";
>, <Line: -                            groupByMessage += key + '=' + value;
>, <Line: -                            first = false;
>, <Line: -                        }
>]