[<Line: +		'angular',
>, <Line: +		'kbn'
>, <Line: +	],
>, <Line: +	function (angular, kbn) {
>, <Line: +		'use strict';
>, <Line: +		angular
>, <Line: +			.module('grafana.directives')
>, <Line: +			.directive('tip', function ($compile) {
>, <Line: +				return {
>, <Line: +					restrict: 'E',
>, <Line: +					link: function (scope, elem, attrs) {
>, <Line: +						var _t = '<i class="grafana-tip icon-' + (attrs.icon || 'question-sign') + '" bs-tooltip="\'' +
>, <Line: +							kbn.addslashes(elem.text()) + '\'"></i>';
>, <Line: +						elem.replaceWith($compile(angular.element(_t))(scope));
>, <Line: +					}
>, <Line: +				};
>, <Line: +			});
>, <Line: +		angular
>, <Line: +			.module('grafana.directives')
>, <Line: +			.directive('editorOptBool', function ($compile) {
>, <Line: +				return {
>, <Line: +					restrict: 'E',
>, <Line: +					link: function (scope, elem, attrs) {
>, <Line: +						var ngchange = attrs.change ? (' ng-change="' + attrs.change + '"') : '';
>, <Line: +						var tip = attrs.tip ? (' <tip>' + attrs.tip + '</tip>') : '';
>, <Line: +						var showIf = attrs.showIf ? (' ng-show="' + attrs.showIf + '" ') : '';
>, <Line: +						var template = '<div class="editor-option text-center"' + showIf + '>' +
>, <Line: +							' <label for="' + attrs.model + '" class="small">' +
>, <Line: +							attrs.text + tip + '</label>' +
>, <Line: +							'<input class="cr1" id="' + attrs.model + '" type="checkbox" ' +
>, <Line: +							'       ng-model="' + attrs.model + '"' + ngchange +
>, <Line: +							'       ng-checked="' + attrs.model + '"></input>' +
>, <Line: +							' <label for="' + attrs.model + '" class="cr1"></label>';
>, <Line: +						elem.replaceWith($compile(angular.element(template))(scope));
>, <Line: +					}
>, <Line: +				};
>, <Line: +			});
>, <Line: +	});
>]
[<Line: -  'angular',
>, <Line: -  'kbn'
>, <Line: -],
>, <Line: -function (angular, kbn) {
>, <Line: -  'use strict';
>, <Line: -  angular
>, <Line: -    .module('grafana.directives')
>, <Line: -    .directive('tip', function($compile) {
>, <Line: -      return {
>, <Line: -        restrict: 'E',
>, <Line: -        link: function(scope, elem, attrs) {
>, <Line: -          var _t = '<i class="grafana-tip icon-'+(attrs.icon||'question-sign')+'" bs-tooltip="\''+
>, <Line: -            kbn.addslashes(elem.text())+'\'"></i>';
>, <Line: -          elem.replaceWith($compile(angular.element(_t))(scope));
>, <Line: -        }
>, <Line: -      };
>, <Line: -    });
>, <Line: -  angular
>, <Line: -    .module('grafana.directives')
>, <Line: -    .directive('editorOptBool', function($compile) {
>, <Line: -      return {
>, <Line: -        restrict: 'E',
>, <Line: -        link: function(scope, elem, attrs) {
>, <Line: -          var ngchange = attrs.change ? (' ng-change="' + attrs.change + '"') : '';
>, <Line: -          var tip = attrs.tip ? (' <tip>' + attrs.tip + '</tip>') : '';
>, <Line: -          var showIf = attrs.showIf ? (' ng-show="' + attrs.showIf + '" ') : '';
>, <Line: -          var template = '<div class="editor-option text-center"' + showIf + '>' +
>, <Line: -                         ' <label for="' + attrs.model + '" class="small">' +
>, <Line: -                           attrs.text + tip + '</label>' +
>, <Line: -                          '<input class="cr1" id="' + attrs.model + '" type="checkbox" ' +
>, <Line: -                          '       ng-model="' + attrs.model + '"' + ngchange +
>, <Line: -                          '       ng-checked="' + attrs.model + '"></input>' +
>, <Line: -                          ' <label for="' + attrs.model + '" class="cr1"></label>';
>, <Line: -          elem.replaceWith($compile(angular.element(template))(scope));
>, <Line: -        }
>, <Line: -      };
>, <Line: -    });
>, <Line: -});
>]