[<Line: +import org.kairosdb.core.aggregator.Aggregator;
>, <Line: +import org.kairosdb.core.aggregator.AggregatorFactory;
>, <Line: +import org.kairosdb.core.aggregator.AvgAggregator;
>, <Line: +import org.kairosdb.core.aggregator.CountAggregator;
>, <Line: +import org.kairosdb.core.aggregator.DataGapsMarkingAggregator;
>, <Line: +import org.kairosdb.core.aggregator.DiffAggregator;
>, <Line: +import org.kairosdb.core.aggregator.DivideAggregator;
>, <Line: +import org.kairosdb.core.aggregator.FilterAggregator;
>, <Line: +import org.kairosdb.core.aggregator.FirstAggregator;
>, <Line: +import org.kairosdb.core.aggregator.LastAggregator;
>, <Line: +import org.kairosdb.core.aggregator.LeastSquaresAggregator;
>, <Line: +import org.kairosdb.core.aggregator.MaxAggregator;
>, <Line: +import org.kairosdb.core.aggregator.MinAggregator;
>, <Line: +import org.kairosdb.core.aggregator.PercentileAggregator;
>, <Line: +import org.kairosdb.core.aggregator.RateAggregator;
>, <Line: +import org.kairosdb.core.aggregator.SamplerAggregator;
>, <Line: +import org.kairosdb.core.aggregator.SaveAsAggregator;
>, <Line: +import org.kairosdb.core.aggregator.ScaleAggregator;
>, <Line: +import org.kairosdb.core.aggregator.SmaAggregator;
>, <Line: +import org.kairosdb.core.aggregator.StdAggregator;
>, <Line: +import org.kairosdb.core.aggregator.SumAggregator;
>, <Line: +import org.kairosdb.core.aggregator.TrimAggregator;
>, <Line: +import org.kairosdb.core.datapoints.DoubleDataPointFactory;
>, <Line: +import org.kairosdb.core.datapoints.DoubleDataPointFactoryImpl;
>, <Line: +import org.kairosdb.core.datapoints.LegacyDataPointFactory;
>, <Line: +import org.kairosdb.core.datapoints.LongDataPointFactory;
>, <Line: +import org.kairosdb.core.datapoints.LongDataPointFactoryImpl;
>, <Line: +import org.kairosdb.core.datapoints.NullDataPointFactory;
>, <Line: +import org.kairosdb.core.datapoints.StringDataPointFactory;
>, <Line: +import org.kairosdb.core.groupby.BinGroupBy;
>, <Line: +import org.kairosdb.core.groupby.GroupBy;
>, <Line: +import org.kairosdb.core.groupby.GroupByFactory;
>, <Line: +import org.kairosdb.core.groupby.TagGroupBy;
>, <Line: +import org.kairosdb.core.groupby.TimeGroupBy;
>, <Line: +import org.kairosdb.core.groupby.ValueGroupBy;
>, <Line: +import org.kairosdb.core.processingstage.FeatureProcessingFactory;
>, <Line: +import org.kairosdb.core.processingstage.FeatureProcessor;
>, <Line: +		bind(new TypeLiteral<FeatureProcessingFactory<Aggregator>>() {}).to(AggregatorFactory.class).in(Singleton.class);
>, <Line: +		bind(new TypeLiteral<FeatureProcessingFactory<GroupBy>>() {}).to(GroupByFactory.class).in(Singleton.class);
>, <Line: +		bind(FeatureProcessor.class).to(KairosFeatureProcessor.class).in(Singleton.class);
>]
[<Line: -import org.kairosdb.core.aggregator.*;
>, <Line: -import org.kairosdb.core.datapoints.*;
>, <Line: -import org.kairosdb.core.groupby.*;
>, <Line: -import org.kairosdb.core.processingstage.QueryProcessingStageFactory;
>, <Line: -import org.kairosdb.core.processingstage.QueryProcessingChain;
>, <Line: -		bind(new TypeLiteral<QueryProcessingStageFactory<Aggregator>>() {}).to(AggregatorFactory.class).in(Singleton.class);
>, <Line: -		bind(new TypeLiteral<QueryProcessingStageFactory<GroupBy>>() {}).to(GroupByFactory.class).in(Singleton.class);
>, <Line: -		bind(QueryProcessingChain.class).to(KairosQueryProcessingChain.class).in(Singleton.class);
>]