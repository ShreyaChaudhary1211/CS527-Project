[<Line: +		'angular',
>, <Line: +		'lodash',
>, <Line: +		'moment',
>, <Line: +		'config',
>, <Line: +		'store',
>, <Line: +		'filesaver'
>, <Line: +	],
>, <Line: +	function (angular, _, moment, config, store) {
>, <Line: +		'use strict';
>, <Line: +		var module = angular.module('grafana.controllers');
>, <Line: +		module.controller('DashboardNavCtrl', function ($scope, $rootScope, alertSrv, $location, playlistSrv, datasourceSrv, timeSrv) {
>, <Line: +			$scope.init = function () {
>, <Line: +				$scope.db = datasourceSrv.getGrafanaDB();
>, <Line: +				$scope.onAppEvent('save-dashboard', $scope.saveDashboard);
>, <Line: +				$scope.onAppEvent('delete-dashboard', $scope.deleteDashboard);
>, <Line: +				$scope.onAppEvent('zoom-out', function () {
>, <Line: +					$scope.zoom(2);
>, <Line: +				});
>, <Line: +			};
>, <Line: +			$scope.set_default = function () {
>, <Line: +				store.set('grafanaDashboardDefault', $location.path());
>, <Line: +				alertSrv.set('Home Set', 'This page has been set as your default dashboard', 'success', 5000);
>, <Line: +			};
>, <Line: +			$scope.purge_default = function () {
>, <Line: +				store.delete('grafanaDashboardDefault');
>, <Line: +				alertSrv.set('Local Default Clear', 'Your default dashboard has been reset to the default', 'success', 5000);
>, <Line: +			};
>, <Line: +			$scope.saveForSharing = function () {
>, <Line: +				var clone = angular.copy($scope.dashboard);
>, <Line: +				clone.temp = true;
>, <Line: +				$scope.db.saveDashboard(clone)
>, <Line: +					.then(function (result) {
>, <Line: +						$scope.share = {url: result.url, title: result.title};
>, <Line: +					}, function (err) {
>, <Line: +						alertSrv.set('Save for sharing failed', err, 'error', 5000);
>, <Line: +					});
>, <Line: +			};
>, <Line: +			$scope.passwordCache = function (pwd) {
>, <Line: +				if (!window.sessionStorage) {
>, <Line: +					return null;
>, <Line: +				}
>, <Line: +				if (!pwd) {
>, <Line: +					return window.sessionStorage["grafanaAdminPassword"];
>, <Line: +				}
>, <Line: +				window.sessionStorage["grafanaAdminPassword"] = pwd;
>, <Line: +			};
>, <Line: +			$scope.isAdmin = function () {
>, <Line: +				if (!config.admin || !config.admin.password) {
>, <Line: +					return true;
>, <Line: +				}
>, <Line: +				if ($scope.passwordCache() === config.admin.password) {
>, <Line: +					return true;
>, <Line: +				}
>, <Line: +				var password = window.prompt("Admin password", "");
>, <Line: +				$scope.passwordCache(password);
>, <Line: +				if (password === config.admin.password) {
>, <Line: +					return true;
>, <Line: +				}
>, <Line: +				alertSrv.set('Save failed', 'Password incorrect', 'error');
>, <Line: +				return false;
>, <Line: +			};
>, <Line: +			$scope.openSearch = function () {
>, <Line: +				$scope.appEvent('show-dash-editor', {src: 'app/partials/search.html'});
>, <Line: +			};
>, <Line: +			$scope.saveDashboard = function () {
>, <Line: +				if (!$scope.isAdmin()) {
>, <Line: +					return false;
>, <Line: +				}
>, <Line: +				var clone = angular.copy($scope.dashboard);
>, <Line: +				$scope.db.saveDashboard(clone)
>, <Line: +					.then(function (result) {
>, <Line: +						$scope.appEvent('alert-success', ['Dashboard saved', 'Saved as ' + result.title]);
>, <Line: +						if (result.url !== $location.path()) {
>, <Line: +							$location.search({});
>, <Line: +							$location.path(result.url);
>, <Line: +						}
>, <Line: +						$rootScope.$emit('dashboard-saved', $scope.dashboard);
>, <Line: +					}, function (err) {
>, <Line: +						$scope.appEvent('alert-error', ['Save failed', err]);
>, <Line: +					});
>, <Line: +			};
>, <Line: +			$scope.deleteDashboard = function (evt, options) {
>, <Line: +				if (!$scope.isAdmin()) {
>, <Line: +					return false;
>, <Line: +				}
>, <Line: +				$scope.appEvent('confirm-modal', {
>, <Line: +					title: 'Delete dashboard',
>, <Line: +					text: 'Do you want to delete dashboard ' + options.title + '?',
>, <Line: +					onConfirm: function () {
>, <Line: +						$scope.deleteDashboardConfirmed(options);
>, <Line: +					}
>, <Line: +				});
>, <Line: +			};
>, <Line: +			$scope.deleteDashboardConfirmed = function (options) {
>, <Line: +				var id = options.id;
>, <Line: +				$scope.db.deleteDashboard(id).then(function (id) {
>, <Line: +					$scope.appEvent('dashboard-deleted', id);
>, <Line: +					$scope.appEvent('alert-success', ['Dashboard Deleted', id + ' has been deleted']);
>, <Line: +				}, function (err) {
>, <Line: +					$scope.appEvent('alert-error', ['Deleted failed', err]);
>, <Line: +				});
>, <Line: +			};
>, <Line: +			$scope.exportDashboard = function () {
>, <Line: +				var blob = new Blob([angular.toJson($scope.dashboard, true)], {type: "application/json;charset=utf-8"});
>, <Line: +				window.saveAs(blob, $scope.dashboard.title + '-' + new Date().getTime());
>, <Line: +			};
>, <Line: +			$scope.zoom = function (factor) {
>, <Line: +				var range = timeSrv.timeRange();
>, <Line: +				var timespan = (range.to.valueOf() - range.from.valueOf());
>, <Line: +				var center = range.to.valueOf() - timespan / 2;
>, <Line: +				var to = (center + (timespan * factor) / 2);
>, <Line: +				var from = (center - (timespan * factor) / 2);
>, <Line: +				if (to > Date.now() && range.to <= Date.now()) {
>, <Line: +					var offset = to - Date.now();
>, <Line: +					from = from - offset;
>, <Line: +					to = Date.now();
>, <Line: +				}
>, <Line: +				timeSrv.setTime({
>, <Line: +					from: moment.utc(from).toDate(),
>, <Line: +					to: moment.utc(to).toDate(),
>, <Line: +				});
>, <Line: +			};
>, <Line: +			$scope.styleUpdated = function () {
>, <Line: +				$scope.grafana.style = $scope.dashboard.style;
>, <Line: +			};
>, <Line: +			$scope.editJson = function () {
>, <Line: +				$scope.appEvent('show-json-editor', {object: $scope.dashboard});
>, <Line: +			};
>, <Line: +			$scope.openSaveDropdown = function () {
>, <Line: +				$scope.isFavorite = playlistSrv.isCurrentFavorite($scope.dashboard);
>, <Line: +				$scope.saveDropdownOpened = true;
>, <Line: +			};
>, <Line: +			$scope.markAsFavorite = function () {
>, <Line: +				playlistSrv.markAsFavorite($scope.dashboard);
>, <Line: +				$scope.isFavorite = true;
>, <Line: +			};
>, <Line: +			$scope.removeAsFavorite = function () {
>, <Line: +				playlistSrv.removeAsFavorite($scope.dashboard);
>, <Line: +				$scope.isFavorite = false;
>, <Line: +			};
>, <Line: +			$scope.stopPlaylist = function () {
>, <Line: +				playlistSrv.stop(1);
>, <Line: +			};
>, <Line: +		});
>, <Line: +	});
>]
[<Line: -  'angular',
>, <Line: -  'lodash',
>, <Line: -  'moment',
>, <Line: -  'config',
>, <Line: -  'store',
>, <Line: -  'filesaver'
>, <Line: -],
>, <Line: -function (angular, _, moment, config, store) {
>, <Line: -  'use strict';
>, <Line: -  var module = angular.module('grafana.controllers');
>, <Line: -  module.controller('DashboardNavCtrl', function($scope, $rootScope, alertSrv, $location, playlistSrv, datasourceSrv, timeSrv) {
>, <Line: -    $scope.init = function() {
>, <Line: -      $scope.db = datasourceSrv.getGrafanaDB();
>, <Line: -      $scope.onAppEvent('save-dashboard', $scope.saveDashboard);
>, <Line: -      $scope.onAppEvent('delete-dashboard', $scope.deleteDashboard);
>, <Line: -      $scope.onAppEvent('zoom-out', function() {
>, <Line: -        $scope.zoom(2);
>, <Line: -      });
>, <Line: -    };
>, <Line: -    $scope.set_default = function() {
>, <Line: -      store.set('grafanaDashboardDefault', $location.path());
>, <Line: -      alertSrv.set('Home Set','This page has been set as your default dashboard','success',5000);
>, <Line: -    };
>, <Line: -    $scope.purge_default = function() {
>, <Line: -      store.delete('grafanaDashboardDefault');
>, <Line: -      alertSrv.set('Local Default Clear','Your default dashboard has been reset to the default','success', 5000);
>, <Line: -    };
>, <Line: -    $scope.saveForSharing = function() {
>, <Line: -      var clone = angular.copy($scope.dashboard);
>, <Line: -      clone.temp = true;
>, <Line: -      $scope.db.saveDashboard(clone)
>, <Line: -        .then(function(result) {
>, <Line: -          $scope.share = { url: result.url, title: result.title };
>, <Line: -        }, function(err) {
>, <Line: -          alertSrv.set('Save for sharing failed', err, 'error',5000);
>, <Line: -        });
>, <Line: -    };
>, <Line: -    $scope.passwordCache = function(pwd) {
>, <Line: -      if (!window.sessionStorage) { return null; }
>, <Line: -      if (!pwd) { return window.sessionStorage["grafanaAdminPassword"]; }
>, <Line: -      window.sessionStorage["grafanaAdminPassword"] = pwd;
>, <Line: -    };
>, <Line: -    $scope.isAdmin = function() {
>, <Line: -      if (!config.admin || !config.admin.password) { return true; }
>, <Line: -      if ($scope.passwordCache() === config.admin.password) { return true; }
>, <Line: -      var password = window.prompt("Admin password", "");
>, <Line: -      $scope.passwordCache(password);
>, <Line: -      if (password === config.admin.password) { return true; }
>, <Line: -      alertSrv.set('Save failed', 'Password incorrect', 'error');
>, <Line: -      return false;
>, <Line: -    };
>, <Line: -    $scope.openSearch = function() {
>, <Line: -      $scope.appEvent('show-dash-editor', { src: 'app/partials/search.html' });
>, <Line: -    };
>, <Line: -    $scope.saveDashboard = function() {
>, <Line: -      if (!$scope.isAdmin()) { return false; }
>, <Line: -      var clone = angular.copy($scope.dashboard);
>, <Line: -      $scope.db.saveDashboard(clone)
>, <Line: -        .then(function(result) {
>, <Line: -          $scope.appEvent('alert-success', ['Dashboard saved', 'Saved as ' + result.title]);
>, <Line: -          if (result.url !== $location.path()) {
>, <Line: -            $location.search({});
>, <Line: -            $location.path(result.url);
>, <Line: -          }
>, <Line: -          $rootScope.$emit('dashboard-saved', $scope.dashboard);
>, <Line: -        }, function(err) {
>, <Line: -          $scope.appEvent('alert-error', ['Save failed', err]);
>, <Line: -        });
>, <Line: -    };
>, <Line: -    $scope.deleteDashboard = function(evt, options) {
>, <Line: -      if (!$scope.isAdmin()) { return false; }
>, <Line: -      $scope.appEvent('confirm-modal', {
>, <Line: -        title: 'Delete dashboard',
>, <Line: -        text: 'Do you want to delete dashboard ' + options.title + '?',
>, <Line: -        onConfirm: function() {
>, <Line: -          $scope.deleteDashboardConfirmed(options);
>, <Line: -        }
>, <Line: -      });
>, <Line: -    };
>, <Line: -    $scope.deleteDashboardConfirmed = function(options) {
>, <Line: -      var id = options.id;
>, <Line: -      $scope.db.deleteDashboard(id).then(function(id) {
>, <Line: -        $scope.appEvent('dashboard-deleted', id);
>, <Line: -        $scope.appEvent('alert-success', ['Dashboard Deleted', id + ' has been deleted']);
>, <Line: -      }, function(err) {
>, <Line: -        $scope.appEvent('alert-error', ['Deleted failed', err]);
>, <Line: -      });
>, <Line: -    };
>, <Line: -    $scope.exportDashboard = function() {
>, <Line: -      var blob = new Blob([angular.toJson($scope.dashboard, true)], { type: "application/json;charset=utf-8" });
>, <Line: -      window.saveAs(blob, $scope.dashboard.title + '-' + new Date().getTime());
>, <Line: -    };
>, <Line: -    $scope.zoom = function(factor) {
>, <Line: -      var range = timeSrv.timeRange();
>, <Line: -      var timespan = (range.to.valueOf() - range.from.valueOf());
>, <Line: -      var center = range.to.valueOf() - timespan/2;
>, <Line: -      var to = (center + (timespan*factor)/2);
>, <Line: -      var from = (center - (timespan*factor)/2);
>, <Line: -      if(to > Date.now() && range.to <= Date.now()) {
>, <Line: -        var offset = to - Date.now();
>, <Line: -        from = from - offset;
>, <Line: -        to = Date.now();
>, <Line: -      }
>, <Line: -      timeSrv.setTime({
>, <Line: -        from: moment.utc(from).toDate(),
>, <Line: -        to: moment.utc(to).toDate(),
>, <Line: -      });
>, <Line: -    };
>, <Line: -    $scope.styleUpdated = function() {
>, <Line: -      $scope.grafana.style = $scope.dashboard.style;
>, <Line: -    };
>, <Line: -    $scope.editJson = function() {
>, <Line: -      $scope.appEvent('show-json-editor', { object: $scope.dashboard });
>, <Line: -    };
>, <Line: -    $scope.openSaveDropdown = function() {
>, <Line: -      $scope.isFavorite = playlistSrv.isCurrentFavorite($scope.dashboard);
>, <Line: -      $scope.saveDropdownOpened = true;
>, <Line: -    };
>, <Line: -    $scope.markAsFavorite = function() {
>, <Line: -      playlistSrv.markAsFavorite($scope.dashboard);
>, <Line: -      $scope.isFavorite = true;
>, <Line: -    };
>, <Line: -    $scope.removeAsFavorite = function() {
>, <Line: -      playlistSrv.removeAsFavorite($scope.dashboard);
>, <Line: -      $scope.isFavorite = false;
>, <Line: -    };
>, <Line: -    $scope.stopPlaylist = function() {
>, <Line: -      playlistSrv.stop(1);
>, <Line: -    };
>, <Line: -  });
>, <Line: -});
>]