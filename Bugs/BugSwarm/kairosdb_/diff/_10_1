[<Line: +========
>, <Line: +Metadata
>, <Line: +========
>, <Line: +The Metadata Rest API is a way to write data to the datastore in name/value pairs. Data is written
>, <Line: +separate from the time series data. Metadata is partitioned by a service name. A service partition
>, <Line: +can have multiple service keys. Each service key holds name/value pairs. A value is a string.
>, <Line: +**Example**
>, <Line: +Assume you have a service that maintains metadata about each metric. Let's call it the Metric Service.
>, <Line: +Your service associates each metric with a description, owner, and the unit type. The service name
>, <Line: +is "Metric Service", the metric is the service key and the name/value pairs are the owner, unit, and
>, <Line: +description and their values.
>, <Line: +**Metric Service**
>, <Line: ++------------------------+----------+---------+---------------------+
>, <Line: +| Metric                 | Owner    | Unit    | Description         |
>, <Line: ++========================+==========+=========+=====================+
>, <Line: +| disk.available         | OPs team | MB      | Available disk space|
>, <Line: ++------------------------+----------+---------+---------------------+
>, <Line: +| foo.throughput         | Foo team | Bytes   |  Number of bytes    |
>, <Line: ++------------------------+----------+---------+---------------------+
>, <Line: +--------------------------------------------------------------------------------------------
>, <Line: +=============
>, <Line: +Add the Value
>, <Line: +=============
>, <Line: +Add a value to service metadata.
>, <Line: +------
>, <Line: +Method
>, <Line: +------
>, <Line: +  POST
>, <Line: +-------
>, <Line: +Request
>, <Line: +-------
>, <Line: +  http://[host]:[port]/api/v1/metadata/{service}/{serviceKey}/{key}
>, <Line: +----
>, <Line: +Body
>, <Line: +----
>, <Line: +::
>, <Line: +  <The Value>
>, <Line: +-----------
>, <Line: +Description
>, <Line: +-----------
>, <Line: +Writes the value for the given service, service key, and key.
>, <Line: +*service*
>, <Line: +The name of the service.
>, <Line: +*serviceKey*
>, <Line: +The name of the service key.
>, <Line: +*key*
>, <Line: +The name of the key.
>, <Line: +*value*
>, <Line: +The value to store. The value must be a string.
>, <Line: +--------
>, <Line: +Response
>, <Line: +--------
>, <Line: +*Success*
>, <Line: +  Returns 204 when successful.
>, <Line: +*Failure*
>, <Line: +  The response will be 500 Internal Server Error if an error occurs writing the value.
>, <Line: +  ::
>, <Line: +    {
>, <Line: +        "errors": [
>, <Line: +            "Failed to add value"
>, <Line: +        ]
>, <Line: +    }
>, <Line: +=============
>, <Line: +Get the Value
>, <Line: +=============
>, <Line: +Returns the value for the given service.
>, <Line: +------
>, <Line: +Method
>, <Line: +------
>, <Line: +  GET
>, <Line: +-------
>, <Line: +Request
>, <Line: +-------
>, <Line: +  http://[host]:[port]/api/v1/metadata/{service}/{serviceKey}/{key}
>, <Line: +----
>, <Line: +Body
>, <Line: +----
>, <Line: +  None
>, <Line: +-----------
>, <Line: +Description
>, <Line: +-----------
>, <Line: +Returns the value for the given service, service key, and key if it exists or an empty response if it
>, <Line: +does not exist.
>, <Line: +*service*
>, <Line: +The name of the service.
>, <Line: +*serviceKey*
>, <Line: +The name of the service key.
>, <Line: +*key*
>, <Line: +The name of the key.
>, <Line: +--------
>, <Line: +Response
>, <Line: +--------
>, <Line: +*Success*
>, <Line: +  The response contains the value or an empty string if not found. Returns 200 when successful.
>, <Line: +*Failure*
>, <Line: +  The response will be 500 Internal Server Error if an error occurs writing the value.
>, <Line: +  ::
>, <Line: +    {
>, <Line: +        "errors": [
>, <Line: +            "Failed to retrieve value"
>, <Line: +        ]
>, <Line: +    }
>, <Line: +=================
>, <Line: +List Service Keys
>, <Line: +=================
>, <Line: +Returns all service keys for the given service
>, <Line: +------
>, <Line: +Method
>, <Line: +------
>, <Line: +  GET
>, <Line: +-------
>, <Line: +Request
>, <Line: +-------
>, <Line: +  http://[host]:[port]/api/v1/metadata/{service}
>, <Line: +----
>, <Line: +Body
>, <Line: +----
>, <Line: +  None
>, <Line: +-----------
>, <Line: +Description
>, <Line: +-----------
>, <Line: +Returns all keys for the given service or an empty list if no service keys exist for the given service.
>, <Line: +*service*
>, <Line: +The name of the service.
>, <Line: +--------
>, <Line: +Response
>, <Line: +--------
>, <Line: +*Success*
>, <Line: +  ::
>, <Line: +     {
>, <Line: +        "results":["service_key_1", "service_key_2"]
>, <Line: +     }
>, <Line: +  The response contains a list of service keys for the given service or an empty string if not found. Returns 200 when successful.
>, <Line: +*Failure*
>, <Line: +  The response will be 500 Internal Server Error if an error occurs writing the value.
>, <Line: +  ::
>, <Line: +    {
>, <Line: +        "errors": [
>, <Line: +            "Failed to get keys"
>, <Line: +        ]
>, <Line: +    }
>, <Line: +=========
>, <Line: +List Keys
>, <Line: +=========
>, <Line: +Returns all keys for the given service and service key.
>, <Line: +------
>, <Line: +Method
>, <Line: +------
>, <Line: +  GET
>, <Line: +-------
>, <Line: +Request
>, <Line: +-------
>, <Line: +  http://[host]:[port]/api/v1/metadata/{service}/{serviceKey}
>, <Line: +----
>, <Line: +Body
>, <Line: +----
>, <Line: +  None
>, <Line: +-----------
>, <Line: +Description
>, <Line: +-----------
>, <Line: +Returns all keys for the given service key or an empty list if no keys exist.
>, <Line: +*service*
>, <Line: +The name of the service.
>, <Line: +*serviceKey*
>, <Line: +The name of the service key.
>, <Line: +--------
>, <Line: +Response
>, <Line: +--------
>, <Line: +*Success*
>, <Line: +  ::
>, <Line: +     {
>, <Line: +        "results":["key_1", "key_2"]
>, <Line: +     }
>, <Line: +  The response contains a list of keys for the given service key or an empty string if not found. Returns 200 when successful.
>, <Line: +*Failure*
>, <Line: +  The response will be 500 Internal Server Error if an error occurs writing the value.
>, <Line: +  ::
>, <Line: +    {
>, <Line: +        "errors": [
>, <Line: +            "Failed to get keys"
>, <Line: +        ]
>, <Line: +    }
>, <Line: +==========
>, <Line: +Delete Key
>, <Line: +==========
>, <Line: +Deletes the specified key.
>, <Line: +------
>, <Line: +Method
>, <Line: +------
>, <Line: +  DELETE
>, <Line: +-------
>, <Line: +Request
>, <Line: +-------
>, <Line: +  http://[host]:[port]/api/v1/metadata/{service}/{serviceKey}/{key}
>, <Line: +----
>, <Line: +Body
>, <Line: +----
>, <Line: +  None
>, <Line: +-----------
>, <Line: +Description
>, <Line: +-----------
>, <Line: +Returns all keys for the given service key or an empty list if no keys exist.
>, <Line: +*service*
>, <Line: +The name of the service.
>, <Line: +*serviceKey*
>, <Line: +The name of the service key.
>, <Line: +--------
>, <Line: +Response
>, <Line: +--------
>, <Line: +*Success*
>, <Line: +  ::
>, <Line: +     {
>, <Line: +        "results":["key_1", "key_2"]
>, <Line: +     }
>, <Line: +  The response contains a list of keys for the given service key or an empty string if not found. Returns 200 when successful.
>, <Line: +*Failure*
>, <Line: +  The response will be 500 Internal Server Error if an error occurs writing the value.
>, <Line: +  ::
>, <Line: +    {
>, <Line: +        "errors": [
>, <Line: +            "Failed to delete key"
>, <Line: +        ]
>, <Line: +    }
>]
[]