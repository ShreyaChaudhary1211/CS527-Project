[<Line: +import com.google.common.eventbus.EventBus;
>, <Line: +import org.kairosdb.events.DataPointEvent;
>, <Line: +	private EventBus m_eventBus;
>, <Line: +	public MetricReporterService(EventBus eventBus,
>, <Line: +		m_eventBus = checkNotNull(eventBus);
>, <Line: +						m_eventBus.post(new DataPointEvent(dataPointSet.getName(),
>, <Line: +								dataPointSet.getTags(), dataPoint, 0));
>, <Line: +			m_eventBus.post(new DataPointEvent("kairosdb.jvm.free_memory",
>, <Line: +					tags, m_dataPointFactory.createDataPoint(timestamp, runtime.freeMemory()), 0));
>, <Line: +			m_eventBus.post(new DataPointEvent("kairosdb.jvm.total_memory",
>, <Line: +					tags, m_dataPointFactory.createDataPoint(timestamp, runtime.totalMemory()), 0));
>, <Line: +			m_eventBus.post(new DataPointEvent("kairosdb.jvm.max_memory",
>, <Line: +					tags, m_dataPointFactory.createDataPoint(timestamp, runtime.maxMemory()), 0));
>, <Line: +			m_eventBus.post(new DataPointEvent("kairosdb.jvm.thread_count",
>, <Line: +					tags, m_dataPointFactory.createDataPoint(timestamp, getThreadCount()), 0));
>]
[<Line: -	public MetricReporterService(KairosDatastore datastore,
>, <Line: -		m_datastore = checkNotNull(datastore);
>, <Line: -						m_datastore.putDataPoint(dataPointSet.getName(),
>, <Line: -								dataPointSet.getTags(), dataPoint);
>, <Line: -			m_datastore.putDataPoint("kairosdb.jvm.free_memory",
>, <Line: -					tags, m_dataPointFactory.createDataPoint(timestamp, runtime.freeMemory()));
>, <Line: -			m_datastore.putDataPoint("kairosdb.jvm.total_memory",
>, <Line: -					tags, m_dataPointFactory.createDataPoint(timestamp, runtime.totalMemory()));
>, <Line: -			m_datastore.putDataPoint("kairosdb.jvm.max_memory",
>, <Line: -					tags, m_dataPointFactory.createDataPoint(timestamp, runtime.maxMemory()));
>, <Line: -			m_datastore.putDataPoint("kairosdb.jvm.thread_count",
>, <Line: -					tags, m_dataPointFactory.createDataPoint(timestamp, getThreadCount()));
>]