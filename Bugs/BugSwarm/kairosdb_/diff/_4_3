[]
[<Line: -//
>, <Line: -// DataPointListenerProvider.java
>, <Line: -//
>, <Line: -// Copyright 2013, NextPage Inc. All rights reserved.
>, <Line: -//
>, <Line: -package org.kairosdb.core;
>, <Line: -import com.google.inject.*;
>, <Line: -import org.kairosdb.core.aggregator.Aggregator;
>, <Line: -import org.kairosdb.core.aggregator.annotation.AggregatorName;
>, <Line: -import java.util.ArrayList;
>, <Line: -import java.util.Collections;
>, <Line: -import java.util.List;
>, <Line: -import java.util.Map;
>, <Line: -public class DataPointListenerProvider implements Provider<List<DataPointListener>>
>, <Line: -{
>, <Line: -	private List<DataPointListener> m_listeners = new ArrayList<DataPointListener>();
>, <Line: -	@Inject
>, <Line: -	public DataPointListenerProvider(Injector injector)
>, <Line: -	{
>, <Line: -		Map<Key<?>, Binding<?>> bindings = injector.getAllBindings();
>, <Line: -		for (Key<?> key : bindings.keySet())
>, <Line: -		{
>, <Line: -			Class bindingClass = key.getTypeLiteral().getRawType();
>, <Line: -			if (DataPointListener.class.isAssignableFrom(bindingClass))
>, <Line: -			{
>, <Line: -				DataPointListener listener = (DataPointListener)injector.getInstance(bindingClass);
>, <Line: -				m_listeners.add(listener);
>, <Line: -			}
>, <Line: -		}
>, <Line: -	}
>, <Line: -	@Override
>, <Line: -	public List<DataPointListener> get()
>, <Line: -	{
>, <Line: -		return (Collections.unmodifiableList(m_listeners));
>, <Line: -	}
>, <Line: -}
>]