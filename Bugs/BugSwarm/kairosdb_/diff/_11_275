[<Line: +	var config = {
>, <Line: +		pkg: grunt.file.readJSON('package.json'),
>, <Line: +		baseDir: '.',
>, <Line: +		srcDir: 'src',
>, <Line: +		destDir: 'dist',
>, <Line: +		tempDir: 'tmp',
>, <Line: +		docsDir: 'docs/'
>, <Line: +	};
>, <Line: +	// load plugins
>, <Line: +	require('load-grunt-tasks')(grunt);
>, <Line: +	// load task definitions
>, <Line: +	grunt.loadTasks('tasks');
>, <Line: +	// Utility function to load plugin settings into config
>, <Line: +	function loadConfig(config, path) {
>, <Line: +		require('glob').sync('*', {cwd: path}).forEach(function (option) {
>, <Line: +			var key = option.replace(/\.js$/, '');
>, <Line: +			// If key already exists, extend it. It is your responsibility to avoid naming collisions
>, <Line: +			config[key] = config[key] || {};
>, <Line: +			grunt.util._.extend(config[key], require(path + option)(config, grunt));
>, <Line: +		});
>, <Line: +		// technically not required
>, <Line: +		return config;
>, <Line: +	}
>, <Line: +	// Merge that object with what with whatever we have here
>, <Line: +	loadConfig(config, './tasks/options/');
>, <Line: +	// pass the config to grunt
>, <Line: +	grunt.initConfig(config);
>]
[<Line: -  var config = {
>, <Line: -    pkg: grunt.file.readJSON('package.json'),
>, <Line: -    baseDir: '.',
>, <Line: -    srcDir: 'src',
>, <Line: -    destDir: 'dist',
>, <Line: -    tempDir: 'tmp',
>, <Line: -    docsDir: 'docs/'
>, <Line: -  };
>, <Line: -  // load plugins
>, <Line: -  require('load-grunt-tasks')(grunt);
>, <Line: -  // load task definitions
>, <Line: -  grunt.loadTasks('tasks');
>, <Line: -  // Utility function to load plugin settings into config
>, <Line: -  function loadConfig(config,path) {
>, <Line: -    require('glob').sync('*', {cwd: path}).forEach(function(option) {
>, <Line: -      var key = option.replace(/\.js$/,'');
>, <Line: -      // If key already exists, extend it. It is your responsibility to avoid naming collisions
>, <Line: -      config[key] = config[key] || {};
>, <Line: -      grunt.util._.extend(config[key], require(path + option)(config,grunt));
>, <Line: -    });
>, <Line: -    // technically not required
>, <Line: -    return config;
>, <Line: -  }
>, <Line: -  // Merge that object with what with whatever we have here
>, <Line: -  loadConfig(config,'./tasks/options/');
>, <Line: -  // pass the config to grunt
>, <Line: -  grunt.initConfig(config);
>]