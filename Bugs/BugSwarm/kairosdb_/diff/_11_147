[<Line: +		'angular',
>, <Line: +		'app',
>, <Line: +		'lodash',
>, <Line: +		'kbn'
>, <Line: +	],
>, <Line: +	function (angular, app, _, kbn) {
>, <Line: +		'use strict';
>, <Line: +		var module = angular.module('grafana.controllers');
>, <Line: +		module.controller('GraphiteImportCtrl', function ($scope, $rootScope, $timeout, datasourceSrv, $location) {
>, <Line: +			$scope.init = function () {
>, <Line: +				$scope.datasources = datasourceSrv.getMetricSources();
>, <Line: +				$scope.setDatasource(null);
>, <Line: +			};
>, <Line: +			$scope.setDatasource = function (datasource) {
>, <Line: +				$scope.datasource = datasourceSrv.get(datasource);
>, <Line: +				if (!$scope.datasource) {
>, <Line: +					$scope.error = "Cannot find datasource " + datasource;
>, <Line: +					return;
>, <Line: +				}
>, <Line: +			};
>, <Line: +			$scope.listAll = function (query) {
>, <Line: +				delete $scope.error;
>, <Line: +				$scope.datasource.listDashboards(query)
>, <Line: +					.then(function (results) {
>, <Line: +						$scope.dashboards = results;
>, <Line: +					})
>, <Line: +					.then(null, function (err) {
>, <Line: +						$scope.error = err.message || 'Error while fetching list of dashboards';
>, <Line: +					});
>, <Line: +			};
>, <Line: +			$scope.import = function (dashName) {
>, <Line: +				delete $scope.error;
>, <Line: +				$scope.datasource.loadDashboard(dashName)
>, <Line: +					.then(function (results) {
>, <Line: +						if (!results.data || !results.data.state) {
>, <Line: +							throw {message: 'no dashboard state received from graphite'};
>, <Line: +						}
>, <Line: +						graphiteToGrafanaTranslator(results.data.state, $scope.datasource.name);
>, <Line: +					})
>, <Line: +					.then(null, function (err) {
>, <Line: +						$scope.error = err.message || 'Failed to import dashboard';
>, <Line: +					});
>, <Line: +			};
>, <Line: +			function graphiteToGrafanaTranslator(state, datasource) {
>, <Line: +				var graphsPerRow = 2;
>, <Line: +				var rowHeight = 300;
>, <Line: +				var rowTemplate;
>, <Line: +				var currentRow;
>, <Line: +				var panel;
>, <Line: +				rowTemplate = {
>, <Line: +					title: '',
>, <Line: +					panels: [],
>, <Line: +					height: rowHeight
>, <Line: +				};
>, <Line: +				currentRow = angular.copy(rowTemplate);
>, <Line: +				var newDashboard = angular.copy($scope.dashboard);
>, <Line: +				newDashboard.rows = [];
>, <Line: +				newDashboard.title = state.name;
>, <Line: +				newDashboard.rows.push(currentRow);
>, <Line: +				_.each(state.graphs, function (graph, index) {
>, <Line: +					if (currentRow.panels.length === graphsPerRow) {
>, <Line: +						currentRow = angular.copy(rowTemplate);
>, <Line: +						newDashboard.rows.push(currentRow);
>, <Line: +					}
>, <Line: +					panel = {
>, <Line: +						type: 'graph',
>, <Line: +						span: 12 / graphsPerRow,
>, <Line: +						title: graph[1].title,
>, <Line: +						targets: [],
>, <Line: +						datasource: datasource,
>, <Line: +						id: index + 1
>, <Line: +					};
>, <Line: +					_.each(graph[1].target, function (target) {
>, <Line: +						panel.targets.push({
>, <Line: +							target: target
>, <Line: +						});
>, <Line: +					});
>, <Line: +					currentRow.panels.push(panel);
>, <Line: +				});
>, <Line: +				window.grafanaImportDashboard = newDashboard;
>, <Line: +				$location.path('/dashboard/import/' + kbn.slugifyForUrl(newDashboard.title));
>, <Line: +				$scope.dismiss();
>, <Line: +			}
>, <Line: +		});
>, <Line: +	});
>]
[<Line: -  'angular',
>, <Line: -  'app',
>, <Line: -  'lodash',
>, <Line: -  'kbn'
>, <Line: -],
>, <Line: -function (angular, app, _, kbn) {
>, <Line: -  'use strict';
>, <Line: -  var module = angular.module('grafana.controllers');
>, <Line: -  module.controller('GraphiteImportCtrl', function($scope, $rootScope, $timeout, datasourceSrv, $location) {
>, <Line: -    $scope.init = function() {
>, <Line: -      $scope.datasources = datasourceSrv.getMetricSources();
>, <Line: -      $scope.setDatasource(null);
>, <Line: -    };
>, <Line: -    $scope.setDatasource = function(datasource) {
>, <Line: -      $scope.datasource = datasourceSrv.get(datasource);
>, <Line: -      if (!$scope.datasource) {
>, <Line: -        $scope.error = "Cannot find datasource " + datasource;
>, <Line: -        return;
>, <Line: -      }
>, <Line: -    };
>, <Line: -    $scope.listAll = function(query) {
>, <Line: -      delete $scope.error;
>, <Line: -      $scope.datasource.listDashboards(query)
>, <Line: -        .then(function(results) {
>, <Line: -          $scope.dashboards = results;
>, <Line: -        })
>, <Line: -        .then(null, function(err) {
>, <Line: -          $scope.error = err.message || 'Error while fetching list of dashboards';
>, <Line: -        });
>, <Line: -    };
>, <Line: -    $scope.import = function(dashName) {
>, <Line: -      delete $scope.error;
>, <Line: -      $scope.datasource.loadDashboard(dashName)
>, <Line: -        .then(function(results) {
>, <Line: -          if (!results.data || !results.data.state) {
>, <Line: -            throw { message: 'no dashboard state received from graphite' };
>, <Line: -          }
>, <Line: -          graphiteToGrafanaTranslator(results.data.state, $scope.datasource.name);
>, <Line: -        })
>, <Line: -        .then(null, function(err) {
>, <Line: -          $scope.error = err.message || 'Failed to import dashboard';
>, <Line: -        });
>, <Line: -    };
>, <Line: -    function graphiteToGrafanaTranslator(state, datasource) {
>, <Line: -      var graphsPerRow = 2;
>, <Line: -      var rowHeight = 300;
>, <Line: -      var rowTemplate;
>, <Line: -      var currentRow;
>, <Line: -      var panel;
>, <Line: -      rowTemplate = {
>, <Line: -        title: '',
>, <Line: -        panels: [],
>, <Line: -        height: rowHeight
>, <Line: -      };
>, <Line: -      currentRow = angular.copy(rowTemplate);
>, <Line: -      var newDashboard = angular.copy($scope.dashboard);
>, <Line: -      newDashboard.rows = [];
>, <Line: -      newDashboard.title = state.name;
>, <Line: -      newDashboard.rows.push(currentRow);
>, <Line: -      _.each(state.graphs, function(graph, index) {
>, <Line: -        if (currentRow.panels.length === graphsPerRow) {
>, <Line: -          currentRow = angular.copy(rowTemplate);
>, <Line: -          newDashboard.rows.push(currentRow);
>, <Line: -        }
>, <Line: -        panel = {
>, <Line: -          type: 'graph',
>, <Line: -          span: 12 / graphsPerRow,
>, <Line: -          title: graph[1].title,
>, <Line: -          targets: [],
>, <Line: -          datasource: datasource,
>, <Line: -          id: index + 1
>, <Line: -        };
>, <Line: -        _.each(graph[1].target, function(target) {
>, <Line: -          panel.targets.push({
>, <Line: -            target: target
>, <Line: -          });
>, <Line: -        });
>, <Line: -        currentRow.panels.push(panel);
>, <Line: -      });
>, <Line: -      window.grafanaImportDashboard = newDashboard;
>, <Line: -      $location.path('/dashboard/import/' + kbn.slugifyForUrl(newDashboard.title));
>, <Line: -      $scope.dismiss();
>, <Line: -    }
>, <Line: -  });
>, <Line: -});
>]