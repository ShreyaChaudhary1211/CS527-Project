[<Line: + Copyright (c) 2007-2013 IOLA and Ole Laursen.
>, <Line: + Licensed under the MIT license.
>, <Line: + Set axis.mode to "time" to enable. See the section "Time series data" in
>, <Line: + API.txt for details.
>, <Line: + */
>, <Line: +(function ($) {
>, <Line: +		var leftPad = function (n, pad) {
>, <Line: +					case 'a':
>, <Line: +						c = "" + dayNames[d.getDay()];
>, <Line: +						break;
>, <Line: +					case 'b':
>, <Line: +						c = "" + monthNames[d.getMonth()];
>, <Line: +						break;
>, <Line: +					case 'd':
>, <Line: +						c = leftPad(d.getDate(), "");
>, <Line: +						break;
>, <Line: +					case 'e':
>, <Line: +						c = leftPad(d.getDate(), " ");
>, <Line: +						break;
>, <Line: +					case 'H':
>, <Line: +						c = leftPad(hours);
>, <Line: +						break;
>, <Line: +					case 'I':
>, <Line: +						c = leftPad(hours12);
>, <Line: +						break;
>, <Line: +					case 'l':
>, <Line: +						c = leftPad(hours12, " ");
>, <Line: +						break;
>, <Line: +					case 'm':
>, <Line: +						c = leftPad(d.getMonth() + 1, "");
>, <Line: +						break;
>, <Line: +					case 'M':
>, <Line: +						c = leftPad(d.getMinutes());
>, <Line: +						break;
>, <Line: +						c = "" + (Math.floor(d.getMonth() / 3) + 1);
>, <Line: +						break;
>, <Line: +					case 'S':
>, <Line: +						c = leftPad(d.getSeconds());
>, <Line: +						break;
>, <Line: +					case 'y':
>, <Line: +						c = leftPad(d.getFullYear() % 100);
>, <Line: +						break;
>, <Line: +					case 'Y':
>, <Line: +						c = "" + d.getFullYear();
>, <Line: +						break;
>, <Line: +					case 'p':
>, <Line: +						c = (isAM) ? ("" + "am") : ("" + "pm");
>, <Line: +						break;
>, <Line: +					case 'P':
>, <Line: +						c = (isAM) ? ("" + "AM") : ("" + "PM");
>, <Line: +						break;
>, <Line: +					case 'w':
>, <Line: +						c = "" + d.getDay();
>, <Line: +						break;
>, <Line: +			sourceObj[sourceMethod] = function () {
>, <Line: +			$.each(plot.getAxes(), function (axisName, axis) {
>, <Line: +					axis.tickGenerator = function (axis) {
>, <Line: +						"quarter") ||
>, <Line: +						(opts.minTickSize && opts.minTickSize[1] ===
>, <Line: +						"quarter") ? specQuarters : specMonths;
>, <Line: +								+ spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2
>, <Line: +									tickSize));
>, <Line: +							axis.options.tickSize[1] == "quarter") ||
>, <Line: +							axis.options.minTickSize[1] == "quarter");
>]
[<Line: -Copyright (c) 2007-2013 IOLA and Ole Laursen.
>, <Line: -Licensed under the MIT license.
>, <Line: -Set axis.mode to "time" to enable. See the section "Time series data" in
>, <Line: -API.txt for details.
>, <Line: -*/
>, <Line: -(function($) {
>, <Line: -		var leftPad = function(n, pad) {
>, <Line: -					case 'a': c = "" + dayNames[d.getDay()]; break;
>, <Line: -					case 'b': c = "" + monthNames[d.getMonth()]; break;
>, <Line: -					case 'd': c = leftPad(d.getDate(), ""); break;
>, <Line: -					case 'e': c = leftPad(d.getDate(), " "); break;
>, <Line: -					case 'H': c = leftPad(hours); break;
>, <Line: -					case 'I': c = leftPad(hours12); break;
>, <Line: -					case 'l': c = leftPad(hours12, " "); break;
>, <Line: -					case 'm': c = leftPad(d.getMonth() + 1, ""); break;
>, <Line: -					case 'M': c = leftPad(d.getMinutes()); break;
>, <Line: -						c = "" + (Math.floor(d.getMonth() / 3) + 1); break;
>, <Line: -					case 'S': c = leftPad(d.getSeconds()); break;
>, <Line: -					case 'y': c = leftPad(d.getFullYear() % 100); break;
>, <Line: -					case 'Y': c = "" + d.getFullYear(); break;
>, <Line: -					case 'p': c = (isAM) ? ("" + "am") : ("" + "pm"); break;
>, <Line: -					case 'P': c = (isAM) ? ("" + "AM") : ("" + "PM"); break;
>, <Line: -					case 'w': c = "" + d.getDay(); break;
>, <Line: -			sourceObj[sourceMethod] = function() {
>, <Line: -			$.each(plot.getAxes(), function(axisName, axis) {
>, <Line: -					axis.tickGenerator = function(axis) {
>, <Line: -							"quarter") ||
>, <Line: -							(opts.minTickSize && opts.minTickSize[1] ===
>, <Line: -							"quarter") ? specQuarters : specMonths;
>, <Line: -											  + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2
>, <Line: -								tickSize));
>, <Line: -								axis.options.tickSize[1] == "quarter") ||
>, <Line: -								axis.options.minTickSize[1] == "quarter");
>]