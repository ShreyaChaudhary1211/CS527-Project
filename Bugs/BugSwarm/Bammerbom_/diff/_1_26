[<Line: +/*
>, <Line: + * This file is part of UltimateCore, licensed under the MIT License (MIT).
>, <Line: + *
>, <Line: + * Copyright (c) Bammerbom
>, <Line: + *
>, <Line: + * Permission is hereby granted, free of charge, to any person obtaining a copy
>, <Line: + * of this software and associated documentation files (the "Software"), to deal
>, <Line: + * in the Software without restriction, including without limitation the rights
>, <Line: + * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>, <Line: + * copies of the Software, and to permit persons to whom the Software is
>, <Line: + * furnished to do so, subject to the following conditions:
>, <Line: + *
>, <Line: + * The above copyright notice and this permission notice shall be included in
>, <Line: + * all copies or substantial portions of the Software.
>, <Line: + *
>, <Line: + * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>, <Line: + * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>, <Line: + * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>, <Line: + * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>, <Line: + * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>, <Line: + * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>, <Line: + * THE SOFTWARE.
>, <Line: + */
>, <Line: +package bammerbom.ultimatecore.sponge.modules.teleport.commands;
>, <Line: +import bammerbom.ultimatecore.sponge.api.command.Command;
>, <Line: +import bammerbom.ultimatecore.sponge.api.module.Module;
>, <Line: +import bammerbom.ultimatecore.sponge.api.permission.Permission;
>, <Line: +import org.spongepowered.api.command.CommandResult;
>, <Line: +import org.spongepowered.api.command.CommandSource;
>, <Line: +import java.util.List;
>, <Line: +public class TeleportnativeCommand implements Command {
>, <Line: +    @Override
>, <Line: +    public Module getModule() {
>, <Line: +        return null;
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public String getIdentifier() {
>, <Line: +        return null;
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public Permission getPermission() {
>, <Line: +        return null;
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public List<Permission> getPermissions() {
>, <Line: +        return null;
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public List<String> getAliases() {
>, <Line: +        return null;
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public CommandResult run(CommandSource sender, String[] args) {
>, <Line: +        return null;
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public List<String> onTabComplete(CommandSource sender, String[] args, String curs, Integer curn) {
>, <Line: +        return null;
>, <Line: +    }
>, <Line: +}
>]
[]