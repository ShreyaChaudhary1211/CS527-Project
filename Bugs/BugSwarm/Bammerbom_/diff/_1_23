[<Line: +/*
>, <Line: + * This file is part of UltimateCore, licensed under the MIT License (MIT).
>, <Line: + *
>, <Line: + * Copyright (c) Bammerbom
>, <Line: + *
>, <Line: + * Permission is hereby granted, free of charge, to any person obtaining a copy
>, <Line: + * of this software and associated documentation files (the "Software"), to deal
>, <Line: + * in the Software without restriction, including without limitation the rights
>, <Line: + * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
>, <Line: + * copies of the Software, and to permit persons to whom the Software is
>, <Line: + * furnished to do so, subject to the following conditions:
>, <Line: + *
>, <Line: + * The above copyright notice and this permission notice shall be included in
>, <Line: + * all copies or substantial portions of the Software.
>, <Line: + *
>, <Line: + * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>, <Line: + * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>, <Line: + * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
>, <Line: + * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>, <Line: + * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>, <Line: + * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
>, <Line: + * THE SOFTWARE.
>, <Line: + */
>, <Line: +package bammerbom.ultimatecore.sponge.modules.tablist;
>, <Line: +import bammerbom.ultimatecore.sponge.UltimateCore;
>, <Line: +import bammerbom.ultimatecore.sponge.api.module.Module;
>, <Line: +import bammerbom.ultimatecore.sponge.config.ModuleConfig;
>, <Line: +import bammerbom.ultimatecore.sponge.modules.tablist.runnables.TablistRunnable;
>, <Line: +import org.spongepowered.api.Sponge;
>, <Line: +import org.spongepowered.api.event.game.state.GameInitializationEvent;
>, <Line: +import org.spongepowered.api.event.game.state.GamePostInitializationEvent;
>, <Line: +import org.spongepowered.api.event.game.state.GameStoppingEvent;
>, <Line: +import java.util.Optional;
>, <Line: +public class TablistModule implements Module {
>, <Line: +    ModuleConfig config;
>, <Line: +    @Override
>, <Line: +    public String getIdentifier() {
>, <Line: +        return "tablist";
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public Optional<ModuleConfig> getConfig() {
>, <Line: +        return Optional.of(config);
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public void onRegister() {
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public void onInit(GameInitializationEvent event) {
>, <Line: +        config = new ModuleConfig("tablist");
>, <Line: +        int delay = config.get().getNode("refresh").getInt();
>, <Line: +        Sponge.getScheduler().createTaskBuilder().execute(new TablistRunnable()).name("UltimateCore tablist task").delayTicks(delay).intervalTicks(delay).submit(UltimateCore.get());
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public void onPostInit(GamePostInitializationEvent event) {
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public void onStop(GameStoppingEvent event) {
>, <Line: +    }
>, <Line: +}
>]
[]