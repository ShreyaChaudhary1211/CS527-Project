[<Line: +import java.io.EOFException;
>, <Line: +        // however it may not recognize all kinds of SVG documents.
>, <Line: +            // If it's not a tag, this can't be valid XML
>, <Line: +            if (b != '<') {
>, <Line: +            // Algorithm for detecting SVG:
>, <Line: +            //  - Skip until begin tag '<' and read 4 bytes
>, <Line: +            //  - if next is "?" skip until "?>" and start over
>, <Line: +            //  - else if next is "!--" skip until  "-->" and start over
>, <Line: +            //  - else if next is  "!DOCTYPE " skip any whitespace
>, <Line: +            //      - compare next 3 bytes against "svg", return result
>, <Line: +            //  - else
>, <Line: +            //      - compare next 3 bytes against "svg", return result
>, <Line: +            byte[] buffer = new byte[4];
>, <Line: +            while (true) {
>, <Line: +                pInput.readFully(buffer);
>, <Line: +                if (buffer[0] == '?') {
>, <Line: +                    // This is the XML declaration or a processing instruction
>, <Line: +                    while (!(pInput.read() == '?' && pInput.read() == '>')) {
>, <Line: +                        // Skip until end of XML declaration or processing instruction
>, <Line: +                    }
>, <Line: +                else if (buffer[0] == '!') {
>, <Line: +                    if (buffer[1] == '-' && buffer[2] == '-') {
>, <Line: +                        // This is a comment
>, <Line: +                        while (!(pInput.read() == '-' && pInput.read() == '-' && pInput.read() == '>')) {
>, <Line: +                            // Skip until end of comment
>, <Line: +                        }
>, <Line: +                    }
>, <Line: +                    else if (buffer[1] == 'D' && buffer[2] == 'O' && buffer[3] == 'C'
>, <Line: +                            && pInput.read() == 'T' && pInput.read() == 'Y'
>, <Line: +                            && pInput.read() == 'P' && pInput.read() == 'E') {
>, <Line: +                        // This is the DOCTYPE declaration
>, <Line: +                        while (Character.isWhitespace((char) (b = pInput.read()))) {
>, <Line: +                            // Skip over WS
>, <Line: +                        }
>, <Line: +                        if (b == 's' && pInput.read() == 'v' && pInput.read() == 'g') {
>, <Line: +                            // It's SVG, identified by DOCTYPE
>, <Line: +                            return true;
>, <Line: +                        }
>, <Line: +                        // DOCTYPE found, but not SVG
>, <Line: +                        return false;
>, <Line: +                    }
>, <Line: +                    // Something else, we'll skip
>, <Line: +                }
>, <Line: +                else {
>, <Line: +                    // This is a normal tag
>, <Line: +                    if (buffer[0] == 's' && buffer[1] == 'v' && buffer[2] == 'g'
>, <Line: +                            && (Character.isWhitespace((char) buffer[3]) || buffer[3] == ':')) {
>, <Line: +                        // It's SVG, identified by root tag
>, <Line: +                    // If the tag is not "svg", this isn't SVG
>, <Line: +                while (pInput.read() != '<') {
>, <Line: +                    // Skip over, until next begin tag
>, <Line: +        }
>, <Line: +        catch (EOFException ignore) {
>, <Line: +            // Possible for small files...
>]
[<Line: -        // however it requires the doctype to be "svg", which may not be correct
>, <Line: -        // in all cases...
>, <Line: -            if (!((b == '<') && (pInput.read() == '?') && (pInput.read() == 'x') && (pInput.read() == 'm')
>, <Line: -                    && (pInput.read() == 'l'))) {
>, <Line: -            // Okay, we have XML. But, is it really SVG?
>, <Line: -            boolean docTypeFound = false;
>, <Line: -            while (!docTypeFound) {
>, <Line: -                while (pInput.read() != '<') {
>, <Line: -                    // Skip over, until begin tag
>, <Line: -                if ((b = pInput.read()) != '!') {
>, <Line: -                    if (b == 's' && pInput.read() == 'v' && pInput.read() == 'g'
>, <Line: -                            && (Character.isWhitespace((char) (b = pInput.read())) || b == ':')) {
>, <Line: -                    // If this is not a comment, or the DOCTYPE declaration, the doc has no DOCTYPE and it can't be svg
>, <Line: -                // There might be comments before the doctype, unfortunately...
>, <Line: -                // If next is "--", this is a comment
>, <Line: -                if ((b = pInput.read()) == '-' && pInput.read() == '-') {
>, <Line: -                    while (!(pInput.read() == '-' && pInput.read() == '-' && pInput.read() == '>')) {
>, <Line: -                        // Skip until end of comment
>, <Line: -                    }
>, <Line: -                }
>, <Line: -                // If we are lucky, this is DOCTYPE declaration
>, <Line: -                if (b == 'D' && pInput.read() == 'O' && pInput.read() == 'C' && pInput.read() == 'T'
>, <Line: -                        && pInput.read() == 'Y' && pInput.read() == 'P' && pInput.read() == 'E') {
>, <Line: -                    docTypeFound = true;
>, <Line: -                    while (Character.isWhitespace((char) (b = pInput.read()))) {
>, <Line: -                        // Skip over WS
>, <Line: -                    }
>, <Line: -                    if (b == 's' && pInput.read() == 'v' && pInput.read() == 'g') {
>, <Line: -                        return true;
>, <Line: -                    }
>]