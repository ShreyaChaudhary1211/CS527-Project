[<Line: +package com.artemis.injection;
>, <Line: +import com.artemis.utils.reflect.Field;
>, <Line: +/**
>, <Line: + * Provides cached information about a class-field, limiting the need for reflection
>, <Line: + * on repeated access.
>, <Line: + * This class only caches the state related to the {@link com.artemis.annotations.Wire} annotation of the field.
>, <Line: + * <p>
>, <Line: + * CachedField is typically managed by {@link InjectionCache},
>, <Line: + * and can be retrieved with {@link InjectionCache#getCachedField(Field)}.
>, <Line: + * </p>
>, <Line: + *
>, <Line: + * @author Snorre E. Brekke
>, <Line: + */
>, <Line: +public class CachedField {
>, <Line: +    public CachedField(Field field, WireType wireType, String name) {
>, <Line: +        this.field = field;
>, <Line: +        this.wireType = wireType;
>, <Line: +        this.name = name;
>, <Line: +    }
>, <Line: +    /**
>, <Line: +     * The field this class represents.
>, <Line: +     */
>, <Line: +    public final Field field;
>, <Line: +    /**
>, <Line: +     * {@link WireType#WIRE} if the field is annotated with {@link com.artemis.annotations.Wire},
>, <Line: +     * {@link WireType#MAPPER} if the field is annotated with {@link com.artemis.annotations.Mapper},
>, <Line: +     * {@link WireType#IGNORED} otherwise.
>, <Line: +     */
>, <Line: +    public final WireType wireType;
>, <Line: +    /**
>, <Line: +     * If the field is annotated with {@link com.artemis.annotations.Wire}, this will contain the cached value of
>, <Line: +     * {@link com.artemis.annotations.Wire#name()}.
>, <Line: +     */
>, <Line: +    public final String name;
>, <Line: +}
>]
[]