[]
[<Line: -package org.stagemonitor.jdbc.p6spy;
>, <Line: -import com.p6spy.engine.logging.Category;
>, <Line: -import com.p6spy.engine.spy.appender.P6Logger;
>, <Line: -import java.util.List;
>, <Line: -import java.util.concurrent.CopyOnWriteArrayList;
>, <Line: -public class P6SpyMultiLogger implements P6Logger {
>, <Line: -	private static List<P6Logger> loggers = new CopyOnWriteArrayList<P6Logger>();
>, <Line: -	public static void addLogger(P6Logger logger) {
>, <Line: -		if (logger != null) {
>, <Line: -			loggers.add(logger);
>, <Line: -		}
>, <Line: -	}
>, <Line: -	@Override
>, <Line: -	public void logSQL(int connectionId, String now, long elapsed, Category category, String prepared, String sql) {
>, <Line: -		for (P6Logger logger : loggers) {
>, <Line: -			if (logger.isCategoryEnabled(category)) {
>, <Line: -				logger.logSQL(connectionId, now, elapsed, category, prepared, sql);
>, <Line: -			}
>, <Line: -		}
>, <Line: -	}
>, <Line: -	@Override
>, <Line: -	public void logException(Exception e) {
>, <Line: -		for (P6Logger logger : loggers) {
>, <Line: -			logger.logException(e);
>, <Line: -		}
>, <Line: -	}
>, <Line: -	@Override
>, <Line: -	public void logText(String text) {
>, <Line: -		for (P6Logger logger : loggers) {
>, <Line: -			logger.logText(text);
>, <Line: -		}
>, <Line: -	}
>, <Line: -	@Override
>, <Line: -	public boolean isCategoryEnabled(Category category) {
>, <Line: -		boolean result = false;
>, <Line: -		for (P6Logger logger : loggers) {
>, <Line: -			result |= logger.isCategoryEnabled(category);
>, <Line: -		}
>, <Line: -		return result;
>, <Line: -	}
>, <Line: -}
>]