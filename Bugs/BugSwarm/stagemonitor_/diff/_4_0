[<Line: +		}, new BulkErrorReportingResponseHandler());
>, <Line: +	public static class BulkErrorReportingResponseHandler implements HttpClient.ResponseHandler<Void> {
>, <Line: +		private static final Logger logger = LoggerFactory.getLogger(BulkErrorReportingResponseHandler.class);
>, <Line: +		@Override
>, <Line: +		public Void handleResponse(InputStream is, Integer statusCode) throws IOException {
>, <Line: +			final JsonNode bulkResponse = JsonUtils.getMapper().readTree(is);
>, <Line: +			if (bulkResponse.get("errors").booleanValue()) {
>, <Line: +				reportBulkErrors(bulkResponse.get("items"));
>, <Line: +			}
>, <Line: +			return null;
>, <Line: +		}
>, <Line: +		private void reportBulkErrors(JsonNode items) {
>, <Line: +			final StringBuilder sb = new StringBuilder("Error(s) while sending a _bulk request to elasticsearch:");
>, <Line: +			for (JsonNode item : items) {
>, <Line: +				JsonNode action = item.get("index");
>, <Line: +				if (action == null) {
>, <Line: +					action = item.get("create");
>, <Line: +				}
>, <Line: +				final JsonNode error = action.get("error");
>, <Line: +				if (error != null) {
>, <Line: +					sb.append("\n - ");
>, <Line: +					sb.append(error.get("reason").asText());
>, <Line: +					final String errorType = error.get("type").asText();
>, <Line: +					if (errorType.equals("version_conflict_engine_exception")) {
>, <Line: +						sb.append(": Probably you updated a dashboard in Kibana. ")
>, <Line: +								.append("Please don't override the stagemonitor dashboards. ")
>, <Line: +								.append("If you want to customize a dashboard, save it under a different name. ")
>, <Line: +								.append("Stagemonitor will not override your changes, but that also means that you won't ")
>, <Line: +								.append("be able to use the latest dashboard enhancements :(. ")
>, <Line: +								.append("To resolve this issue, save the updated one under a different name, delete it ")
>, <Line: +								.append("and restart stagemonitor so that the dashboard can be recreated.");
>, <Line: +					} else if ("es_rejected_execution_exception".equals(errorType)) {
>, <Line: +						sb.append(": Consider increasing threadpool.bulk.queue_size. See also stagemonitor's " +
>, <Line: +								"documentation for the Elasticsearch data base.");
>, <Line: +					}
>, <Line: +				}
>, <Line: +			}
>, <Line: +			logger.warn(sb.toString());
>, <Line: +		}
>, <Line: +	}
>]
[<Line: -		}, new HttpClient.ResponseHandler<Void>() {
>, <Line: -			@Override
>, <Line: -			public Void handleResponse(InputStream is, Integer statusCode) throws IOException {
>, <Line: -				final JsonNode bulkResponse = JsonUtils.getMapper().readTree(is);
>, <Line: -				if (bulkResponse.get("errors").booleanValue()) {
>, <Line: -					reportBulkErrors(bulkResponse.get("items"));
>, <Line: -				}
>, <Line: -				return null;
>, <Line: -			}
>, <Line: -		});
>, <Line: -	}
>, <Line: -	private void reportBulkErrors(JsonNode items) {
>, <Line: -		final StringBuilder sb = new StringBuilder("Error(s) while sending a _bulk request to elasticsearch:");
>, <Line: -		for (JsonNode item : items) {
>, <Line: -			final JsonNode error = item.get("index").get("error");
>, <Line: -			if (error != null) {
>, <Line: -				sb.append("\n - ");
>, <Line: -				sb.append(error.get("reason").asText());
>, <Line: -				if (error.get("type").asText().equals("version_conflict_engine_exception")) {
>, <Line: -					sb.append(": Probably you updated a dashboard in Kibana. ")
>, <Line: -							.append("Please don't override the stagemonitor dashboards. ")
>, <Line: -							.append("If you want to customize a dashboard, save it under a different name. ")
>, <Line: -							.append("Stagemonitor will not override your changes, but that also means that you won't ")
>, <Line: -							.append("be able to use the latest dashboard enhancements :(. ")
>, <Line: -							.append("To resolve this issue, save the updated one under a different name, delete it ")
>, <Line: -							.append("and restart stagemonitor so that the dashboard can be recreated.");
>, <Line: -				}
>, <Line: -			}
>, <Line: -		}
>, <Line: -		logger.warn(sb.toString());
>]