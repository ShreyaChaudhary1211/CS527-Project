[<Line: +	public void sendClassPathRessourceBulkAsync(final String resource) {
>, <Line: +		sendBulkAsync("", new HttpClient.OutputStreamHandler() {
>, <Line: +			@Override
>, <Line: +			public void withHttpURLConnection(OutputStream os) throws IOException {
>, <Line: +				IOUtils.copy(IOUtils.getResourceAsStream(resource), os);
>, <Line: +				os.close();
>, <Line: +			}
>, <Line: +		});
>, <Line: +	public void sendBulkAsync(final String endpoint, final HttpClient.OutputStreamHandler outputStreamHandler) {
>, <Line: +					sendBulk(endpoint, outputStreamHandler);
>, <Line: +	public void sendBulk(String endpoint, HttpClient.OutputStreamHandler outputStreamHandler) {
>, <Line: +		httpClient.send("POST", corePlugin.getElasticsearchUrl() + endpoint + "/_bulk", null, outputStreamHandler, new BulkErrorReportingResponseHandler());
>]
[<Line: -	public void sendBulkAsync(String resource) {
>, <Line: -		sendBulkAsync(IOUtils.getResourceAsStream(resource));
>, <Line: -	public void sendBulkAsync(final InputStream is) {
>, <Line: -					sendBulk(is);
>, <Line: -	public void sendBulk(final InputStream is) {
>, <Line: -		httpClient.send("POST", corePlugin.getElasticsearchUrl() + "/_bulk", null, new HttpClient.OutputStreamHandler() {
>, <Line: -			@Override
>, <Line: -			public void withHttpURLConnection(OutputStream os) throws IOException {
>, <Line: -				IOUtils.copy(is, os);
>, <Line: -				os.close();
>, <Line: -			}
>, <Line: -		}, new BulkErrorReportingResponseHandler());
>]