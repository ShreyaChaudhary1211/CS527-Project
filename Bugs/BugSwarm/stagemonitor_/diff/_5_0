[<Line: +import groovy.json.JsonBuilder
>, <Line: +import groovy.json.JsonSlurper
>, <Line: +def cli = new CliBuilder(usage: "groovy ExportKibanaDashboard.groovy")
>, <Line: +cli.with {
>, <Line: +	width = 160
>, <Line: +	_(longOpt: 'url', args: 1, 'The elasticsearch url (defaults to http://192.168.99.100:9200)')
>, <Line: +	_(longOpt: 'type', args: 1, required: true, argName: 'config|index-pattern|search|dashboard', 'Which type to export')
>, <Line: +	_(longOpt: 'id', args: 1, required: true, 'The id of the type to export')
>, <Line: +	_(longOpt: 'curl', 'If set, exports as curl script')
>, <Line: +}
>, <Line: +def options = cli.parse(args)
>, <Line: +if (!options) return
>, <Line: +def addr = options.url ?: "http://192.168.99.100:9200"
>, <Line: +if (options.curl) println "curl -XPOST $addr/_bulk?format=yaml -d '"
>, <Line: +exportKibanaType(addr, options.type, options.id)
>, <Line: +println ''
>, <Line: +if (options.curl) println "'"
>, <Line: +def exportKibanaType(String addr, String type, String id) {
>, <Line: +	def hit = new JsonSlurper().parse("$addr/.kibana/$type/$id".toURL())
>, <Line: +	println new JsonBuilder([index: [_index: hit._index, _type: hit._type, _id: hit._id, _version: 1, _version_type: "external_gte"]]).toString()
>, <Line: +	println new JsonBuilder(hit._source).toString()
>, <Line: +	if (type == "dashboard") {
>, <Line: +		new JsonSlurper().parseText(hit._source.panelsJSON).each {
>, <Line: +			exportKibanaType(addr, it.type, it.id)
>, <Line: +		}
>, <Line: +	}
>, <Line: +}
>]
[]