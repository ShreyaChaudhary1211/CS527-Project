[<Line: +package org.stagemonitor.core.metrics.metrics2;
>, <Line: +import static org.junit.Assert.assertEquals;
>, <Line: +import static org.stagemonitor.core.metrics.metrics2.MetricName.name;
>, <Line: +import java.util.concurrent.TimeUnit;
>, <Line: +import com.codahale.metrics.Gauge;
>, <Line: +import com.fasterxml.jackson.databind.ObjectMapper;
>, <Line: +import org.junit.Before;
>, <Line: +import org.junit.Test;
>, <Line: +import org.stagemonitor.core.util.JsonUtils;
>, <Line: +public class Metric2RegistryModuleTest {
>, <Line: +	private ObjectMapper mapper;
>, <Line: +	private Metric2Registry registry;
>, <Line: +	@Before
>, <Line: +	public void setUp() throws Exception {
>, <Line: +		mapper = JsonUtils.getMapper().copy().registerModule(new Metric2RegistryModule(TimeUnit.SECONDS, TimeUnit.MILLISECONDS));
>, <Line: +		registry = new Metric2Registry();
>, <Line: +	}
>, <Line: +	@Test
>, <Line: +	public void testCounter() throws Exception {
>, <Line: +		registry.counter(name("foo").tag("bar", "baz").build()).inc();
>, <Line: +		registry.counter(name("qux").tag("quux", "foo").build()).inc();
>, <Line: +		assertEquals("[{\"name\":\"qux\",\"quux\":\"foo\",\"count\":1},{\"name\":\"foo\",\"bar\":\"baz\",\"count\":1}]", mapper.writeValueAsString(registry));
>, <Line: +	}
>, <Line: +	@Test
>, <Line: +	public void testGauge() throws Exception {
>, <Line: +		registry.register(name("foo").tag("bar", "baz").build(), new Gauge<Double>() {
>, <Line: +			@Override
>, <Line: +			public Double getValue() {
>, <Line: +				return 1.1;
>, <Line: +			}
>, <Line: +		});
>, <Line: +		assertEquals("[{\"name\":\"foo\",\"bar\":\"baz\",\"value\":1.1}]", mapper.writeValueAsString(registry));
>, <Line: +	}
>, <Line: +}
>]
[]