[<Line: +	var requiredMetricNames = [];
>, <Line: +	utils.loadScripts(scripts, function () {
>, <Line: +			registerAllMetricMatchers(plugin);
>, <Line: +	function registerAllMetricMatchers(plugin) {
>, <Line: +		if (plugin.table) {
>, <Line: +			for (var j = 0; j < plugin.table.columns.length; j++) {
>, <Line: +				registerMetricMatcher(plugin.table.columns[j].metricMatcher);
>, <Line: +			}
>, <Line: +			if (plugin.table.graphTemplates) {
>, <Line: +				for (var j = 0; j < plugin.table.graphTemplates.length; j++) {
>, <Line: +					registerMetricMatcher(plugin.table.graphTemplates[j].template.metricMatcher);
>, <Line: +				}
>, <Line: +			}
>, <Line: +		}
>, <Line: +		if (plugin.graphs) {
>, <Line: +			for (var j = 0; j < plugin.graphs.length; j++) {
>, <Line: +				var graph = plugin.graphs[j];
>, <Line: +				for (var k = 0; k < graph.columns.length; k++) {
>, <Line: +					registerMetricMatcher(graph.columns[k].metricMatcher);
>, <Line: +				}
>, <Line: +			}
>, <Line: +		}
>, <Line: +	}
>, <Line: +	function registerMetricMatcher(metricMatcher) {
>, <Line: +		if (metricMatcher) {
>, <Line: +			var metricName = metricMatcher.name;
>, <Line: +			if (requiredMetricNames.indexOf(metricName) == -1) {
>, <Line: +				requiredMetricNames.push(metricName);
>, <Line: +			}
>, <Line: +		}
>, <Line: +	}
>, <Line: +		$.getJSON(stagemonitor.baseUrl + "/stagemonitor/metrics", {
>, <Line: +			metricNames: requiredMetricNames
>, <Line: +		})
>, <Line: +			.done(function (metrics) {
>, <Line: +				var date = new Date();
>, <Line: +				metrics['timestamp'] = date.getTime();
>, <Line: +				onMetricsReceived(metrics);
>, <Line: +			});
>]
[<Line: -	utils.loadScripts(scripts, function() {
>, <Line: -		$.getJSON(stagemonitor.baseUrl + "/stagemonitor/metrics", function (metrics) {
>, <Line: -			var date = new Date();
>, <Line: -			metrics['timestamp'] = date.getTime();
>, <Line: -			onMetricsReceived(metrics);
>, <Line: -		});
>]