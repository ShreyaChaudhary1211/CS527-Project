[<Line: +    URL url = server.url("/").url();
>, <Line: +    HttpURLConnection urlConnection = openConnection(server.url("/").url());
>, <Line: +    urlConnection = openConnection(server.url("/").url()); // cached!
>, <Line: +    HttpsURLConnection c1 = (HttpsURLConnection) openConnection(server.url("/").url());
>, <Line: +    HttpsURLConnection c2 = (HttpsURLConnection) openConnection(server.url("/").url()); // cached!
>, <Line: +    HttpURLConnection connection = openConnection(server.url("/").url());
>, <Line: +    connection = openConnection(server.url("/").url()); // cached!
>, <Line: +    assertEquals("ABC", readAscii(openConnection(server.url("/foo").url())));
>, <Line: +    assertEquals("ABC", readAscii(openConnection(server.url("/bar").url())));
>, <Line: +    assertEquals("DEF", readAscii(openConnection(server.url("/baz").url())));
>, <Line: +    HttpsURLConnection connection1 = (HttpsURLConnection) openConnection(server.url("/").url());
>, <Line: +    HttpsURLConnection connection2 = (HttpsURLConnection) openConnection(server.url("/").url());
>, <Line: +        .addHeader("Location: " + server2.url("/").url()));
>, <Line: +    HttpURLConnection connection1 = openConnection(server.url("/").url());
>, <Line: +    HttpURLConnection connection2 = openConnection(server.url("/").url());
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URL url = server.url("/").url();
>, <Line: +        new InputStreamReader(openConnection(server.url("/").url()).getInputStream()));
>, <Line: +    URLConnection connection = openConnection(server.url("/").url());
>, <Line: +    URLConnection connection = openConnection(server.url("/").url());
>, <Line: +    connection = openConnection(server.url("/").url());
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    URLConnection connection = openConnection(server.url("/").url());
>, <Line: +    URL url = server.url("/?foo=bar").url();
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    HttpURLConnection connection1 = openConnection(server.url("/").url());
>, <Line: +    HttpURLConnection connection2 = openConnection(server.url("/").url());
>, <Line: +    assertEquals("ABCABCABC", readAscii(openConnection(server.url("/").url())));
>, <Line: +    assertEquals("ABCABCABC", readAscii(openConnection(server.url("/").url())));
>, <Line: +    assertEquals("ABCABCABC", readAscii(openConnection(server.url("/").url())));
>, <Line: +    assertEquals("ABCABCABC", readAscii(openConnection(server.url("/").url())));
>, <Line: +    assertEquals("ABCABCABC", readAscii(openConnection(server.url("/").url())));
>, <Line: +    assertEquals("DEFDEFDEF", readAscii(openConnection(server.url("/").url())));
>, <Line: +    assertEquals("ABCABCABC", readAscii(openConnection(server.url("/").url())));
>, <Line: +    assertEquals("ABCABCABC", readAscii(openConnection(server.url("/").url())));
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    URLConnection connection = openConnection(server.url("/").url());
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    URLConnection connection = openConnection(server.url("/").url());
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    URLConnection connection = openConnection(server.url("/").url());
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    URLConnection maxStaleConnection = openConnection(server.url("/").url());
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    URLConnection connection = openConnection(server.url("/").url());
>, <Line: +    HttpURLConnection connection = openConnection(server.url("/").url());
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    URLConnection connection = openConnection(server.url("/").url());
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    HttpURLConnection connection = openConnection(server.url("/").url());
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    HttpURLConnection connection = openConnection(server.url("/").url());
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    HttpURLConnection connection = openConnection(server.url("/").url());
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/foo").url())));
>, <Line: +    assertEquals("B", readAscii(openConnection(server.url("/bar").url())));
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/a").url())));
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/a").url())));
>, <Line: +    assertEquals("B", readAscii(openConnection(server.url("/b").url())));
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    HttpURLConnection connection2 = openConnection(server.url("/").url());
>, <Line: +    HttpURLConnection connection1 = openConnection(server.url("/").url());
>, <Line: +    assertEquals("B", readAscii(openConnection(server.url("/").url())));
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    assertEquals("B", readAscii(openConnection(server.url("/").url())));
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URLConnection connection1 = openConnection(server.url("/").url());
>, <Line: +    URLConnection connection2 = openConnection(server.url("/").url());
>, <Line: +    URLConnection connection1 = openConnection(server.url("/").url());
>, <Line: +    URLConnection connection2 = openConnection(server.url("/").url());
>, <Line: +    URLConnection connection1 = openConnection(server.url("/").url());
>, <Line: +    URLConnection connection2 = openConnection(server.url("/").url());
>, <Line: +    URLConnection connection1 = openConnection(server.url("/").url());
>, <Line: +    URLConnection connection2 = openConnection(server.url("/").url());
>, <Line: +    HttpURLConnection connection1 = openConnection(server.url("/a").url());
>, <Line: +    HttpURLConnection connection2 = openConnection(server.url("/a").url());
>, <Line: +    HttpURLConnection connection3 = openConnection(server.url("/a").url());
>, <Line: +    HttpURLConnection connection4 = openConnection(server.url("/a").url());
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    URLConnection connection = openConnection(server.url("/").url());
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    HttpURLConnection connection = openConnection(server.url("/").url());
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    HttpURLConnection connection = openConnection(server.url("/").url());
>, <Line: +    URLConnection connection = openConnection(server.url("/").url());
>, <Line: +    HttpURLConnection connection = openConnection(server.url("/").url());
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URL valid = server.url("/valid").url();
>, <Line: +    URL invalid = server.url("/invalid").url();
>, <Line: +    URL url = server.url("/").url();
>, <Line: +        assertEquals(server.url("/").url(), uri.toURL());
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    HttpURLConnection connection = openConnection(server.url("/").url());
>, <Line: +    HttpURLConnection connection = openConnection(server.url("/").url());
>, <Line: +    HttpsURLConnection connection1 = (HttpsURLConnection) openConnection(server.url("/").url());
>, <Line: +    HttpsURLConnection connection2 = (HttpsURLConnection) openConnection(server.url("/").url());
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    HttpURLConnection urlConnection = openConnection(server.url("/").url());
>, <Line: +    urlConnection = openConnection(server.url("/").url()); // cached!
>, <Line: +    URLConnection connection = openConnection(server.url("/").url());
>, <Line: +    assertEquals("B", readAscii(openConnection(server.url("/").url())));
>, <Line: +    assertEquals("A", readAscii(openConnection(server.url("/").url())));
>, <Line: +    URLConnection connection = openConnection(server.url("/").url());
>, <Line: +    URLConnection connection = server.url("/").url().openConnection();
>, <Line: +    URLConnection connection2 = server.url("/").url().openConnection();
>, <Line: +    URLConnection connection = server.url("/").url().openConnection();
>, <Line: +    URLConnection connection2 = server.url("/").url().openConnection();
>, <Line: +    URLConnection connection = server.url("/").url().openConnection();
>, <Line: +    URLConnection connection2 = server.url("/").url().openConnection();
>, <Line: +    URLConnection connection = server.url("/").url().openConnection();
>, <Line: +    URLConnection connection2 = server.url("/").url().openConnection();
>]
[<Line: -    URL url = server.getUrl("/");
>, <Line: -    HttpURLConnection urlConnection = openConnection(server.getUrl("/"));
>, <Line: -    urlConnection = openConnection(server.getUrl("/")); // cached!
>, <Line: -    HttpsURLConnection c1 = (HttpsURLConnection) openConnection(server.getUrl("/"));
>, <Line: -    HttpsURLConnection c2 = (HttpsURLConnection) openConnection(server.getUrl("/")); // cached!
>, <Line: -    HttpURLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    connection = openConnection(server.getUrl("/")); // cached!
>, <Line: -    assertEquals("ABC", readAscii(openConnection(server.getUrl("/foo"))));
>, <Line: -    assertEquals("ABC", readAscii(openConnection(server.getUrl("/bar"))));
>, <Line: -    assertEquals("DEF", readAscii(openConnection(server.getUrl("/baz"))));
>, <Line: -    HttpsURLConnection connection1 = (HttpsURLConnection) openConnection(server.getUrl("/"));
>, <Line: -    HttpsURLConnection connection2 = (HttpsURLConnection) openConnection(server.getUrl("/"));
>, <Line: -        .addHeader("Location: " + server2.getUrl("/")));
>, <Line: -    HttpURLConnection connection1 = openConnection(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection2 = openConnection(server.getUrl("/"));
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -        new InputStreamReader(openConnection(server.getUrl("/")).getInputStream()));
>, <Line: -    URLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    URLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    connection = openConnection(server.getUrl("/"));
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    URLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    URL url = server.getUrl("/?foo=bar");
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    HttpURLConnection connection1 = openConnection(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection2 = openConnection(server.getUrl("/"));
>, <Line: -    assertEquals("ABCABCABC", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    assertEquals("ABCABCABC", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    assertEquals("ABCABCABC", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    assertEquals("ABCABCABC", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    assertEquals("ABCABCABC", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    assertEquals("DEFDEFDEF", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    assertEquals("ABCABCABC", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    assertEquals("ABCABCABC", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    URLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    URLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    URLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    URLConnection maxStaleConnection = openConnection(server.getUrl("/"));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    URLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    URLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    HttpURLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    HttpURLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    HttpURLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/foo"))));
>, <Line: -    assertEquals("B", readAscii(openConnection(server.getUrl("/bar"))));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/a"))));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/a"))));
>, <Line: -    assertEquals("B", readAscii(openConnection(server.getUrl("/b"))));
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    HttpURLConnection connection2 = openConnection(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection1 = openConnection(server.getUrl("/"));
>, <Line: -    assertEquals("B", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    assertEquals("B", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URLConnection connection1 = openConnection(server.getUrl("/"));
>, <Line: -    URLConnection connection2 = openConnection(server.getUrl("/"));
>, <Line: -    URLConnection connection1 = openConnection(server.getUrl("/"));
>, <Line: -    URLConnection connection2 = openConnection(server.getUrl("/"));
>, <Line: -    URLConnection connection1 = openConnection(server.getUrl("/"));
>, <Line: -    URLConnection connection2 = openConnection(server.getUrl("/"));
>, <Line: -    URLConnection connection1 = openConnection(server.getUrl("/"));
>, <Line: -    URLConnection connection2 = openConnection(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection1 = openConnection(server.getUrl("/a"));
>, <Line: -    HttpURLConnection connection2 = openConnection(server.getUrl("/a"));
>, <Line: -    HttpURLConnection connection3 = openConnection(server.getUrl("/a"));
>, <Line: -    HttpURLConnection connection4 = openConnection(server.getUrl("/a"));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    URLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    HttpURLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    HttpURLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    URLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URL valid = server.getUrl("/valid");
>, <Line: -    URL invalid = server.getUrl("/invalid");
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -        assertEquals(server.getUrl("/"), uri.toURL());
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    HttpURLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    HttpsURLConnection connection1 = (HttpsURLConnection) openConnection(server.getUrl("/"));
>, <Line: -    HttpsURLConnection connection2 = (HttpsURLConnection) openConnection(server.getUrl("/"));
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    HttpURLConnection urlConnection = openConnection(server.getUrl("/"));
>, <Line: -    urlConnection = openConnection(server.getUrl("/")); // cached!
>, <Line: -    URLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    assertEquals("B", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    assertEquals("A", readAscii(openConnection(server.getUrl("/"))));
>, <Line: -    URLConnection connection = openConnection(server.getUrl("/"));
>, <Line: -    URLConnection connection = server.getUrl("/").openConnection();
>, <Line: -    URLConnection connection2 = server.getUrl("/").openConnection();
>, <Line: -    URLConnection connection = server.getUrl("/").openConnection();
>, <Line: -    URLConnection connection2 = server.getUrl("/").openConnection();
>, <Line: -    URLConnection connection = server.getUrl("/").openConnection();
>, <Line: -    URLConnection connection2 = server.getUrl("/").openConnection();
>, <Line: -    URLConnection connection = server.getUrl("/").openConnection();
>, <Line: -    URLConnection connection2 = server.getUrl("/").openConnection();
>]