[<Line: +    connection = client.open(server.url("/foo").url());
>, <Line: +    connection = client.open(server.url("/foo").url());
>, <Line: +    connection = client.open(server.url("/foo").url());
>, <Line: +    connection = client.open(server.url("/foo").url());
>, <Line: +    connection = client.open(server.url("/foo").url());
>, <Line: +    connection = client.open(server.url("/foo").url());
>, <Line: +    HttpURLConnection connection1 = client.open(server.url("/r1").url());
>, <Line: +    HttpURLConnection connection2 = client.open(server.url("/r2").url());
>, <Line: +    assertContent("ABCABCABC", client.open(server.url("/r1").url()), Integer.MAX_VALUE);
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection connection1 = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection connection2 = client.open(server.url("/").url());
>, <Line: +    assertContent("A", client.open(server.url("/").url()), Integer.MAX_VALUE);
>, <Line: +    assertContent("A", client.open(server.url("/").url()), Integer.MAX_VALUE);
>, <Line: +    assertContent("A", client.open(server.url("/").url()), Integer.MAX_VALUE);
>, <Line: +    assertContent("A", client.open(server.url("/").url()), Integer.MAX_VALUE);
>, <Line: +    assertContent("A", client.open(server.url("/").url()), Integer.MAX_VALUE);
>, <Line: +    HttpURLConnection connection1 = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection connection2 = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection connection1 = client.open(server.url("/").url());
>, <Line: +    assertEquals(1, connectionPool.getMultiplexedConnectionCount());
>, <Line: +    HttpURLConnection connection2 = client.open(server.url("/").url());
>, <Line: +        HttpURLConnection conn = client.open(server.url(path).url());
>]
[<Line: -    connection = client.open(server.getUrl("/foo"));
>, <Line: -    connection = client.open(server.getUrl("/foo"));
>, <Line: -    connection = client.open(server.getUrl("/foo"));
>, <Line: -    connection = client.open(server.getUrl("/foo"));
>, <Line: -    connection = client.open(server.getUrl("/foo"));
>, <Line: -    connection = client.open(server.getUrl("/foo"));
>, <Line: -    HttpURLConnection connection1 = client.open(server.getUrl("/r1"));
>, <Line: -    HttpURLConnection connection2 = client.open(server.getUrl("/r2"));
>, <Line: -    assertContent("ABCABCABC", client.open(server.getUrl("/r1")), Integer.MAX_VALUE);
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection1 = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection2 = client.open(server.getUrl("/"));
>, <Line: -    assertContent("A", client.open(server.getUrl("/")), Integer.MAX_VALUE);
>, <Line: -    assertContent("A", client.open(server.getUrl("/")), Integer.MAX_VALUE);
>, <Line: -    assertContent("A", client.open(server.getUrl("/")), Integer.MAX_VALUE);
>, <Line: -    assertContent("A", client.open(server.getUrl("/")), Integer.MAX_VALUE);
>, <Line: -    assertContent("A", client.open(server.getUrl("/")), Integer.MAX_VALUE);
>, <Line: -    HttpURLConnection connection1 = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection2 = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection1 = client.open(server.getUrl("/"));
>, <Line: -    assertEquals(1, connectionPool.getSpdyConnectionCount());
>, <Line: -    HttpURLConnection connection2 = client.open(server.getUrl("/"));
>, <Line: -        HttpURLConnection conn = client.open(server.getUrl(path));
>]