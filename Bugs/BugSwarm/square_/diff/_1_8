[<Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    URL url = server.url("/foo").url();
>, <Line: +    connection = client.open(server.url("/def").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection c1 = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection c2 = client.open(server.url("/").url());
>, <Line: +    assertContent("ABCDEFGHIJKLMNOPQR", client.open(server.url("/foo").url()));
>, <Line: +    assertContent("ABCDEFGHIJKLMNOPQR", client.open(server.url("/bar?baz=quux").url()));
>, <Line: +    assertContent("ABCDEFGHIJKLMNOPQR", client.open(server.url("/z").url()));
>, <Line: +    assertContent("ABCDEFGHIJKLMNOPQR", client.open(server.url("/foo").url()));
>, <Line: +    assertContent("ABCDEFGHIJKLMNOPQR", client.open(server.url("/bar?baz=quux").url()));
>, <Line: +    assertContent("ABCDEFGHIJKLMNOPQR", client.open(server.url("/z").url()));
>, <Line: +    HttpURLConnection connection1 = client.open(server.url("/a").url());
>, <Line: +    HttpURLConnection connection2 = client.open(server.url("/b").url());
>, <Line: +    HttpURLConnection conn = client.open(server.url("/").url());
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    connection = client.open(server.url("/foo").url());
>, <Line: +    HttpsURLConnection httpsConnection = (HttpsURLConnection) client.open(server.url("/foo").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection connection1 = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection connection2 = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/foo").url());
>, <Line: +    connection = client.open(server.url("/foo").url());
>, <Line: +    assertContent("abc", client.open(server.url("/").url()));
>, <Line: +    assertContent("def", client.open(server.url("/").url()));
>, <Line: +    connection = client.open(server.url("/foo").url());
>, <Line: +    assertContent("abc", client.open(server.url("/").url()));
>, <Line: +      readAscii(client.open(server.url("/").url()).getInputStream(), 5);
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    assertContent("abc", client.open(server.url("/").url()));
>, <Line: +      readAscii(client.open(server.url("/").url()).getInputStream(), 5);
>, <Line: +    URL url = server.url("/foo").url();
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    InputStream in = client.open(server.url("/").url()).getInputStream();
>, <Line: +    assertContent("ABCDEFGHIJKLMNOPQRSTUVWXYZ", client.open(server.url("/").url()));
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URLConnection connection = client.open(server.url("/").url());
>, <Line: +    URLConnection connection = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection connection = client.open(server.url("/").url());
>, <Line: +    URLConnection connection = client.open(server.url("/").url());
>, <Line: +    URLConnection connection = client.open(server.url("/").url());
>, <Line: +    URLConnection connection = client.open(server.url("/").url());
>, <Line: +    URLConnection connection = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection connection1 = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection connection2 = client.open(server.url("/").url());
>, <Line: +    assertContent("a", client.open(server.url("/").url()));
>, <Line: +    assertContent("b", client.open(server.url("/").url()));
>, <Line: +    HttpURLConnection connection = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection connection1 = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection connection2 = client.open(server.url("/").url());
>, <Line: +    URLConnection connection1 = client.open(server.url("/").url());
>, <Line: +    assertContent("A", client.open(server.url("/").url()));
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URL url = server.url("/").url();
>, <Line: +      connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    URLConnection connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +        .addHeader("Location: " + server2.url("/").url())
>, <Line: +    HttpsURLConnection connection = (HttpsURLConnection) client.open(server.url("/").url());
>, <Line: +        .addHeader("Location: " + server2.url("/").url())
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +        .addHeader("Location: " + server2.url("/").url().toString())
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    assertEquals(server2.url("/").url(), connection.getURL());
>, <Line: +    assertContent("This is the first server again!", client.open(server.url("/").url()));
>, <Line: +    assertContent("This is the 2nd server, again!", client.open(server2.url("/").url()));
>, <Line: +        .addHeader("Location: " + server2.url("/b").url().toString())
>, <Line: +    assertContent("This is the 2nd server!", client.open(server.url("/a").url()));
>, <Line: +    assertEquals(Arrays.asList(server.url("/").url().toURI(), server2.url("/").url().toURI()),
>, <Line: +        .addHeader("Location: " + server2.url("/b").url()));
>, <Line: +    assertContent("Page 2", client.open(server.url("/a").url()));
>, <Line: +    connection = client.open(server.url("/page1").url());
>, <Line: +    connection = client.open(server.url("/page1").url());
>, <Line: +        .addHeader("Location: " + server.url("/").url())
>, <Line: +    connection = client.open(server.url("/foo").url());
>, <Line: +    connection = client.open(server.url("/page1").url());
>, <Line: +    connection = client.open(server.url("/0").url());
>, <Line: +    assertEquals(server.url("/20").url(), connection.getURL());
>, <Line: +    connection = client.open(server.url("/0").url());
>, <Line: +      assertEquals(server.url("/20").url(), connection.getURL());
>, <Line: +    URL url = server.url("/").url();
>, <Line: +    URLConnection connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection a = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection b = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection a = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection b = client.open(server.url("/").url());
>, <Line: +    URLConnection connection = client.open(server.url("/").url());
>, <Line: +    assertContent("This is the new page!", client.open(server.url("/").url()));
>, <Line: +    URLConnection connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection connection1 = client.open(server.url("/").url());
>, <Line: +      HttpURLConnection connection2 = client.open(server.url("").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    assertContent("A", client.open(server.url("/a").url()));
>, <Line: +        connection = client.open(server.url("/b").url());
>, <Line: +    assertContent("abc", client.open(server.url("/").url()));
>, <Line: +    HttpURLConnection post = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/b").url());
>, <Line: +    connection = client.open(server.url("/b").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    assertContent("A", client.open(server.url("/private").url()));
>, <Line: +    assertContent("A", client.open(server.url("/private").url()));
>, <Line: +    assertContent("c", client.open(server.url("/a").url()));
>, <Line: +    connection = client.open(server.url("/0").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    assertContent("A", client.open(server.url("/").url()));
>, <Line: +    connection = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection connection1 = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection connection2 = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection connection = client.open(server.url("/").url());
>, <Line: +    HttpURLConnection connection = client.open(server.url("/").url());
>, <Line: +    assertContent("abc", client.open(server.url("/").url()));
>, <Line: +    assertContent("abc", client.open(server.url("/").url()));
>, <Line: +    assertContent("abc", client.open(server.url("/").url()));
>, <Line: +    assertContent("abc", client.open(server.url("/").url()));
>, <Line: +    HttpURLConnection urlConnection = client.open(server.url("/").url());
>]
[<Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    URL url = server.getUrl("/foo");
>, <Line: -    connection = client.open(server.getUrl("/def"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection c1 = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection c2 = client.open(server.getUrl("/"));
>, <Line: -    assertContent("ABCDEFGHIJKLMNOPQR", client.open(server.getUrl("/foo")));
>, <Line: -    assertContent("ABCDEFGHIJKLMNOPQR", client.open(server.getUrl("/bar?baz=quux")));
>, <Line: -    assertContent("ABCDEFGHIJKLMNOPQR", client.open(server.getUrl("/z")));
>, <Line: -    assertContent("ABCDEFGHIJKLMNOPQR", client.open(server.getUrl("/foo")));
>, <Line: -    assertContent("ABCDEFGHIJKLMNOPQR", client.open(server.getUrl("/bar?baz=quux")));
>, <Line: -    assertContent("ABCDEFGHIJKLMNOPQR", client.open(server.getUrl("/z")));
>, <Line: -    HttpURLConnection connection1 = client.open(server.getUrl("/a"));
>, <Line: -    HttpURLConnection connection2 = client.open(server.getUrl("/b"));
>, <Line: -    HttpURLConnection conn = client.open(server.getUrl("/"));
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    connection = client.open(server.getUrl("/foo"));
>, <Line: -    HttpsURLConnection httpsConnection = (HttpsURLConnection) client.open(server.getUrl("/foo"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection1 = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection2 = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/foo"));
>, <Line: -    connection = client.open(server.getUrl("/foo"));
>, <Line: -    assertContent("abc", client.open(server.getUrl("/")));
>, <Line: -    assertContent("def", client.open(server.getUrl("/")));
>, <Line: -    connection = client.open(server.getUrl("/foo"));
>, <Line: -    assertContent("abc", client.open(server.getUrl("/")));
>, <Line: -      readAscii(client.open(server.getUrl("/")).getInputStream(), 5);
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    assertContent("abc", client.open(server.getUrl("/")));
>, <Line: -      readAscii(client.open(server.getUrl("/")).getInputStream(), 5);
>, <Line: -    URL url = server.getUrl("/foo");
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    InputStream in = client.open(server.getUrl("/")).getInputStream();
>, <Line: -    assertContent("ABCDEFGHIJKLMNOPQRSTUVWXYZ", client.open(server.getUrl("/")));
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URLConnection connection = client.open(server.getUrl("/"));
>, <Line: -    URLConnection connection = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection = client.open(server.getUrl("/"));
>, <Line: -    URLConnection connection = client.open(server.getUrl("/"));
>, <Line: -    URLConnection connection = client.open(server.getUrl("/"));
>, <Line: -    URLConnection connection = client.open(server.getUrl("/"));
>, <Line: -    URLConnection connection = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection1 = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection2 = client.open(server.getUrl("/"));
>, <Line: -    assertContent("a", client.open(server.getUrl("/")));
>, <Line: -    assertContent("b", client.open(server.getUrl("/")));
>, <Line: -    HttpURLConnection connection = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection1 = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection2 = client.open(server.getUrl("/"));
>, <Line: -    URLConnection connection1 = client.open(server.getUrl("/"));
>, <Line: -    assertContent("A", client.open(server.getUrl("/")));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -      connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    URLConnection connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -        .addHeader("Location: " + server2.getUrl("/"))
>, <Line: -    HttpsURLConnection connection = (HttpsURLConnection) client.open(server.getUrl("/"));
>, <Line: -        .addHeader("Location: " + server2.getUrl("/"))
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -        .addHeader("Location: " + server2.getUrl("/").toString())
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    assertEquals(server2.getUrl("/"), connection.getURL());
>, <Line: -    assertContent("This is the first server again!", client.open(server.getUrl("/")));
>, <Line: -    assertContent("This is the 2nd server, again!", client.open(server2.getUrl("/")));
>, <Line: -        .addHeader("Location: " + server2.getUrl("/b").toString())
>, <Line: -    assertContent("This is the 2nd server!", client.open(server.getUrl("/a")));
>, <Line: -    assertEquals(Arrays.asList(server.getUrl("/").toURI(), server2.getUrl("/").toURI()),
>, <Line: -        .addHeader("Location: " + server2.getUrl("/b")));
>, <Line: -    assertContent("Page 2", client.open(server.getUrl("/a")));
>, <Line: -    connection = client.open(server.getUrl("/page1"));
>, <Line: -    connection = client.open(server.getUrl("/page1"));
>, <Line: -        .addHeader("Location: " + server.getUrl("/"))
>, <Line: -    connection = client.open(server.getUrl("/foo"));
>, <Line: -    connection = client.open(server.getUrl("/page1"));
>, <Line: -    connection = client.open(server.getUrl("/0"));
>, <Line: -    assertEquals(server.getUrl("/20"), connection.getURL());
>, <Line: -    connection = client.open(server.getUrl("/0"));
>, <Line: -      assertEquals(server.getUrl("/20"), connection.getURL());
>, <Line: -    URL url = server.getUrl("/");
>, <Line: -    URLConnection connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection a = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection b = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection a = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection b = client.open(server.getUrl("/"));
>, <Line: -    URLConnection connection = client.open(server.getUrl("/"));
>, <Line: -    assertContent("This is the new page!", client.open(server.getUrl("/")));
>, <Line: -    URLConnection connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection1 = client.open(server.getUrl("/"));
>, <Line: -      HttpURLConnection connection2 = client.open(server.getUrl(""));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    assertContent("A", client.open(server.getUrl("/a")));
>, <Line: -        connection = client.open(server.getUrl("/b"));
>, <Line: -    assertContent("abc", client.open(server.getUrl("/")));
>, <Line: -    HttpURLConnection post = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/b"));
>, <Line: -    connection = client.open(server.getUrl("/b"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    assertContent("A", client.open(server.getUrl("/private")));
>, <Line: -    assertContent("A", client.open(server.getUrl("/private")));
>, <Line: -    assertContent("c", client.open(server.getUrl("/a")));
>, <Line: -    connection = client.open(server.getUrl("/0"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    assertContent("A", client.open(server.getUrl("/")));
>, <Line: -    connection = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection1 = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection2 = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection = client.open(server.getUrl("/"));
>, <Line: -    HttpURLConnection connection = client.open(server.getUrl("/"));
>, <Line: -    assertContent("abc", client.open(server.getUrl("/")));
>, <Line: -    assertContent("abc", client.open(server.getUrl("/")));
>, <Line: -    assertContent("abc", client.open(server.getUrl("/")));
>, <Line: -    assertContent("abc", client.open(server.getUrl("/")));
>, <Line: -    HttpURLConnection urlConnection = client.open(server.getUrl("/"));
>]