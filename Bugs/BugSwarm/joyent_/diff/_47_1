[<Line: +import com.joyent.manta.config.DefaultsConfigContext;
>, <Line: +import org.apache.http.NoHttpResponseException;
>, <Line: +import java.util.function.Function;
>, <Line: +        Function<HttpResponse, UUID> jobIdFunction = response -> {
>, <Line: +            final String location = response.getHeaders().getLocation();
>, <Line: +            String id = MantaUtils.lastItemInPath(location);
>, <Line: +            return UUID.fromString(id);
>, <Line: +        };
>, <Line: +        /* This endpoint has a propensity for failing to respond, so we retry on
>, <Line: +         * failure. */
>, <Line: +        final int retries;
>, <Line: +        if (config.getRetries() == null) {
>, <Line: +            retries = DefaultsConfigContext.DEFAULT_HTTP_RETRIES;
>, <Line: +        } else {
>, <Line: +            retries = config.getRetries();
>, <Line: +        }
>, <Line: +        IOException lastException = new IOException("Never thrown. Report me as a bug.");
>, <Line: +        // if retries are set to zero, we always execute at least once
>, <Line: +        for (int count = 0; count < retries || count == 0; count++) {
>, <Line: +            try {
>, <Line: +                return httpHelper.executeAndCloseRequest(request,
>, <Line: +                        jobIdFunction, "POST   {} response [{}] {} ", path);
>, <Line: +            } catch (NoHttpResponseException e) {
>, <Line: +                lastException = e;
>, <Line: +                LOG.warn("Error posting createJob. Retrying.", e);
>, <Line: +            }
>, <Line: +        }
>, <Line: +        throw lastException;
>]
[<Line: -        HttpResponse response = httpHelper.executeAndCloseRequest(request,
>, <Line: -                "POST   {} response [{}] {} ", path);
>, <Line: -        final String location = response.getHeaders().getLocation();
>, <Line: -        String id = MantaUtils.lastItemInPath(location);
>, <Line: -        return UUID.fromString(id);
>]