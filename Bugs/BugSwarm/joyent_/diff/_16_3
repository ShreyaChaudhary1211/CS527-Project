[<Line: +import com.joyent.manta.config.ConfigContext;
>, <Line: +import com.joyent.manta.config.DefaultsConfigContext;
>, <Line: +     * Library configuration context reference.
>, <Line: +    private final ConfigContext config;
>, <Line: +     * @param config library configuration context reference
>, <Line: +                                      final ConfigContext config)
>, <Line: +        this.config = config;
>, <Line: +    private HttpClient buildHttpClient() {
>, <Line: +        final int httpRetries;
>, <Line: +        if (config.getRetries() == null) {
>, <Line: +            httpRetries = DefaultsConfigContext.DEFAULT_HTTP_RETRIES;
>, <Line: +        } else {
>, <Line: +            httpRetries = config.getRetries();
>, <Line: +        }
>, <Line: +        defaultHttpClient.setHttpRequestRetryHandler(new DefaultHttpRequestRetryHandler(httpRetries, false));
>, <Line: +                final int httpTimeout;
>, <Line: +                if (config.getTimeout() == null) {
>, <Line: +                    httpTimeout = DefaultsConfigContext.DEFAULT_HTTP_TIMEOUT;
>, <Line: +                } else {
>, <Line: +                    httpTimeout = config.getTimeout();
>, <Line: +                }
>]
[<Line: -    /**
>, <Line: -     * Number of times to retry failed requests.
>, <Line: -     */
>, <Line: -    private static final int HTTP_RETRIES = 3;
>, <Line: -     * The HTTP timeout in milliseconds.
>, <Line: -    private final int httpTimeout;
>, <Line: -     * @param httpTimeout The HTTP timeout in milliseconds.
>, <Line: -                                      final int httpTimeout)
>, <Line: -        this.httpTimeout = httpTimeout;
>, <Line: -    private static HttpClient buildHttpClient() {
>, <Line: -        defaultHttpClient.setHttpRequestRetryHandler(new DefaultHttpRequestRetryHandler(HTTP_RETRIES, false));
>]