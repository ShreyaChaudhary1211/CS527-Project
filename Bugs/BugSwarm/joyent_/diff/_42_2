[]
[<Line: -package com.joyent.manta.client;
>, <Line: -import org.apache.commons.lang3.builder.ToStringBuilder;
>, <Line: -import java.io.Serializable;
>, <Line: -import java.util.Comparator;
>, <Line: -import java.util.Objects;
>, <Line: -import java.util.UUID;
>, <Line: -/**
>, <Line: - * Class representing a multipart upload in progress.
>, <Line: - *
>, <Line: - * @author <a href="https://github.com/dekobon">Elijah Zupancic</a>
>, <Line: - * @since 2.5.0
>, <Line: - */
>, <Line: -public class MantaMultipartUpload implements Comparator<MantaMultipartUpload>, Serializable {
>, <Line: -    private static final long serialVersionUID = 1993692738555250766L;
>, <Line: -    /**
>, <Line: -     * Transaction ID for multipart upload.
>, <Line: -     */
>, <Line: -    private UUID id;
>, <Line: -    /**
>, <Line: -     * Path to final object being uploaded to Manta.
>, <Line: -     */
>, <Line: -    private String path;
>, <Line: -    /**
>, <Line: -     * Creates a new instance.
>, <Line: -     *
>, <Line: -     * @param uploadId Transaction ID for multipart upload
>, <Line: -     * @param path Path to final object being uploaded to Manta
>, <Line: -     */
>, <Line: -    public MantaMultipartUpload(final UUID uploadId, final String path) {
>, <Line: -        this.id = uploadId;
>, <Line: -        this.path = path;
>, <Line: -    }
>, <Line: -    @Override
>, <Line: -    public boolean equals(final Object o) {
>, <Line: -        if (this == o) {
>, <Line: -            return true;
>, <Line: -        }
>, <Line: -        if (o == null || getClass() != o.getClass()) {
>, <Line: -            return false;
>, <Line: -        }
>, <Line: -        final MantaMultipartUpload that = (MantaMultipartUpload) o;
>, <Line: -        return Objects.equals(id, that.id)
>, <Line: -               && Objects.equals(path, that.path);
>, <Line: -    }
>, <Line: -    @Override
>, <Line: -    public int hashCode() {
>, <Line: -        return Objects.hash(id, path);
>, <Line: -    }
>, <Line: -    @Override
>, <Line: -    public String toString() {
>, <Line: -        return new ToStringBuilder(this)
>, <Line: -                .append("id", id)
>, <Line: -                .append("path", path)
>, <Line: -                .toString();
>, <Line: -    }
>, <Line: -    @Override
>, <Line: -    public int compare(final MantaMultipartUpload o1, final MantaMultipartUpload o2) {
>, <Line: -        return o1.path.compareTo(o2.path);
>, <Line: -    }
>, <Line: -    public UUID getId() {
>, <Line: -        return id;
>, <Line: -    }
>, <Line: -    public String getPath() {
>, <Line: -        return path;
>, <Line: -    }
>, <Line: -    /**
>, <Line: -     * A single part of a multipart upload.
>, <Line: -     */
>, <Line: -    public static class Part implements Comparable<Part>, Serializable {
>, <Line: -        private static final long serialVersionUID = -738331736064518314L;
>, <Line: -        /**
>, <Line: -         * Non-zero positive integer representing the relative position of the
>, <Line: -         * part in relation to the other parts for the multipart upload.
>, <Line: -         */
>, <Line: -        private final int partNumber;
>, <Line: -        /**
>, <Line: -         * Remote path on Manta for the part's file.
>, <Line: -         */
>, <Line: -        private final String objectPath;
>, <Line: -        /**
>, <Line: -         * Etag value of the part.
>, <Line: -         */
>, <Line: -        private final String etag;
>, <Line: -        /**
>, <Line: -         * Content length of the part.
>, <Line: -         */
>, <Line: -        private final Long length;
>, <Line: -        /**
>, <Line: -         * Creates a new instance based on explicitly defined parameters.
>, <Line: -         *
>, <Line: -         * @param partNumber Non-zero positive integer representing the relative position of the part
>, <Line: -         * @param objectPath Remote path on Manta for the part's file
>, <Line: -         * @param etag Etag value of the part
>, <Line: -         * @param length size in bytes of the part
>, <Line: -         */
>, <Line: -        public Part(final int partNumber, final String objectPath,
>, <Line: -                    final String etag, final Long length) {
>, <Line: -            this.partNumber = partNumber;
>, <Line: -            this.objectPath = objectPath;
>, <Line: -            this.etag = etag;
>, <Line: -            this.length = length;
>, <Line: -        }
>, <Line: -        /**
>, <Line: -         * Creates a new instance based on a response from {@link MantaClient}.
>, <Line: -         *
>, <Line: -         * @param object response object from returned from {@link MantaClient}
>, <Line: -         */
>, <Line: -        Part(final MantaObject object) {
>, <Line: -            final String filename = MantaUtils.lastItemInPath(object.getPath());
>, <Line: -            this.objectPath = object.getPath();
>, <Line: -            this.partNumber = Integer.parseInt(filename);
>, <Line: -            this.etag = object.getEtag();
>, <Line: -            length = object.getContentLength();
>, <Line: -        }
>, <Line: -        public int getPartNumber() {
>, <Line: -            return partNumber;
>, <Line: -        }
>, <Line: -        public String getEtag() {
>, <Line: -            return etag;
>, <Line: -        }
>, <Line: -        protected String getObjectPath() {
>, <Line: -            return objectPath;
>, <Line: -        }
>, <Line: -        @Override
>, <Line: -        public int compareTo(final Part that) {
>, <Line: -            return Integer.compare(this.getPartNumber(), that.getPartNumber());
>, <Line: -        }
>, <Line: -        @Override
>, <Line: -        public boolean equals(final Object that) {
>, <Line: -            if (this == that) {
>, <Line: -                return true;
>, <Line: -            }
>, <Line: -            if (that == null || getClass() != that.getClass()) {
>, <Line: -                return false;
>, <Line: -            }
>, <Line: -            final Part part = (Part) that;
>, <Line: -            return partNumber == part.partNumber
>, <Line: -                    && Objects.equals(objectPath, part.objectPath)
>, <Line: -                    && Objects.equals(etag, part.etag);
>, <Line: -        }
>, <Line: -        @Override
>, <Line: -        public int hashCode() {
>, <Line: -            return Objects.hash(partNumber, objectPath, etag);
>, <Line: -        }
>, <Line: -        @Override
>, <Line: -        public String toString() {
>, <Line: -            return new ToStringBuilder(this)
>, <Line: -                    .append("partNumber", partNumber)
>, <Line: -                    .append("objectPath", objectPath)
>, <Line: -                    .append("etag", etag)
>, <Line: -                    .toString();
>, <Line: -        }
>, <Line: -    }
>, <Line: -}
>]