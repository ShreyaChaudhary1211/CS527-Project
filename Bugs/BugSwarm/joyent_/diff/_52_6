[<Line: +package com.joyent.manta.client.multipart;
>, <Line: +import com.joyent.manta.client.MantaClient;
>, <Line: +import com.joyent.manta.client.MantaObject;
>, <Line: +import com.joyent.manta.client.MantaUtils;
>, <Line: +import org.apache.commons.lang3.builder.ToStringBuilder;
>, <Line: +import java.io.Serializable;
>, <Line: +import java.util.Objects;
>, <Line: +/**
>, <Line: + * A single part of a multipart upload.
>, <Line: + *
>, <Line: + * @author <a href="https://github.com/dekobon">Elijah Zupancic</a>
>, <Line: + * @since 2.5.0
>, <Line: + */
>, <Line: +public class MantaMultipartUploadPart
>, <Line: +        implements Comparable<MantaMultipartUploadPart>, Serializable {
>, <Line: +    private static final long serialVersionUID = -738331736064518314L;
>, <Line: +    /**
>, <Line: +     * Non-zero positive integer representing the relative position of the
>, <Line: +     * part in relation to the other parts for the multipart upload.
>, <Line: +     */
>, <Line: +    private final int partNumber;
>, <Line: +    /**
>, <Line: +     * Remote path on Manta for the part's file.
>, <Line: +     */
>, <Line: +    private final String objectPath;
>, <Line: +    /**
>, <Line: +     * Etag value of the part.
>, <Line: +     */
>, <Line: +    private final String etag;
>, <Line: +    /**
>, <Line: +     * Content length of the part.
>, <Line: +     */
>, <Line: +    private final Long length;
>, <Line: +    /**
>, <Line: +     * Creates a new instance based on explicitly defined parameters.
>, <Line: +     *
>, <Line: +     * @param partNumber Non-zero positive integer representing the relative position of the part
>, <Line: +     * @param objectPath Remote path on Manta for the part's file
>, <Line: +     * @param etag Etag value of the part
>, <Line: +     * @param length size in bytes of the part
>, <Line: +     */
>, <Line: +    public MantaMultipartUploadPart(final int partNumber, final String objectPath,
>, <Line: +                final String etag, final Long length) {
>, <Line: +        this.partNumber = partNumber;
>, <Line: +        this.objectPath = objectPath;
>, <Line: +        this.etag = etag;
>, <Line: +        this.length = length;
>, <Line: +    }
>, <Line: +    /**
>, <Line: +     * Creates a new instance based on a response from {@link MantaClient}.
>, <Line: +     *
>, <Line: +     * @param object response object from returned from {@link MantaClient}
>, <Line: +     */
>, <Line: +    public MantaMultipartUploadPart(final MantaObject object) {
>, <Line: +        final String filename = MantaUtils.lastItemInPath(object.getPath());
>, <Line: +        this.objectPath = object.getPath();
>, <Line: +        this.partNumber = Integer.parseInt(filename);
>, <Line: +        this.etag = object.getEtag();
>, <Line: +        length = object.getContentLength();
>, <Line: +    }
>, <Line: +    public int getPartNumber() {
>, <Line: +        return partNumber;
>, <Line: +    }
>, <Line: +    public String getEtag() {
>, <Line: +        return etag;
>, <Line: +    }
>, <Line: +    protected String getObjectPath() {
>, <Line: +        return objectPath;
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public int compareTo(final MantaMultipartUploadPart that) {
>, <Line: +        return Integer.compare(this.getPartNumber(), that.getPartNumber());
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public boolean equals(final Object that) {
>, <Line: +        if (this == that) {
>, <Line: +            return true;
>, <Line: +        }
>, <Line: +        if (that == null || getClass() != that.getClass()) {
>, <Line: +            return false;
>, <Line: +        }
>, <Line: +        final MantaMultipartUploadPart part = (MantaMultipartUploadPart) that;
>, <Line: +        return partNumber == part.partNumber
>, <Line: +                && Objects.equals(objectPath, part.objectPath)
>, <Line: +                && Objects.equals(etag, part.etag);
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public int hashCode() {
>, <Line: +        return Objects.hash(partNumber, objectPath, etag);
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public String toString() {
>, <Line: +        return new ToStringBuilder(this)
>, <Line: +                .append("partNumber", partNumber)
>, <Line: +                .append("objectPath", objectPath)
>, <Line: +                .append("etag", etag)
>, <Line: +                .toString();
>, <Line: +    }
>, <Line: +}
>]
[]