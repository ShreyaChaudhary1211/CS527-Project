[<Line: +        assertEquals(multipart.getStatus(new UUID(0L, -1L)),
>, <Line: +                     MantaMultipartStatus.UNKNOWN);
>, <Line: +        multipart.complete(uploadId);
>, <Line: +        MantaMultipartStatus status = multipart.getStatus(uploadId);
>, <Line: +        assertEquals(status, MantaMultipartStatus.COMPLETED);
>, <Line: +        multipart.complete(uploadId);
>, <Line: +        multipart.complete(uploadId);
>, <Line: +        multipart.complete(upload);
>, <Line: +        MantaMultipartStatus status = multipart.getStatus(upload);
>, <Line: +        assertEquals(status, MantaMultipartStatus.COMPLETED);
>, <Line: +        multipart.complete(uploadId);
>, <Line: +        MantaMultipartStatus status = multipart.getStatus(uploadId);
>, <Line: +        assertEquals(status, MantaMultipartStatus.ABORTED);
>, <Line: +        if (!job.getCancelled()) {
>]
[<Line: -        assertFalse(multipart.isStarted(new UUID(0L, -1L)));
>, <Line: -        multipart.commit(uploadId);
>, <Line: -        assertTrue(multipart.isComplete(uploadId));
>, <Line: -        assertFalse(multipart.isStarted(uploadId));
>, <Line: -        multipart.commit(uploadId);
>, <Line: -        multipart.commit(uploadId);
>, <Line: -        multipart.commit(upload);
>, <Line: -        assertTrue(multipart.isComplete(upload));
>, <Line: -        assertFalse(multipart.isStarted(upload));
>, <Line: -        multipart.commit(uploadId);
>, <Line: -        assertTrue(multipart.isComplete(uploadId));
>, <Line: -        assertFalse(multipart.isStarted(uploadId));
>, <Line: -        if (job.getCancelled()) {
>, <Line: -            if (!mantaClient.existsAndIsAccessible(path)) {
>, <Line: -                throw new SkipException("File was actually created. Actual job state is: "
>, <Line: -                        + job.toString());
>, <Line: -            }
>, <Line: -        } else {
>]