[<Line: +package com.galenframework.tests.generator.builders;
>, <Line: +import com.galenframework.generator.*;
>, <Line: +import com.galenframework.generator.builders.SpecBuilderAbove;
>, <Line: +import com.galenframework.generator.builders.SpecGeneratorOptions;
>, <Line: +import com.galenframework.generator.raycast.EdgesContainer;
>, <Line: +import com.galenframework.page.Point;
>, <Line: +import com.galenframework.page.Rect;
>, <Line: +import org.testng.annotations.Test;
>, <Line: +import java.util.LinkedList;
>, <Line: +import java.util.List;
>, <Line: +import static java.util.Collections.emptyList;
>, <Line: +import static org.hamcrest.MatcherAssert.assertThat;
>, <Line: +import static org.hamcrest.Matchers.is;
>, <Line: +public class SpecBuilderAboveTest {
>, <Line: +    @Test
>, <Line: +    public void should_generate_spec_above() {
>, <Line: +        SpecBuilderAbove specBuilderAbove = new SpecBuilderAbove(
>, <Line: +            new PageItem("title", new Rect(10, 10, 100, 30)),
>, <Line: +            new EdgesContainer.Edge(new PageItemNode(new PageItem("description")),
>, <Line: +                new Point(10, 50),
>, <Line: +                new Point(110, 50)
>, <Line: +            )
>, <Line: +        );
>, <Line: +        List<SpecStatement> specStatements = specBuilderAbove.buildSpecs(new LinkedList<>(), new SpecGeneratorOptions());
>, <Line: +        assertThat(specStatements.size(), is(1));
>, <Line: +        SpecStatement statement = specStatements.get(0);
>, <Line: +        assertThat(statement.getStatement(), is("above description 10px"));
>, <Line: +        assertThat(statement.getAssertions().size(), is(1));
>, <Line: +        assertThat(statement.getAssertions().get(0), is(new SpecAssertion(
>, <Line: +            new AssertionEdge("title", AssertionEdge.EdgeType.bottom),
>, <Line: +            new AssertionEdge("description", AssertionEdge.EdgeType.top))));
>, <Line: +    }
>, <Line: +}
>]
[]