[<Line: +package org.mp4parser;
>, <Line: +import org.mp4parser.tools.Hex;
>, <Line: +    static Properties BOX_MAP_CACHE = null;
>, <Line: +    static String[] EMPTY_STRING_ARRAY = new String[0];
>, <Line: +    StringBuilder buildLookupStrings = new StringBuilder();
>, <Line: +    ThreadLocal<String> clazzName = new ThreadLocal<String>();
>, <Line: +    ThreadLocal<String[]> param = new ThreadLocal<String[]>();
>, <Line: +        if (BOX_MAP_CACHE != null) {
>, <Line: +            mapping = new Properties(BOX_MAP_CACHE);
>, <Line: +        } else {
>, <Line: +            InputStream is = getClass().getResourceAsStream("/isoparser-default.properties");
>, <Line: +            try {
>, <Line: +                mapping = new Properties();
>, <Line: +                try {
>, <Line: +                    mapping.load(is);
>, <Line: +                    ClassLoader cl = Thread.currentThread().getContextClassLoader();
>, <Line: +                    if (cl == null) {
>, <Line: +                        cl = ClassLoader.getSystemClassLoader();
>, <Line: +                    }
>, <Line: +                    Enumeration<URL> enumeration = cl.getResources("isoparser-custom.properties");
>, <Line: +                    while (enumeration.hasMoreElements()) {
>, <Line: +                        URL url = enumeration.nextElement();
>, <Line: +                        InputStream customIS = url.openStream();
>, <Line: +                        try {
>, <Line: +                            mapping.load(customIS);
>, <Line: +                        } finally {
>, <Line: +                            customIS.close();
>, <Line: +                        }
>, <Line: +                    for (String customProperty : customProperties) {
>, <Line: +                        mapping.load(getClass().getResourceAsStream(customProperty));
>, <Line: +                    }
>, <Line: +                    BOX_MAP_CACHE = mapping;
>, <Line: +                } catch (IOException e) {
>, <Line: +                    throw new RuntimeException(e);
>, <Line: +            } finally {
>, <Line: +                try {
>, <Line: +                    is.close();
>, <Line: +                } catch (IOException e) {
>, <Line: +                    e.printStackTrace();
>, <Line: +                    // ignore - I can't help
>, <Line: +    public ParsableBox createBox(String type, byte[] userType, String parent) {
>, <Line: +            Class<ParsableBox> clazz = (Class<ParsableBox>) Class.forName(clazzName.get());
>, <Line: +                Constructor<ParsableBox> constructorObject = clazz.getConstructor(constructorArgsClazz);
>, <Line: +            param.set(EMPTY_STRING_ARRAY);
>, <Line: +            clazzName.set(m.group(1));
>]
[<Line: -package com.coremedia.iso;
>, <Line: -import com.coremedia.iso.boxes.Box;
>, <Line: -import java.io.BufferedInputStream;
>, <Line: -        InputStream is = getClass().getResourceAsStream("/isoparser-default.properties");
>, <Line: -        try {
>, <Line: -            mapping = new Properties();
>, <Line: -            try {
>, <Line: -                mapping.load(is);
>, <Line: -                ClassLoader cl = Thread.currentThread().getContextClassLoader();
>, <Line: -                if (cl == null) {
>, <Line: -                    cl = ClassLoader.getSystemClassLoader();
>, <Line: -                }
>, <Line: -                Enumeration<URL> enumeration = cl.getResources("isoparser-custom.properties");
>, <Line: -                while (enumeration.hasMoreElements()) {
>, <Line: -                    URL url = enumeration.nextElement();
>, <Line: -                    InputStream customIS = url.openStream();
>, <Line: -                    try {
>, <Line: -                        mapping.load(customIS);
>, <Line: -                    } finally {
>, <Line: -                        customIS.close();
>, <Line: -                for (String customProperty : customProperties) {
>, <Line: -                    mapping.load(getClass().getResourceAsStream(customProperty));
>, <Line: -            } catch (IOException e) {
>, <Line: -                throw new RuntimeException(e);
>, <Line: -            }
>, <Line: -        } finally {
>, <Line: -            try {
>, <Line: -                is.close();
>, <Line: -            } catch (IOException e) {
>, <Line: -                e.printStackTrace();
>, <Line: -                // ignore - I can't help
>, <Line: -    public Box createBox(String type, byte[] userType, String parent) {
>, <Line: -            Class<Box> clazz = (Class<Box>) Class.forName(clazzName.get());
>, <Line: -                Constructor<Box> constructorObject = clazz.getConstructor(constructorArgsClazz);
>, <Line: -    StringBuilder buildLookupStrings = new StringBuilder();
>, <Line: -    ThreadLocal<String> clazzName = new ThreadLocal<String>();
>, <Line: -    ThreadLocal<String[]> param = new ThreadLocal<String[]>();
>, <Line: -    static String[] EMPTY_STRING_ARRAY = new String[0];
>, <Line: -            param.set( EMPTY_STRING_ARRAY);
>, <Line: -            clazzName.set( m.group(1));
>]