[<Line: +package org.mp4parser.muxer.container.mp4;
>, <Line: +import org.mp4parser.IsoFile;
>, <Line: +import org.mp4parser.boxes.iso14496.part12.SchemeTypeBox;
>, <Line: +import org.mp4parser.boxes.iso14496.part12.TrackBox;
>, <Line: +import org.mp4parser.muxer.*;
>, <Line: +import org.mp4parser.tools.Path;
>, <Line: +import java.io.FileInputStream;
>, <Line: +import java.io.RandomAccessFile;
>, <Line: +import java.nio.channels.ReadableByteChannel;
>, <Line: +        File f = new File(file);
>, <Line: +        FileInputStream fis = new FileInputStream(f);
>, <Line: +        Movie m = build(fis.getChannel(), new FileRandomAccessSourceImpl(new RandomAccessFile(f, "r")), file);
>, <Line: +        fis.close();
>, <Line: +        return m;
>, <Line: +     * @param name                track name to identify later
>, <Line: +     * @param readableByteChannel the box structure is read from this channel
>, <Line: +     * @param randomAccessSource  the samples or read from this randomAccessSource
>, <Line: +    public static Movie build(ReadableByteChannel readableByteChannel, RandomAccessSource randomAccessSource, String name) throws IOException {
>, <Line: +        IsoFile isoFile = new IsoFile(readableByteChannel);
>, <Line: +                m.addTrack(new CencMp4TrackImplImpl(
>, <Line: +                        trackBox.getTrackHeaderBox().getTrackId(), isoFile,
>, <Line: +                        randomAccessSource, name + "[" + trackBox.getTrackHeaderBox().getTrackId() + "]"));
>, <Line: +                m.addTrack(new Mp4TrackImpl(
>, <Line: +                        trackBox.getTrackHeaderBox().getTrackId(), isoFile,
>, <Line: +                        randomAccessSource, name + "[" + trackBox.getTrackHeaderBox().getTrackId() + "]"));
>]
[<Line: -package com.googlecode.mp4parser.authoring.container.mp4;
>, <Line: -import com.coremedia.iso.IsoFile;
>, <Line: -import com.coremedia.iso.boxes.SchemeTypeBox;
>, <Line: -import com.coremedia.iso.boxes.TrackBox;
>, <Line: -import com.googlecode.mp4parser.DataSource;
>, <Line: -import com.googlecode.mp4parser.FileDataSourceImpl;
>, <Line: -import com.googlecode.mp4parser.authoring.CencMp4TrackImplImpl;
>, <Line: -import com.googlecode.mp4parser.authoring.Movie;
>, <Line: -import com.googlecode.mp4parser.authoring.Mp4TrackImpl;
>, <Line: -import com.googlecode.mp4parser.util.Path;
>, <Line: -        return build(new FileDataSourceImpl(new File(file)));
>, <Line: -     * @param channel input channel
>, <Line: -    public static Movie build(DataSource channel) throws IOException {
>, <Line: -        IsoFile isoFile = new IsoFile(channel);
>, <Line: -                m.addTrack(new CencMp4TrackImplImpl(channel.toString() + "[" + trackBox.getTrackHeaderBox().getTrackId() + "]", trackBox));
>, <Line: -                m.addTrack(new Mp4TrackImpl(channel.toString() + "[" + trackBox.getTrackHeaderBox().getTrackId() + "]" , trackBox));
>]