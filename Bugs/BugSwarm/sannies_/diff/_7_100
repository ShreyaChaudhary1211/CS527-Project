[<Line: +package org.mp4parser;
>, <Line: +import org.mp4parser.boxes.UserBox;
>, <Line: +import org.mp4parser.tools.Hex;
>, <Line: +import org.mp4parser.tools.IsoTypeReader;
>, <Line: +import java.nio.channels.ReadableByteChannel;
>, <Line: +import java.util.logging.Level;
>, <Line: +    public abstract ParsableBox createBox(String type, byte[] userType, String parent);
>, <Line: +     * @param parentType  the current box's parent's type (null if no parent)
>, <Line: +    public ParsableBox parseBox(ReadableByteChannel byteChannel, String parentType) throws IOException {
>, <Line: +        int b;
>, <Line: +        while ((b = byteChannel.read(header.get())) + bytesRead < 8) {
>, <Line: +            throw new RuntimeException("box size of zero means 'till end of file. That is not yet supported");
>, <Line: +        if (LOG.isLoggable(Level.FINER)) {
>, <Line: +            LOG.finer("Creating " + type + " " + Hex.encodeHex(new byte[]{header.get().get(4), header.get().get(5), header.get().get(6), header.get().get(7)}));
>, <Line: +        }
>, <Line: +        ParsableBox parsableBox = createBox(type, usertype, parentType);
>, <Line: +        parsableBox.parse(byteChannel, header.get(), contentSize, this);
>, <Line: +        return parsableBox;
>]
[<Line: -package com.coremedia.iso;
>, <Line: -import com.coremedia.iso.boxes.Box;
>, <Line: -import com.coremedia.iso.boxes.Container;
>, <Line: -import com.coremedia.iso.boxes.UserBox;
>, <Line: -import com.googlecode.mp4parser.DataSource;
>, <Line: -    public abstract Box createBox(String type, byte[] userType, String parent);
>, <Line: -     * @param parent      the current box's parent (null if no parent)
>, <Line: -    public Box parseBox(DataSource byteChannel, Container parent) throws IOException {
>, <Line: -        long startPos = byteChannel.position();
>, <Line: -        int b = 0;
>, <Line: -        while ((b = byteChannel.read(header.get())) != 8) {
>, <Line: -                byteChannel.position(startPos);
>, <Line: -            contentSize = byteChannel.size() - byteChannel.position();
>, <Line: -            size = contentSize + 8;
>, <Line: -        Box box = createBox(type, usertype, (parent instanceof Box) ? ((Box) parent).getType() : "");
>, <Line: -        box.setParent(parent);
>, <Line: -        box.parse(byteChannel, header.get(), contentSize, this);
>, <Line: -        return box;
>]