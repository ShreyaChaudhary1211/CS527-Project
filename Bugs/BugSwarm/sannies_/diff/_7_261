[<Line: +package org.mp4parser.boxes.iso14496.part12;
>, <Line: +import org.mp4parser.support.AbstractFullBox;
>, <Line: +import org.mp4parser.support.Logger;
>, <Line: +import org.mp4parser.support.Matrix;
>, <Line: +import org.mp4parser.tools.DateHelper;
>, <Line: +import org.mp4parser.tools.IsoTypeReader;
>, <Line: +import org.mp4parser.tools.IsoTypeWriter;
>, <Line: +    private static Logger LOG = Logger.getLogger(TrackHeaderBox.class);
>, <Line: +    public void setCreationTime(Date creationTime) {
>, <Line: +        this.creationTime = creationTime;
>, <Line: +        if (DateHelper.convert(creationTime) >= (1l << 32)) {
>, <Line: +            setVersion(1);
>, <Line: +        }
>, <Line: +    }
>, <Line: +    public void setModificationTime(Date modificationTime) {
>, <Line: +        this.modificationTime = modificationTime;
>, <Line: +        if (DateHelper.convert(modificationTime) >= (1l << 32)) {
>, <Line: +            setVersion(1);
>, <Line: +        }
>, <Line: +    }
>, <Line: +    public void setTrackId(long trackId) {
>, <Line: +        this.trackId = trackId;
>, <Line: +    }
>, <Line: +    public void setDuration(long duration) {
>, <Line: +        this.duration = duration;
>, <Line: +        if (duration >= (1l << 32)) {
>, <Line: +            setFlags(1);
>, <Line: +        }
>, <Line: +    }
>, <Line: +    public void setLayer(int layer) {
>, <Line: +        this.layer = layer;
>, <Line: +    }
>, <Line: +    public void setAlternateGroup(int alternateGroup) {
>, <Line: +        this.alternateGroup = alternateGroup;
>, <Line: +    }
>, <Line: +    public void setVolume(float volume) {
>, <Line: +        this.volume = volume;
>, <Line: +    }
>, <Line: +    public void setMatrix(Matrix matrix) {
>, <Line: +        this.matrix = matrix;
>, <Line: +    }
>, <Line: +    public void setWidth(double width) {
>, <Line: +        this.width = width;
>, <Line: +    }
>, <Line: +    public void setHeight(double height) {
>, <Line: +        this.height = height;
>, <Line: +    }
>, <Line: +    public boolean isInMovie() {
>, <Line: +        return (getFlags() & 2) > 0;
>, <Line: +    }
>, <Line: +    public boolean isInPreview() {
>, <Line: +        return (getFlags() & 4) > 0;
>, <Line: +    }
>, <Line: +    public boolean isInPoster() {
>, <Line: +        return (getFlags() & 8) > 0;
>, <Line: +    }
>]
[<Line: -package com.coremedia.iso.boxes;
>, <Line: -import com.coremedia.iso.IsoTypeReader;
>, <Line: -import com.coremedia.iso.IsoTypeWriter;
>, <Line: -import com.googlecode.mp4parser.AbstractFullBox;
>, <Line: -import com.googlecode.mp4parser.util.DateHelper;
>, <Line: -import com.googlecode.mp4parser.util.Logger;
>, <Line: -import com.googlecode.mp4parser.util.Matrix;
>, <Line: -    private static Logger LOG = Logger.getLogger(TrackHeaderBox.class);
>, <Line: -    public void setCreationTime(Date creationTime) {
>, <Line: -        this.creationTime = creationTime;
>, <Line: -        if (DateHelper.convert(creationTime) >= (1l << 32)) {
>, <Line: -            setVersion(1);
>, <Line: -        }
>, <Line: -    }
>, <Line: -    public void setModificationTime(Date modificationTime) {
>, <Line: -        this.modificationTime = modificationTime;
>, <Line: -        if (DateHelper.convert(modificationTime) >= (1l << 32)) {
>, <Line: -            setVersion(1);
>, <Line: -        }
>, <Line: -    }
>, <Line: -    public void setTrackId(long trackId) {
>, <Line: -        this.trackId = trackId;
>, <Line: -    }
>, <Line: -    public void setDuration(long duration) {
>, <Line: -        this.duration = duration;
>, <Line: -        if (duration >= (1l << 32)) {
>, <Line: -            setFlags(1);
>, <Line: -        }
>, <Line: -    }
>, <Line: -    public void setLayer(int layer) {
>, <Line: -        this.layer = layer;
>, <Line: -    }
>, <Line: -    public void setAlternateGroup(int alternateGroup) {
>, <Line: -        this.alternateGroup = alternateGroup;
>, <Line: -    }
>, <Line: -    public void setVolume(float volume) {
>, <Line: -        this.volume = volume;
>, <Line: -    }
>, <Line: -    public void setMatrix(Matrix matrix) {
>, <Line: -        this.matrix = matrix;
>, <Line: -    }
>, <Line: -    public void setWidth(double width) {
>, <Line: -        this.width = width;
>, <Line: -    }
>, <Line: -    public void setHeight(double height) {
>, <Line: -        this.height = height;
>, <Line: -    }
>, <Line: -    public boolean isInMovie() {
>, <Line: -        return (getFlags() & 2) > 0;
>, <Line: -    }
>, <Line: -    public boolean isInPreview() {
>, <Line: -        return (getFlags() & 4) > 0;
>, <Line: -    }
>, <Line: -    public boolean isInPoster() {
>, <Line: -        return (getFlags() & 8) > 0;
>, <Line: -    }
>]