[]
[<Line: -package com.coremedia.iso;
>, <Line: -import com.coremedia.iso.boxes.Box;
>, <Line: -import com.googlecode.mp4parser.FileDataSourceImpl;
>, <Line: -import com.googlecode.mp4parser.util.Path;
>, <Line: -import java.io.File;
>, <Line: -import java.io.IOException;
>, <Line: -import java.io.RandomAccessFile;
>, <Line: -import java.nio.channels.FileChannel;
>, <Line: -import java.util.HashMap;
>, <Line: -import java.util.Map;
>, <Line: -/**
>, <Line: - *
>, <Line: - */
>, <Line: -public class BoxReplacer {
>, <Line: -    public static void replace(Map<String, Box> replacements, File file) throws IOException {
>, <Line: -        IsoFile isoFile = new IsoFile( new FileDataSourceImpl(new RandomAccessFile(file, "r").getChannel()));
>, <Line: -        Map<String, Box> replacementSanitised = new HashMap<String, Box>();
>, <Line: -        Map<String, Long> positions = new HashMap<String, Long>();
>, <Line: -        for (Map.Entry<String, Box> e : replacements.entrySet()) {
>, <Line: -            Box b = Path.getPath(isoFile, e.getKey());
>, <Line: -            replacementSanitised.put(Path.createPath( b ), e.getValue());
>, <Line: -            positions.put(Path.createPath( b ), b.getOffset());
>, <Line: -            assert b.getSize() == e.getValue().getSize();
>, <Line: -        }
>, <Line: -        isoFile.close();
>, <Line: -        FileChannel fileChannel = new RandomAccessFile(file, "rw").getChannel();
>, <Line: -        for (String path : replacementSanitised.keySet()) {
>, <Line: -            Box b = replacementSanitised.get(path);
>, <Line: -            long pos = positions.get(path);
>, <Line: -            fileChannel.position(pos);
>, <Line: -            b.getBox(fileChannel);
>, <Line: -        }
>, <Line: -        fileChannel.close();
>, <Line: -    }
>, <Line: -}
>]