[<Line: +package org.mp4parser.boxes.iso14496.part12;
>, <Line: +import org.mp4parser.support.AbstractFullBox;
>, <Line: +import org.mp4parser.tools.CastUtils;
>, <Line: +import org.mp4parser.tools.IsoTypeReader;
>, <Line: +import org.mp4parser.tools.IsoTypeWriter;
>, <Line: +    static Map<List<Entry>, SoftReference<long[]>> cache = new WeakHashMap<List<Entry>, SoftReference<long[]>>();
>, <Line: +    /**
>, <Line: +     * Decompresses the list of entries and returns the list of decoding times.
>, <Line: +     *
>, <Line: +     * @param entries compressed entries
>, <Line: +     * @return decoding time per sample
>, <Line: +     */
>, <Line: +    public static synchronized long[] blowupTimeToSamples(List<TimeToSampleBox.Entry> entries) {
>, <Line: +        SoftReference<long[]> cacheEntry;
>, <Line: +        if ((cacheEntry = cache.get(entries)) != null) {
>, <Line: +            long[] cacheVal;
>, <Line: +            if ((cacheVal = cacheEntry.get()) != null) {
>, <Line: +                return cacheVal;
>, <Line: +            }
>, <Line: +        }
>, <Line: +        long numOfSamples = 0;
>, <Line: +        for (TimeToSampleBox.Entry entry : entries) {
>, <Line: +            numOfSamples += entry.getCount();
>, <Line: +        }
>, <Line: +        assert numOfSamples <= Integer.MAX_VALUE;
>, <Line: +        long[] decodingTime = new long[(int) numOfSamples];
>, <Line: +        int current = 0;
>, <Line: +        for (TimeToSampleBox.Entry entry : entries) {
>, <Line: +            for (int i = 0; i < entry.getCount(); i++) {
>, <Line: +                decodingTime[current++] = entry.getDelta();
>, <Line: +            }
>, <Line: +        }
>, <Line: +        cache.put(entries, new SoftReference<long[]>(decodingTime));
>, <Line: +        return decodingTime;
>, <Line: +    }
>, <Line: +        int entryCount = CastUtils.l2i(IsoTypeReader.readUInt32(content));
>, <Line: +        public long getDelta() {
>, <Line: +            return delta;
>, <Line: +        }
>]
[<Line: -package com.coremedia.iso.boxes;
>, <Line: -import com.coremedia.iso.IsoTypeReader;
>, <Line: -import com.coremedia.iso.IsoTypeWriter;
>, <Line: -import com.googlecode.mp4parser.AbstractFullBox;
>, <Line: -import static com.googlecode.mp4parser.util.CastUtils.l2i;
>, <Line: -        int entryCount = l2i(IsoTypeReader.readUInt32(content));
>, <Line: -        public long getDelta() {
>, <Line: -            return delta;
>, <Line: -        }
>, <Line: -    static Map<List<Entry>, SoftReference<long[]>> cache = new WeakHashMap<List<Entry>, SoftReference<long[]>>();
>, <Line: -    /**
>, <Line: -     * Decompresses the list of entries and returns the list of decoding times.
>, <Line: -     *
>, <Line: -     * @param entries compressed entries
>, <Line: -     * @return decoding time per sample
>, <Line: -     */
>, <Line: -    public static synchronized long[] blowupTimeToSamples(List<TimeToSampleBox.Entry> entries) {
>, <Line: -        SoftReference<long[]> cacheEntry;
>, <Line: -        if ((cacheEntry = cache.get(entries)) != null) {
>, <Line: -            long[] cacheVal;
>, <Line: -            if ((cacheVal = cacheEntry.get()) != null) {
>, <Line: -                return cacheVal;
>, <Line: -            }
>, <Line: -        }
>, <Line: -        long numOfSamples = 0;
>, <Line: -        for (TimeToSampleBox.Entry entry : entries) {
>, <Line: -            numOfSamples += entry.getCount();
>, <Line: -        }
>, <Line: -        assert numOfSamples <= Integer.MAX_VALUE;
>, <Line: -        long[] decodingTime = new long[(int) numOfSamples];
>, <Line: -        int current = 0;
>, <Line: -        for (TimeToSampleBox.Entry entry : entries) {
>, <Line: -            for (int i = 0; i < entry.getCount(); i++) {
>, <Line: -                decodingTime[current++] = entry.getDelta();
>, <Line: -            }
>, <Line: -        }
>, <Line: -        cache.put(entries, new SoftReference<long[]>(decodingTime));
>, <Line: -        return decodingTime;
>, <Line: -    }
>]