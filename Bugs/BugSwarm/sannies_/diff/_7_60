[<Line: +package org.mp4parser.examples.metadata;
>, <Line: +import org.mp4parser.Box;
>, <Line: +import org.mp4parser.Container;
>, <Line: +import org.mp4parser.IsoFile;
>, <Line: +import org.mp4parser.boxes.apple.AppleItemListBox;
>, <Line: +import org.mp4parser.boxes.apple.AppleNameBox;
>, <Line: +import org.mp4parser.boxes.iso14496.part12.*;
>, <Line: +import org.mp4parser.tools.Path;
>, <Line: +        if (Path.getPath(isoFile, "moov[0]/mvex[0]") != null) {
>, <Line: +            for (Box box : isoFile.getBoxes()) {
>, <Line: +                if ("moov".equals(box.getType())) {
>, <Line: +                    return true;
>, <Line: +                }
>, <Line: +                if ("mdat".equals(box.getType())) {
>, <Line: +                    return false;
>, <Line: +                }
>, <Line: +            }
>, <Line: +            throw new RuntimeException("I need moov or mdat. Otherwise all this doesn't make sense");
>, <Line: +        IsoFile isoFile = new IsoFile(videoFilePath);
>, <Line: +        long offset = 0;
>, <Line: +        for (Box box : isoFile.getBoxes()) {
>, <Line: +            if ("moov".equals(box.getType())) {
>, <Line: +                break;
>, <Line: +            }
>, <Line: +            offset += box.getSize();
>, <Line: +        }
>]
[<Line: -package com.googlecode.mp4parser.stuff;
>, <Line: -import com.coremedia.iso.IsoFile;
>, <Line: -import com.coremedia.iso.boxes.*;
>, <Line: -import com.coremedia.iso.boxes.apple.AppleItemListBox;
>, <Line: -import com.googlecode.mp4parser.FileDataSourceImpl;
>, <Line: -import com.googlecode.mp4parser.boxes.apple.AppleNameBox;
>, <Line: -import com.googlecode.mp4parser.util.Path;
>, <Line: -        if (Path.getPath(isoFile, "/moov[0]/mvex[0]") != null) {
>, <Line: -            return Path.getPath(isoFile, "/moov[0]").getOffset() < Path.getPath(isoFile, "/mdat[0]").getOffset();
>, <Line: -        IsoFile isoFile = new IsoFile(new FileDataSourceImpl(videoFilePath));
>, <Line: -        long offset = moov.getOffset();
>]