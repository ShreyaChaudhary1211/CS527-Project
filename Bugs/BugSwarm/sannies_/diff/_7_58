[<Line: +package org.mp4parser.examples.exportraw;
>, <Line: +import org.mp4parser.IsoFile;
>, <Line: +import org.mp4parser.boxes.iso14496.part12.TrackBox;
>, <Line: +import org.mp4parser.boxes.iso14496.part15.AvcConfigurationBox;
>, <Line: +import org.mp4parser.muxer.FileRandomAccessSourceImpl;
>, <Line: +import org.mp4parser.muxer.Sample;
>, <Line: +import org.mp4parser.muxer.samples.SampleList;
>, <Line: +import org.mp4parser.tools.IsoTypeReaderVariable;
>, <Line: +import org.mp4parser.tools.Path;
>, <Line: +import java.io.RandomAccessFile;
>, <Line: +import java.util.List;
>, <Line: +        List<TrackBox> trackBoxes = Path.getPath(isoFile, "moov/trak/");
>, <Line: +        long trackId = -1;
>, <Line: +        TrackBox trackBox = null;
>, <Line: +        for (TrackBox _trackBox : trackBoxes) {
>, <Line: +            if (Path.getPath(_trackBox, "mdia/minf/stbl/stsd/avc1") != null) {
>, <Line: +                trackId = _trackBox.getTrackHeaderBox().getTrackId();
>, <Line: +                trackBox = _trackBox;
>, <Line: +            }
>, <Line: +        }
>, <Line: +        SampleList sl = new SampleList(trackId, isoFile, new FileRandomAccessSourceImpl(
>, <Line: +                new RandomAccessFile("D:\\downloads\\cracked.s01e01.hdtv.x264-2hd.mp4", "r")));
>, <Line: +        fc.write((
>, <Line: +        fc.write((
>]
[<Line: -package com.googlecode.mp4parser;
>, <Line: -import com.coremedia.iso.IsoFile;
>, <Line: -import com.coremedia.iso.IsoTypeReaderVariable;
>, <Line: -import com.coremedia.iso.boxes.TrackBox;
>, <Line: -import com.mp4parser.iso14496.part15.AvcConfigurationBox;
>, <Line: -import com.coremedia.iso.boxes.mdat.SampleList;
>, <Line: -import com.googlecode.mp4parser.authoring.Sample;
>, <Line: -import com.googlecode.mp4parser.util.Path;
>, <Line: -        TrackBox trackBox = (TrackBox) Path.getPath(isoFile, "/moov/trak/mdia/minf/stbl/stsd/avc1/../../../../../");
>, <Line: -        SampleList sl = new SampleList(trackBox);
>, <Line: -        fc.write(ByteBuffer.wrap(
>, <Line: -        fc.write(ByteBuffer.wrap(
>]