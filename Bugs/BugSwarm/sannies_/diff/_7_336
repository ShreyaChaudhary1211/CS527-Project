[<Line: +package org.mp4parser.support;
>, <Line: +import org.mp4parser.Box;
>, <Line: +import org.mp4parser.Container;
>, <Line: +import org.mp4parser.tools.Path;
>, <Line: +    public static boolean isIgnore(Container ref, Box b, String[] ignores) {
>, <Line: +            if (Path.isContained(ref, b, ignore)) {
>, <Line: +    public static void check(Container root1, Box b1, Container root2, Box b2, String... ignores) throws IOException {
>, <Line: +        if (!isIgnore(root1, b1, ignores)) {
>, <Line: +            Assert.assertEquals("Type differs. \ntypetrace ref : " + b1 + "\ntypetrace new : " + b2,
>, <Line: +                    check(root1, (Container) b1, root2, (Container) b2, ignores);
>, <Line: +                    checkBox(root1, b1, root2, b2, ignores);
>, <Line: +    private static void checkBox(Container root1, Box b1, Container root2, Box b2, String[] ignores) throws IOException {
>, <Line: +        if (!isIgnore(root1, b1, ignores)) {
>, <Line: +            Assert.assertArrayEquals("Box at " + b1 + " differs from reference\n\n" + b1.toString() + "\n" + b2.toString(), baos1.toByteArray(), baos2.toByteArray());
>, <Line: +        check(cb1, cb1, cb2, cb2, ignores);
>, <Line: +    }
>, <Line: +    public static void check(Container root1, Container cb1, Container root2, Container cb2, String... ignores) throws IOException {
>, <Line: +            check(root1, b1, root2, b2, ignores);
>]
[<Line: -package com.googlecode.mp4parser.authoring.tracks;
>, <Line: -import com.coremedia.iso.boxes.Box;
>, <Line: -import com.coremedia.iso.boxes.Container;
>, <Line: -import com.googlecode.mp4parser.util.Path;
>, <Line: -import java.util.Arrays;
>, <Line: -    public static boolean isIgnore(Box b, String[] ignores) {
>, <Line: -            if (Path.isContained(b, ignore)) {
>, <Line: -    public static void check(Box b1, Box b2, String... ignores) throws IOException {
>, <Line: -        if (!isIgnore(b1, ignores)) {
>, <Line: -            Assert.assertEquals("Type differs. \ntypetrace ref : " + Path.createPath(b1) + "\ntypetrace new : " + Path.createPath(b2),
>, <Line: -                    check((Container) b1, (Container) b2, ignores);
>, <Line: -                    checkBox(b1, b2, ignores);
>, <Line: -    private static void checkBox(Box b1, Box b2, String[] ignores) throws IOException {
>, <Line: -        if (!isIgnore(b1, ignores)) {
>, <Line: -            Assert.assertArrayEquals("Box at " + Path.createPath(b1) + " differs from reference\n\n" + b1.toString() + "\n" + b2.toString(), baos1.toByteArray(), baos2.toByteArray());
>, <Line: -            check(b1, b2, ignores);
>]