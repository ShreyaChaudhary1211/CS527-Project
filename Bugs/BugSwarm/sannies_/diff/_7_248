[<Line: +package org.mp4parser.boxes.iso14496.part12;
>, <Line: +import org.mp4parser.IsoFile;
>, <Line: +import org.mp4parser.support.AbstractBox;
>, <Line: +import org.mp4parser.support.DoNotParseDetail;
>, <Line: +import org.mp4parser.tools.IsoTypeReader;
>, <Line: +import org.mp4parser.tools.IsoTypeWriter;
>, <Line: +    /**
>, <Line: +     * Sets the "informative integer for the minor version of the major brand".
>, <Line: +     *
>, <Line: +     * @param minorVersion the version number of the major brand
>, <Line: +     */
>, <Line: +    public void setMinorVersion(long minorVersion) {
>, <Line: +        this.minorVersion = minorVersion;
>, <Line: +    }
>]
[<Line: -package com.coremedia.iso.boxes.fragment;
>, <Line: -import com.coremedia.iso.IsoFile;
>, <Line: -import com.coremedia.iso.IsoTypeReader;
>, <Line: -import com.coremedia.iso.IsoTypeWriter;
>, <Line: -import com.googlecode.mp4parser.AbstractBox;
>, <Line: -import com.googlecode.mp4parser.annotations.DoNotParseDetail;
>, <Line: -    /**
>, <Line: -     * Sets the "informative integer for the minor version of the major brand".
>, <Line: -     *
>, <Line: -     * @param minorVersion the version number of the major brand
>, <Line: -     */
>, <Line: -    public void setMinorVersion(long minorVersion) {
>, <Line: -        this.minorVersion = minorVersion;
>, <Line: -    }
>]