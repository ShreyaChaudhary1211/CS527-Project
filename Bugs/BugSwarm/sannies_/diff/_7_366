[]
[<Line: -package com.googlecode.mp4parser;
>, <Line: -import com.coremedia.iso.IsoFile;
>, <Line: -import com.coremedia.iso.boxes.FileTypeBox;
>, <Line: -import org.apache.commons.io.IOUtils;
>, <Line: -import org.junit.Assert;
>, <Line: -import org.junit.Test;
>, <Line: -import java.io.File;
>, <Line: -import java.io.FileOutputStream;
>, <Line: -import java.io.InputStream;
>, <Line: -public class DirectFileReadDataSourceTest {
>, <Line: -    @Test
>, <Line: -    public void testTempFileDeletion() throws Exception {
>, <Line: -        InputStream resourceStream = DirectFileReadDataSourceTest.class.getResourceAsStream("/Beethoven - Bagatelle op.119 no.11 i.m4a");
>, <Line: -        File temp = File.createTempFile(this.getClass().getSimpleName(), "m4a");
>, <Line: -        FileOutputStream fos = new FileOutputStream(temp);
>, <Line: -        IOUtils.copy(resourceStream, fos);
>, <Line: -        resourceStream.close();
>, <Line: -        fos.close();
>, <Line: -        // using FileDataSourceImpl will keep the file locked on Windows
>, <Line: -        // IsoFile isoFile = new IsoFile(new FileDataSourceImpl(temp));
>, <Line: -        IsoFile isoFile = new IsoFile(new DirectFileReadDataSource(temp));
>, <Line: -        FileTypeBox box = isoFile.getBoxes(FileTypeBox.class).get(0);
>, <Line: -        // invoke parseDetails so DataSource#map is at least called once
>, <Line: -        box.parseDetails();
>, <Line: -        isoFile.close();
>, <Line: -        Assert.assertTrue(temp.delete());
>, <Line: -    }
>, <Line: -}
>]