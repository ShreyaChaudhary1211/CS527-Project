[<Line: +package org.mp4parser.muxer.samples;
>, <Line: +import org.mp4parser.Container;
>, <Line: +import org.mp4parser.boxes.iso14496.part12.MovieBox;
>, <Line: +import org.mp4parser.boxes.iso14496.part12.SampleSizeBox;
>, <Line: +import org.mp4parser.boxes.iso14496.part12.SampleToChunkBox;
>, <Line: +import org.mp4parser.boxes.iso14496.part12.TrackBox;
>, <Line: +import org.mp4parser.muxer.RandomAccessSource;
>, <Line: +import org.mp4parser.muxer.Sample;
>, <Line: +import org.mp4parser.support.Logger;
>, <Line: +import static org.mp4parser.tools.CastUtils.l2i;
>, <Line: +    private RandomAccessSource randomAccess;
>, <Line: +    public DefaultMp4SampleList(long track, Container topLevel, RandomAccessSource randomAccessFile) {
>, <Line: +        this.randomAccess = randomAccessFile;
>, <Line: +                    chunkBuffer = randomAccess.get(
>, <Line: +                            sampleOffsetsWithinChunk[sampleOffsetsWithinChunk.length - 1] + ssb.getSampleSizeAtIndex(chunkStartSample + sampleOffsetsWithinChunk.length - 1));
>]
[<Line: -package com.googlecode.mp4parser.authoring.samples;
>, <Line: -import com.coremedia.iso.boxes.*;
>, <Line: -import com.googlecode.mp4parser.authoring.Sample;
>, <Line: -import com.googlecode.mp4parser.util.Logger;
>, <Line: -import static com.googlecode.mp4parser.util.CastUtils.l2i;
>, <Line: -    public DefaultMp4SampleList(long track, Container topLevel) {
>, <Line: -                    chunkBuffer = topLevel.getByteBuffer(
>, <Line: -                            sampleOffsetsWithinChunk[sampleOffsetsWithinChunk.length - 1] + ssb.getSampleSizeAtIndex(chunkStartSample + sampleOffsetsWithinChunk.length - 1)
>, <Line: -                    );
>]