[<Line: +package com.googlecode.mp4parser;
>, <Line: +import org.mp4parser.IsoFile;
>, <Line: +import org.mp4parser.ParsableBox;
>, <Line: +import org.mp4parser.tools.Path;
>, <Line: +import java.io.File;
>, <Line: +import java.io.IOException;
>, <Line: +import java.io.RandomAccessFile;
>, <Line: +import java.nio.channels.FileChannel;
>, <Line: +import java.util.HashMap;
>, <Line: +import java.util.Map;
>, <Line: +/**
>, <Line: + *
>, <Line: + */
>, <Line: +public class BoxReplacer {
>, <Line: +    public static void replace(Map<String, ParsableBox> replacements, File file) throws IOException {
>, <Line: +        IsoFile isoFile = new IsoFile(new RandomAccessFile(file, "r").getChannel());
>, <Line: +        Map<String, ParsableBox> replacementSanitised = new HashMap<String, ParsableBox>();
>, <Line: +        Map<String, Long> positions = new HashMap<String, Long>();
>, <Line: +        // TODO not working atm
>, <Line: +        for (Map.Entry<String, ParsableBox> e : replacements.entrySet()) {
>, <Line: +            ParsableBox b = Path.getPath(isoFile, e.getKey());
>, <Line: +            //replacementSanitised.put(Path.createPath( b ), e.getValue());
>, <Line: +            //positions.put(Path.createPath( b ), b.getOffset());
>, <Line: +            assert b.getSize() == e.getValue().getSize();
>, <Line: +        }
>, <Line: +        isoFile.close();
>, <Line: +        FileChannel fileChannel = new RandomAccessFile(file, "rw").getChannel();
>, <Line: +        for (String path : replacementSanitised.keySet()) {
>, <Line: +            ParsableBox b = replacementSanitised.get(path);
>, <Line: +            long pos = positions.get(path);
>, <Line: +            fileChannel.position(pos);
>, <Line: +            b.getBox(fileChannel);
>, <Line: +        }
>, <Line: +        fileChannel.close();
>, <Line: +    }
>, <Line: +}
>]
[]