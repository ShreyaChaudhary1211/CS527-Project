[<Line: +package org.mp4parser.support;
>, <Line: +import org.mp4parser.BasicContainer;
>, <Line: +import org.mp4parser.BoxParser;
>, <Line: +import org.mp4parser.Container;
>, <Line: +import org.mp4parser.ParsableBox;
>, <Line: +import org.mp4parser.tools.IsoTypeWriter;
>, <Line: +import java.nio.channels.ReadableByteChannel;
>, <Line: +public class AbstractContainerBox extends BasicContainer implements ParsableBox {
>, <Line: +    Container parent;
>, <Line: +    public void parse(ReadableByteChannel dataSource, ByteBuffer header, long contentSize, BoxParser boxParser) throws IOException {
>]
[<Line: -package com.googlecode.mp4parser;
>, <Line: -import com.coremedia.iso.BoxParser;
>, <Line: -import com.coremedia.iso.IsoTypeWriter;
>, <Line: -import com.coremedia.iso.boxes.Box;
>, <Line: -import com.coremedia.iso.boxes.Container;
>, <Line: -public class AbstractContainerBox extends BasicContainer implements Box {
>, <Line: -    Container parent;
>, <Line: -    private long offset;
>, <Line: -    public Container getParent() {
>, <Line: -        return parent;
>, <Line: -    }
>, <Line: -    public long getOffset() {
>, <Line: -        return offset;
>, <Line: -    }
>, <Line: -    public void parse(DataSource dataSource, ByteBuffer header, long contentSize, BoxParser boxParser) throws IOException {
>, <Line: -        this.offset = dataSource.position() - header.remaining();
>, <Line: -    public void initContainer(DataSource dataSource, long containerSize, BoxParser boxParser) throws IOException {
>, <Line: -        this.dataSource = dataSource;
>, <Line: -        this.parsePosition = dataSource.position();
>, <Line: -        this.startPosition =  parsePosition - (((largeBox || (containerSize + 8) >= (1L << 32)) ? 16 : 8));
>, <Line: -        dataSource.position(dataSource.position() + containerSize);
>, <Line: -        this.endPosition = dataSource.position();
>, <Line: -        this.boxParser = boxParser;
>, <Line: -    }
>]