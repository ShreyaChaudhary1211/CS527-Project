[<Line: +import org.mp4parser.Box;
>, <Line: +import org.mp4parser.IsoFile;
>, <Line: +import org.mp4parser.ParsableBox;
>, <Line: +import org.mp4parser.support.AbstractContainerBox;
>, <Line: +import org.mp4parser.tools.ByteBufferByteChannel;
>, <Line: +    String dummyParent = null;
>, <Line: +    ParsableBox parsableBoxUnderTest;
>, <Line: +    Map<String, Object> props;
>, <Line: +    public BoxRoundtripTest(ParsableBox parsableBoxUnderTest, Map.Entry<String, Object>... properties) {
>, <Line: +        this.parsableBoxUnderTest = parsableBoxUnderTest;
>, <Line: +        this.props = new HashMap<String, Object>();
>, <Line: +        for (Map.Entry<String, Object> property : properties) {
>, <Line: +            props.put(property.getKey(), property.getValue());
>, <Line: +        }
>, <Line: +    }
>, <Line: +        BeanInfo beanInfo = Introspector.getBeanInfo(parsableBoxUnderTest.getClass());
>, <Line: +                        propertyDescriptor.getWriteMethod().invoke(parsableBoxUnderTest, props.get(property));
>, <Line: +                    Assert.assertEquals("The symmetry between getter/setter of " + property + " is not given.", props.get(property), propertyDescriptor.getReadMethod().invoke(parsableBoxUnderTest));
>, <Line: +        parsableBoxUnderTest.getBox(wbc);
>, <Line: +        IsoFile singleBoxIsoFile = new IsoFile(new ByteBufferByteChannel(baos.toByteArray()));
>, <Line: +        Assert.assertEquals("Expected box and file size to be the same", parsableBoxUnderTest.getSize(), baos.size());
>, <Line: +        Assert.assertEquals("Expected to find a box of different type ", parsableBoxUnderTest.getClass(), singleBoxIsoFile.getBoxes().get(0).getClass());
>, <Line: +                        Assert.assertEquals("Writing and parsing changed the value of " + property, props.get(property), propertyDescriptor.getReadMethod().invoke(parsedBox));
>, <Line: +        Assert.assertEquals("Writing and parsing should not change the box size.", parsableBoxUnderTest.getSize(), parsedBox.getSize());
>, <Line: +    class DummyContainerBox extends AbstractContainerBox {
>, <Line: +        public DummyContainerBox(String type) {
>, <Line: +            super(type);
>, <Line: +        }
>, <Line: +    }
>]
[<Line: -import com.coremedia.iso.IsoFile;
>, <Line: -import com.coremedia.iso.PropertyBoxParserImpl;
>, <Line: -import com.coremedia.iso.boxes.Box;
>, <Line: -import com.googlecode.mp4parser.AbstractContainerBox;
>, <Line: -import com.googlecode.mp4parser.MemoryDataSourceImpl;
>, <Line: -import java.lang.reflect.Constructor;
>, <Line: -import java.text.AttributedCharacterIterator;
>, <Line: -    String dummyParent = null;
>, <Line: -    Box boxUnderTest;
>, <Line: -    Map<String, Object> props;
>, <Line: -    public BoxRoundtripTest(Box boxUnderTest, Map.Entry<String, Object>... properties) {
>, <Line: -        this.boxUnderTest = boxUnderTest;
>, <Line: -        this.props = new HashMap<String, Object>();
>, <Line: -        for (Map.Entry<String, Object> property : properties) {
>, <Line: -            props.put(property.getKey(), property.getValue());
>, <Line: -        }
>, <Line: -    }
>, <Line: -        BeanInfo beanInfo = Introspector.getBeanInfo(boxUnderTest.getClass());
>, <Line: -                        propertyDescriptor.getWriteMethod().invoke(boxUnderTest, props.get(property));
>, <Line: -                    Assert.assertEquals("The symmetry between getter/setter of " + property + " is not given.", props.get(property), propertyDescriptor.getReadMethod().invoke(boxUnderTest));
>, <Line: -        boxUnderTest.getBox(wbc);
>, <Line: -        IsoFile singleBoxIsoFile = new IsoFile(new MemoryDataSourceImpl(baos.toByteArray()));
>, <Line: -        Assert.assertEquals("Expected box and file size to be the same", boxUnderTest.getSize(), baos.size());
>, <Line: -        Assert.assertEquals("Expected to find a box of different type ", boxUnderTest.getClass(), singleBoxIsoFile.getBoxes().get(0).getClass());
>, <Line: -                        Assert.assertEquals("Writing and parsing changed the value of " + property, props.get(property), (Object) propertyDescriptor.getReadMethod().invoke(parsedBox));
>, <Line: -        Assert.assertEquals("Writing and parsing should not change the box size.", boxUnderTest.getSize(), parsedBox.getSize());
>, <Line: -    class DummyContainerBox extends AbstractContainerBox {
>, <Line: -        public DummyContainerBox(String type) {
>, <Line: -            super(type);
>, <Line: -        }
>, <Line: -    }
>]