[<Line: +    public List<ByteBuffer> sequenceParameterSets = new ArrayList<ByteBuffer>();
>, <Line: +    public List<ByteBuffer> pictureParameterSets = new ArrayList<ByteBuffer>();
>, <Line: +    public List<ByteBuffer> sequenceParameterSetExts = new ArrayList<ByteBuffer>();
>, <Line: +            sequenceParameterSets.add(ByteBuffer.wrap(sequenceParameterSetNALUnit));
>, <Line: +            pictureParameterSets.add(ByteBuffer.wrap(pictureParameterSetNALUnit));
>, <Line: +                sequenceParameterSetExts.add(ByteBuffer.wrap(sequenceParameterSetExtNALUnit));
>, <Line: +        for (ByteBuffer sequenceParameterSetNALUnit : sequenceParameterSets) {
>, <Line: +            IsoTypeWriter.writeUInt16(byteBuffer, sequenceParameterSetNALUnit.limit());
>, <Line: +            byteBuffer.put((ByteBuffer) sequenceParameterSetNALUnit.rewind());
>, <Line: +        for (ByteBuffer pictureParameterSetNALUnit : pictureParameterSets) {
>, <Line: +            IsoTypeWriter.writeUInt16(byteBuffer, pictureParameterSetNALUnit.limit());
>, <Line: +            byteBuffer.put((ByteBuffer) pictureParameterSetNALUnit.rewind());
>, <Line: +            for (ByteBuffer sequenceParameterSetExtNALUnit : sequenceParameterSetExts) {
>, <Line: +                IsoTypeWriter.writeUInt16(byteBuffer, sequenceParameterSetExtNALUnit.limit());
>, <Line: +                byteBuffer.put((ByteBuffer) sequenceParameterSetExtNALUnit.reset());
>, <Line: +        for (ByteBuffer sequenceParameterSetNALUnit : sequenceParameterSets) {
>, <Line: +            size += sequenceParameterSetNALUnit.limit();
>, <Line: +        for (ByteBuffer pictureParameterSetNALUnit : pictureParameterSets) {
>, <Line: +            size += pictureParameterSetNALUnit.limit();
>, <Line: +            for (ByteBuffer sequenceParameterSetExtNALUnit : sequenceParameterSetExts) {
>, <Line: +                size += sequenceParameterSetExtNALUnit.limit();
>, <Line: +        for (ByteBuffer parameterSet : sequenceParameterSets) {
>, <Line: +        for (ByteBuffer parameterSet : sequenceParameterSetExts) {
>, <Line: +        for (ByteBuffer parameterSet : pictureParameterSets) {
>]
[<Line: -    public List<byte[]> sequenceParameterSets = new ArrayList<byte[]>();
>, <Line: -    public List<byte[]> pictureParameterSets = new ArrayList<byte[]>();
>, <Line: -    public List<byte[]> sequenceParameterSetExts = new ArrayList<byte[]>();
>, <Line: -            sequenceParameterSets.add(sequenceParameterSetNALUnit);
>, <Line: -            pictureParameterSets.add(pictureParameterSetNALUnit);
>, <Line: -                sequenceParameterSetExts.add(sequenceParameterSetExtNALUnit);
>, <Line: -        for (byte[] sequenceParameterSetNALUnit : sequenceParameterSets) {
>, <Line: -            IsoTypeWriter.writeUInt16(byteBuffer, sequenceParameterSetNALUnit.length);
>, <Line: -            byteBuffer.put(sequenceParameterSetNALUnit);
>, <Line: -        for (byte[] pictureParameterSetNALUnit : pictureParameterSets) {
>, <Line: -            IsoTypeWriter.writeUInt16(byteBuffer, pictureParameterSetNALUnit.length);
>, <Line: -            byteBuffer.put(pictureParameterSetNALUnit);
>, <Line: -            for (byte[] sequenceParameterSetExtNALUnit : sequenceParameterSetExts) {
>, <Line: -                IsoTypeWriter.writeUInt16(byteBuffer, sequenceParameterSetExtNALUnit.length);
>, <Line: -                byteBuffer.put(sequenceParameterSetExtNALUnit);
>, <Line: -        for (byte[] sequenceParameterSetNALUnit : sequenceParameterSets) {
>, <Line: -            size += sequenceParameterSetNALUnit.length;
>, <Line: -        for (byte[] pictureParameterSetNALUnit : pictureParameterSets) {
>, <Line: -            size += pictureParameterSetNALUnit.length;
>, <Line: -            for (byte[] sequenceParameterSetExtNALUnit : sequenceParameterSetExts) {
>, <Line: -                size += sequenceParameterSetExtNALUnit.length;
>, <Line: -        for (byte[] parameterSet : sequenceParameterSets) {
>, <Line: -        for (byte[] parameterSet : sequenceParameterSetExts) {
>, <Line: -        for (byte[] parameterSet : pictureParameterSets) {
>]