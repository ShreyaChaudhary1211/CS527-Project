[<Line: +package org.mp4parser.boxes.iso14496.part12;
>, <Line: +import org.mp4parser.support.AbstractFullBox;
>, <Line: +import org.mp4parser.tools.IsoTypeReader;
>, <Line: +import org.mp4parser.tools.IsoTypeWriter;
>, <Line: +import java.nio.ByteBuffer;
>, <Line: +public class DegradationPriorityBox extends AbstractFullBox {
>, <Line: +    int[] priorities = new int[0];
>, <Line: +    public DegradationPriorityBox() {
>, <Line: +        super("stdp");
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    protected long getContentSize() {
>, <Line: +        return 4 + priorities.length * 2;
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    protected void getContent(ByteBuffer byteBuffer) {
>, <Line: +        writeVersionAndFlags(byteBuffer);
>, <Line: +        for (int priority : priorities) {
>, <Line: +            IsoTypeWriter.writeUInt16(byteBuffer, priority);
>, <Line: +        }
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    protected void _parseDetails(ByteBuffer content) {
>, <Line: +        parseVersionAndFlags(content);
>, <Line: +        priorities = new int[content.remaining() / 2];
>, <Line: +        for (int i = 0; i < priorities.length; i++) {
>, <Line: +            priorities[i] = IsoTypeReader.readUInt16(content);
>, <Line: +        }
>, <Line: +    }
>, <Line: +    public int[] getPriorities() {
>, <Line: +        return priorities;
>, <Line: +    }
>, <Line: +    public void setPriorities(int[] priorities) {
>, <Line: +        this.priorities = priorities;
>, <Line: +    }
>, <Line: +    /*
>, <Line: +    aligned(8) class DegradationPriorityBox
>, <Line: + extends FullBox(‘stdp’, version = 0, 0) {
>, <Line: +int i;
>, <Line: + for (i=0; i < sample_count; i++) {
>, <Line: +unsigned int(16) priority;
>, <Line: +}
>, <Line: +}
>, <Line: +     */
>, <Line: +}
>]
[]