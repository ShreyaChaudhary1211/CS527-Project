[<Line: +package org.mp4parser.muxer.tracks;
>, <Line: +import org.mp4parser.IsoFile;
>, <Line: +import org.mp4parser.boxes.iso14496.part12.SampleDescriptionBox;
>, <Line: +import org.mp4parser.boxes.iso14496.part15.AvcConfigurationBox;
>, <Line: +import org.mp4parser.boxes.sampleentry.VisualSampleEntry;
>, <Line: +import org.mp4parser.muxer.Sample;
>, <Line: +import org.mp4parser.muxer.Track;
>, <Line: +import org.mp4parser.muxer.WrappingTrack;
>, <Line: +import org.mp4parser.tools.ByteBufferByteChannel;
>, <Line: +import org.mp4parser.tools.IsoTypeWriterVariable;
>, <Line: +import org.mp4parser.tools.Path;
>, <Line: +import static org.mp4parser.tools.CastUtils.l2i;
>, <Line: +        IsoFile isoFile = new IsoFile(new ByteBufferByteChannel(ByteBuffer.wrap(baos.toByteArray())));
>, <Line: +        assert stsd != null;
>, <Line: +                final int len = avcC.getLengthSizeMinusOne() + 1;
>, <Line: +                        for (ByteBuffer bytes : avcC.getSequenceParameterSets()) {
>, <Line: +                            IsoTypeWriterVariable.write(bytes.limit(), (ByteBuffer) buf.rewind(), len);
>, <Line: +                            channel.write(bytes);
>, <Line: +                        for (ByteBuffer bytes : avcC.getSequenceParameterSetExts()) {
>, <Line: +                            IsoTypeWriterVariable.write(bytes.limit(), (ByteBuffer) buf.rewind(), len);
>, <Line: +                            channel.write((bytes));
>, <Line: +                        for (ByteBuffer bytes : avcC.getPictureParameterSets()) {
>, <Line: +                            IsoTypeWriterVariable.write(bytes.limit(), (ByteBuffer) buf.rewind(), len);
>, <Line: +                            channel.write((bytes));
>, <Line: +                        for (ByteBuffer bytes : avcC.getSequenceParameterSets()) {
>, <Line: +                            spsPpsSize += len + bytes.limit();
>, <Line: +                        for (ByteBuffer bytes : avcC.getSequenceParameterSetExts()) {
>, <Line: +                            spsPpsSize += len + bytes.limit();
>, <Line: +                        for (ByteBuffer bytes : avcC.getPictureParameterSets()) {
>, <Line: +                            spsPpsSize += len + bytes.limit();
>, <Line: +                        for (ByteBuffer bytes : avcC.getSequenceParameterSets()) {
>, <Line: +                            spsPpsSize += len + bytes.limit();
>, <Line: +                        for (ByteBuffer bytes : avcC.getSequenceParameterSetExts()) {
>, <Line: +                            spsPpsSize += len + bytes.limit();
>, <Line: +                        for (ByteBuffer bytes : avcC.getPictureParameterSets()) {
>, <Line: +                            spsPpsSize += len + bytes.limit();
>, <Line: +                        ByteBuffer data = ByteBuffer.allocate(l2i(orignalSample.getSize()) + spsPpsSize);
>, <Line: +                        for (ByteBuffer bytes : avcC.getSequenceParameterSets()) {
>, <Line: +                            IsoTypeWriterVariable.write(bytes.limit(), data, len);
>, <Line: +                        for (ByteBuffer bytes : avcC.getSequenceParameterSetExts()) {
>, <Line: +                            IsoTypeWriterVariable.write(bytes.limit(), data, len);
>, <Line: +                        for (ByteBuffer bytes : avcC.getPictureParameterSets()) {
>, <Line: +                            IsoTypeWriterVariable.write(bytes.limit(), data, len);
>]
[<Line: -package com.googlecode.mp4parser.authoring.tracks;
>, <Line: -import com.coremedia.iso.IsoFile;
>, <Line: -import com.coremedia.iso.IsoTypeWriterVariable;
>, <Line: -import com.coremedia.iso.boxes.CompositionTimeToSample;
>, <Line: -import com.coremedia.iso.boxes.SampleDependencyTypeBox;
>, <Line: -import com.coremedia.iso.boxes.SampleDescriptionBox;
>, <Line: -import com.coremedia.iso.boxes.SubSampleInformationBox;
>, <Line: -import com.coremedia.iso.boxes.sampleentry.VisualSampleEntry;
>, <Line: -import com.googlecode.mp4parser.MemoryDataSourceImpl;
>, <Line: -import com.googlecode.mp4parser.authoring.*;
>, <Line: -import com.googlecode.mp4parser.boxes.mp4.samplegrouping.GroupEntry;
>, <Line: -import com.googlecode.mp4parser.util.Path;
>, <Line: -import com.mp4parser.iso14496.part15.AvcConfigurationBox;
>, <Line: -import java.util.Map;
>, <Line: -import static com.googlecode.mp4parser.util.CastUtils.l2i;
>, <Line: -        IsoFile isoFile = new IsoFile(new MemoryDataSourceImpl(baos.toByteArray()));
>, <Line: -                final int len = avcC.getLengthSizeMinusOne()+1;
>, <Line: -                        for (byte[] bytes : avcC.getSequenceParameterSets()) {
>, <Line: -                            IsoTypeWriterVariable.write(bytes.length, (ByteBuffer) buf.rewind(), len);
>, <Line: -                            channel.write(ByteBuffer.wrap(bytes));
>, <Line: -                        for (byte[] bytes : avcC.getSequenceParameterSetExts()) {
>, <Line: -                            IsoTypeWriterVariable.write(bytes.length, (ByteBuffer) buf.rewind(), len);
>, <Line: -                            channel.write(ByteBuffer.wrap(bytes));
>, <Line: -                        for (byte[] bytes : avcC.getPictureParameterSets()) {
>, <Line: -                            IsoTypeWriterVariable.write(bytes.length, (ByteBuffer) buf.rewind(), len);
>, <Line: -                            channel.write(ByteBuffer.wrap(bytes));
>, <Line: -                        for (byte[] bytes : avcC.getSequenceParameterSets()) {
>, <Line: -                            spsPpsSize += len + bytes.length;
>, <Line: -                        for (byte[] bytes : avcC.getSequenceParameterSetExts()) {
>, <Line: -                            spsPpsSize += len + bytes.length;
>, <Line: -                        for (byte[] bytes : avcC.getPictureParameterSets()) {
>, <Line: -                            spsPpsSize += len + bytes.length;
>, <Line: -                        for (byte[] bytes : avcC.getSequenceParameterSets()) {
>, <Line: -                            spsPpsSize += len + bytes.length;
>, <Line: -                        for (byte[] bytes : avcC.getSequenceParameterSetExts()) {
>, <Line: -                            spsPpsSize += len + bytes.length;
>, <Line: -                        for (byte[] bytes : avcC.getPictureParameterSets()) {
>, <Line: -                            spsPpsSize += len + bytes.length;
>, <Line: -                        ByteBuffer data = ByteBuffer.allocate (l2i(orignalSample.getSize()) + spsPpsSize);
>, <Line: -                        for (byte[] bytes : avcC.getSequenceParameterSets()) {
>, <Line: -                            IsoTypeWriterVariable.write(bytes.length, data, len);
>, <Line: -                        for (byte[] bytes : avcC.getSequenceParameterSetExts()) {
>, <Line: -                            IsoTypeWriterVariable.write(bytes.length, data, len);
>, <Line: -                        for (byte[] bytes : avcC.getPictureParameterSets()) {
>, <Line: -                            IsoTypeWriterVariable.write(bytes.length, data, len);
>]