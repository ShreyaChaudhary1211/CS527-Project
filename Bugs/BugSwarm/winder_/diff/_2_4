[<Line: +        boolean isConnected = this.controller != null && this.controller.isCommOpen();
>, <Line: +        systemStateBean.setControlState(getControlState());
>, <Line: +        return this.controller == null ?
>, <Line: +                ControlState.COMM_DISCONNECTED : this.controller.getControlState();
>, <Line: +            switch(getControlState()) {
>, <Line: +                        throw new Exception("Cannot pause while '" + getControlState() + "'.");
>]
[<Line: -    private ControlState controlState = ControlState.COMM_DISCONNECTED;
>, <Line: -            this.sendControlStateEvent(new UGSEvent(ControlState.COMM_IDLE), false);
>, <Line: -        boolean isConnected = this.controlState != ControlState.COMM_DISCONNECTED;
>, <Line: -        systemStateBean.setControlState(controlState);
>, <Line: -            this.sendControlStateEvent(new UGSEvent(ControlState.COMM_SENDING), false);
>, <Line: -        return this.controlState;
>, <Line: -            this.sendControlStateEvent(new UGSEvent(ControlState.COMM_SENDING), false);
>, <Line: -            switch(controlState) {
>, <Line: -                        throw new Exception("Cannot pause while '" + controlState + "'.");
>, <Line: -                    this.sendControlStateEvent(new UGSEvent(ControlState.COMM_SENDING_PAUSED), false);
>, <Line: -                    this.sendControlStateEvent(new UGSEvent(ControlState.COMM_SENDING), false);
>, <Line: -            this.sendControlStateEvent(new UGSEvent(ControlState.COMM_IDLE), false);
>, <Line: -        this.sendControlStateEvent(new UGSEvent(ControlState.COMM_IDLE), false);
>, <Line: -        if (isIdle()) {
>, <Line: -            this.sendControlStateEvent(new UGSEvent(ControlState.COMM_IDLE), false);
>, <Line: -        }
>, <Line: -            this.controlState = event.getControlState();
>]