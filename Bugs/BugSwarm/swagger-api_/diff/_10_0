[<Line: +import java.util.LinkedHashMap;
>, <Line: +import java.util.Map;
>, <Line: +    public List<Operation> readOperations() {
>, <Line: +        List<Operation> allOperations = new ArrayList<>();
>, <Line: +        if (this.get != null) {
>, <Line: +            allOperations.add(this.get);
>, <Line: +        }
>, <Line: +        if (this.put != null) {
>, <Line: +            allOperations.add(this.put);
>, <Line: +        }
>, <Line: +        if (this.head != null) {
>, <Line: +            allOperations.add(this.head);
>, <Line: +        }
>, <Line: +        if (this.post != null) {
>, <Line: +            allOperations.add(this.post);
>, <Line: +        }
>, <Line: +        if (this.delete != null) {
>, <Line: +            allOperations.add(this.delete);
>, <Line: +        }
>, <Line: +        if (this.patch != null) {
>, <Line: +            allOperations.add(this.patch);
>, <Line: +        }
>, <Line: +        if (this.options != null) {
>, <Line: +            allOperations.add(this.options);
>, <Line: +        }
>, <Line: +        if (this.trace != null) {
>, <Line: +            allOperations.add(this.trace);
>, <Line: +        }
>, <Line: +        return allOperations;
>, <Line: +    }
>, <Line: +    public enum HttpMethod {
>, <Line: +        POST,
>, <Line: +        GET,
>, <Line: +        PUT,
>, <Line: +        PATCH,
>, <Line: +        DELETE,
>, <Line: +        HEAD,
>, <Line: +        OPTIONS,
>, <Line: +        TRACE
>, <Line: +    }
>, <Line: +    public Map<HttpMethod, Operation> readOperationsMap() {
>, <Line: +        Map<HttpMethod, Operation> result = new LinkedHashMap<>();
>, <Line: +        if (this.get != null) {
>, <Line: +            result.put(HttpMethod.GET, this.get);
>, <Line: +        }
>, <Line: +        if (this.put != null) {
>, <Line: +            result.put(HttpMethod.PUT, this.put);
>, <Line: +        }
>, <Line: +        if (this.post != null) {
>, <Line: +            result.put(HttpMethod.POST, this.post);
>, <Line: +        }
>, <Line: +        if (this.delete != null) {
>, <Line: +            result.put(HttpMethod.DELETE, this.delete);
>, <Line: +        }
>, <Line: +        if (this.patch != null) {
>, <Line: +            result.put(HttpMethod.PATCH, this.patch);
>, <Line: +        }
>, <Line: +        if (this.head != null) {
>, <Line: +            result.put(HttpMethod.HEAD, this.head);
>, <Line: +        }
>, <Line: +        if (this.options != null) {
>, <Line: +            result.put(HttpMethod.OPTIONS, this.options);
>, <Line: +        }
>, <Line: +        if (this.trace != null) {
>, <Line: +            result.put(HttpMethod.TRACE, this.trace);
>, <Line: +        }
>, <Line: +        return result;
>, <Line: +    }
>]
[]