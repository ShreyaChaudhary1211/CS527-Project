[<Line: +import java.util.concurrent.atomic.AtomicReference;
>, <Line: +import com.hubspot.baragon.data.BaragonLoadBalancerDatastore;
>, <Line: +import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
>, <Line: +  private final BaragonLoadBalancerDatastore loadBalancerDatastore;
>, <Line: +  private final AtomicReference<String> mostRecentRequestId;
>, <Line: +                        BaragonLoadBalancerDatastore loadBalancerDatastore,
>, <Line: +                        @Named(BaragonAgentServiceModule.AGENT_LOCK_TIMEOUT_MS) long agentLockTimeoutMs,
>, <Line: +                        @Named(BaragonAgentServiceModule.AGENT_MOST_RECENT_REQUEST_ID) AtomicReference<String> mostRecentRequestId) {
>, <Line: +    this.loadBalancerDatastore = loadBalancerDatastore;
>, <Line: +    this.mostRecentRequestId = mostRecentRequestId;
>, <Line: +      LOG.info("Reconnected to zookeeper, checking if configs are still in sync");
>, <Line: +      Optional<String> maybeLastReuqestForGroup = loadBalancerDatastore.getLastRequestForGroup(configuration.getLoadBalancerConfiguration().getName());
>, <Line: +      if (!maybeLastReuqestForGroup.isPresent() || maybeLastReuqestForGroup.get().equals(mostRecentRequestId.get())) {
>, <Line: +        reapplyConfigsWithRetry();
>, <Line: +      }
>, <Line: +  @SuppressFBWarnings("DM_EXIT")
>, <Line: +    System.exit(1);
>]
[<Line: -                        @Named(BaragonAgentServiceModule.AGENT_LOCK_TIMEOUT_MS) long agentLockTimeoutMs) {
>, <Line: -      reapplyConfigsWithRetry();
>, <Line: -      } finally {
>, <Line: -        System.exit(1);
>, <Line: -      System.exit(1);
>]