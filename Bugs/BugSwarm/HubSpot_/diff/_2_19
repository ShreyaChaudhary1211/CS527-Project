[<Line: +import javax.ws.rs.DefaultValue;
>, <Line: +import javax.ws.rs.QueryParam;
>, <Line: +import com.hubspot.baragon.models.BaragonAgentMetadata;
>, <Line: +import org.apache.curator.framework.recipes.leader.LeaderLatch;
>, <Line: +import org.apache.curator.framework.state.ConnectionState;
>, <Line: +  private final AtomicReference<Optional<String>> errorMessage;
>, <Line: +                        @Named(BaragonDataModule.BARAGON_ZK_CONNECTION_STATE) AtomicReference<ConnectionState> connectionState,
>, <Line: +                        @Named(BaragonAgentServiceModule.CONFIG_ERROR_MESSAGE) AtomicReference<Optional<String>> errorMessage) {
>, <Line: +    this.errorMessage = errorMessage;
>, <Line: +  public BaragonAgentStatus getStatus(@DefaultValue("false") @QueryParam("skipCache") boolean skipCache) {
>, <Line: +    if (skipCache) {
>, <Line: +      try {
>, <Line: +        adapter.checkConfigs();
>, <Line: +        errorMessage.set(Optional.<String>absent());
>, <Line: +      } catch (InvalidConfigException e) {
>, <Line: +        errorMessage.set(Optional.of(e.getMessage()));
>, <Line: +      }
>, <Line: +    Optional<String> currentErrorMessage = errorMessage.get();
>, <Line: +    return new BaragonAgentStatus(loadBalancerConfiguration.getName(), !currentErrorMessage.isPresent(), currentErrorMessage, leaderLatch.hasLeadership(), mostRecentRequestId.get(), connectionStateString, agentMetadata);
>]
[<Line: -import com.hubspot.baragon.data.BaragonKnownAgentsDatastore;
>, <Line: -import com.hubspot.baragon.models.BaragonAgentMetadata;
>, <Line: -import org.apache.curator.framework.recipes.leader.LeaderLatch;
>, <Line: -import org.apache.curator.framework.state.ConnectionState;
>, <Line: -                        @Named(BaragonDataModule.BARAGON_ZK_CONNECTION_STATE) AtomicReference<ConnectionState> connectionState) {
>, <Line: -  public BaragonAgentStatus getStatus() {
>, <Line: -    boolean validConfigs = true;
>, <Line: -    Optional<String> errorMessage = Optional.absent();
>, <Line: -    try {
>, <Line: -      adapter.checkConfigs();
>, <Line: -    } catch (InvalidConfigException e) {
>, <Line: -      validConfigs = false;
>, <Line: -      errorMessage = Optional.of(e.getMessage());
>, <Line: -    return new BaragonAgentStatus(loadBalancerConfiguration.getName(), validConfigs, errorMessage, leaderLatch.hasLeadership(), mostRecentRequestId.get(), connectionStateString, agentMetadata);
>]