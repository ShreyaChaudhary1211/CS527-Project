[<Line: +package com.hubspot.baragon.cache;
>, <Line: +import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
>, <Line: +import java.io.ByteArrayOutputStream;
>, <Line: +import java.io.IOException;
>, <Line: +import java.io.OutputStream;
>, <Line: +import java.util.zip.GZIPOutputStream;
>, <Line: +public class CachedBaragonState {
>, <Line: +  private final byte[] uncompressed;
>, <Line: +  private final byte[] gzip;
>, <Line: +  private final int version;
>, <Line: +  @SuppressFBWarnings("EI_EXPOSE_REP2")
>, <Line: +  public CachedBaragonState(byte[] uncompressed, int version) {
>, <Line: +    this.uncompressed = uncompressed;
>, <Line: +    this.gzip = compress(uncompressed);
>, <Line: +    this.version = version;
>, <Line: +  }
>, <Line: +  @SuppressFBWarnings("EI_EXPOSE_REP")
>, <Line: +  public byte[] getUncompressed() {
>, <Line: +    return uncompressed;
>, <Line: +  }
>, <Line: +  @SuppressFBWarnings("EI_EXPOSE_REP")
>, <Line: +  public byte[] getGzip() {
>, <Line: +    return gzip;
>, <Line: +  }
>, <Line: +  public int getVersion() {
>, <Line: +    return version;
>, <Line: +  }
>, <Line: +  private static byte[] compress(byte[] uncompressed) {
>, <Line: +    ByteArrayOutputStream baos = new ByteArrayOutputStream();
>, <Line: +    try (OutputStream gzip = new GZIPOutputStream(baos)) {
>, <Line: +      gzip.write(uncompressed);
>, <Line: +    } catch (IOException e) {
>, <Line: +      throw new RuntimeException(e);
>, <Line: +    }
>, <Line: +    return baos.toByteArray();
>, <Line: +  }
>, <Line: +}
>]
[]