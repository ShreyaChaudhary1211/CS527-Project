[]
[<Line: -    @Suspendable
>, <Line: -    private void doInstrumentedExc() {
>, <Line: -        try {
>, <Line: -            Fiber.sleep(10);
>, <Line: -            throw new NullPointerException("something is broken");
>, <Line: -        } catch (final InterruptedException ex) {
>, <Line: -            throw new RuntimeException(ex);
>, <Line: -        } catch (final SuspendExecution ex) {
>, <Line: -            throw new AssertionError(ex);
>, <Line: -        }
>, <Line: -    }
>, <Line: -    private void doUninstrumentedExc() {
>, <Line: -        doInstrumentedExc();
>, <Line: -    }
>, <Line: -    @Test
>, <Line: -    public final void testVerificationExc() throws ExecutionException, InterruptedException {
>, <Line: -        assumeTrue(!SystemProperties.isEmptyOrTrue("co.paralleluniverse.fibers.verifyInstrumentation"));
>, <Line: -        final Fiber<?> f = new Fiber<>(new SuspendableRunnable() { @Override public final void run() throws SuspendExecution, InterruptedException {
>, <Line: -            doUninstrumentedExc(); // **
>, <Line: -            Fiber.sleep(10);
>, <Line: -        }}).start();
>, <Line: -        try {
>, <Line: -            f.join();
>, <Line: -        } catch (final ExecutionException re) {
>, <Line: -            assertTrue(re.getCause().getSuppressed()[0].getMessage().contains(" **"));
>, <Line: -        }
>, <Line: -    }
>]