[<Line: +      Scope scope = t.getScope();
>, <Line: +      for (Iterator<Var> it = scope.getVars(); it.hasNext();) {
>, <Line: +        Var v = it.next();
>, <Line: +        ReferenceCollection referenceCollection = referenceMap.getReferences(v);
>, <Line: +        // TODO(moz): Figure out why this could be null
>, <Line: +        if (referenceCollection != null) {
>, <Line: +          if (scope.getRootNode().isFunction() && v.isDefaultParam()) {
>, <Line: +            checkDefaultParam(v, scope);
>, <Line: +          }
>, <Line: +          if (scope.getRootNode().isFunction()) {
>, <Line: +            checkShadowParam(v, scope, referenceCollection.references);
>, <Line: +          checkVar(v, referenceCollection.references);
>]
[<Line: -      if (!t.getScopeRoot().isFunction()) {
>, <Line: -        Scope scope = t.getScope();
>, <Line: -        for (Iterator<Var> it = scope.getFunctionVars(); it.hasNext();) {
>, <Line: -          Var v = it.next();
>, <Line: -          ReferenceCollection referenceCollection = referenceMap.getReferences(v);
>, <Line: -          // TODO(moz): Figure out why this could be null
>, <Line: -          if (referenceCollection != null) {
>, <Line: -            boolean isParameter = v.getScope().getRootNode().isFunction();
>, <Line: -            if (isParameter && v.isDefaultParam()) {
>, <Line: -              checkDefaultParam(v, v.getScope());
>, <Line: -            }
>, <Line: -            if (isParameter) {
>, <Line: -              checkShadowParam(v, scope, referenceCollection.references);
>, <Line: -            }
>, <Line: -            checkVar(v, referenceCollection.references);
>]