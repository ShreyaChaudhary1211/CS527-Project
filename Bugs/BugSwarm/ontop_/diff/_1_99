[<Line: +import it.unibz.krdb.obda.ontology.ImmutableOntologyVocabulary;
>, <Line: +	public static DAG filterPureISA(DAG dag, ImmutableOntologyVocabulary voc) {
>, <Line: +		Map<Description, DAGNode> classes = new LinkedHashMap<>();
>, <Line: +		Map<Description, DAGNode> roles = new LinkedHashMap<>();
>, <Line: +		Map<Description, DAGNode> allnodes = new LinkedHashMap<>();
>, <Line: +				// auxiliary symbol
>, <Line: +				if (!voc.containsObjectProperty(nodeDesc.getName())) 
>, <Line: +						// auxiliary symbol
>, <Line: +						if (!voc.containsObjectProperty(nodeDesc.getName())) 
>, <Line: +				// auxiliary symbol
>, <Line: +				if (!voc.containsDataProperty(nodeDesc.getName())) 
>, <Line: +						// auxiliary symbol
>, <Line: +						if (!voc.containsDataProperty(childDesc.getName())) 
>]
[<Line: -import it.unibz.krdb.obda.ontology.impl.OntologyVocabularyImpl;
>, <Line: -	public static DAG filterPureISA(DAG dag) {
>, <Line: -		Map<Description, DAGNode> classes = new LinkedHashMap<Description, DAGNode>();
>, <Line: -		Map<Description, DAGNode> roles = new LinkedHashMap<Description, DAGNode>();
>, <Line: -		Map<Description, DAGNode> allnodes = new LinkedHashMap<Description, DAGNode>();
>, <Line: -				if (OntologyVocabularyImpl.isAuxiliaryProperty(nodeDesc)) {
>, <Line: -				}
>, <Line: -						if (OntologyVocabularyImpl.isAuxiliaryProperty(childDesc)) {
>, <Line: -						}
>, <Line: -				if (OntologyVocabularyImpl.isAuxiliaryProperty(nodeDesc)) {
>, <Line: -				}
>, <Line: -						if (OntologyVocabularyImpl.isAuxiliaryProperty(childDesc)) {
>, <Line: -						}
>]