[]
[<Line: -package it.unibz.krdb.obda.reformulation.semindex.tests;
>, <Line: -/*
>, <Line: - * #%L
>, <Line: - * ontop-quest-owlapi3
>, <Line: - * %%
>, <Line: - * Copyright (C) 2009 - 2014 Free University of Bozen-Bolzano
>, <Line: - * %%
>, <Line: - * Licensed under the Apache License, Version 2.0 (the "License");
>, <Line: - * you may not use this file except in compliance with the License.
>, <Line: - * You may obtain a copy of the License at
>, <Line: - * 
>, <Line: - *      http://www.apache.org/licenses/LICENSE-2.0
>, <Line: - * 
>, <Line: - * Unless required by applicable law or agreed to in writing, software
>, <Line: - * distributed under the License is distributed on an "AS IS" BASIS,
>, <Line: - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>, <Line: - * See the License for the specific language governing permissions and
>, <Line: - * limitations under the License.
>, <Line: - * #L%
>, <Line: - */
>, <Line: -import it.unibz.krdb.obda.ontology.Ontology;
>, <Line: -import it.unibz.krdb.obda.owlrefplatform.core.dagjgrapht.TBoxReasoner;
>, <Line: -import it.unibz.krdb.obda.owlrefplatform.core.dagjgrapht.TBoxReasonerImpl;
>, <Line: -import it.unibz.krdb.obda.owlrefplatform.core.tboxprocessing.SigmaTBoxOptimizer;
>, <Line: -import junit.framework.TestCase;
>, <Line: -public class SemanticReductionTest extends TestCase {
>, <Line: -	SemanticIndexHelper	helper	= new SemanticIndexHelper();
>, <Line: -	private static int getSize(Ontology ont) {
>, <Line: -		return ont.getSubClassAxioms().size() + ont.getSubObjectPropertyAxioms().size() + ont.getSubDataPropertyAxioms().size();
>, <Line: -	}
>, <Line: -	public void test_2_0_0() throws Exception {
>, <Line: -		Ontology ontology = helper.load_onto("test_2_0_0");
>, <Line: -		TBoxReasoner reasoner = new TBoxReasonerImpl(ontology);
>, <Line: -		SigmaTBoxOptimizer reduction = new SigmaTBoxOptimizer(reasoner);
>, <Line: -		Ontology reduced = reduction.getReducedOntology();
>, <Line: -		assertEquals(0, getSize(reduced));
>, <Line: -	}
>, <Line: -	public void test_2_0_1() throws Exception {
>, <Line: -		Ontology ontology = helper.load_onto("test_2_0_1");
>, <Line: -		TBoxReasoner reasoner = new TBoxReasonerImpl(ontology);
>, <Line: -		SigmaTBoxOptimizer reduction = new SigmaTBoxOptimizer(reasoner);
>, <Line: -		Ontology reduced = reduction.getReducedOntology();
>, <Line: -		assertEquals(0, getSize(reduced));
>, <Line: -	}
>, <Line: -	public void test_2_1_0() throws Exception {
>, <Line: -		Ontology ontology = helper.load_onto("test_2_1_0");
>, <Line: -		TBoxReasoner reasoner = new TBoxReasonerImpl(ontology);
>, <Line: -		SigmaTBoxOptimizer reduction = new SigmaTBoxOptimizer(reasoner);
>, <Line: -		Ontology reduced = reduction.getReducedOntology();
>, <Line: -		assertEquals(1, getSize(reduced));
>, <Line: -	}
>, <Line: -	public void test_1_2_0() throws Exception {
>, <Line: -		Ontology ontology = helper.load_onto("test_1_2_0");
>, <Line: -		TBoxReasoner reasoner = new TBoxReasonerImpl(ontology);
>, <Line: -		SigmaTBoxOptimizer reduction = new SigmaTBoxOptimizer(reasoner);
>, <Line: -		Ontology reduced = reduction.getReducedOntology();
>, <Line: -		assertEquals(0, getSize(reduced));
>, <Line: -	}
>, <Line: -	public void test_equivalence() throws Exception {
>, <Line: -		/*
>, <Line: -		 * The ontology contains A1 = A2 = A3, B1 ISA A1, B1 = B2 = B3, this
>, <Line: -		 * gives 9 inferences and R1 = R2 = R3, S1 ISA R1, S1 = S2 = S3, this
>, <Line: -		 * gives 36 inferences (counting inverse related inferences, and exist
>, <Line: -		 * related inferences. Total, 45 inferences
>, <Line: -		 */
>, <Line: -		Ontology ontology = helper.load_onto("equivalence-test");
>, <Line: -		TBoxReasoner reasoner = new TBoxReasonerImpl(ontology);
>, <Line: -		SigmaTBoxOptimizer reduction = new SigmaTBoxOptimizer(reasoner, null);
>, <Line: -		Ontology reduced = reduction.getReducedOntology();
>, <Line: -		assertEquals(45, getSize(reduced));
>, <Line: -	}
>, <Line: -}
>]