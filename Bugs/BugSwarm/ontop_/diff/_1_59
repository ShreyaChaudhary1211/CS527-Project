[<Line: +import it.unibz.krdb.obda.ontology.ImmutableOntologyVocabulary;
>, <Line: +import it.unibz.krdb.obda.ontology.InconsistentOntologyException;
>, <Line: +import it.unibz.krdb.obda.owlapi3.OWLAPI3TranslatorOWL2QL.TranslationException;
>, <Line: + * A read only iterator that will translate OWLAPI data assertions into ABox
>, <Line: +	private final Iterator<OWLOntology> ontologiesIterator;
>, <Line: +	private Iterator<OWLAxiom> owlaxiomIterator = null;
>, <Line: +	private final OWLAPI3TranslatorHelper helper;
>, <Line: +	public OWLAPI3ABoxIterator(Collection<OWLOntology> ontologies, ImmutableOntologyVocabulary voc) {
>, <Line: +		helper = new OWLAPI3TranslatorHelper(voc);
>, <Line: +		ontologiesIterator = ontologies.iterator();
>, <Line: +		if (ontologiesIterator.hasNext()) 
>, <Line: +			owlaxiomIterator = ontologiesIterator.next().getAxioms().iterator();
>, <Line: +		OWLOntology nextOntology = ontologiesIterator.next();
>, <Line: +		owlaxiomIterator = nextOntology.getAxioms().iterator();
>, <Line: +		if (owlaxiomIterator == null)
>, <Line: +			OWLAxiom currentABoxAssertion = owlaxiomIterator.next();
>, <Line: +		Assertion translatedAxiom;
>, <Line: +		try {
>, <Line: +			if (axiom instanceof OWLClassAssertionAxiom)
>, <Line: +				translatedAxiom = helper.translate((OWLClassAssertionAxiom)axiom);
>, <Line: +			else if (axiom instanceof OWLObjectPropertyAssertionAxiom) 
>, <Line: +				translatedAxiom = helper.translate((OWLObjectPropertyAssertionAxiom)axiom);
>, <Line: +			else if (axiom instanceof OWLDataPropertyAssertionAxiom) 
>, <Line: +				translatedAxiom = helper.translate((OWLDataPropertyAssertionAxiom)axiom);
>, <Line: +			else
>, <Line: +				return null;
>, <Line: +		catch (TranslationException e) {
>, <Line: +			return null;
>, <Line: +		catch (InconsistentOntologyException e) {
>, <Line: +			return null;
>, <Line: +		return translatedAxiom;		
>, <Line: +		if (owlaxiomIterator == null)
>, <Line: +			OWLAxiom currentABoxAssertion = owlaxiomIterator.next();
>]
[<Line: -import it.unibz.krdb.obda.ontology.ClassAssertion;
>, <Line: -import it.unibz.krdb.obda.ontology.DataPropertyAssertion;
>, <Line: -import it.unibz.krdb.obda.ontology.ObjectPropertyAssertion;
>, <Line: - * A read only iterator that will translate OWLAPI2 data assertions into ABox
>, <Line: -	private Iterator<OWLAxiom> owlaxiomiterator = null;
>, <Line: -	private Iterator<OWLOntology> ontologies = null;
>, <Line: -	public OWLAPI3ABoxIterator(Collection<OWLOntology> ontologies) {
>, <Line: -		if (ontologies.size() > 0) {
>, <Line: -			this.ontologies = ontologies.iterator();
>, <Line: -			this.owlaxiomiterator = this.ontologies.next().getAxioms().iterator();
>, <Line: -		}
>, <Line: -		if (ontologies == null) {
>, <Line: -			throw new NoSuchElementException();
>, <Line: -		}
>, <Line: -		OWLOntology nextOntology = ontologies.next();
>, <Line: -		owlaxiomiterator = nextOntology.getAxioms().iterator();
>, <Line: -		if (owlaxiomiterator == null)
>, <Line: -			OWLAxiom currentABoxAssertion = owlaxiomiterator.next();
>, <Line: -		if (axiom instanceof OWLClassAssertionAxiom) {
>, <Line: -			ClassAssertion translatedAxiom = OWLAPI3TranslatorDLLiteA.translate((OWLClassAssertionAxiom)axiom);
>, <Line: -			return translatedAxiom;
>, <Line: -		else if (axiom instanceof OWLObjectPropertyAssertionAxiom) {
>, <Line: -			ObjectPropertyAssertion translatedAxiom = OWLAPI3TranslatorDLLiteA.translate((OWLObjectPropertyAssertionAxiom)axiom);
>, <Line: -			return translatedAxiom;		
>, <Line: -		else if (axiom instanceof OWLDataPropertyAssertionAxiom) {
>, <Line: -			DataPropertyAssertion translatedAxiom = OWLAPI3TranslatorDLLiteA.translate((OWLDataPropertyAssertionAxiom)axiom);
>, <Line: -			return translatedAxiom;
>, <Line: -		return null;
>, <Line: -		if (owlaxiomiterator == null)
>, <Line: -			return false;
>, <Line: -/*
>, <Line: -		OWLAxiom currentABoxAssertion = null;
>, <Line: -		try {
>, <Line: -			currentABoxAssertion = owlaxiomiterator.next();
>, <Line: -		} catch (NoSuchElementException e) {
>, <Line: -		}
>, <Line: -*/
>, <Line: -			OWLAxiom currentABoxAssertion = owlaxiomiterator.next();
>]