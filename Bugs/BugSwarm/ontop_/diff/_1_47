[<Line: +import it.unibz.krdb.sql.api.*;
>, <Line: +import net.sf.jsqlparser.expression.*;
>, <Line: +import net.sf.jsqlparser.expression.operators.arithmetic.*;
>, <Line: +import net.sf.jsqlparser.expression.operators.relational.*;
>, <Line: +import net.sf.jsqlparser.statement.select.*;
>, <Line: +		isNullExpression.getLeftExpression().accept(this);
>]
[<Line: -import it.unibz.krdb.sql.api.AllComparison;
>, <Line: -import it.unibz.krdb.sql.api.AnyComparison;
>, <Line: -import it.unibz.krdb.sql.api.ParsedSQLQuery;
>, <Line: -import it.unibz.krdb.sql.api.SelectionJSQL;
>, <Line: -import it.unibz.krdb.sql.api.TableJSQL;
>, <Line: -import net.sf.jsqlparser.expression.AllComparisonExpression;
>, <Line: -import net.sf.jsqlparser.expression.AnalyticExpression;
>, <Line: -import net.sf.jsqlparser.expression.AnyComparisonExpression;
>, <Line: -import net.sf.jsqlparser.expression.BinaryExpression;
>, <Line: -import net.sf.jsqlparser.expression.CaseExpression;
>, <Line: -import net.sf.jsqlparser.expression.CastExpression;
>, <Line: -import net.sf.jsqlparser.expression.DateValue;
>, <Line: -import net.sf.jsqlparser.expression.DoubleValue;
>, <Line: -import net.sf.jsqlparser.expression.Expression;
>, <Line: -import net.sf.jsqlparser.expression.ExpressionVisitor;
>, <Line: -import net.sf.jsqlparser.expression.ExtractExpression;
>, <Line: -import net.sf.jsqlparser.expression.Function;
>, <Line: -import net.sf.jsqlparser.expression.IntervalExpression;
>, <Line: -import net.sf.jsqlparser.expression.JdbcNamedParameter;
>, <Line: -import net.sf.jsqlparser.expression.JdbcParameter;
>, <Line: -import net.sf.jsqlparser.expression.JsonExpression;
>, <Line: -import net.sf.jsqlparser.expression.LongValue;
>, <Line: -import net.sf.jsqlparser.expression.NullValue;
>, <Line: -import net.sf.jsqlparser.expression.OracleHierarchicalExpression;
>, <Line: -import net.sf.jsqlparser.expression.Parenthesis;
>, <Line: -import net.sf.jsqlparser.expression.SignedExpression;
>, <Line: -import net.sf.jsqlparser.expression.StringValue;
>, <Line: -import net.sf.jsqlparser.expression.TimeValue;
>, <Line: -import net.sf.jsqlparser.expression.TimestampValue;
>, <Line: -import net.sf.jsqlparser.expression.WhenClause;
>, <Line: -import net.sf.jsqlparser.expression.operators.arithmetic.Addition;
>, <Line: -import net.sf.jsqlparser.expression.operators.arithmetic.BitwiseAnd;
>, <Line: -import net.sf.jsqlparser.expression.operators.arithmetic.BitwiseOr;
>, <Line: -import net.sf.jsqlparser.expression.operators.arithmetic.BitwiseXor;
>, <Line: -import net.sf.jsqlparser.expression.operators.arithmetic.Concat;
>, <Line: -import net.sf.jsqlparser.expression.operators.arithmetic.Division;
>, <Line: -import net.sf.jsqlparser.expression.operators.arithmetic.Modulo;
>, <Line: -import net.sf.jsqlparser.expression.operators.arithmetic.Multiplication;
>, <Line: -import net.sf.jsqlparser.expression.operators.arithmetic.Subtraction;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.Between;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.EqualsTo;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.ExistsExpression;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.ExpressionList;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.GreaterThan;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.GreaterThanEquals;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.InExpression;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.IsNullExpression;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.ItemsList;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.LikeExpression;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.Matches;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.MinorThan;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.MinorThanEquals;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.MultiExpressionList;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.NotEqualsTo;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.RegExpMatchOperator;
>, <Line: -import net.sf.jsqlparser.expression.operators.relational.RegExpMySQLOperator;
>, <Line: -import net.sf.jsqlparser.statement.select.FromItemVisitor;
>, <Line: -import net.sf.jsqlparser.statement.select.LateralSubSelect;
>, <Line: -import net.sf.jsqlparser.statement.select.PlainSelect;
>, <Line: -import net.sf.jsqlparser.statement.select.Select;
>, <Line: -import net.sf.jsqlparser.statement.select.SelectVisitor;
>, <Line: -import net.sf.jsqlparser.statement.select.SetOperationList;
>, <Line: -import net.sf.jsqlparser.statement.select.SubJoin;
>, <Line: -import net.sf.jsqlparser.statement.select.SubSelect;
>, <Line: -import net.sf.jsqlparser.statement.select.ValuesList;
>, <Line: -import net.sf.jsqlparser.statement.select.WithItem;
>]