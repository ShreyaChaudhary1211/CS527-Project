[<Line: +import it.unibz.krdb.obda.ontology.OntologyVocabulary;
>, <Line: +		OntologyVocabulary voc = descFactory.createVocabulary();
>, <Line: +		Ontology onto = descFactory.createOntology(voc);
>, <Line: +//                    ObjectPropertyExpression psprop = onto.getVocabulary().createObjectProperty(subject).getInverse();
>, <Line: +//                    ObjectSomeValuesFrom rs = psprop.getDomain();
>, <Line: +//                    OClass co = onto.getVocabulary().createClass(object);
>, <Line: +//                    onto.addSubClassOfAxiom(rs, co);
>, <Line: +//                    ObjectPropertyExpression psprop = onto.getVocabulary().createObjectProperty(subject);
>, <Line: +//                    ObjectSomeValuesFrom rs = psprop.getDomain();
>, <Line: +//                    OClass co = onto.getVocabulary().createClass(object);
>, <Line: +//                    onto.addSubClassOfAxiom(rs, co);
>, <Line: +//                   String co = object;
>, <Line: +//                   onto.getVocabulary().createClass(co);
>, <Line: +//                   OClass cs = onto.getVocabulary().createClass(subject);
>, <Line: +//                   OClass co = onto.getVocabulary().createClass(object);
>, <Line: +//                    onto.addSubClassOfAxiom(cs, co);
>, <Line: +//                    ObjectPropertyExpression rs = onto.getVocabulary().createObjectProperty(subject);
>, <Line: +//                    ObjectPropertyExpression ro = onto.getVocabulary().createObjectProperty(object);
>, <Line: +//                    onto.addSubPropertyOfAxiom(rs, ro);
>, <Line: +                } 
>, <Line: +                else {
>]
[<Line: -        Ontology onto = descFactory.createOntology();
>, <Line: -                    ObjectPropertyExpression psprop = onto.getVocabulary().createObjectProperty(subject).getInverse();
>, <Line: -                    ObjectSomeValuesFrom rs = psprop.getDomain();
>, <Line: -                    OClass co = onto.getVocabulary().createClass(object);
>, <Line: -                    onto.addSubClassOfAxiom(rs, co);
>, <Line: -                    ObjectPropertyExpression psprop = onto.getVocabulary().createObjectProperty(subject);
>, <Line: -                    ObjectSomeValuesFrom rs = psprop.getDomain();
>, <Line: -                    OClass co = onto.getVocabulary().createClass(object);
>, <Line: -                    onto.addSubClassOfAxiom(rs, co);
>, <Line: -                    String co = object;
>, <Line: -                    onto.getVocabulary().createClass(co);
>, <Line: -                    OClass cs = onto.getVocabulary().createClass(subject);
>, <Line: -                    OClass co = onto.getVocabulary().createClass(object);
>, <Line: -                    onto.addSubClassOfAxiom(cs, co);
>, <Line: -                    ObjectPropertyExpression rs = onto.getVocabulary().createObjectProperty(subject);
>, <Line: -                    ObjectPropertyExpression ro = onto.getVocabulary().createObjectProperty(object);
>, <Line: -                    onto.addSubPropertyOfAxiom(rs, ro);
>, <Line: -                } else {
>]