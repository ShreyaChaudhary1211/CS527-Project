[]
[<Line: -package it.unibz.krdb.obda.reformulation.semindex.tests;
>, <Line: -/*
>, <Line: - * #%L
>, <Line: - * ontop-quest-owlapi3
>, <Line: - * %%
>, <Line: - * Copyright (C) 2009 - 2014 Free University of Bozen-Bolzano
>, <Line: - * %%
>, <Line: - * Licensed under the Apache License, Version 2.0 (the "License");
>, <Line: - * you may not use this file except in compliance with the License.
>, <Line: - * You may obtain a copy of the License at
>, <Line: - * 
>, <Line: - *      http://www.apache.org/licenses/LICENSE-2.0
>, <Line: - * 
>, <Line: - * Unless required by applicable law or agreed to in writing, software
>, <Line: - * distributed under the License is distributed on an "AS IS" BASIS,
>, <Line: - * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>, <Line: - * See the License for the specific language governing permissions and
>, <Line: - * limitations under the License.
>, <Line: - * #L%
>, <Line: - */
>, <Line: -import it.unibz.krdb.obda.model.OBDADataFactory;
>, <Line: -import it.unibz.krdb.obda.model.OBDAModel;
>, <Line: -import it.unibz.krdb.obda.model.impl.OBDADataFactoryImpl;
>, <Line: -import it.unibz.krdb.obda.owlrefplatform.core.QuestConstants;
>, <Line: -import it.unibz.krdb.obda.owlrefplatform.core.QuestPreferences;
>, <Line: -import it.unibz.krdb.obda.owlrefplatform.owlapi3.QuestOWL;
>, <Line: -import it.unibz.krdb.obda.owlrefplatform.owlapi3.QuestOWLFactory;
>, <Line: -import java.io.File;
>, <Line: -import org.semanticweb.owlapi.apibinding.OWLManager;
>, <Line: -import org.semanticweb.owlapi.model.OWLOntology;
>, <Line: -import org.semanticweb.owlapi.model.OWLOntologyManager;
>, <Line: -import org.semanticweb.owlapi.reasoner.SimpleConfiguration;
>, <Line: -import org.slf4j.Logger;
>, <Line: -import org.slf4j.LoggerFactory;
>, <Line: -public class SNOMEDTest {
>, <Line: -	public static void main(String args[]) throws Exception {
>, <Line: -		Logger log = LoggerFactory.getLogger("SNOMEDTEST");
>, <Line: -		String owlfile = "/Users/mariano/Downloads/SnomedCT_INT_20110731/res_StatedOWLF_Core_INT_20110731.owl";
>, <Line: -		log.info("Loading SNOMED");
>, <Line: -		// Loading the OWL file
>, <Line: -		OWLOntologyManager manager = OWLManager.createOWLOntologyManager();
>, <Line: -		OWLOntology ontology = manager.loadOntologyFromOntologyDocument((new File(owlfile)));
>, <Line: -		// Loading the OBDA data
>, <Line: -		OBDADataFactory fac = OBDADataFactoryImpl.getInstance();
>, <Line: -		OBDAModel obdaModel = fac.getOBDAModel();
>, <Line: -		QuestPreferences p = new QuestPreferences();
>, <Line: -		p.setCurrentValueOf(QuestPreferences.ABOX_MODE, QuestConstants.CLASSIC);
>, <Line: -		p.setCurrentValueOf(QuestPreferences.OPTIMIZE_EQUIVALENCES, "true");
>, <Line: -		p.setCurrentValueOf(QuestPreferences.OPTIMIZE_TBOX_SIGMA, "true");
>, <Line: -		p.setCurrentValueOf(QuestPreferences.OBTAIN_FROM_MAPPINGS, "true");
>, <Line: -		p.setCurrentValueOf(QuestPreferences.OBTAIN_FROM_ONTOLOGY, "false");
>, <Line: -		p.setCurrentValueOf(QuestPreferences.DBTYPE, QuestConstants.SEMANTIC_INDEX);
>, <Line: -		/*
>, <Line: -		 * Loading the queries (we have 11 queries)
>, <Line: -		 */
>, <Line: -		// Creating a new instance of the reasoner
>, <Line: -		QuestOWLFactory factory = new QuestOWLFactory();
>, <Line: -		factory.setOBDAController(obdaModel);
>, <Line: -		factory.setPreferenceHolder(p);
>, <Line: -		log.info("Creating the reasoner");
>, <Line: -		QuestOWL reasoner = (QuestOWL) factory.createReasoner(ontology, new SimpleConfiguration());
>, <Line: -		log.info("Done");
>, <Line: -		reasoner.dispose();
>, <Line: -	}
>, <Line: -}
>]