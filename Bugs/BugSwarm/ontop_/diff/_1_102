[<Line: +import it.unibz.krdb.obda.ontology.impl.DatatypeImpl;
>, <Line: +				DataSomeValuesFrom domain = prop.getDomainRestriction(DatatypeImpl.rdfsLiteral); 
>, <Line: +						equivDomainNode = dag.getNode(equiprop.getDomainRestriction(DatatypeImpl.rdfsLiteral));
>, <Line: +					DAGNode equivDomainNode = dag.getNode(equiprop.getDomainRestriction(DatatypeImpl.rdfsLiteral));
>]
[<Line: -				//DataPropertyExpression inverse = prop.getInverse();
>, <Line: -				DataSomeValuesFrom domain = prop.getDomain(); //fac.createPropertySomeRestriction(prop);
>, <Line: -				//DataSomeValuesFrom range = fac.createPropertySomeRestriction(inverse);
>, <Line: -				//cycleheadinverseNode = dag.getNode(inverse);
>, <Line: -				//cycleheadrangeNode = dag.getNode(range);
>, <Line: -						//equivinverseNode = dag.getNode(equiprop.getInverse());
>, <Line: -						equivDomainNode = dag.getNode(equiprop.getDomain());
>, <Line: -						//DataPropertyExpression inv = equiprop.getInverse();
>, <Line: -						//.createPropertySomeRestriction(inv)
>, <Line: -					DAGNode equivDomainNode = dag.getNode(equiprop.getDomain());
>]