[<Line: +    private final ElementMatcher<? super TypeDescription> matcher;
>, <Line: +     * @param matcher The matcher to apply to the raw type.
>, <Line: +    public RawTypeMatcher(ElementMatcher<? super TypeDescription> matcher) {
>, <Line: +        this.matcher = matcher;
>, <Line: +        return !target.getSort().isWildcard() && matcher.matches(target.asErasure());
>, <Line: +                && matcher.equals(((RawTypeMatcher<?>) other).matcher);
>, <Line: +        return matcher.hashCode();
>, <Line: +        return "rawType(" + matcher + ")";
>]
[<Line: -    private final ElementMatcher<? super TypeDescription> rawTypeMatcher;
>, <Line: -     * @param rawTypeMatcher The matcher to apply to the raw type.
>, <Line: -    public RawTypeMatcher(ElementMatcher<? super TypeDescription> rawTypeMatcher) {
>, <Line: -        this.rawTypeMatcher = rawTypeMatcher;
>, <Line: -        return !target.getSort().isWildcard() && rawTypeMatcher.matches(target.asErasure());
>, <Line: -                && rawTypeMatcher.equals(((RawTypeMatcher<?>) other).rawTypeMatcher);
>, <Line: -        return rawTypeMatcher.hashCode();
>, <Line: -        return "rawType(" + rawTypeMatcher + ")";
>]