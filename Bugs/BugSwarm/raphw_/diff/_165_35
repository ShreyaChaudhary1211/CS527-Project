[<Line: +            assertThat(dynamicType.getLoaded().getDeclaredConstructor().newInstance().foo(), is(FOO));
>, <Line: +            assertThat(dynamicType.getLoaded().getDeclaredConstructor().newInstance().foo(), is(FOO));
>, <Line: +        assertThat(dynamicType.getLoaded().getDeclaredConstructor().newInstance().foo(), is(FOO));
>, <Line: +        assertThat(dynamicType.getLoaded().getDeclaredConstructor().newInstance().foo(), is(FOO));
>, <Line: +        assertThat(dynamicType.getLoaded().getDeclaredConstructor().newInstance().foo(), is(FOO));
>, <Line: +        assertThat(dynamicType.getLoaded().getDeclaredConstructor().newInstance().foo(),
>, <Line: +        assertThat(dynamicType.getLoaded().getDeclaredConstructor().newInstance().foo(),
>, <Line: +        assertThat(dynamicType.getLoaded().getDeclaredConstructor().newInstance().foo(),
>, <Line: +        Simple instance = dynamicType.getLoaded().getDeclaredConstructor().newInstance();
>, <Line: +        SimpleWithField instance = dynamicType.getLoaded().getDeclaredConstructor().newInstance();
>, <Line: +        assertThat(dynamicType.getLoaded().getDeclaredConstructor().newInstance().foo(), nullValue(String.class));
>, <Line: +        Simple simple = dynamicType.getLoaded().getDeclaredConstructor().newInstance();
>, <Line: +        assertThat(dynamicType.getLoaded().getDeclaredConstructor().newInstance().foo(FOO), is(FOO));
>, <Line: +        assertThat(dynamicType.getLoaded().getDeclaredConstructor().newInstance().foo(FOO), is(BAZ));
>, <Line: +        assertThat(dynamicType.getLoaded().getDeclaredConstructor().newInstance().foo(FOO), is(FOO));
>]
[<Line: -            assertThat(dynamicType.getLoaded().newInstance().foo(), is(FOO));
>, <Line: -            assertThat(dynamicType.getLoaded().newInstance().foo(), is(FOO));
>, <Line: -        assertThat(dynamicType.getLoaded().newInstance().foo(), is(FOO));
>, <Line: -        assertThat(dynamicType.getLoaded().newInstance().foo(), is(FOO));
>, <Line: -        assertThat(dynamicType.getLoaded().newInstance().foo(), is(FOO));
>, <Line: -        assertThat(dynamicType.getLoaded().newInstance().foo(),
>, <Line: -        assertThat(dynamicType.getLoaded().newInstance().foo(),
>, <Line: -        assertThat(dynamicType.getLoaded().newInstance().foo(),
>, <Line: -        Simple instance = dynamicType.getLoaded().newInstance();
>, <Line: -        SimpleWithField instance = dynamicType.getLoaded().newInstance();
>, <Line: -        assertThat(dynamicType.getLoaded().newInstance().foo(), nullValue(String.class));
>, <Line: -        Simple simple = dynamicType.getLoaded().newInstance();
>, <Line: -        assertThat(dynamicType.getLoaded().newInstance().foo(FOO), is(FOO));
>, <Line: -        assertThat(dynamicType.getLoaded().newInstance().foo(FOO), is(BAZ));
>, <Line: -        assertThat(dynamicType.getLoaded().newInstance().foo(FOO), is(FOO));
>]