[<Line: +        Foo instance = loaded.getLoaded().getDeclaredConstructor().newInstance();
>, <Line: +        Foo instance = loaded.getLoaded().getDeclaredConstructor().newInstance();
>, <Line: +        Foo instance = loaded.getLoaded().getDeclaredConstructor().newInstance();
>, <Line: +        Bar instance = loaded.getLoaded().getDeclaredConstructor().newInstance();
>, <Line: +        loaded.getLoaded().getDeclaredConstructor().newInstance().qux();
>, <Line: +        Foo instance = loaded.getLoaded().getDeclaredConstructor().newInstance();
>, <Line: +        Foo instance = loaded.getLoaded().getDeclaredConstructor().newInstance();
>, <Line: +        Foo instance = loaded.getLoaded().getDeclaredConstructor().newInstance();
>, <Line: +        assertThat(type.getDeclaredMethod(BAR).invoke(type.getDeclaredConstructor().newInstance()), is((Object) FOO));
>]
[<Line: -        Foo instance = loaded.getLoaded().newInstance();
>, <Line: -        Foo instance = loaded.getLoaded().newInstance();
>, <Line: -        Foo instance = loaded.getLoaded().newInstance();
>, <Line: -        Bar instance = loaded.getLoaded().newInstance();
>, <Line: -        loaded.getLoaded().newInstance().qux();
>, <Line: -        Foo instance = loaded.getLoaded().newInstance();
>, <Line: -        Foo instance = loaded.getLoaded().newInstance();
>, <Line: -        Foo instance = loaded.getLoaded().newInstance();
>, <Line: -        assertThat(type.getDeclaredMethod(BAR).invoke(type.newInstance()), is((Object) FOO));
>]