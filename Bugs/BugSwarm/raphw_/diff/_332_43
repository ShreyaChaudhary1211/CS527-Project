[<Line: +import net.bytebuddy.description.annotation.AnnotationDescription;
>, <Line: +    @Mock
>, <Line: +    private AnnotationDescription annotation;
>, <Line: +    @SuppressWarnings("unchecked")
>, <Line: +        when(bound.accept((TypeDescription.Generic.Visitor) visitor)).thenReturn(visitedBound);
>, <Line: +    public void testPropertiesSimple() throws Exception {
>, <Line: +        assertThat(new TypeVariableToken(FOO, Collections.singletonList(bound)).getAnnotations().size(), is(0));
>, <Line: +    }
>, <Line: +    @Test
>, <Line: +    public void testProperties() throws Exception {
>, <Line: +        assertThat(new TypeVariableToken(FOO, Collections.singletonList(bound), Collections.singletonList(annotation)).getSymbol(), is(FOO));
>, <Line: +        assertThat(new TypeVariableToken(FOO, Collections.singletonList(bound), Collections.singletonList(annotation)).getBounds(),
>, <Line: +                is(Collections.singletonList(bound)));
>, <Line: +        assertThat(new TypeVariableToken(FOO, Collections.singletonList(bound), Collections.singletonList(annotation)).getAnnotations(),
>, <Line: +                is(Collections.singletonList(annotation)));
>]
[<Line: -        when(bound.accept(visitor)).thenReturn(visitedBound);
>, <Line: -    public void testProperties() throws Exception {
>]