[<Line: +    protected TypeDescription.Generic describeType(Field field) {
>, <Line: +    protected TypeDescription.Generic describeReturnType(Method method) {
>, <Line: +    @Override
>, <Line: +    protected TypeDescription.Generic describeParameterType(Method method, int index) {
>, <Line: +        return describe(method.getDeclaringClass()).getDeclaredMethods().filter(is(method)).getOnly().getParameters().get(index).getType();
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    protected TypeDescription.Generic describeExceptionType(Method method, int index) {
>, <Line: +        return describe(method.getDeclaringClass()).getDeclaredMethods().filter(is(method)).getOnly().getExceptionTypes().get(index);
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    protected TypeDescription.Generic describeSuperType(Class<?> type) {
>, <Line: +        return describe(type).getSuperType();
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    protected TypeDescription.Generic describeInterfaceType(Class<?> type, int index) {
>, <Line: +        return describe(type).getInterfaces().get(index);
>, <Line: +    }
>]
[<Line: -    protected TypeDescription.Generic describe(Field field) {
>, <Line: -    protected TypeDescription.Generic describe(Method method) {
>]