[<Line: +             * @param classLoader          The type's class loader or {@code null} if the type is loaded by the bootstrap loader.
>, <Line: +                                       ClassLoader classLoader,
>, <Line: +                        classLoader,
>, <Line: +                                        ClassLoader.class,
>, <Line: +                /**
>, <Line: +                 * The type's class loader or {@code null} if the type is loaded by the bootstrap loader.
>, <Line: +                 */
>, <Line: +                private final ClassLoader classLoader;
>, <Line: +                 * @param classLoader          The type's class loader or {@code null} if the type is loaded by the bootstrap loader.
>, <Line: +                                                   ClassLoader classLoader,
>, <Line: +                    this.classLoader = classLoader;
>, <Line: +                    return transform(JavaModule.of(rawModule),
>, <Line: +                            classLoader,
>, <Line: +                            && (classLoader != null ? classLoader.equals(that.classLoader) : that.classLoader == null)
>, <Line: +                    result = 31 * result + (classLoader != null ? classLoader.hashCode() : 0);
>, <Line: +                            ", classLoader=" + classLoader +
>]
[<Line: -                    JavaModule module = JavaModule.of(rawModule);
>, <Line: -                    return transform(module,
>, <Line: -                            module.getClassLoader(),
>]