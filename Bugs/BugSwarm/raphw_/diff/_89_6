[]
[<Line: -package net.bytebuddy.description.type.generic;
>, <Line: -import net.bytebuddy.test.utility.ObjectPropertyAssertion;
>, <Line: -import org.junit.Test;
>, <Line: -import java.lang.reflect.Method;
>, <Line: -import java.util.Arrays;
>, <Line: -import java.util.Iterator;
>, <Line: -import static org.mockito.Mockito.mock;
>, <Line: -public class GenericTypeDescriptionLazyProjectionOfLoadedParameterDispatcherTest {
>, <Line: -    @Test(expected = IllegalStateException.class)
>, <Line: -    public void testLegacyVmGetType() throws Exception {
>, <Line: -        GenericTypeDescription.LazyProjection.OfLoadedParameter.Dispatcher.ForLegacyVm.INSTANCE.getType(mock(Object.class));
>, <Line: -    }
>, <Line: -    @Test(expected = IllegalStateException.class)
>, <Line: -    public void testLegacyVmGetParameterizedType() throws Exception {
>, <Line: -        GenericTypeDescription.LazyProjection.OfLoadedParameter.Dispatcher.ForLegacyVm.INSTANCE.getParameterizedType(mock(Object.class));
>, <Line: -    }
>, <Line: -    @Test
>, <Line: -    public void testObjectProperties() throws Exception {
>, <Line: -        final Iterator<Method> methods = Arrays.asList(Object.class.getDeclaredMethods()).iterator();
>, <Line: -        ObjectPropertyAssertion.of(GenericTypeDescription.LazyProjection.OfLoadedParameter.Dispatcher.ForModernVm.class)
>, <Line: -                .create(new ObjectPropertyAssertion.Creator<Method>() {
>, <Line: -                    @Override
>, <Line: -                    public Method create() {
>, <Line: -                        return methods.next();
>, <Line: -                    }
>, <Line: -                }).apply();
>, <Line: -        ObjectPropertyAssertion.of(GenericTypeDescription.LazyProjection.OfLoadedParameter.Dispatcher.ForLegacyVm.class).apply();
>, <Line: -    }
>, <Line: -}
>]