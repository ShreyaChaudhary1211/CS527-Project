[]
[<Line: -package net.bytebuddy.build.gradle;
>, <Line: -import lombok.EqualsAndHashCode;
>, <Line: -import org.gradle.api.Project;
>, <Line: -import java.util.logging.Handler;
>, <Line: -import java.util.logging.LogRecord;
>, <Line: -import java.util.logging.Logger;
>, <Line: -import java.util.logging.SimpleFormatter;
>, <Line: -/**
>, <Line: - * A log handler for only printing Byte Buddy specific log-messages if debug logging is enabled for a plugin.
>, <Line: - */
>, <Line: -@EqualsAndHashCode(callSuper = false)
>, <Line: -public class ByteBuddyLogHandler extends Handler {
>, <Line: -    /**
>, <Line: -     * The current project.
>, <Line: -     */
>, <Line: -    private final Project project;
>, <Line: -    /**
>, <Line: -     * The Byte Buddy logger target.
>, <Line: -     */
>, <Line: -    private final Logger logger;
>, <Line: -    /**
>, <Line: -     * {@code true} if parent handler delegation was originally enabled.
>, <Line: -     */
>, <Line: -    private final boolean useParentHandlers;
>, <Line: -    /**
>, <Line: -     * Creates a new log handler.
>, <Line: -     *
>, <Line: -     * @param project           The current project.
>, <Line: -     * @param logger            The Byte Buddy logger target.
>, <Line: -     * @param useParentHandlers {@code true} if parent handler delegation was originally enabled.
>, <Line: -     */
>, <Line: -    protected ByteBuddyLogHandler(Project project, Logger logger, boolean useParentHandlers) {
>, <Line: -        this.project = project;
>, <Line: -        this.logger = logger;
>, <Line: -        this.useParentHandlers = useParentHandlers;
>, <Line: -        setFormatter(new SimpleFormatter());
>, <Line: -    }
>, <Line: -    /**
>, <Line: -     * Initializes the Byte Buddy log handler.
>, <Line: -     *
>, <Line: -     * @param project The current project.
>, <Line: -     * @return The registered log handler.
>, <Line: -     */
>, <Line: -    public static ByteBuddyLogHandler initialize(Project project) {
>, <Line: -        Logger logger = Logger.getLogger("net.bytebuddy");
>, <Line: -        ByteBuddyLogHandler handler = new ByteBuddyLogHandler(project, logger, logger.getUseParentHandlers());
>, <Line: -        try {
>, <Line: -            logger.setUseParentHandlers(false);
>, <Line: -            logger.addHandler(handler);
>, <Line: -        } catch (SecurityException exception) {
>, <Line: -            project.getLogger().warn("Cannot configure Byte Buddy logging", exception);
>, <Line: -        }
>, <Line: -        return handler;
>, <Line: -    }
>, <Line: -    /**
>, <Line: -     * Resets the configuration to its original state.
>, <Line: -     */
>, <Line: -    public void reset() {
>, <Line: -        try {
>, <Line: -            logger.setUseParentHandlers(useParentHandlers);
>, <Line: -            logger.removeHandler(this);
>, <Line: -        } catch (SecurityException exception) {
>, <Line: -            project.getLogger().warn("Cannot configure Byte Buddy logging", exception);
>, <Line: -        }
>, <Line: -    }
>, <Line: -    @Override
>, <Line: -    public void publish(LogRecord record) {
>, <Line: -        if (project.getLogger().isDebugEnabled()) {
>, <Line: -            project.getLogger().debug(getFormatter().format(record));
>, <Line: -        }
>, <Line: -    }
>, <Line: -    @Override
>, <Line: -    public void flush() {
>, <Line: -        /* do nothing */
>, <Line: -    }
>, <Line: -    @Override
>, <Line: -    public void close() {
>, <Line: -        /* do nothing */
>, <Line: -    }
>, <Line: -    @Override
>, <Line: -    public String toString() {
>, <Line: -        return "ByteBuddyLogHandler{" +
>, <Line: -                "project=" + project +
>, <Line: -                " ,logger=" + logger +
>, <Line: -                " ,useParentHandlers=" + useParentHandlers +
>, <Line: -                '}';
>, <Line: -    }
>, <Line: -}
>]