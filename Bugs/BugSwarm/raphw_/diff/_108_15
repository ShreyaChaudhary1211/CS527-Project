[<Line: +    private final List<? extends ElementMatcher<? super T>> matchers;
>, <Line: +     * @param matchers The list of element matchers to match any elements of the matched iterable collection
>, <Line: +    public CollectionOneToOneMatcher(List<? extends ElementMatcher<? super T>> matchers) {
>, <Line: +        this.matchers = matchers;
>, <Line: +        if ((target instanceof Collection) && ((Collection<?>) target).size() != matchers.size()) {
>, <Line: +        Iterator<? extends ElementMatcher<? super T>> iterator = matchers.iterator();
>, <Line: +                && matchers.equals(((CollectionOneToOneMatcher<?>) other).matchers);
>, <Line: +        return matchers.hashCode();
>, <Line: +        for (Object value : matchers) {
>]
[<Line: -    private final List<? extends ElementMatcher<? super T>> elementMatchers;
>, <Line: -     * @param elementMatchers The list of element matchers to match any elements of the matched iterable collection
>, <Line: -    public CollectionOneToOneMatcher(List<? extends ElementMatcher<? super T>> elementMatchers) {
>, <Line: -        this.elementMatchers = elementMatchers;
>, <Line: -        if ((target instanceof Collection) && ((Collection<?>) target).size() != elementMatchers.size()) {
>, <Line: -        Iterator<? extends ElementMatcher<? super T>> iterator = elementMatchers.iterator();
>, <Line: -                && elementMatchers.equals(((CollectionOneToOneMatcher<?>) other).elementMatchers);
>, <Line: -        return elementMatchers.hashCode();
>, <Line: -        for (Object value : elementMatchers) {
>]