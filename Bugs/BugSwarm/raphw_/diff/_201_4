[<Line: +package net.bytebuddy.agent.builder;
>, <Line: +import net.bytebuddy.test.utility.ObjectPropertyAssertion;
>, <Line: +import org.junit.Test;
>, <Line: +import java.util.Arrays;
>, <Line: +import java.util.Collections;
>, <Line: +import java.util.Iterator;
>, <Line: +import java.util.List;
>, <Line: +import static org.hamcrest.core.Is.is;
>, <Line: +import static org.junit.Assert.assertThat;
>, <Line: +public class AgentBuilderRedefinitionStrategyBatchAllocatorTest {
>, <Line: +    @Test
>, <Line: +    public void testForTotal() throws Exception {
>, <Line: +        AgentBuilder.RedefinitionStrategy.BatchAllocator batchAllocator = AgentBuilder.RedefinitionStrategy.BatchAllocator.ForTotal.INSTANCE;
>, <Line: +        Iterator<? extends List<Class<?>>> iterator = batchAllocator.batch(Arrays.<Class<?>>asList(Object.class, Void.class, String.class)).iterator();
>, <Line: +        assertThat(iterator.hasNext(), is(true));
>, <Line: +        assertThat(iterator.next(), is(Arrays.<Class<?>>asList(Object.class, Void.class, String.class)));
>, <Line: +        assertThat(iterator.hasNext(), is(false));
>, <Line: +    }
>, <Line: +    @Test
>, <Line: +    public void testForFixed() throws Exception {
>, <Line: +        AgentBuilder.RedefinitionStrategy.BatchAllocator batchAllocator = new AgentBuilder.RedefinitionStrategy.BatchAllocator.ForFixedSize(2);
>, <Line: +        Iterator<? extends List<Class<?>>> iterator = batchAllocator.batch(Arrays.<Class<?>>asList(Object.class, Void.class, String.class)).iterator();
>, <Line: +        assertThat(iterator.hasNext(), is(true));
>, <Line: +        assertThat(iterator.next(), is(Arrays.<Class<?>>asList(Object.class, Void.class)));
>, <Line: +        assertThat(iterator.hasNext(), is(true));
>, <Line: +        assertThat(iterator.next(), is(Collections.<Class<?>>singletonList(String.class)));
>, <Line: +        assertThat(iterator.hasNext(), is(false));
>, <Line: +    }
>, <Line: +    @Test
>, <Line: +    public void testForFixedFactory() throws Exception {
>, <Line: +        assertThat(AgentBuilder.RedefinitionStrategy.BatchAllocator.ForFixedSize.ofSize(1),
>, <Line: +                is((AgentBuilder.RedefinitionStrategy.BatchAllocator) new AgentBuilder.RedefinitionStrategy.BatchAllocator.ForFixedSize(1)));
>, <Line: +        assertThat(AgentBuilder.RedefinitionStrategy.BatchAllocator.ForFixedSize.ofSize(0),
>, <Line: +                is((AgentBuilder.RedefinitionStrategy.BatchAllocator) AgentBuilder.RedefinitionStrategy.BatchAllocator.ForTotal.INSTANCE));
>, <Line: +    }
>, <Line: +    @Test(expected = IllegalArgumentException.class)
>, <Line: +    public void testForFixedFactoryIllegal() throws Exception {
>, <Line: +        AgentBuilder.RedefinitionStrategy.BatchAllocator.ForFixedSize.ofSize(-1);
>, <Line: +    }
>, <Line: +    @Test
>, <Line: +    public void testObjectProperties() throws Exception {
>, <Line: +        ObjectPropertyAssertion.of(AgentBuilder.RedefinitionStrategy.BatchAllocator.ForTotal.class).apply();
>, <Line: +        ObjectPropertyAssertion.of(AgentBuilder.RedefinitionStrategy.BatchAllocator.ForFixedSize.class).apply();
>, <Line: +    }
>, <Line: +}
>]
[]