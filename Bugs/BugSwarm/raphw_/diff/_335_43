[<Line: +                assertThat(describe(type).getActualName(), is(type.getComponentType().getName() + "[]"));
>, <Line: +                assertThat(describe(type).getActualName(), is(type.getName()));
>, <Line: +        assertThat(describe(Object.class).getActualName(), is(Object.class.getName()));
>, <Line: +        assertThat(describe(SampleClass.class).getActualName(), is(SampleClass.class.getName()));
>, <Line: +        assertThat(describe(void.class).getActualName(), is(void.class.getName()));
>, <Line: +        assertThat(describe(boolean.class).getActualName(), is(boolean.class.getName()));
>, <Line: +        assertThat(describe(byte.class).getActualName(), is(byte.class.getName()));
>, <Line: +        assertThat(describe(short.class).getActualName(), is(short.class.getName()));
>, <Line: +        assertThat(describe(char.class).getActualName(), is(char.class.getName()));
>, <Line: +        assertThat(describe(int.class).getActualName(), is(int.class.getName()));
>, <Line: +        assertThat(describe(long.class).getActualName(), is(long.class.getName()));
>, <Line: +        assertThat(describe(float.class).getActualName(), is(float.class.getName()));
>, <Line: +        assertThat(describe(double.class).getActualName(), is(double.class.getName()));
>, <Line: +        assertThat(describe(Object[].class).getActualName(), is(Object.class.getName() + "[]"));
>, <Line: +        assertThat(describe(SampleClass[].class).getActualName(), is(SampleClass.class.getName() + "[]"));
>, <Line: +        assertThat(describe(Object[][].class).getActualName(), is(Object.class.getName() + "[][]"));
>, <Line: +        assertThat(describe(boolean[].class).getActualName(), is(boolean.class.getName() + "[]"));
>, <Line: +        assertThat(describe(byte[].class).getActualName(), is(byte.class.getName() + "[]"));
>, <Line: +        assertThat(describe(short[].class).getActualName(), is(short.class.getName() + "[]"));
>, <Line: +        assertThat(describe(char[].class).getActualName(), is(char.class.getName() + "[]"));
>, <Line: +        assertThat(describe(int[].class).getActualName(), is(int.class.getName() + "[]"));
>, <Line: +        assertThat(describe(long[].class).getActualName(), is(long.class.getName() + "[]"));
>, <Line: +        assertThat(describe(float[].class).getActualName(), is(float.class.getName() + "[]"));
>, <Line: +        assertThat(describe(double[].class).getActualName(), is(double.class.getName() + "[]"));
>]
[<Line: -                assertThat(describe(type).getSourceCodeName(), is(type.getComponentType().getName() + "[]"));
>, <Line: -                assertThat(describe(type).getSourceCodeName(), is(type.getName()));
>, <Line: -        assertThat(describe(Object.class).getSourceCodeName(), is(Object.class.getName()));
>, <Line: -        assertThat(describe(SampleClass.class).getSourceCodeName(), is(SampleClass.class.getName()));
>, <Line: -        assertThat(describe(void.class).getSourceCodeName(), is(void.class.getName()));
>, <Line: -        assertThat(describe(boolean.class).getSourceCodeName(), is(boolean.class.getName()));
>, <Line: -        assertThat(describe(byte.class).getSourceCodeName(), is(byte.class.getName()));
>, <Line: -        assertThat(describe(short.class).getSourceCodeName(), is(short.class.getName()));
>, <Line: -        assertThat(describe(char.class).getSourceCodeName(), is(char.class.getName()));
>, <Line: -        assertThat(describe(int.class).getSourceCodeName(), is(int.class.getName()));
>, <Line: -        assertThat(describe(long.class).getSourceCodeName(), is(long.class.getName()));
>, <Line: -        assertThat(describe(float.class).getSourceCodeName(), is(float.class.getName()));
>, <Line: -        assertThat(describe(double.class).getSourceCodeName(), is(double.class.getName()));
>, <Line: -        assertThat(describe(Object[].class).getSourceCodeName(), is(Object.class.getName() + "[]"));
>, <Line: -        assertThat(describe(SampleClass[].class).getSourceCodeName(), is(SampleClass.class.getName() + "[]"));
>, <Line: -        assertThat(describe(Object[][].class).getSourceCodeName(), is(Object.class.getName() + "[][]"));
>, <Line: -        assertThat(describe(boolean[].class).getSourceCodeName(), is(boolean.class.getName() + "[]"));
>, <Line: -        assertThat(describe(byte[].class).getSourceCodeName(), is(byte.class.getName() + "[]"));
>, <Line: -        assertThat(describe(short[].class).getSourceCodeName(), is(short.class.getName() + "[]"));
>, <Line: -        assertThat(describe(char[].class).getSourceCodeName(), is(char.class.getName() + "[]"));
>, <Line: -        assertThat(describe(int[].class).getSourceCodeName(), is(int.class.getName() + "[]"));
>, <Line: -        assertThat(describe(long[].class).getSourceCodeName(), is(long.class.getName() + "[]"));
>, <Line: -        assertThat(describe(float[].class).getSourceCodeName(), is(float.class.getName() + "[]"));
>, <Line: -        assertThat(describe(double[].class).getSourceCodeName(), is(double.class.getName() + "[]"));
>]