diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/.git/logs/HEAD" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Patched-Version/.git/logs/HEAD"
index a53c3e5..317d723 100644
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/.git/logs/HEAD"
+++ "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Patched-Version/.git/logs/HEAD"
@@ -1 +1 @@
-0000000000000000000000000000000000000000 da7531fa82aaf2fd1586684b12dfc429a2fadd68 Saahil Hiranandani <hiran@Batcomputer.(none)> 1709536957 -0600	clone: from https://github.com/apache/servicecomb-java-chassis.git
+0000000000000000000000000000000000000000 da7531fa82aaf2fd1586684b12dfc429a2fadd68 Saahil Hiranandani <hiran@Batcomputer.(none)> 1709536961 -0600	clone: from https://github.com/apache/servicecomb-java-chassis.git
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/.git/logs/refs/heads/master" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Patched-Version/.git/logs/refs/heads/master"
index a53c3e5..317d723 100644
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/.git/logs/refs/heads/master"
+++ "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Patched-Version/.git/logs/refs/heads/master"
@@ -1 +1 @@
-0000000000000000000000000000000000000000 da7531fa82aaf2fd1586684b12dfc429a2fadd68 Saahil Hiranandani <hiran@Batcomputer.(none)> 1709536957 -0600	clone: from https://github.com/apache/servicecomb-java-chassis.git
+0000000000000000000000000000000000000000 da7531fa82aaf2fd1586684b12dfc429a2fadd68 Saahil Hiranandani <hiran@Batcomputer.(none)> 1709536961 -0600	clone: from https://github.com/apache/servicecomb-java-chassis.git
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/.git/logs/refs/remotes/origin/HEAD" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Patched-Version/.git/logs/refs/remotes/origin/HEAD"
index a53c3e5..317d723 100644
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/.git/logs/refs/remotes/origin/HEAD"
+++ "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Patched-Version/.git/logs/refs/remotes/origin/HEAD"
@@ -1 +1 @@
-0000000000000000000000000000000000000000 da7531fa82aaf2fd1586684b12dfc429a2fadd68 Saahil Hiranandani <hiran@Batcomputer.(none)> 1709536957 -0600	clone: from https://github.com/apache/servicecomb-java-chassis.git
+0000000000000000000000000000000000000000 da7531fa82aaf2fd1586684b12dfc429a2fadd68 Saahil Hiranandani <hiran@Batcomputer.(none)> 1709536961 -0600	clone: from https://github.com/apache/servicecomb-java-chassis.git
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/deserializer/repeated/impl/enums/EnumNotPackedReadSchemas.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/deserializer/repeated/impl/enums/EnumNotPackedReadSchemas.java"
deleted file mode 100644
index a05f3ad..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/deserializer/repeated/impl/enums/EnumNotPackedReadSchemas.java"
+++ /dev/null
@@ -1,109 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.servicecomb.foundation.protobuf.internal.schema.deserializer.repeated.impl.enums;
-
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.Collection;
-
-import org.apache.servicecomb.foundation.common.utils.bean.Getter;
-import org.apache.servicecomb.foundation.common.utils.bean.Setter;
-import org.apache.servicecomb.foundation.protobuf.internal.bean.PropertyDescriptor;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.EnumMeta;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.deserializer.repeated.AbstractReaders;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.deserializer.repeated.RepeatedReadSchemas;
-
-import com.fasterxml.jackson.databind.JavaType;
-
-import io.protostuff.InputEx;
-import io.protostuff.compiler.model.Field;
-import io.protostuff.compiler.model.Type;
-import io.protostuff.runtime.FieldSchema;
-
-public class EnumNotPackedReadSchemas {
-  private static class EnumNotPackedReaders extends AbstractReaders<Enum<?>> {
-    private final EnumMeta enumMeta;
-
-    public EnumNotPackedReaders(Field protoField, JavaType javaType) {
-      super(protoField, EnumSchemaUtils.constructEnumArrayClass(javaType));
-      this.enumMeta = new EnumMeta(protoField, javaType.getContentType());
-
-      collectionReader = (input, collection) -> {
-        while (true) {
-          int value = input.readEnum();
-          Enum<?> enumValue = enumMeta.getEnumByValue(value);
-          if (enumValue == null) {
-            throw new IllegalStateException(
-                String.format("invalid enum value %d for %s, proto field=%s:%s",
-                    value,
-                    javaType.getRawClass().getName(),
-                    ((Type) protoField.getParent()).getCanonicalName(),
-                    protoField.getName()));
-          }
-
-          collection.add(enumValue);
-
-          int fieldNumber = input.readFieldNumber();
-          if (fieldNumber != this.fieldNumber) {
-            return fieldNumber;
-          }
-        }
-      };
-    }
-  }
-
-  private static class EnumIntNotPackedSchema<T> extends FieldSchema<T> {
-    private final Getter<T, Collection<Integer>> getter;
-
-    private final Setter<T, Collection<Integer>> setter;
-
-    public EnumIntNotPackedSchema(Field protoField, PropertyDescriptor propertyDescriptor) {
-      super(protoField, propertyDescriptor.getJavaType());
-      this.getter = propertyDescriptor.getGetter();
-      this.setter = propertyDescriptor.getSetter();
-    }
-
-    @Override
-    public int mergeFrom(InputEx input, T message) throws IOException {
-      Collection<Integer> collection = getter.get(message);
-      if (collection == null) {
-        collection = new ArrayList<>();
-        setter.set(message, collection);
-      }
-
-      while (true) {
-        int value = input.readEnum();
-        collection.add(value);
-
-        int fieldNumber = input.readFieldNumber();
-        if (fieldNumber != this.fieldNumber) {
-          return fieldNumber;
-        }
-      }
-    }
-  }
-
-  public static <T> FieldSchema<T> create(Field protoField, PropertyDescriptor propertyDescriptor) {
-    JavaType javaType = propertyDescriptor.getJavaType();
-    if (javaType.isJavaLangObject()) {
-      return new EnumIntNotPackedSchema<>(protoField, propertyDescriptor);
-    }
-
-    return RepeatedReadSchemas
-        .create(protoField, propertyDescriptor, new EnumNotPackedReaders(protoField, propertyDescriptor.getJavaType()));
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/deserializer/repeated/impl/floats/FloatRepeatedReadSchemas.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/deserializer/repeated/impl/floats/FloatRepeatedReadSchemas.java"
deleted file mode 100644
index 82b6d13..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/deserializer/repeated/impl/floats/FloatRepeatedReadSchemas.java"
+++ /dev/null
@@ -1,90 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.servicecomb.foundation.protobuf.internal.schema.deserializer.repeated.impl.floats;
-
-import java.io.IOException;
-import java.util.Arrays;
-
-import org.apache.servicecomb.foundation.common.utils.bean.Getter;
-import org.apache.servicecomb.foundation.common.utils.bean.Setter;
-import org.apache.servicecomb.foundation.protobuf.internal.bean.PropertyDescriptor;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.deserializer.repeated.AbstractPrimitiveReaders;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.deserializer.repeated.PrimitiveArrayBuilderWrapper;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.deserializer.repeated.RepeatedReadSchemas;
-
-import com.fasterxml.jackson.databind.JavaType;
-
-import io.protostuff.InputEx;
-import io.protostuff.compiler.model.Field;
-import io.protostuff.runtime.FieldSchema;
-
-public class FloatRepeatedReadSchemas {
-  public static <T> FieldSchema<T> create(Field protoField, PropertyDescriptor propertyDescriptor,
-      AbstractPrimitiveReaders<float[], Float> readers) {
-    JavaType javaType = propertyDescriptor.getJavaType();
-    if (float[].class.equals(javaType.getRawClass())) {
-      return new FloatPrimitiveArraySchema<>(protoField, propertyDescriptor, readers);
-    }
-
-    return RepeatedReadSchemas.create(protoField, propertyDescriptor, readers);
-  }
-
-  static class FloatPrimitiveArraySchema<T> extends FieldSchema<T> {
-    private final Getter<T, float[]> getter;
-
-    private final Setter<T, float[]> setter;
-
-    private final AbstractPrimitiveReaders<float[], Float> readers;
-
-    public FloatPrimitiveArraySchema(Field protoField, PropertyDescriptor propertyDescriptor,
-        AbstractPrimitiveReaders<float[], Float> readers) {
-      super(protoField, propertyDescriptor.getJavaType());
-      this.getter = propertyDescriptor.getGetter();
-      this.setter = propertyDescriptor.getSetter();
-      this.readers = readers;
-    }
-
-    @Override
-    public int mergeFrom(InputEx input, T message) throws IOException {
-      PrimitiveArrayBuilderWrapper<float[]> builderWrapper = new PrimitiveArrayBuilderWrapper<>(
-          input.getArrayBuilders().getFloatBuilder());
-
-      int fieldNumber = readers.primitiveArrayReader.read(input, builderWrapper);
-      float[] newValue = builderWrapper.getArray();
-      newValue = mergeArray(getter.get(message), newValue);
-      setter.set(message, newValue);
-
-      return fieldNumber;
-    }
-
-    public float[] mergeArray(float[] oldValue, float[] newValue) {
-      if (oldValue == null || oldValue.length == 0) {
-        return newValue;
-      }
-
-      return concatArray(oldValue, newValue);
-    }
-
-    private float[] concatArray(float[] oldValue, float[] newValue) {
-      int len1 = oldValue.length;
-      int len2 = newValue.length;
-      float[] result = Arrays.copyOf(oldValue, len1 + len2);
-      System.arraycopy(newValue, 0, result, len1, len2);
-      return result;
-    }
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/doubles/DoublePackedWriteSchemas.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/doubles/DoublePackedWriteSchemas.java"
deleted file mode 100644
index 7de41eb..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/doubles/DoublePackedWriteSchemas.java"
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.impl.doubles;
-
-import org.apache.servicecomb.foundation.protobuf.internal.ProtoUtils;
-import org.apache.servicecomb.foundation.protobuf.internal.bean.PropertyDescriptor;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.AbstractPrimitiveWriters;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.RepeatedPrimitiveWriteSchemas;
-
-import io.protostuff.compiler.model.Field;
-import io.protostuff.runtime.FieldSchema;
-
-public class DoublePackedWriteSchemas {
-  private static class DoublePackedWriters extends AbstractPrimitiveWriters<double[], Double> {
-    public DoublePackedWriters(Field protoField) {
-      super(protoField);
-
-      primitiveArrayWriter = (o, value) ->
-          o.writeObject(tag, tagSize, value, (output, array) -> {
-            for (double element : array) {
-              output.writePackedDouble(element);
-            }
-          });
-
-      arrayWriter = (o, value) ->
-          o.writeObject(tag, tagSize, value, (output, array) -> {
-            for (Double element : array) {
-              if (element != null) {
-                output.writePackedDouble(element);
-                continue;
-              }
-
-              ProtoUtils.throwNotSupportNullElement(protoField);
-            }
-          });
-
-      collectionWriter = (o, value) ->
-          o.writeObject(tag, tagSize, value, (output, collection) -> {
-            for (Double element : collection) {
-              if (element != null) {
-                output.writePackedDouble(element);
-                continue;
-              }
-
-              ProtoUtils.throwNotSupportNullElement(protoField);
-            }
-          });
-
-      stringArrayWriter = (o, value) ->
-          o.writeObject(tag, tagSize, value, (output, array) -> {
-            for (String element : array) {
-              if (element != null) {
-                double parsedValue = Double.parseDouble(element);
-                output.writePackedDouble(parsedValue);
-                continue;
-              }
-
-              ProtoUtils.throwNotSupportNullElement(protoField);
-            }
-          });
-    }
-  }
-
-  public static <T> FieldSchema<T> create(Field protoField, PropertyDescriptor propertyDescriptor) {
-    return RepeatedPrimitiveWriteSchemas.create(protoField, propertyDescriptor, new DoublePackedWriters(protoField));
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/floats/FloatNotPackedWriteSchemas.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/floats/FloatNotPackedWriteSchemas.java"
deleted file mode 100644
index 82f2f37..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/floats/FloatNotPackedWriteSchemas.java"
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.impl.floats;
-
-import java.util.Collection;
-
-import org.apache.servicecomb.foundation.protobuf.internal.ProtoUtils;
-import org.apache.servicecomb.foundation.protobuf.internal.bean.PropertyDescriptor;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.AbstractPrimitiveWriters;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.RepeatedPrimitiveWriteSchemas;
-
-import io.protostuff.OutputEx;
-import io.protostuff.compiler.model.Field;
-import io.protostuff.runtime.FieldSchema;
-
-public class FloatNotPackedWriteSchemas {
-  private static class FloatNotPackedWriters extends AbstractPrimitiveWriters<float[], Float> {
-    public FloatNotPackedWriters(Field protoField) {
-      super(protoField);
-
-      primitiveArrayWriter = (OutputEx output, float[] array) -> {
-        for (float element : array) {
-          output.writeFloat(tag, tagSize, element);
-        }
-      };
-
-      arrayWriter = (OutputEx output, Float[] array) -> {
-        for (Float element : array) {
-          if (element != null) {
-            output.writeFloat(tag, tagSize, element);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-
-      collectionWriter = (OutputEx output, Collection<Float> collection) -> {
-        for (Float element : collection) {
-          if (element != null) {
-            output.writeFloat(tag, tagSize, element);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-
-      stringArrayWriter = (OutputEx output, String[] array) -> {
-        for (String element : array) {
-          if (element != null) {
-            float parsedValue = Float.parseFloat(element);
-            output.writeFloat(tag, tagSize, parsedValue);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-    }
-  }
-
-  public static <T> FieldSchema<T> create(Field protoField, PropertyDescriptor propertyDescriptor) {
-    return RepeatedPrimitiveWriteSchemas.create(protoField, propertyDescriptor, new FloatNotPackedWriters(protoField));
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/ints/Fixed32NotPackedWriteSchemas.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/ints/Fixed32NotPackedWriteSchemas.java"
deleted file mode 100644
index 4e05ac2..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/ints/Fixed32NotPackedWriteSchemas.java"
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.impl.ints;
-
-import java.util.Collection;
-
-import org.apache.servicecomb.foundation.protobuf.internal.ProtoUtils;
-import org.apache.servicecomb.foundation.protobuf.internal.bean.PropertyDescriptor;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.AbstractPrimitiveWriters;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.RepeatedPrimitiveWriteSchemas;
-
-import io.protostuff.OutputEx;
-import io.protostuff.compiler.model.Field;
-import io.protostuff.runtime.FieldSchema;
-
-public class Fixed32NotPackedWriteSchemas {
-  private static class Fixed32NotPackedWriters extends AbstractPrimitiveWriters<int[], Integer> {
-    public Fixed32NotPackedWriters(Field protoField) {
-      super(protoField);
-
-      primitiveArrayWriter = (OutputEx output, int[] array) -> {
-        for (int element : array) {
-          output.writeFixed32(tag, tagSize, element);
-        }
-      };
-
-      arrayWriter = (OutputEx output, Integer[] array) -> {
-        for (Integer element : array) {
-          if (element != null) {
-            output.writeFixed32(tag, tagSize, element);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-
-      collectionWriter = (OutputEx output, Collection<Integer> collection) -> {
-        for (Integer element : collection) {
-          if (element != null) {
-            output.writeFixed32(tag, tagSize, element);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-
-      stringArrayWriter = (OutputEx output, String[] array) -> {
-        for (String element : array) {
-          if (element != null) {
-            int parsedValue = Integer.parseInt(element, 10);
-            output.writeFixed32(tag, tagSize, parsedValue);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-    }
-  }
-
-  public static <T> FieldSchema<T> create(Field protoField, PropertyDescriptor propertyDescriptor) {
-    return RepeatedPrimitiveWriteSchemas
-        .create(protoField, propertyDescriptor, new Fixed32NotPackedWriters(protoField));
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/ints/SInt32NotPackedWriteSchemas.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/ints/SInt32NotPackedWriteSchemas.java"
deleted file mode 100644
index a1ce05d..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/ints/SInt32NotPackedWriteSchemas.java"
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.impl.ints;
-
-import java.util.Collection;
-
-import org.apache.servicecomb.foundation.protobuf.internal.ProtoUtils;
-import org.apache.servicecomb.foundation.protobuf.internal.bean.PropertyDescriptor;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.AbstractPrimitiveWriters;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.RepeatedPrimitiveWriteSchemas;
-
-import io.protostuff.OutputEx;
-import io.protostuff.compiler.model.Field;
-import io.protostuff.runtime.FieldSchema;
-
-public class SInt32NotPackedWriteSchemas {
-  private static class SInt32NotPackedWriters extends AbstractPrimitiveWriters<int[], Integer> {
-    public SInt32NotPackedWriters(Field protoField) {
-      super(protoField);
-
-      primitiveArrayWriter = (OutputEx output, int[] array) -> {
-        for (int element : array) {
-          output.writeSInt32(tag, tagSize, element);
-        }
-      };
-
-      arrayWriter = (OutputEx output, Integer[] array) -> {
-        for (Integer element : array) {
-          if (element != null) {
-            output.writeSInt32(tag, tagSize, element);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-
-      collectionWriter = (OutputEx output, Collection<Integer> collection) -> {
-        for (Integer element : collection) {
-          if (element != null) {
-            output.writeSInt32(tag, tagSize, element);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-
-      stringArrayWriter = (OutputEx output, String[] array) -> {
-        for (String element : array) {
-          if (element != null) {
-            int parsedValue = Integer.parseInt(element, 10);
-            output.writeSInt32(tag, tagSize, parsedValue);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-    }
-  }
-
-  public static <T> FieldSchema<T> create(Field protoField, PropertyDescriptor propertyDescriptor) {
-    return RepeatedPrimitiveWriteSchemas.create(protoField, propertyDescriptor, new SInt32NotPackedWriters(protoField));
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/ints/UInt32NotPackedWriteSchemas.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/ints/UInt32NotPackedWriteSchemas.java"
deleted file mode 100644
index daffa24..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/ints/UInt32NotPackedWriteSchemas.java"
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.impl.ints;
-
-import java.util.Collection;
-
-import org.apache.servicecomb.foundation.protobuf.internal.ProtoUtils;
-import org.apache.servicecomb.foundation.protobuf.internal.bean.PropertyDescriptor;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.AbstractPrimitiveWriters;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.RepeatedPrimitiveWriteSchemas;
-
-import io.protostuff.OutputEx;
-import io.protostuff.compiler.model.Field;
-import io.protostuff.runtime.FieldSchema;
-
-public class UInt32NotPackedWriteSchemas {
-  private static class UInt32NotPackedWriters extends AbstractPrimitiveWriters<int[], Integer> {
-    public UInt32NotPackedWriters(Field protoField) {
-      super(protoField);
-
-      primitiveArrayWriter = (OutputEx output, int[] array) -> {
-        for (int element : array) {
-          output.writeUInt32(tag, tagSize, element);
-        }
-      };
-
-      arrayWriter = (OutputEx output, Integer[] array) -> {
-        for (Integer element : array) {
-          if (element != null) {
-            output.writeUInt32(tag, tagSize, element);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-
-      collectionWriter = (OutputEx output, Collection<Integer> collection) -> {
-        for (Integer element : collection) {
-          if (element != null) {
-            output.writeUInt32(tag, tagSize, element);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-
-      stringArrayWriter = (OutputEx output, String[] array) -> {
-        for (String element : array) {
-          if (element != null) {
-            int parsedValue = Integer.parseInt(element, 10);
-            output.writeUInt32(tag, tagSize, parsedValue);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-    }
-  }
-
-  public static <T> FieldSchema<T> create(Field protoField, PropertyDescriptor propertyDescriptor) {
-    return RepeatedPrimitiveWriteSchemas.create(protoField, propertyDescriptor, new UInt32NotPackedWriters(protoField));
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/longs/Int64NotPackedWriteSchemas.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/longs/Int64NotPackedWriteSchemas.java"
deleted file mode 100644
index 2c7f6a7..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/longs/Int64NotPackedWriteSchemas.java"
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.impl.longs;
-
-import java.util.Collection;
-
-import org.apache.servicecomb.foundation.protobuf.internal.ProtoUtils;
-import org.apache.servicecomb.foundation.protobuf.internal.bean.PropertyDescriptor;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.AbstractPrimitiveWriters;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.RepeatedPrimitiveWriteSchemas;
-
-import io.protostuff.OutputEx;
-import io.protostuff.compiler.model.Field;
-import io.protostuff.runtime.FieldSchema;
-
-public class Int64NotPackedWriteSchemas {
-  private static class Int64NotPackedWriters extends AbstractPrimitiveWriters<long[], Long> {
-    public Int64NotPackedWriters(Field protoField) {
-      super(protoField);
-
-      primitiveArrayWriter = (OutputEx output, long[] array) -> {
-        for (long element : array) {
-          output.writeInt64(tag, tagSize, element);
-        }
-      };
-
-      arrayWriter = (OutputEx output, Long[] array) -> {
-        for (Long element : array) {
-          if (element != null) {
-            output.writeInt64(tag, tagSize, element);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-
-      collectionWriter = (OutputEx output, Collection<Long> collection) -> {
-        for (Long element : collection) {
-          if (element != null) {
-            output.writeInt64(tag, tagSize, element);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-
-      stringArrayWriter = (OutputEx output, String[] array) -> {
-        for (String element : array) {
-          if (element != null) {
-            long parsedValue = Long.parseLong(element, 10);
-            output.writeInt64(tag, tagSize, parsedValue);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-    }
-  }
-
-  public static <T> FieldSchema<T> create(Field protoField, PropertyDescriptor propertyDescriptor) {
-    return RepeatedPrimitiveWriteSchemas.create(protoField, propertyDescriptor, new Int64NotPackedWriters(protoField));
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/longs/SFixed64PackedWriteSchemas.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/longs/SFixed64PackedWriteSchemas.java"
deleted file mode 100644
index b33c5ef..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/longs/SFixed64PackedWriteSchemas.java"
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.impl.longs;
-
-import org.apache.servicecomb.foundation.protobuf.internal.ProtoUtils;
-import org.apache.servicecomb.foundation.protobuf.internal.bean.PropertyDescriptor;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.AbstractPrimitiveWriters;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.RepeatedPrimitiveWriteSchemas;
-
-import io.protostuff.compiler.model.Field;
-import io.protostuff.runtime.FieldSchema;
-
-public class SFixed64PackedWriteSchemas {
-  private static class SFixed64PackedWriters extends AbstractPrimitiveWriters<long[], Long> {
-    public SFixed64PackedWriters(Field protoField) {
-      super(protoField);
-
-      primitiveArrayWriter = (o, value) ->
-          o.writeObject(tag, tagSize, value, (output, array) -> {
-            for (long element : array) {
-              output.writePackedSFixed64(element);
-            }
-          });
-
-      arrayWriter = (o, value) ->
-          o.writeObject(tag, tagSize, value, (output, array) -> {
-            for (Long element : array) {
-              if (element != null) {
-                output.writePackedSFixed64(element);
-                continue;
-              }
-
-              ProtoUtils.throwNotSupportNullElement(protoField);
-            }
-          });
-
-      collectionWriter = (o, value) ->
-          o.writeObject(tag, tagSize, value, (output, collection) -> {
-            for (Long element : collection) {
-              if (element != null) {
-                output.writePackedSFixed64(element);
-                continue;
-              }
-
-              ProtoUtils.throwNotSupportNullElement(protoField);
-            }
-          });
-
-      stringArrayWriter = (o, value) ->
-          o.writeObject(tag, tagSize, value, (output, array) -> {
-            for (String element : array) {
-              if (element != null) {
-                long parsedValue = Long.parseLong(element, 10);
-                output.writePackedSFixed64(parsedValue);
-                continue;
-              }
-
-              ProtoUtils.throwNotSupportNullElement(protoField);
-            }
-          });
-    }
-  }
-
-  public static <T> FieldSchema<T> create(Field protoField, PropertyDescriptor propertyDescriptor) {
-    return RepeatedPrimitiveWriteSchemas.create(protoField, propertyDescriptor, new SFixed64PackedWriters(protoField));
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/longs/SInt64NotPackedWriteSchemas.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/longs/SInt64NotPackedWriteSchemas.java"
deleted file mode 100644
index 95e8db5..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/longs/SInt64NotPackedWriteSchemas.java"
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.impl.longs;
-
-import java.util.Collection;
-
-import org.apache.servicecomb.foundation.protobuf.internal.ProtoUtils;
-import org.apache.servicecomb.foundation.protobuf.internal.bean.PropertyDescriptor;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.AbstractPrimitiveWriters;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.RepeatedPrimitiveWriteSchemas;
-
-import io.protostuff.OutputEx;
-import io.protostuff.compiler.model.Field;
-import io.protostuff.runtime.FieldSchema;
-
-public class SInt64NotPackedWriteSchemas {
-  private static class SInt64NotPackedWriters extends AbstractPrimitiveWriters<long[], Long> {
-    public SInt64NotPackedWriters(Field protoField) {
-      super(protoField);
-
-      primitiveArrayWriter = (OutputEx output, long[] array) -> {
-        for (long element : array) {
-          output.writeSInt64(tag, tagSize, element);
-        }
-      };
-
-      arrayWriter = (OutputEx output, Long[] array) -> {
-        for (Long element : array) {
-          if (element != null) {
-            output.writeSInt64(tag, tagSize, element);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-
-      collectionWriter = (OutputEx output, Collection<Long> collection) -> {
-        for (Long element : collection) {
-          if (element != null) {
-            output.writeSInt64(tag, tagSize, element);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-
-      stringArrayWriter = (OutputEx output, String[] array) -> {
-        for (String element : array) {
-          if (element != null) {
-            long parsedValue = Long.parseLong(element, 10);
-            output.writeSInt64(tag, tagSize, parsedValue);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-    }
-  }
-
-  public static <T> FieldSchema<T> create(Field protoField, PropertyDescriptor propertyDescriptor) {
-    return RepeatedPrimitiveWriteSchemas.create(protoField, propertyDescriptor, new SInt64NotPackedWriters(protoField));
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/longs/UInt64NotPackedWriteSchemas.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/longs/UInt64NotPackedWriteSchemas.java"
deleted file mode 100644
index ebc10b2..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/foundations/foundation-protobuf/src/main/java/org/apache/servicecomb/foundation/protobuf/internal/schema/serializer/repeated/impl/longs/UInt64NotPackedWriteSchemas.java"
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.impl.longs;
-
-import java.util.Collection;
-
-import org.apache.servicecomb.foundation.protobuf.internal.ProtoUtils;
-import org.apache.servicecomb.foundation.protobuf.internal.bean.PropertyDescriptor;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.AbstractPrimitiveWriters;
-import org.apache.servicecomb.foundation.protobuf.internal.schema.serializer.repeated.RepeatedPrimitiveWriteSchemas;
-
-import io.protostuff.OutputEx;
-import io.protostuff.compiler.model.Field;
-import io.protostuff.runtime.FieldSchema;
-
-public class UInt64NotPackedWriteSchemas {
-  private static class UInt64NotPackedWriters extends AbstractPrimitiveWriters<long[], Long> {
-    public UInt64NotPackedWriters(Field protoField) {
-      super(protoField);
-
-      primitiveArrayWriter = (OutputEx output, long[] array) -> {
-        for (long element : array) {
-          output.writeUInt64(tag, tagSize, element);
-        }
-      };
-
-      arrayWriter = (OutputEx output, Long[] array) -> {
-        for (Long element : array) {
-          if (element != null) {
-            output.writeUInt64(tag, tagSize, element);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-
-      collectionWriter = (OutputEx output, Collection<Long> collection) -> {
-        for (Long element : collection) {
-          if (element != null) {
-            output.writeUInt64(tag, tagSize, element);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-
-      stringArrayWriter = (OutputEx output, String[] array) -> {
-        for (String element : array) {
-          if (element != null) {
-            long parsedValue = Long.parseLong(element, 10);
-            output.writeUInt64(tag, tagSize, parsedValue);
-            continue;
-          }
-
-          ProtoUtils.throwNotSupportNullElement(protoField);
-        }
-      };
-    }
-  }
-
-  public static <T> FieldSchema<T> create(Field protoField, PropertyDescriptor propertyDescriptor) {
-    return RepeatedPrimitiveWriteSchemas.create(protoField, propertyDescriptor, new UInt64NotPackedWriters(protoField));
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-jaxrs/src/main/java/org/apache/servicecomb/swagger/generator/jaxrs/processor/annotation/CookieParamParameterAnnotationProcessor.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-jaxrs/src/main/java/org/apache/servicecomb/swagger/generator/jaxrs/processor/annotation/CookieParamParameterAnnotationProcessor.java"
deleted file mode 100644
index e198751..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-jaxrs/src/main/java/org/apache/servicecomb/swagger/generator/jaxrs/processor/annotation/CookieParamParameterAnnotationProcessor.java"
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.servicecomb.swagger.generator.jaxrs.processor.annotation;
-
-import java.lang.reflect.Type;
-
-import org.apache.commons.lang3.StringUtils;
-import org.apache.servicecomb.swagger.generator.OperationGenerator;
-import org.apache.servicecomb.swagger.generator.ParameterGenerator;
-import org.apache.servicecomb.swagger.generator.SwaggerGenerator;
-import org.apache.servicecomb.swagger.generator.core.model.HttpParameterType;
-
-import jakarta.ws.rs.CookieParam;
-
-public class CookieParamParameterAnnotationProcessor extends
-    JaxrsParameterAnnotationProcessor<CookieParam> {
-  @Override
-  public Type getProcessType() {
-    return CookieParam.class;
-  }
-
-  @Override
-  public String getParameterName(CookieParam annotation) {
-    if (StringUtils.isEmpty(annotation.value())) {
-      return null;
-    }
-    return annotation.value();
-  }
-
-  @Override
-  public void process(SwaggerGenerator swaggerGenerator, OperationGenerator operationGenerator,
-      ParameterGenerator parameterGenerator, CookieParam annotation) {
-    parameterGenerator.setHttpParameterType(HttpParameterType.COOKIE);
-    if (StringUtils.isNotEmpty(getParameterName(annotation))) {
-      parameterGenerator.getParameterGeneratorContext().setParameterName(getParameterName(annotation));
-    }
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-jaxrs/src/main/java/org/apache/servicecomb/swagger/generator/jaxrs/processor/annotation/HeaderParamParameterAnnotationProcessor.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-jaxrs/src/main/java/org/apache/servicecomb/swagger/generator/jaxrs/processor/annotation/HeaderParamParameterAnnotationProcessor.java"
deleted file mode 100644
index 41e3b68..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-jaxrs/src/main/java/org/apache/servicecomb/swagger/generator/jaxrs/processor/annotation/HeaderParamParameterAnnotationProcessor.java"
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.servicecomb.swagger.generator.jaxrs.processor.annotation;
-
-import java.lang.reflect.Type;
-
-import org.apache.commons.lang3.StringUtils;
-import org.apache.servicecomb.swagger.generator.OperationGenerator;
-import org.apache.servicecomb.swagger.generator.ParameterGenerator;
-import org.apache.servicecomb.swagger.generator.SwaggerGenerator;
-import org.apache.servicecomb.swagger.generator.core.model.HttpParameterType;
-
-import jakarta.ws.rs.HeaderParam;
-
-public class HeaderParamParameterAnnotationProcessor extends
-    JaxrsParameterAnnotationProcessor<HeaderParam> {
-  @Override
-  public Type getProcessType() {
-    return HeaderParam.class;
-  }
-
-  @Override
-  public String getParameterName(HeaderParam annotation) {
-    if (StringUtils.isNotEmpty(annotation.value())) {
-      return annotation.value();
-    }
-    return null;
-  }
-
-  @Override
-  public void process(SwaggerGenerator swaggerGenerator, OperationGenerator operationGenerator,
-      ParameterGenerator parameterGenerator, HeaderParam annotation) {
-    parameterGenerator.setHttpParameterType(HttpParameterType.HEADER);
-    if (StringUtils.isNotEmpty(getParameterName(annotation))) {
-      parameterGenerator.getParameterGeneratorContext().setParameterName(getParameterName(annotation));
-    }
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-jaxrs/src/main/java/org/apache/servicecomb/swagger/generator/jaxrs/processor/annotation/QueryParamParameterAnnotationProcessor.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-jaxrs/src/main/java/org/apache/servicecomb/swagger/generator/jaxrs/processor/annotation/QueryParamParameterAnnotationProcessor.java"
deleted file mode 100644
index 9f5cb7f..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-jaxrs/src/main/java/org/apache/servicecomb/swagger/generator/jaxrs/processor/annotation/QueryParamParameterAnnotationProcessor.java"
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.servicecomb.swagger.generator.jaxrs.processor.annotation;
-
-import java.lang.reflect.Type;
-
-import org.apache.commons.lang3.StringUtils;
-import org.apache.servicecomb.swagger.generator.OperationGenerator;
-import org.apache.servicecomb.swagger.generator.ParameterGenerator;
-import org.apache.servicecomb.swagger.generator.SwaggerGenerator;
-import org.apache.servicecomb.swagger.generator.core.model.HttpParameterType;
-
-import jakarta.ws.rs.QueryParam;
-
-public class QueryParamParameterAnnotationProcessor extends JaxrsParameterAnnotationProcessor<QueryParam> {
-  @Override
-  public Type getProcessType() {
-    return QueryParam.class;
-  }
-
-  @Override
-  public String getParameterName(QueryParam annotation) {
-    if (StringUtils.isNotEmpty(annotation.value())) {
-      return annotation.value();
-    }
-    return null;
-  }
-
-  @Override
-  public void process(SwaggerGenerator swaggerGenerator, OperationGenerator operationGenerator,
-      ParameterGenerator parameterGenerator, QueryParam annotation) {
-    parameterGenerator.setHttpParameterType(HttpParameterType.QUERY);
-    if (StringUtils.isNotEmpty(getParameterName(annotation))) {
-      parameterGenerator.getParameterGeneratorContext().setParameterName(getParameterName(annotation));
-    }
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-springmvc/src/main/java/org/apache/servicecomb/swagger/generator/springmvc/processor/annotation/CookieValueAnnotationProcessor.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-springmvc/src/main/java/org/apache/servicecomb/swagger/generator/springmvc/processor/annotation/CookieValueAnnotationProcessor.java"
deleted file mode 100644
index d9b9df3..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-springmvc/src/main/java/org/apache/servicecomb/swagger/generator/springmvc/processor/annotation/CookieValueAnnotationProcessor.java"
+++ /dev/null
@@ -1,64 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.servicecomb.swagger.generator.springmvc.processor.annotation;
-
-import java.lang.reflect.Type;
-
-import org.apache.commons.lang3.StringUtils;
-import org.apache.servicecomb.swagger.generator.OperationGenerator;
-import org.apache.servicecomb.swagger.generator.ParameterGenerator;
-import org.apache.servicecomb.swagger.generator.SwaggerGenerator;
-import org.apache.servicecomb.swagger.generator.core.model.HttpParameterType;
-import org.springframework.web.bind.annotation.CookieValue;
-import org.springframework.web.bind.annotation.ValueConstants;
-
-public class CookieValueAnnotationProcessor extends
-    SpringmvcParameterAnnotationsProcessor<CookieValue> {
-  @Override
-  public Type getProcessType() {
-    return CookieValue.class;
-  }
-
-  @Override
-  public String getParameterName(CookieValue annotation) {
-    String value = annotation.value();
-    if (value.isEmpty()) {
-      value = annotation.name();
-    }
-    if (StringUtils.isNotEmpty(value)) {
-      return value;
-    }
-    return null;
-  }
-
-  @Override
-  public void process(SwaggerGenerator swaggerGenerator, OperationGenerator operationGenerator,
-      ParameterGenerator parameterGenerator, CookieValue annotation) {
-    parameterGenerator.setHttpParameterType(HttpParameterType.COOKIE);
-    if (StringUtils.isNotEmpty(getParameterName(annotation))) {
-      parameterGenerator.getParameterGeneratorContext().setParameterName(getParameterName(annotation));
-    }
-    parameterGenerator.getParameterGeneratorContext().setRequired(annotation.required());
-    if (!ValueConstants.DEFAULT_NONE.equals(annotation.defaultValue())) {
-      parameterGenerator.getParameterGeneratorContext()
-          .setDefaultValue(annotation.defaultValue());
-      // if default value is set, must be required false.
-      parameterGenerator.getParameterGeneratorContext().setRequired(false);
-    }
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-springmvc/src/main/java/org/apache/servicecomb/swagger/generator/springmvc/processor/annotation/PathVariableAnnotationProcessor.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-springmvc/src/main/java/org/apache/servicecomb/swagger/generator/springmvc/processor/annotation/PathVariableAnnotationProcessor.java"
deleted file mode 100644
index ac89b8d..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-springmvc/src/main/java/org/apache/servicecomb/swagger/generator/springmvc/processor/annotation/PathVariableAnnotationProcessor.java"
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.servicecomb.swagger.generator.springmvc.processor.annotation;
-
-import java.lang.reflect.Type;
-
-import org.apache.commons.lang3.StringUtils;
-import org.apache.servicecomb.swagger.generator.OperationGenerator;
-import org.apache.servicecomb.swagger.generator.ParameterGenerator;
-import org.apache.servicecomb.swagger.generator.SwaggerGenerator;
-import org.apache.servicecomb.swagger.generator.core.model.HttpParameterType;
-import org.springframework.web.bind.annotation.PathVariable;
-
-public class PathVariableAnnotationProcessor extends
-    SpringmvcParameterAnnotationsProcessor<PathVariable> {
-  @Override
-  public Type getProcessType() {
-    return PathVariable.class;
-  }
-
-  @Override
-  public String getParameterName(PathVariable annotation) {
-    String value = annotation.value();
-    if (value.isEmpty()) {
-      value = annotation.name();
-    }
-    if (StringUtils.isNotEmpty(value)) {
-      return value;
-    }
-    return null;
-  }
-
-  @Override
-  public void process(SwaggerGenerator swaggerGenerator, OperationGenerator operationGenerator,
-      ParameterGenerator parameterGenerator, PathVariable annotation) {
-    parameterGenerator.setHttpParameterType(HttpParameterType.PATH);
-    if (StringUtils.isNotEmpty(getParameterName(annotation))) {
-      parameterGenerator.getParameterGeneratorContext().setParameterName(getParameterName(annotation));
-    }
-    parameterGenerator.getParameterGeneratorContext().setRequired(annotation.required());
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-springmvc/src/main/java/org/apache/servicecomb/swagger/generator/springmvc/processor/annotation/RequestBodyAnnotationProcessor.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-springmvc/src/main/java/org/apache/servicecomb/swagger/generator/springmvc/processor/annotation/RequestBodyAnnotationProcessor.java"
deleted file mode 100644
index e7e755b..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-springmvc/src/main/java/org/apache/servicecomb/swagger/generator/springmvc/processor/annotation/RequestBodyAnnotationProcessor.java"
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.servicecomb.swagger.generator.springmvc.processor.annotation;
-
-import java.lang.reflect.Type;
-
-import org.apache.servicecomb.swagger.generator.OperationGenerator;
-import org.apache.servicecomb.swagger.generator.ParameterGenerator;
-import org.apache.servicecomb.swagger.generator.SwaggerGenerator;
-import org.apache.servicecomb.swagger.generator.core.model.HttpParameterType;
-import org.springframework.web.bind.annotation.RequestBody;
-
-public class RequestBodyAnnotationProcessor extends
-    SpringmvcParameterAnnotationsProcessor<RequestBody> {
-  @Override
-  public Type getProcessType() {
-    return RequestBody.class;
-  }
-
-  @Override
-  public String getParameterName(RequestBody annotation) {
-    return null;
-  }
-
-  @Override
-  public void process(SwaggerGenerator swaggerGenerator, OperationGenerator operationGenerator,
-      ParameterGenerator parameterGenerator, RequestBody annotation) {
-    parameterGenerator.setHttpParameterType(HttpParameterType.BODY);
-    parameterGenerator.getParameterGeneratorContext().setRequired(annotation.required());
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-springmvc/src/main/java/org/apache/servicecomb/swagger/generator/springmvc/processor/annotation/RequestParamParameterProcessor.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-springmvc/src/main/java/org/apache/servicecomb/swagger/generator/springmvc/processor/annotation/RequestParamParameterProcessor.java"
deleted file mode 100644
index 66785a3..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-springmvc/src/main/java/org/apache/servicecomb/swagger/generator/springmvc/processor/annotation/RequestParamParameterProcessor.java"
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.servicecomb.swagger.generator.springmvc.processor.annotation;
-
-import java.lang.reflect.Type;
-
-import org.apache.commons.lang3.StringUtils;
-import org.apache.servicecomb.swagger.generator.OperationGenerator;
-import org.apache.servicecomb.swagger.generator.ParameterGenerator;
-import org.apache.servicecomb.swagger.generator.SwaggerGenerator;
-import org.apache.servicecomb.swagger.generator.core.model.HttpParameterType;
-import org.springframework.web.bind.annotation.RequestParam;
-import org.springframework.web.bind.annotation.ValueConstants;
-
-/**
- * Use RequestParam to annotate a Query parameter.
- *
- * NOTICE: In spring-web, RequestParam is used to annotate query param and form param.
- * This is implementation based. We can't use RequestParam to express
- * both query and form in OpenAPI 3.0.
- */
-public class RequestParamParameterProcessor extends
-    SpringmvcParameterAnnotationsProcessor<RequestParam> {
-  @Override
-  public Type getProcessType() {
-    return RequestParam.class;
-  }
-
-  @Override
-  public String getParameterName(RequestParam annotation) {
-    String value = annotation.value();
-    if (value.isEmpty()) {
-      value = annotation.name();
-    }
-    if (StringUtils.isNotEmpty(value)) {
-      return value;
-    }
-    return null;
-  }
-
-  @Override
-  public void process(SwaggerGenerator swaggerGenerator, OperationGenerator operationGenerator,
-      ParameterGenerator parameterGenerator, RequestParam annotation) {
-    parameterGenerator.setHttpParameterType(HttpParameterType.QUERY);
-    if (StringUtils.isNotEmpty(getParameterName(annotation))) {
-      parameterGenerator.getParameterGeneratorContext().setParameterName(getParameterName(annotation));
-    }
-    parameterGenerator.getParameterGeneratorContext().setRequired(annotation.required());
-    if (!ValueConstants.DEFAULT_NONE.equals(annotation.defaultValue())) {
-      parameterGenerator.getParameterGeneratorContext()
-          .setDefaultValue(annotation.defaultValue());
-      // if default value is set, must be required false.
-      parameterGenerator.getParameterGeneratorContext().setRequired(false);
-    }
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-springmvc/src/main/java/org/apache/servicecomb/swagger/generator/springmvc/processor/annotation/RequestPartAnnotationProcessor.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-springmvc/src/main/java/org/apache/servicecomb/swagger/generator/springmvc/processor/annotation/RequestPartAnnotationProcessor.java"
deleted file mode 100644
index 4333201..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-generator/generator-springmvc/src/main/java/org/apache/servicecomb/swagger/generator/springmvc/processor/annotation/RequestPartAnnotationProcessor.java"
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.servicecomb.swagger.generator.springmvc.processor.annotation;
-
-import java.lang.reflect.Type;
-
-import org.apache.commons.lang3.StringUtils;
-import org.apache.servicecomb.swagger.generator.OperationGenerator;
-import org.apache.servicecomb.swagger.generator.ParameterGenerator;
-import org.apache.servicecomb.swagger.generator.SwaggerGenerator;
-import org.apache.servicecomb.swagger.generator.core.model.HttpParameterType;
-import org.springframework.web.bind.annotation.RequestPart;
-
-public class RequestPartAnnotationProcessor extends
-    SpringmvcParameterAnnotationsProcessor<RequestPart> {
-  @Override
-  public Type getProcessType() {
-    return RequestPart.class;
-  }
-
-  @Override
-  public String getParameterName(RequestPart annotation) {
-    String value = annotation.value();
-    if (value.isEmpty()) {
-      value = annotation.name();
-    }
-    if (StringUtils.isNotEmpty(value)) {
-      return value;
-    }
-    return null;
-  }
-
-  @Override
-  public void process(SwaggerGenerator swaggerGenerator, OperationGenerator operationGenerator,
-      ParameterGenerator parameterGenerator, RequestPart annotation) {
-    parameterGenerator.setHttpParameterType(HttpParameterType.FORM);
-    if (StringUtils.isNotEmpty(getParameterName(annotation))) {
-      parameterGenerator.getParameterGeneratorContext().setParameterName(getParameterName(annotation));
-    }
-    parameterGenerator.getParameterGeneratorContext().setRequired(annotation.required());
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/response/consumer/CompletableFutureConsumerResponseMapperFactory.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/response/consumer/CompletableFutureConsumerResponseMapperFactory.java"
deleted file mode 100644
index eabe5fd..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/response/consumer/CompletableFutureConsumerResponseMapperFactory.java"
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.servicecomb.swagger.invocation.response.consumer;
-
-import java.lang.reflect.ParameterizedType;
-import java.lang.reflect.Type;
-import java.util.concurrent.CompletableFuture;
-
-import org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys;
-
-public class CompletableFutureConsumerResponseMapperFactory implements ConsumerResponseMapperFactory {
-  @Override
-  public boolean isMatch(Type consumerType) {
-    if (!ParameterizedType.class.isAssignableFrom(consumerType.getClass())) {
-      return false;
-    }
-
-    return ((ParameterizedType) consumerType).getRawType().equals(CompletableFuture.class);
-  }
-
-  @Override
-  public ConsumerResponseMapper createResponseMapper(ResponseMapperFactorys<ConsumerResponseMapper> factorys,
-      Type consumerType) {
-    Type realConsumerType = ((ParameterizedType) consumerType).getActualTypeArguments()[0];
-    return factorys.createResponseMapper(realConsumerType);
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/response/producer/CompletableFutureProducerResponseMapperFactory.java" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/response/producer/CompletableFutureProducerResponseMapperFactory.java"
deleted file mode 100644
index 5476719..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/invocation/response/producer/CompletableFutureProducerResponseMapperFactory.java"
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.apache.servicecomb.swagger.invocation.response.producer;
-
-import java.lang.reflect.ParameterizedType;
-import java.lang.reflect.Type;
-import java.util.concurrent.CompletableFuture;
-
-import org.apache.servicecomb.swagger.invocation.response.ResponseMapperFactorys;
-
-public class CompletableFutureProducerResponseMapperFactory implements ProducerResponseMapperFactory {
-  @Override
-  public boolean isMatch(Type producerType) {
-    if (!ParameterizedType.class.isAssignableFrom(producerType.getClass())) {
-      return false;
-    }
-
-    return ((ParameterizedType) producerType).getRawType().equals(CompletableFuture.class);
-  }
-
-  @Override
-  public ProducerResponseMapper createResponseMapper(ResponseMapperFactorys<ProducerResponseMapper> factorys,
-      Type producerType) {
-    Type realProducerType = ((ParameterizedType) producerType).getActualTypeArguments()[0];
-    return factorys.createResponseMapper(realProducerType);
-  }
-}
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-invocation/invocation-core/src/main/resources/META-INF/services/org.apache.servicecomb.swagger.invocation.exception.ExceptionToProducerResponseConverter" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-invocation/invocation-core/src/main/resources/META-INF/services/org.apache.servicecomb.swagger.invocation.exception.ExceptionToProducerResponseConverter"
deleted file mode 100644
index f7315d6..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-invocation/invocation-core/src/main/resources/META-INF/services/org.apache.servicecomb.swagger.invocation.exception.ExceptionToProducerResponseConverter"
+++ /dev/null
@@ -1,19 +0,0 @@
-#
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-org.apache.servicecomb.swagger.invocation.exception.InvocationExceptionToProducerResponseConverter
-org.apache.servicecomb.swagger.invocation.exception.DefaultExceptionToProducerResponseConverter
diff --git "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-invocation/invocation-core/src/test/resources/META-INF/services/org.apache.servicecomb.swagger.invocation.exception.ExceptionToProducerResponseConverter" "b/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-invocation/invocation-core/src/test/resources/META-INF/services/org.apache.servicecomb.swagger.invocation.exception.ExceptionToProducerResponseConverter"
deleted file mode 100644
index a3afa77..0000000
--- "a/C:\\Users\\hiran\\OneDrive\\Desktop\\bugswarm\\servicecomb-java-chassis-9220678028\\Buggy-version/swagger/swagger-invocation/invocation-core/src/test/resources/META-INF/services/org.apache.servicecomb.swagger.invocation.exception.ExceptionToProducerResponseConverter"
+++ /dev/null
@@ -1,18 +0,0 @@
-#
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-org.apache.servicecomb.swagger.invocation.exception.ErrorToProducerResponseConverter
\ No newline at end of file
