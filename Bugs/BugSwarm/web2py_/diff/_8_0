[<Line: +def call_as_list(f, *a, **b):
>, <Line: +    if not isinstance(f, (list, tuple)):
>, <Line: +        item(*a, **b)
>, <Line: +    if not r:
>, <Line: +        if a and not c and not f:
>, <Line: +        elif a and c and not f:
>, <Line: +    if r:
>, <Line: +    if a:
>, <Line: +    if c:
>, <Line: +    if f:
>, <Line: +    if not (application and controller and function):
>, <Line: +            'strong', 'span',
>, <Line: +        data = self.attributes.get('data', {})
>, <Line: +            attr.append((name, value))
>, <Line: +        for name, value in attr:
>, <Line: +    def __init__(self, name, *a, **b):
>, <Line: +        DIV.__init__(self, *a, **b)
>, <Line: +        return lambda *a, **b: __tag_div__(name, *a, **b)
>, <Line: +            self['value'] = value if not hasattr(value, 'file') else None
>, <Line: +            for k, validator in enumerate(requires):
>, <Line: +        if self['_value'] is None or isinstance(self['_value'], cgi.FieldStorage):
>, <Line: +                        'onsuccess', 'onfailure', 'onchange')]:
>, <Line: +                    call_as_list(onsuccess, self)
>, <Line: +                    call_as_list(onfailure, self)
>, <Line: +                        call_as_list(onchange, self)
>, <Line: +                formkey = self.record_hash + ':' + web2py_uuid()
>, <Line: +            session[keyname] = list(session.get(keyname, []))[-9:] + [formkey]
>, <Line: +            if isinstance(item, LI):
>, <Line: +                elif isinstance(link, dict):
>, <Line: +                # ex: ('', False, A('title', _href=URL(...), _title="title"))
>, <Line: +                # ex: (A('title', _href=URL(...), _title="title"), False, None)
>, <Line: +        html = DIV(select,  self.serialize(custom_items)) if len(custom_items) else select
>]
[<Line: -def call_as_list(f,*a,**b):
>, <Line: -    if not isinstance(f, (list,tuple)):
>, <Line: -        item(*a,**b)
>, <Line: -    if r is None:
>, <Line: -        if a is not None and c is None and f is None:
>, <Line: -        elif a is not None and c is not None and f is None:
>, <Line: -    if r is not None:
>, <Line: -    if a is not None:
>, <Line: -    if c is not None:
>, <Line: -    if f is not None:
>, <Line: -    if not (application and controller and function is not None):
>, <Line: -            'strong','span',
>, <Line: -        data = self.attributes.get('data',{})
>, <Line: -            attr.append((name,value))
>, <Line: -        for name,value in attr:
>, <Line: -    def __init__(self,name,*a,**b):
>, <Line: -        DIV.__init__(self,*a,**b)
>, <Line: -        return lambda *a,**b: __tag_div__(name,*a,**b)
>, <Line: -            self['value'] = value if not hasattr(value,'file') else None
>, <Line: -            for k,validator in enumerate(requires):
>, <Line: -        if self['_value'] is None or isinstance(self['_value'],cgi.FieldStorage):
>, <Line: -                        'onsuccess','onfailure','onchange')]:
>, <Line: -                    call_as_list(onsuccess,self)
>, <Line: -                    call_as_list(onfailure,self)
>, <Line: -                        call_as_list(onchange,self)
>, <Line: -                formkey = self.record_hash+':'+web2py_uuid()
>, <Line: -            session[keyname] = list(session.get(keyname,[]))[-9:] + [formkey]
>, <Line: -            if isinstance(item,LI):
>, <Line: -                elif isinstance(link,dict):
>, <Line: -            # ex: ('', False,A('title',_href=URL(...),_title="title"))
>, <Line: -            # ex: (A('title',_href=URL(...),_title="title"), False, None)
>, <Line: -        html = DIV(select,  self.serialize(custom_items)) if len( custom_items) else select
>]