[<Line: +        if (checkMatch(o, oHash, element1)) {
>, <Line: +        } else if (checkMatch(o, oHash, element2)) {
>, <Line: +        } else if (checkMatch(o, oHash, element3)) {
>, <Line: +        return checkMatch(o, oHash, element1) || checkMatch(o, oHash, element2) || checkMatch(o, oHash, element3);
>, <Line: +    }
>, <Line: +    protected boolean checkMatch(Object o, int oHash, @Nullable T element) {
>, <Line: +        return element != null && oHash == element.hashCode() && o.equals(element);
>]
[<Line: -        if (element1 != null && oHash == element1.hashCode() && o.equals(element1)) {
>, <Line: -        } else if (element2 != null && oHash == element2.hashCode() && o.equals(element2)) {
>, <Line: -        } else if (element3 != null && oHash == element3.hashCode() && o.equals(element3)) {
>, <Line: -        if (element1 != null && oHash == element1.hashCode() && o.equals(element1)) {
>, <Line: -            return true;
>, <Line: -        } else if (element2 != null && oHash == element2.hashCode() && o.equals(element2)) {
>, <Line: -            return true;
>, <Line: -        } else if (element3 != null && oHash == element3.hashCode() && o.equals(element3)) {
>, <Line: -            return true;
>, <Line: -        }
>, <Line: -        return false;
>]