[<Line: +import static org.junit.Assert.assertEquals;
>, <Line: +import static org.junit.Assert.assertNotEquals;
>, <Line: +import static org.junit.Assert.assertNotNull;
>, <Line: +    public void startBundle() throws BundleException, ClassNotFoundException,
>, <Line: +        IllegalAccessException, InstantiationException {
>, <Line: +        System.out.println("BundleIsLoadableIntegrationTestCase.startBundle() "
>, <Line: +            + System.getProperty("java.class.path"));
>, <Line: +            if (fileName.endsWith("jar") && !fileName.contains("sources")
>, <Line: +                && !fileName.contains("javadoc")) {
>, <Line: +            "org.apache.servicemix.bundles.aopalliance", "slf4j-simple", "slf4j-api", "caffeine",
>, <Line: +            "guava", "jsr305", "guice-multibindings", "guice-assistedinject", "guice-4",
>, <Line: +            "commons-io", "commons-codec", "jcl-over-slf4j");
>, <Line: +                } else {
>, <Line: +                    Bundle simpleLoggerBundle = context.installBundle(simple);
>, <Line: +                    try {
>, <Line: +                        simpleLoggerBundle.start();
>, <Line: +                        System.out.println("Loaded " + bundleName + ";");
>, <Line: +                    } catch (BundleException e) {
>, <Line: +                        if (!"Fragment bundles can not be started.".equals(e.getMessage())) {
>, <Line: +                            System.out.println("ERROR " + simple + " " + e.getMessage());
>, <Line: +                        }
>, <Line: +            Class<?> owlManagerClass =
>, <Line: +                bundle.loadClass("org.semanticweb.owlapi.apibinding.OWLManager");
>, <Line: +            assertNotEquals(
>, <Line: +                "OWLManager class from bundle class loader  equals OWLManager class from system class path",
>, <Line: +                    System.out.println("BundleIsLoadableIntegrationTestCase.getJarURL() " + string);
>]
[<Line: -import static org.junit.Assert.*;
>, <Line: -    public void startBundle() throws BundleException, ClassNotFoundException, IllegalAccessException,
>, <Line: -        InstantiationException {
>, <Line: -            if (fileName.endsWith("jar") && !fileName.contains("sources") && !fileName.contains("javadoc")) {
>, <Line: -            "org.apache.servicemix.bundles.aopalliance", "slf4j-simple", "slf4j-api", "caffeine", "guava", "jsr305",
>, <Line: -            "guice-multibindings", "guice-assistedinject", "guice-4", "commons-io", "commons-codec", "jcl-over-slf4j");
>, <Line: -                }
>, <Line: -                // System.out.println("BundleIsLoadableIntegrationTestCase.startBundle()
>, <Line: -                // " + simple);
>, <Line: -                Bundle simpleLoggerBundle = context.installBundle(simple);
>, <Line: -                try {
>, <Line: -                    simpleLoggerBundle.start();
>, <Line: -                } catch (BundleException e) {
>, <Line: -                    if (!"Fragment bundles can not be started.".equals(e.getMessage())) {
>, <Line: -                        System.out.println("ERROR " + simple + " " + e.getMessage());
>, <Line: -            Class<?> owlManagerClass = bundle.loadClass("org.semanticweb.owlapi.apibinding.OWLManager");
>, <Line: -            assertNotEquals("OWLManager class from bundle class loader  equals OWLManager class from system class path",
>, <Line: -                    // System.out.println("BundleIsLoadableIntegrationTestCase.getJarURL()
>, <Line: -                    // " + string);
>]