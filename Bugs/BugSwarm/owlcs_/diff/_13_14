[<Line: +import static org.semanticweb.owlapi.model.AxiomType.ANNOTATION_ASSERTION;
>, <Line: +import static org.semanticweb.owlapi.model.AxiomType.ANNOTATION_PROPERTY_DOMAIN;
>, <Line: +import static org.semanticweb.owlapi.model.AxiomType.ANNOTATION_PROPERTY_RANGE;
>, <Line: +import static org.semanticweb.owlapi.model.AxiomType.AXIOM_TYPES;
>, <Line: +import static org.semanticweb.owlapi.model.AxiomType.DATATYPE_DEFINITION;
>, <Line: +import static org.semanticweb.owlapi.model.AxiomType.SUBCLASS_OF;
>, <Line: +import static org.semanticweb.owlapi.model.AxiomType.SUB_ANNOTATION_PROPERTY_OF;
>, <Line: +import static org.semanticweb.owlapi.model.AxiomType.SUB_DATA_PROPERTY;
>, <Line: +import static org.semanticweb.owlapi.model.AxiomType.SUB_OBJECT_PROPERTY;
>, <Line: +import static org.semanticweb.owlapi.model.AxiomType.TBoxAndRBoxAxiomTypes;
>, <Line: +        SUB_ANNOTATION_PROPERTY_OF, OWLSubAnnotationPropertyOfAxiom::getSuperProperty);
>, <Line: +        SUB_ANNOTATION_PROPERTY_OF, OWLSubAnnotationPropertyOfAxiom::getSubProperty);
>, <Line: +        new AxiomFilter<>(SUBCLASS_OF, OWLSubClassOfAxiom::getSuperClass);
>, <Line: +        new AxiomFilter<>(SUBCLASS_OF, OWLSubClassOfAxiom::getSubClass);
>, <Line: +    public static final OWLAxiomSearchFilter subObjectPropertyWithSuper =
>, <Line: +        new AxiomFilter<>(SUB_OBJECT_PROPERTY, OWLSubObjectPropertyOfAxiom::getSuperProperty);
>, <Line: +    public static final OWLAxiomSearchFilter subObjectPropertyWithSub =
>, <Line: +        new AxiomFilter<>(SUB_OBJECT_PROPERTY, OWLSubObjectPropertyOfAxiom::getSubProperty);
>, <Line: +        new AxiomFilter<>(SUB_DATA_PROPERTY, OWLSubDataPropertyOfAxiom::getSuperProperty);
>, <Line: +        new AxiomFilter<>(SUB_DATA_PROPERTY, OWLSubDataPropertyOfAxiom::getSubProperty);
>, <Line: +        new AxiomFilter<>(DATATYPE_DEFINITION, OWLDatatypeDefinitionAxiom::getDatatype);
>, <Line: +    public static final OWLAxiomSearchFilter apRangeFilter =
>, <Line: +        new AxiomFilter<>(ANNOTATION_PROPERTY_RANGE, OWLAnnotationPropertyRangeAxiom::getProperty);
>, <Line: +        ANNOTATION_PROPERTY_DOMAIN, OWLAnnotationPropertyDomainAxiom::getProperty);
>, <Line: +        new AxiomFilter<>(ANNOTATION_ASSERTION, OWLAnnotationAssertionAxiom::getSubject);
>, <Line: +        new AxiomFilter<OWLAxiom>(TBoxAndRBoxAxiomTypes, a -> a) {
>, <Line: +        new AxiomFilter<OWLAxiom>(AXIOM_TYPES, a -> a) {
>, <Line: +                return !TBoxAndRBoxAxiomTypes.contains(axiom.getAxiomType());
>]
[<Line: -        AxiomType.SUB_ANNOTATION_PROPERTY_OF, OWLSubAnnotationPropertyOfAxiom::getSuperProperty);
>, <Line: -        AxiomType.SUB_ANNOTATION_PROPERTY_OF, OWLSubAnnotationPropertyOfAxiom::getSubProperty);
>, <Line: -        new AxiomFilter<>(AxiomType.SUBCLASS_OF, OWLSubClassOfAxiom::getSuperClass);
>, <Line: -        new AxiomFilter<>(AxiomType.SUBCLASS_OF, OWLSubClassOfAxiom::getSubClass);
>, <Line: -    public static final OWLAxiomSearchFilter subObjectPropertyWithSuper = new AxiomFilter<>(
>, <Line: -        AxiomType.SUB_OBJECT_PROPERTY, OWLSubObjectPropertyOfAxiom::getSuperProperty);
>, <Line: -    public static final OWLAxiomSearchFilter subObjectPropertyWithSub = new AxiomFilter<>(
>, <Line: -        AxiomType.SUB_OBJECT_PROPERTY, OWLSubObjectPropertyOfAxiom::getSubProperty);
>, <Line: -        new AxiomFilter<>(AxiomType.SUB_DATA_PROPERTY, OWLSubDataPropertyOfAxiom::getSuperProperty);
>, <Line: -        new AxiomFilter<>(AxiomType.SUB_DATA_PROPERTY, OWLSubDataPropertyOfAxiom::getSubProperty);
>, <Line: -        new AxiomFilter<>(AxiomType.DATATYPE_DEFINITION, OWLDatatypeDefinitionAxiom::getDatatype);
>, <Line: -    public static final OWLAxiomSearchFilter apRangeFilter = new AxiomFilter<>(
>, <Line: -        AxiomType.ANNOTATION_PROPERTY_RANGE, OWLAnnotationPropertyRangeAxiom::getProperty);
>, <Line: -        AxiomType.ANNOTATION_PROPERTY_DOMAIN, OWLAnnotationPropertyDomainAxiom::getProperty);
>, <Line: -        new AxiomFilter<>(AxiomType.ANNOTATION_ASSERTION, OWLAnnotationAssertionAxiom::getSubject);
>, <Line: -        new AxiomFilter<OWLAxiom>(AxiomType.TBoxAndRBoxAxiomTypes, a -> a) {
>, <Line: -        new AxiomFilter<OWLAxiom>(AxiomType.AXIOM_TYPES, a -> a) {
>, <Line: -                return !AxiomType.TBoxAndRBoxAxiomTypes.contains(axiom.getAxiomType());
>]