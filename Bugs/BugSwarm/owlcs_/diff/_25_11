[<Line: +import static org.semanticweb.owlapi.model.parameters.ConfigurationOptions.ENTITY_EXPANSION_LIMIT;
>, <Line: +    /**
>, <Line: +     * @param expansion entity expansion limit.
>, <Line: +     * @return An {@code OntologyConfigurator} with the new option set.
>, <Line: +     */
>, <Line: +    public OntologyConfigurator withEntityExpansionLimit(String expansion) {
>, <Line: +        overrides.put(ENTITY_EXPANSION_LIMIT, expansion);
>, <Line: +        return this;
>, <Line: +    }
>, <Line: +    /**
>, <Line: +     * @return entity expansion limit.
>, <Line: +     */
>, <Line: +    public String getEntityExpansionLimit() {
>, <Line: +        return ENTITY_EXPANSION_LIMIT.getValue(String.class, overrides);
>, <Line: +    }
>, <Line: +    /**
>, <Line: +     * @param iri import to check.
>, <Line: +     * @return true if the import is ignored.
>, <Line: +     */
>, <Line: +    public boolean isImportIgnored(IRI iri) {
>, <Line: +        return ignoredImports.contains(iri);
>, <Line: +    }
>]
[<Line: -    /**
>, <Line: -     * @return a new OWLOntologyLoaderConfiguration from the builder current settings
>, <Line: -     */
>, <Line: -    public OWLOntologyLoaderConfiguration buildLoaderConfiguration() {
>, <Line: -        //@formatter:off
>, <Line: -        return new OWLOntologyLoaderConfiguration()
>, <Line: -            .setConnectionTimeout(getConnectionTimeout())
>, <Line: -            .setLoadAnnotationAxioms(shouldLoadAnnotations())
>, <Line: -            .setMissingImportHandlingStrategy(getMissingImportHandlingStrategy())
>, <Line: -            .setMissingOntologyHeaderStrategy(getMissingOntologyHeaderStrategy())
>, <Line: -            .setPriorityCollectionSorting(getPriorityCollectionSorting())
>, <Line: -            .setReportStackTraces(shouldReportStackTraces())
>, <Line: -            .setRetriesToAttempt(getRetriesToAttempt())
>, <Line: -            .setStrict(shouldParseWithStrictConfiguration())
>, <Line: -            .setTreatDublinCoreAsBuiltIn(shouldTreatDublinCoreAsBuiltin())
>, <Line: -            .setBannedParsers(getBannedParsers());
>, <Line: -        //@formatter:on
>, <Line: -    }
>, <Line: -    /**
>, <Line: -     * @return a new OWLOntologyWriterConfiguration from the builder current settings
>, <Line: -     */
>, <Line: -    public OWLOntologyWriterConfiguration buildWriterConfiguration() {
>, <Line: -        //@formatter:off
>, <Line: -        return new OWLOntologyWriterConfiguration()
>, <Line: -            .withIndenting(shouldIndent())
>, <Line: -            .withIndentSize(getIndentSize())
>, <Line: -            .withLabelsAsBanner(shouldUseLabelsAsBanner())
>, <Line: -            .withRemapAllAnonymousIndividualsIds(shouldRemapIds())
>, <Line: -            .withSaveIdsForAllAnonymousIndividuals(shouldSaveIds())
>, <Line: -            .withUseNamespaceEntities(shouldUseNamespaceEntities())
>, <Line: -            .withBannersEnabled(shouldUseBanners())
>, <Line: -            .withAddMissingTypes(shouldAddMissingTypes());
>, <Line: -        //@formatter:on
>, <Line: -    }
>]