[<Line: +import org.semanticweb.owlapi.model.OntologyConfigurator;
>, <Line: +    private final OntologyConfigurator configuration;
>, <Line: +        Pattern.compile("([^\"]*)\\s*(\"((\\\"|[^\"])*)\")?");
>, <Line: +    public OBOConsumer(OWLOntology ontology, OntologyConfigurator configuration, IRI baseIRI) {
>, <Line: +            IRI.create(idSpaceManager.getIRIPrefix(ontologyTagValue), ontologyTagValue);
>, <Line: +            CollectionFactory.createSet(getCurrentClass(), classExpression));
>, <Line: +                    OWLImportsDeclaration decl =
>, <Line: +                        owlOntologyManager.getOWLDataFactory().getOWLImportsDeclaration(uri);
>, <Line: +                    OWLAnnotationProperty property =
>, <Line: +                        getDataFactory().getOWLAnnotationProperty(getIRIFromTagName(tag));
>, <Line: +                if (configuration.shouldLoadAnnotations()) {
>, <Line: +                    OWLAnnotationProperty property =
>, <Line: +                        getDataFactory().getOWLAnnotationProperty(annotationPropertyIRI);
>, <Line: +                        getDataFactory().getOWLAnnotationAssertionAxiom(subject, anno);
>, <Line: +                        getDataFactory().getOWLDeclarationAxiom(property);
>, <Line: +                "Invalid ID: " + symbolicIdOrOBOId + " in frame " + currentId);
>, <Line: +                symbolicIdOrOBOId);
>, <Line: +                df.getOWLAnnotationProperty(OBOVocabulary.XREF.getIRI());
>, <Line: +                df.getOWLAnnotationProperty(OBOVocabulary.XREF.getIRI());
>]
[<Line: -import org.semanticweb.owlapi.model.OWLOntologyLoaderConfiguration;
>, <Line: -    private final OWLOntologyLoaderConfiguration configuration;
>, <Line: -                    Pattern.compile("([^\"]*)\\s*(\"((\\\"|[^\"])*)\")?");
>, <Line: -    public OBOConsumer(OWLOntology ontology, OWLOntologyLoaderConfiguration configuration,
>, <Line: -                    IRI baseIRI) {
>, <Line: -                        IRI.create(idSpaceManager.getIRIPrefix(ontologyTagValue), ontologyTagValue);
>, <Line: -                        CollectionFactory.createSet(getCurrentClass(), classExpression));
>, <Line: -                    OWLImportsDeclaration decl = owlOntologyManager.getOWLDataFactory()
>, <Line: -                                    .getOWLImportsDeclaration(uri);
>, <Line: -                    OWLAnnotationProperty property = getDataFactory()
>, <Line: -                                    .getOWLAnnotationProperty(getIRIFromTagName(tag));
>, <Line: -                if (configuration.isLoadAnnotationAxioms()) {
>, <Line: -                    OWLAnnotationProperty property = getDataFactory()
>, <Line: -                                    .getOWLAnnotationProperty(annotationPropertyIRI);
>, <Line: -                                    getDataFactory().getOWLAnnotationAssertionAxiom(subject, anno);
>, <Line: -                                    getDataFactory().getOWLDeclarationAxiom(property);
>, <Line: -                            "Invalid ID: " + symbolicIdOrOBOId + " in frame " + currentId);
>, <Line: -                            symbolicIdOrOBOId);
>, <Line: -                            df.getOWLAnnotationProperty(OBOVocabulary.XREF.getIRI());
>, <Line: -                            df.getOWLAnnotationProperty(OBOVocabulary.XREF.getIRI());
>]