[<Line: +            handleAssertions(assertions);
>, <Line: +    protected void handleAssertions(List<OWLPropertyAssertionAxiom<?, ?>> assertions) {
>, <Line: +        fireSectionRenderingPrepared(FACTS.toString());
>, <Line: +        writeSection(FACTS);
>, <Line: +        writeSpace();
>, <Line: +        writeOntologiesList(o);
>, <Line: +        incrementTab(1);
>, <Line: +        writeNewLine();
>, <Line: +        fireSectionRenderingStarted(FACTS.toString());
>, <Line: +        for (Iterator<OWLPropertyAssertionAxiom<?, ?>> it = assertions.iterator(); it.hasNext();) {
>, <Line: +            OWLPropertyAssertionAxiom<?, ?> ax = it.next();
>, <Line: +            fireSectionItemPrepared(FACTS.toString());
>, <Line: +            Iterator<OWLAnnotation> annos = ax.annotations().iterator();
>, <Line: +            boolean isNotEmpty = annos.hasNext();
>, <Line: +            if (isNotEmpty) {
>, <Line: +                writeAnnotations(annos);
>, <Line: +                pushTab(getIndent() + 1);
>, <Line: +            }
>, <Line: +            if (ax instanceof OWLNegativeDataPropertyAssertionAxiom
>, <Line: +                || ax instanceof OWLNegativeObjectPropertyAssertionAxiom) {
>, <Line: +                write(NOT);
>, <Line: +                writeSpace();
>, <Line: +            }
>, <Line: +            ax.getProperty().accept(this);
>, <Line: +            writeSpace();
>, <Line: +            writeSpace();
>, <Line: +            ax.getObject().accept(this);
>, <Line: +            if (isNotEmpty) {
>, <Line: +                popTab();
>, <Line: +            }
>, <Line: +            fireSectionItemFinished(FACTS.toString());
>, <Line: +            if (it.hasNext()) {
>, <Line: +                write(",");
>, <Line: +                writeNewLine();
>, <Line: +            }
>, <Line: +        }
>, <Line: +        popTab();
>, <Line: +        writeNewLine();
>, <Line: +        writeNewLine();
>, <Line: +    }
>]
[<Line: -            fireSectionRenderingPrepared(FACTS.toString());
>, <Line: -            writeSection(FACTS);
>, <Line: -            writeSpace();
>, <Line: -            writeOntologiesList(o);
>, <Line: -            incrementTab(1);
>, <Line: -            writeNewLine();
>, <Line: -            fireSectionRenderingStarted(FACTS.toString());
>, <Line: -            for (Iterator<OWLPropertyAssertionAxiom<?, ?>> it = assertions.iterator(); it.hasNext();) {
>, <Line: -                OWLPropertyAssertionAxiom<?, ?> ax = it.next();
>, <Line: -                fireSectionItemPrepared(FACTS.toString());
>, <Line: -                Iterator<OWLAnnotation> annos = ax.annotations().iterator();
>, <Line: -                boolean isNotEmpty = annos.hasNext();
>, <Line: -                if (isNotEmpty) {
>, <Line: -                    writeAnnotations(annos);
>, <Line: -                    pushTab(getIndent() + 1);
>, <Line: -                }
>, <Line: -                if (ax instanceof OWLNegativeDataPropertyAssertionAxiom
>, <Line: -                    || ax instanceof OWLNegativeObjectPropertyAssertionAxiom) {
>, <Line: -                    write(NOT);
>, <Line: -                    writeSpace();
>, <Line: -                }
>, <Line: -                ax.getProperty().accept(this);
>, <Line: -                writeSpace();
>, <Line: -                writeSpace();
>, <Line: -                ax.getObject().accept(this);
>, <Line: -                if (isNotEmpty) {
>, <Line: -                    popTab();
>, <Line: -                }
>, <Line: -                fireSectionItemFinished(FACTS.toString());
>, <Line: -                if (it.hasNext()) {
>, <Line: -                    write(",");
>, <Line: -                    writeNewLine();
>, <Line: -                }
>, <Line: -            }
>, <Line: -            popTab();
>, <Line: -            writeNewLine();
>, <Line: -            writeNewLine();
>]