[<Line: +    private final Integer expected;
>, <Line: +    public MaximumModalDepthFinderTestCase(OWLObject object, Integer expected) {
>, <Line: +        Integer zero = Integer.valueOf(0);
>, <Line: +        Integer one = Integer.valueOf(1);
>, <Line: +        map.put(b.ann(), zero);
>, <Line: +        map.put(b.asymm(), zero);
>, <Line: +        map.put(b.annDom(), zero);
>, <Line: +        map.put(b.annRange(), zero);
>, <Line: +        map.put(b.ass(), zero);
>, <Line: +        map.put(b.assAnd(), zero);
>, <Line: +        map.put(b.assOr(), zero);
>, <Line: +        map.put(b.dRangeAnd(), zero);
>, <Line: +        map.put(b.dRangeOr(), zero);
>, <Line: +        map.put(b.assNot(), zero);
>, <Line: +        map.put(b.assNotAnon(), zero);
>, <Line: +        map.put(b.assSome(), one);
>, <Line: +        map.put(b.assAll(), one);
>, <Line: +        map.put(b.assHas(), zero);
>, <Line: +        map.put(b.assMin(), one);
>, <Line: +        map.put(b.assMax(), one);
>, <Line: +        map.put(b.assEq(), one);
>, <Line: +        map.put(b.assHasSelf(), one);
>, <Line: +        map.put(b.assOneOf(), zero);
>, <Line: +        map.put(b.assDSome(), one);
>, <Line: +        map.put(b.assDAll(), one);
>, <Line: +        map.put(b.assDHas(), one);
>, <Line: +        map.put(b.assDMin(), one);
>, <Line: +        map.put(b.assDMax(), one);
>, <Line: +        map.put(b.assDEq(), one);
>, <Line: +        map.put(b.dOneOf(), zero);
>, <Line: +        map.put(b.dNot(), zero);
>, <Line: +        map.put(b.dRangeRestrict(), zero);
>, <Line: +        map.put(b.assD(), zero);
>, <Line: +        map.put(b.assDPlain(), zero);
>, <Line: +        map.put(b.dDom(), zero);
>, <Line: +        map.put(b.dRange(), zero);
>, <Line: +        map.put(b.dDef(), zero);
>, <Line: +        map.put(b.decC(), zero);
>, <Line: +        map.put(b.decOp(), zero);
>, <Line: +        map.put(b.decDp(), zero);
>, <Line: +        map.put(b.decDt(), zero);
>, <Line: +        map.put(b.decAp(), zero);
>, <Line: +        map.put(b.decI(), zero);
>, <Line: +        map.put(b.assDi(), zero);
>, <Line: +        map.put(b.dc(), zero);
>, <Line: +        map.put(b.dDp(), zero);
>, <Line: +        map.put(b.dOp(), zero);
>, <Line: +        map.put(b.du(), zero);
>, <Line: +        map.put(b.ec(), zero);
>, <Line: +        map.put(b.eDp(), zero);
>, <Line: +        map.put(b.eOp(), zero);
>, <Line: +        map.put(b.fdp(), zero);
>, <Line: +        map.put(b.fop(), zero);
>, <Line: +        map.put(b.ifp(), zero);
>, <Line: +        map.put(b.iop(), zero);
>, <Line: +        map.put(b.irr(), zero);
>, <Line: +        map.put(b.ndp(), zero);
>, <Line: +        map.put(b.nop(), zero);
>, <Line: +        map.put(b.opa(), zero);
>, <Line: +        map.put(b.opaInv(), zero);
>, <Line: +        map.put(b.opaInvj(), zero);
>, <Line: +        map.put(b.oDom(), zero);
>, <Line: +        map.put(b.oRange(), zero);
>, <Line: +        map.put(b.chain(), zero);
>, <Line: +        map.put(b.ref(), zero);
>, <Line: +        map.put(b.same(), zero);
>, <Line: +        map.put(b.subAnn(), zero);
>, <Line: +        map.put(b.subClass(), zero);
>, <Line: +        map.put(b.subData(), zero);
>, <Line: +        map.put(b.subObject(), zero);
>, <Line: +        map.put(b.rule(), zero);
>, <Line: +        map.put(b.symm(), zero);
>, <Line: +        map.put(b.trans(), zero);
>, <Line: +        map.put(b.hasKey(), zero);
>, <Line: +        map.put(b.bigRule(), zero);
>, <Line: +        map.put(b.onto(), zero);
>, <Line: +        Integer i = object.accept(testsubject);
>]
[<Line: -    private final int expected;
>, <Line: -    public MaximumModalDepthFinderTestCase(OWLObject object, int expected) {
>, <Line: -        map.put(b.ann(), 0);
>, <Line: -        map.put(b.asymm(), 0);
>, <Line: -        map.put(b.annDom(), 0);
>, <Line: -        map.put(b.annRange(), 0);
>, <Line: -        map.put(b.ass(), 0);
>, <Line: -        map.put(b.assAnd(), 0);
>, <Line: -        map.put(b.assOr(), 0);
>, <Line: -        map.put(b.dRangeAnd(), 0);
>, <Line: -        map.put(b.dRangeOr(), 0);
>, <Line: -        map.put(b.assNot(), 0);
>, <Line: -        map.put(b.assNotAnon(), 0);
>, <Line: -        map.put(b.assSome(), 1);
>, <Line: -        map.put(b.assAll(), 1);
>, <Line: -        map.put(b.assHas(), 0);
>, <Line: -        map.put(b.assMin(), 1);
>, <Line: -        map.put(b.assMax(), 1);
>, <Line: -        map.put(b.assEq(), 1);
>, <Line: -        map.put(b.assHasSelf(), 1);
>, <Line: -        map.put(b.assOneOf(), 0);
>, <Line: -        map.put(b.assDSome(), 1);
>, <Line: -        map.put(b.assDAll(), 1);
>, <Line: -        map.put(b.assDHas(), 1);
>, <Line: -        map.put(b.assDMin(), 1);
>, <Line: -        map.put(b.assDMax(), 1);
>, <Line: -        map.put(b.assDEq(), 1);
>, <Line: -        map.put(b.dOneOf(), 0);
>, <Line: -        map.put(b.dNot(), 0);
>, <Line: -        map.put(b.dRangeRestrict(), 0);
>, <Line: -        map.put(b.assD(), 0);
>, <Line: -        map.put(b.assDPlain(), 0);
>, <Line: -        map.put(b.dDom(), 0);
>, <Line: -        map.put(b.dRange(), 0);
>, <Line: -        map.put(b.dDef(), 0);
>, <Line: -        map.put(b.decC(), 0);
>, <Line: -        map.put(b.decOp(), 0);
>, <Line: -        map.put(b.decDp(), 0);
>, <Line: -        map.put(b.decDt(), 0);
>, <Line: -        map.put(b.decAp(), 0);
>, <Line: -        map.put(b.decI(), 0);
>, <Line: -        map.put(b.assDi(), 0);
>, <Line: -        map.put(b.dc(), 0);
>, <Line: -        map.put(b.dDp(), 0);
>, <Line: -        map.put(b.dOp(), 0);
>, <Line: -        map.put(b.du(), 0);
>, <Line: -        map.put(b.ec(), 0);
>, <Line: -        map.put(b.eDp(), 0);
>, <Line: -        map.put(b.eOp(), 0);
>, <Line: -        map.put(b.fdp(), 0);
>, <Line: -        map.put(b.fop(), 0);
>, <Line: -        map.put(b.ifp(), 0);
>, <Line: -        map.put(b.iop(), 0);
>, <Line: -        map.put(b.irr(), 0);
>, <Line: -        map.put(b.ndp(), 0);
>, <Line: -        map.put(b.nop(), 0);
>, <Line: -        map.put(b.opa(), 0);
>, <Line: -        map.put(b.opaInv(), 0);
>, <Line: -        map.put(b.opaInvj(), 0);
>, <Line: -        map.put(b.oDom(), 0);
>, <Line: -        map.put(b.oRange(), 0);
>, <Line: -        map.put(b.chain(), 0);
>, <Line: -        map.put(b.ref(), 0);
>, <Line: -        map.put(b.same(), 0);
>, <Line: -        map.put(b.subAnn(), 0);
>, <Line: -        map.put(b.subClass(), 0);
>, <Line: -        map.put(b.subData(), 0);
>, <Line: -        map.put(b.subObject(), 0);
>, <Line: -        map.put(b.rule(), 0);
>, <Line: -        map.put(b.symm(), 0);
>, <Line: -        map.put(b.trans(), 0);
>, <Line: -        map.put(b.hasKey(), 0);
>, <Line: -        map.put(b.bigRule(), 0);
>, <Line: -        map.put(b.onto(), 0);
>, <Line: -        int i = object.accept(testsubject);
>]