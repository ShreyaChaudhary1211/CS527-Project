[<Line: +        }
>, <Line: +        if (suffix == null) {
>, <Line: +        int index = XMLUtils.getNCNameSuffixIndex(prefix);
>, <Line: +        int test = XMLUtils.getNCNameSuffixIndex(suffix);
>, <Line: +        if (index == -1 && test == 0) {
>, <Line: +            // the prefix does not contain an ncname character and there is
>, <Line: +            // no illegal character in the suffix
>, <Line: +            // the split is therefore correct
>, <Line: +            return new IRI(prefix, suffix);
>, <Line: +        }
>, <Line: +        // otherwise the split is wrong; we could obtain the right split by
>, <Line: +        // using index and test, but it's just as easy to use the other
>, <Line: +        // constructor
>, <Line: +        return create(prefix + suffix);
>]
[<Line: -        } else if (suffix == null) {
>, <Line: -        } else {
>, <Line: -            int index = XMLUtils.getNCNameSuffixIndex(prefix);
>, <Line: -            int test = XMLUtils.getNCNameSuffixIndex(suffix);
>, <Line: -            if (index == -1 && test == 0) {
>, <Line: -                // the prefix does not contain an ncname character and there is
>, <Line: -                // no illegal character in the suffix
>, <Line: -                // the split is therefore correct
>, <Line: -                return new IRI(prefix, suffix);
>, <Line: -            }
>, <Line: -            // otherwise the split is wrong; we could obtain the right split by
>, <Line: -            // using index and test, but it's just as easy to use the other
>, <Line: -            // constructor
>, <Line: -            return create(prefix + suffix);
>]