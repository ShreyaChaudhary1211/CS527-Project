[<Line: +import java.io.PrintWriter;
>, <Line: +public class StringDocumentTarget extends OWLOntologyDocumentTargetBase {
>, <Line: +    private final Writer w = new StringWriter();
>, <Line: +    /**
>, <Line: +     * Constructor overriding default writer
>, <Line: +     */
>, <Line: +    public StringDocumentTarget() {
>, <Line: +        super(() -> null, null);
>, <Line: +        writer = () -> new PrintWriter(w);
>, <Line: +    public String toString() {
>, <Line: +        return w.toString();
>]
[<Line: -import static org.semanticweb.owlapi.util.OWLAPIPreconditions.optional;
>, <Line: -import java.util.Optional;
>, <Line: -public class StringDocumentTarget implements OWLOntologyDocumentTarget {
>, <Line: -    private final Optional<Writer> writer = optional(new StringWriter());
>, <Line: -    @Override
>, <Line: -    public String toString() {
>, <Line: -        return writer.get().toString();
>, <Line: -    public Optional<Writer> getWriter() {
>, <Line: -        return writer;
>]