[<Line: +import static org.semanticweb.owlapi.util.OWLAPIPreconditions.checkNotNull;
>, <Line: +public class XZStreamDocumentTarget extends OWLOntologyDocumentTargetBase {
>, <Line: +        super(() -> new XZOutputStream(checkNotNull(os, "os cannot be null"), filterOptions), null);
>]
[<Line: -import static org.semanticweb.owlapi.util.OWLAPIPreconditions.*;
>, <Line: -import java.io.IOException;
>, <Line: -import java.util.Optional;
>, <Line: -import javax.annotation.Nullable;
>, <Line: -import org.slf4j.Logger;
>, <Line: -import org.slf4j.LoggerFactory;
>, <Line: -import com.google.common.io.Closeables;
>, <Line: -public class XZStreamDocumentTarget implements OWLOntologyDocumentTarget, AutoCloseable {
>, <Line: -    private static final Logger LOGGER = LoggerFactory.getLogger(XZStreamDocumentTarget.class);
>, <Line: -    private final OutputStream outputStream;
>, <Line: -    @Nullable private XZOutputStream xzOutputStream;
>, <Line: -    private FilterOptions[] filterOptions;
>, <Line: -        outputStream = os;
>, <Line: -        if (filterOptions.length == 0) {
>, <Line: -            this.filterOptions = new FilterOptions[] { new LZMA2Options() };
>, <Line: -        } else {
>, <Line: -            this.filterOptions = filterOptions;
>, <Line: -        }
>, <Line: -    @Override
>, <Line: -    public Optional<OutputStream> getOutputStream() {
>, <Line: -        if (xzOutputStream == null) {
>, <Line: -            try {
>, <Line: -                xzOutputStream = new XZOutputStream(outputStream, filterOptions);
>, <Line: -            } catch (IOException e) {
>, <Line: -                LOGGER.error("Fille cannot be found or opened", e);
>, <Line: -                return emptyOptional();
>, <Line: -            }
>, <Line: -        }
>, <Line: -        return optional(verifyNotNull(xzOutputStream));
>, <Line: -    }
>, <Line: -    @Override
>, <Line: -    public void close() throws Exception {
>, <Line: -        XZOutputStream toReturn = xzOutputStream;
>, <Line: -        xzOutputStream = null;
>, <Line: -        Closeables.close(toReturn, false);
>, <Line: -    }
>]