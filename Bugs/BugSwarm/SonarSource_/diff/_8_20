[<Line: +import com.google.common.collect.ImmutableList;
>, <Line: +import org.sonar.plugins.php.api.tests.PHPCheckTest;
>, <Line: +import org.sonar.plugins.php.api.visitors.Issue;
>, <Line: +    PHPCheckTest.check(check, TEST_FILE);
>, <Line: +    PHPCheckTest.check(check, TEST_FILE, ImmutableList.<Issue>of());
>]
[<Line: -import org.sonar.php.PHPAstScanner;
>, <Line: -import org.sonar.squidbridge.api.SourceFile;
>, <Line: -    SourceFile file = PHPAstScanner.scanSingleFile(TEST_FILE, check);
>, <Line: -    checkMessagesVerifier.verify(file.getCheckMessages())
>, <Line: -      .next().atLine(6).withMessage("Either split this list into multiple lines, aligned at column \"4\" or put all arguments on line \"6\".")
>, <Line: -      .next().atLine(11).withMessage("Either split this list into multiple lines, aligned at column \"4\" or put all arguments on line \"10\".")
>, <Line: -      .next().atLine(15).withMessage("Align all arguments in this list at column \"4\".")
>, <Line: -      .next().atLine(16).withMessage("Move the closing parenthesis on the next line.")
>, <Line: -      .next().atLine(18)
>, <Line: -      .next().atLine(50).withMessage("Either split this list into multiple lines, aligned at column \"4\" or put all arguments on line \"50\".")
>, <Line: -      .next().atLine(56).withMessage("Either split this list into multiple lines, aligned at column \"4\" or put all arguments on line \"55\".")
>, <Line: -      .next().atLine(61).withMessage("Align all arguments in this list at column \"4\".")
>, <Line: -      .next().atLine(62).withMessage("Move the closing parenthesis with the opening brace on the next line.")
>, <Line: -      .next().atLine(80).withMessage("Either split this list into multiple lines or move it on the same line \"80\".")
>, <Line: -      .next().atLine(85).withMessage("Either split this list into multiple lines or move it on the same line \"84\".")
>, <Line: -      .next().atLine(89).withMessage("Align all interfaces in this list at column \"4\".")
>, <Line: -      .noMore();
>, <Line: -    SourceFile file = PHPAstScanner.scanSingleFile(TEST_FILE, check);
>, <Line: -    checkMessagesVerifier.verify(file.getCheckMessages())
>, <Line: -      .noMore();
>]