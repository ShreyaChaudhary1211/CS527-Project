[<Line: +if($a) {           // NOK {{Put one space between this "if" keyword and the opening parenthesis.}}
>, <Line: +} else if  ($b) {  // NOK {{Put only one space between this "if" keyword and the opening parenthesis.}}
>, <Line: +} else{            // NOK {{Put one space between this "else" keyword and the opening curly brace.}}
>, <Line: +for ($i = 0;$i < 3;  $i++) {  // NOK {{Put exactly one space after each ";" character in the "for" statement.}}
>, <Line: +foreach ($a as  $array) {}          // NOK {{Put exactly one space after and before "as" in "foreach" statement.}}
>, <Line: +foreach ($a as $map =>  $value) {}  // NOK {{Put exactly one space after and before "=>" in "foreach" statement.}}
>, <Line: +foreach ($a as  $map  =>$value) {}  // NOK {{Put exactly one space after and before "as" and "=>" in "foreach" statement.}}
>, <Line: +foreach ($tokens as $token) {
>, <Line: +    array(
>, <Line: +      'listener'   => $this->listeners[$listenerClass],
>, <Line: +      'class'      => $listenerClass,
>, <Line: +      'tokenizers' => $tokenizers,
>, <Line: +     );
>, <Line: +}
>]
[<Line: -if($a) {           // NOK
>, <Line: -} else if  ($b) {  // NOK
>, <Line: -} else{            // NOK
>, <Line: -for ($i = 0;$i < 3;  $i++) {  // NOK
>, <Line: -foreach ($a as  $array) {}          // NOK
>, <Line: -foreach ($a as $map =>  $value) {}  // NOK
>, <Line: -foreach ($a as  $map  =>$value) {}  // NOK
>]