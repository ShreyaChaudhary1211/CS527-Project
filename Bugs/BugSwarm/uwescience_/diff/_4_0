[<Line: +import java.net.MalformedURLException;
>, <Line: +import java.net.URI;
>, <Line: +import java.net.URISyntaxException;
>, <Line: +    InputStream iOrderInputStream = openFileOrUrlInputStream(iOrderFileName);
>, <Line: +    InputStream grpInputStream = openFileOrUrlInputStream(grpFileName);
>, <Line: +    int ntot;
>, <Line: +      InputStream fStreamForBin = openFileOrUrlInputStream(binFileName);
>, <Line: +      BufferedInputStream bufferedStreamForBin = new BufferedInputStream(fStreamForBin);
>, <Line: +      if (fStreamForBin instanceof FileInputStream &&
>, <Line: +              proposed != ((FileInputStream)fStreamForBin).getChannel().size()) {
>, <Line: +  private static InputStream openFileOrUrlInputStream(String filenameOrUrl) throws DbException {
>, <Line: +    try {
>, <Line: +      return new URI(filenameOrUrl).toURL().openConnection().getInputStream();
>, <Line: +    } catch(IllegalArgumentException e) {
>, <Line: +      return openFileInputStream(filenameOrUrl);
>, <Line: +    } catch(URISyntaxException e) {
>, <Line: +      return openFileInputStream(filenameOrUrl);
>, <Line: +    } catch(MalformedURLException e) {
>, <Line: +      return openFileInputStream(filenameOrUrl);
>, <Line: +    } catch(IOException e) {
>, <Line: +      throw new DbException(e);
>, <Line: +    }
>, <Line: +  }
>, <Line: +  private static InputStream openFileInputStream(String filename) throws DbException {
>, <Line: +    try {
>, <Line: +      return new FileInputStream(filename);
>, <Line: +    } catch(FileNotFoundException e) {
>, <Line: +      throw new DbException(e);
>, <Line: +    }
>, <Line: +  }
>]
[<Line: -  /** The file stream for bin file. */
>, <Line: -  private transient FileInputStream fStreamForBin;
>, <Line: -  /** A buffer for the bin file. */
>, <Line: -  private transient BufferedInputStream bufferedStreamForBin;
>, <Line: -  /** InputStream for iOrder file. */
>, <Line: -  private transient InputStream iOrderInputStream = null;
>, <Line: -  /** InputStream for group number file. */
>, <Line: -  private transient InputStream grpInputStream = null;
>, <Line: -    try {
>, <Line: -      iOrderInputStream = new FileInputStream(iOrderFileName);
>, <Line: -      grpInputStream = new FileInputStream(grpFileName);
>, <Line: -    } catch (FileNotFoundException e) {
>, <Line: -      throw new DbException(e);
>, <Line: -    }
>, <Line: -    int ntot = -1;
>, <Line: -      fStreamForBin = new FileInputStream(binFileName);
>, <Line: -      bufferedStreamForBin = new BufferedInputStream(fStreamForBin);
>, <Line: -      if (proposed != fStreamForBin.getChannel().size()) {
>, <Line: -    } catch (FileNotFoundException e) {
>, <Line: -      throw new DbException(e);
>]