[]
[<Line: -package command;
>, <Line: -import java.io.IOException;
>, <Line: -import java.net.SocketTimeoutException;
>, <Line: -import java.net.UnknownHostException;
>, <Line: -import java.util.ArrayList;
>, <Line: -import javafx.application.Platform;
>, <Line: -import org.eclipse.egit.github.core.Label;
>, <Line: -import org.eclipse.egit.github.core.client.RequestException;
>, <Line: -import service.ServiceManager;
>, <Line: -import util.CollectionUtilities;
>, <Line: -import util.DialogMessage;
>, <Line: -import model.Model;
>, <Line: -import model.TurboIssue;
>, <Line: -/**
>, <Line: - * Updates issue parent on github. 
>, <Line: - * Also sets the parent of the given TurboIssue object to the given parent issue number
>, <Line: - * */
>, <Line: -public class TurboIssueSetParent extends TurboIssueCommand{
>, <Line: -	private Integer newParent;
>, <Line: -	private Integer previousParent;
>, <Line: -	public TurboIssueSetParent(Model model, TurboIssue issue, Integer parent){
>, <Line: -		super(model, issue);
>, <Line: -		newParent = parent;
>, <Line: -		previousParent = issue.getParentIssue();
>, <Line: -	}
>, <Line: -	private void logParentChange(Integer oldParent, Integer parent, boolean logRemarks){
>, <Line: -		lastOperationExecuted = IssueChangeLogger.logParentChange(issue, oldParent, parent);
>, <Line: -	}
>, <Line: -	private void setLocalIssueParent(Integer oldParent, Integer parent){
>, <Line: -		issue.setParentIssue(parent);
>, <Line: -		processInheritedLabels(oldParent, parent, issue);
>, <Line: -	}
>, <Line: -	private void updateGithubIssueParent(Integer oldParent, Integer parent) throws IOException{
>, <Line: -		ServiceManager service = ServiceManager.getInstance();
>, <Line: -		service.editIssueBody(issue.getId(), issue.buildGithubBody());
>, <Line: -		ArrayList<Label> ghLabels = CollectionUtilities.getGithubLabelList(issue.getLabels());
>, <Line: -		service.setLabelsForIssue(issue.getId(), ghLabels);
>, <Line: -	}
>, <Line: -	private boolean setIssueParent(Integer oldParent, Integer parent, boolean logRemarks){
>, <Line: -		setLocalIssueParent(oldParent, parent);
>, <Line: -		try {
>, <Line: -			updateGithubIssueParent(oldParent, parent);
>, <Line: -			logParentChange(oldParent, parent, logRemarks);
>, <Line: -			return true;
>, <Line: -		} catch (IOException e) {
>, <Line: -			setLocalIssueParent(parent, oldParent);
>, <Line: -			if(e instanceof SocketTimeoutException | e instanceof UnknownHostException){
>, <Line: -				Platform.runLater(()->{
>, <Line: -					DialogMessage.showWarningDialog("Internet Connection Timeout", 
>, <Line: -							"Timeout modifying parent for issue in GitHub, please check your internet connection.");
>, <Line: -				});
>, <Line: -				logger.info("Could not modify issue parent: " + e.getLocalizedMessage());
>, <Line: -			}else if(e instanceof RequestException){
>, <Line: -				Platform.runLater(()->{
>, <Line: -					DialogMessage.showWarningDialog("No repository permissions", 
>, <Line: -							"Cannot modify issue parent.");
>, <Line: -				});
>, <Line: -				logger.info("Could not modify issue parent: " + e.getLocalizedMessage());
>, <Line: -			}else{
>, <Line: -				logger.error(e.getLocalizedMessage(), e);
>, <Line: -			}
>, <Line: -			return false;
>, <Line: -		}
>, <Line: -	}
>, <Line: -	@Override
>, <Line: -	protected boolean performExecuteAction() {
>, <Line: -		isSuccessful = setIssueParent(previousParent, newParent, true);
>, <Line: -		return isSuccessful;
>, <Line: -	}
>, <Line: -	@Override
>, <Line: -	protected boolean performUndoAction() {
>, <Line: -		isUndone = setIssueParent(newParent, previousParent, false);
>, <Line: -		return isUndone;
>, <Line: -	}
>, <Line: -}
>]