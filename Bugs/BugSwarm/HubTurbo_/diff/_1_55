[]
[<Line: -package command;
>, <Line: -import java.io.IOException;
>, <Line: -import java.net.SocketTimeoutException;
>, <Line: -import java.net.UnknownHostException;
>, <Line: -import javafx.application.Platform;
>, <Line: -import org.eclipse.egit.github.core.client.RequestException;
>, <Line: -import service.ServiceManager;
>, <Line: -import util.DialogMessage;
>, <Line: -import model.Model;
>, <Line: -import model.TurboIssue;
>, <Line: -/**
>, <Line: - * Updates issue description on github. 
>, <Line: - * Also sets the description of the given TurboIssue object to the given description String.
>, <Line: - * */
>, <Line: -public class TurboIssueEditDescription extends TurboIssueCommand{
>, <Line: -	String newDescription;
>, <Line: -	public TurboIssueEditDescription(Model model, TurboIssue issue, String description){
>, <Line: -		super(model, issue);
>, <Line: -		newDescription = description;
>, <Line: -	}
>, <Line: -	@Override
>, <Line: -	protected boolean performExecuteAction() {
>, <Line: -		String oldDescription = issue.getDescription();
>, <Line: -		isSuccessful = editIssueDescription(oldDescription, newDescription);
>, <Line: -		return isSuccessful;
>, <Line: -	}
>, <Line: -	private void logDescriptionChange(String original, String edited){
>, <Line: -		String changeLog = IssueChangeLogger.logDescriptionChange(issue, original, edited);
>, <Line: -		lastOperationExecuted = changeLog;
>, <Line: -	}
>, <Line: -	private boolean editIssueDescription(String oldDesc, String newDesc){
>, <Line: -		issue.setDescription(newDesc);
>, <Line: -		try {
>, <Line: -			ServiceManager.getInstance().editIssueBody(issue.getId(), issue.buildGithubBody());
>, <Line: -			logDescriptionChange(oldDesc, newDesc);
>, <Line: -			return true;
>, <Line: -		} catch (IOException e) {
>, <Line: -			issue.setDescription(oldDesc);
>, <Line: -			if(e instanceof SocketTimeoutException | e instanceof UnknownHostException){
>, <Line: -				Platform.runLater(()->{
>, <Line: -					DialogMessage.showWarningDialog("Internet Connection Timeout", 
>, <Line: -							"Timeout modifying description for issue in GitHub, please check your internet connection.");
>, <Line: -				});
>, <Line: -				logger.info("Could not edit issue description: " + e.getLocalizedMessage());
>, <Line: -			}else if(e instanceof RequestException){
>, <Line: -				Platform.runLater(()->{
>, <Line: -					DialogMessage.showWarningDialog("No repository permissions", 
>, <Line: -							"Cannot modify issue description.");
>, <Line: -				});
>, <Line: -				logger.info("Could not edit issue description: " + e.getLocalizedMessage());
>, <Line: -			}else{
>, <Line: -				logger.error(e.getLocalizedMessage(), e);
>, <Line: -			}
>, <Line: -			return false;
>, <Line: -		}
>, <Line: -	}
>, <Line: -	@Override
>, <Line: -	protected boolean performUndoAction() {
>, <Line: -		return true;
>, <Line: -	}
>, <Line: -}
>]