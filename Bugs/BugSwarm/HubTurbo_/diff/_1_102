[]
[<Line: -package storage;
>, <Line: -import java.time.LocalDate;
>, <Line: -import java.time.LocalDateTime;
>, <Line: -import java.util.ArrayList;
>, <Line: -import java.util.Date;
>, <Line: -import java.util.List;
>, <Line: -import model.Model;
>, <Line: -import model.TurboIssue;
>, <Line: -import model.TurboLabel;
>, <Line: -import model.TurboMilestone;
>, <Line: -import model.TurboUser;
>, <Line: -public class CachedRepoData {
>, <Line: -	//last ETags
>, <Line: -	private String issuesETag = null;
>, <Line: -	private String collabsETag = null;
>, <Line: -	private String labelsETag = null;
>, <Line: -	private String milestonesETag = null;
>, <Line: -	private LocalDateTime issueCheckTime = null;
>, <Line: -	private List<TurboUser> collaborators = null;
>, <Line: -	private List<SerializableLabel> labels = null;
>, <Line: -	private List<SerializableMilestone> milestones = null; 
>, <Line: -	private List<SerializableIssue> issues = null;
>, <Line: -	public CachedRepoData(String issuesETag, String labelsETag, String milestonesETag, String collabsETag,
>, <Line: -              LocalDateTime issueCheckTime, List<TurboUser> collaborators, List<TurboLabel> labels,
>, <Line: -              List<TurboMilestone> milestones, List<TurboIssue> issues) {
>, <Line: -		this.issuesETag = issuesETag;
>, <Line: -		this.collabsETag = collabsETag;
>, <Line: -		this.labelsETag = labelsETag;
>, <Line: -		this.milestonesETag = milestonesETag;
>, <Line: -		this.issueCheckTime = issueCheckTime;
>, <Line: -		this.collaborators = collaborators;
>, <Line: -		this.labels = new ArrayList<>();
>, <Line: -		if (this.labels != null) {
>, <Line: -			for (TurboLabel label : labels) {
>, <Line: -				this.labels.add(new SerializableLabel(label));
>, <Line: -			}
>, <Line: -		}
>, <Line: -		this.milestones = new ArrayList<SerializableMilestone>();
>, <Line: -		if (this.milestones != null) {
>, <Line: -			for (TurboMilestone milestone : milestones) {
>, <Line: -				this.milestones.add(new SerializableMilestone(milestone));
>, <Line: -			}
>, <Line: -		}
>, <Line: -		this.issues = new ArrayList<SerializableIssue>();
>, <Line: -		if (this.issues != null) {
>, <Line: -			for (TurboIssue issue : issues) {
>, <Line: -				this.issues.add(new SerializableIssue(issue));
>, <Line: -			}
>, <Line: -		}
>, <Line: -	}
>, <Line: -	public String getIssuesETag() {
>, <Line: -		return issuesETag;
>, <Line: -	}
>, <Line: -	public String getCollaboratorsETag() {
>, <Line: -		return collabsETag;
>, <Line: -	}
>, <Line: -	public String getLabelsETag() {
>, <Line: -		return labelsETag;
>, <Line: -	}
>, <Line: -	public String getMilestonesETag() {
>, <Line: -		return milestonesETag;
>, <Line: -	}
>, <Line: -	public LocalDateTime getIssueCheckTime() {
>, <Line: -		return issueCheckTime;
>, <Line: -	}
>, <Line: -	public List<TurboUser> getCollaborators() {
>, <Line: -		if (this.collaborators == null) {
>, <Line: -			return new ArrayList<TurboUser>();
>, <Line: -		} else {
>, <Line: -			return this.collaborators;
>, <Line: -		}
>, <Line: -	}
>, <Line: -	public List<TurboLabel> getLabels() {
>, <Line: -		List<TurboLabel> turboLabelList = new ArrayList<TurboLabel>();
>, <Line: -		if (this.labels != null) {
>, <Line: -			for (SerializableLabel label: this.labels) {
>, <Line: -				turboLabelList.add(label.toTurboLabel());
>, <Line: -			}
>, <Line: -		}
>, <Line: -		return turboLabelList;
>, <Line: -	}
>, <Line: -	public List<TurboMilestone> getMilestones() {
>, <Line: -		List<TurboMilestone> turboMilestoneList = new ArrayList<TurboMilestone>();
>, <Line: -		if (this.milestones != null) {
>, <Line: -			for (SerializableMilestone milestone: this.milestones) {
>, <Line: -				turboMilestoneList.add(milestone.toTurboMilestone());
>, <Line: -			}
>, <Line: -		}
>, <Line: -		return turboMilestoneList;
>, <Line: -	}
>, <Line: -	public List<TurboIssue> getIssues(Model model) {
>, <Line: -		List<TurboIssue> turboIssueList = new ArrayList<TurboIssue>();
>, <Line: -		if (this.issues != null) {
>, <Line: -			for (SerializableIssue issue: this.issues) {
>, <Line: -				turboIssueList.add(issue.toTurboIssue(model));
>, <Line: -			}
>, <Line: -		}
>, <Line: -		return turboIssueList;
>, <Line: -	}
>, <Line: -	@Override
>, <Line: -	public String toString() {
>, <Line: -		return "Collaborators = " + collaborators + ", Labels = " + labels + ", Milestones = " + milestones + ", Issues = " + issues;
>, <Line: -	}
>, <Line: -}
>]