[<Line: +package backend.resource.serialization;
>, <Line: +import backend.resource.TurboIssue;
>, <Line: +import java.time.LocalDateTime;
>, <Line: +import java.util.ArrayList;
>, <Line: +import java.util.List;
>, <Line: +import java.util.Optional;
>, <Line: +public class SerializableIssue {
>, <Line: +	private int id = 0;
>, <Line: +	private String title = "";
>, <Line: +	private String creator = "";
>, <Line: +	private LocalDateTime createdAt = LocalDateTime.now();
>, <Line: +	private boolean isPullRequest = false;
>, <Line: +	private String description = "";
>, <Line: +	private LocalDateTime updatedAt = LocalDateTime.now();
>, <Line: +	private int commentCount = 0;
>, <Line: +	private boolean isOpen = true;
>, <Line: +	private Optional<String> assignee = Optional.empty();
>, <Line: +	private List<String> labels = new ArrayList<>();
>, <Line: +	private Optional<Integer> milestone = Optional.empty();
>, <Line: +	public SerializableIssue(TurboIssue issue) {
>, <Line: +		this.id = issue.getId();
>, <Line: +		this.title = issue.getTitle();
>, <Line: +		this.creator = issue.getCreator();
>, <Line: +		this.createdAt = issue.getCreatedAt();
>, <Line: +		this.isPullRequest = issue.isPullRequest();
>, <Line: +		this.description = issue.getDescription();
>, <Line: +		this.updatedAt = issue.getUpdatedAt();
>, <Line: +		this.commentCount = issue.getCommentCount();
>, <Line: +		this.isOpen = issue.isOpen();
>, <Line: +		this.assignee = issue.getAssignee();
>, <Line: +		this.labels = issue.getLabels();
>, <Line: +		this.milestone = issue.getMilestone();
>, <Line: +	}
>, <Line: +	public int getId() {
>, <Line: +		return id;
>, <Line: +	}
>, <Line: +	public String getTitle() {
>, <Line: +		return title;
>, <Line: +	}
>, <Line: +	public String getCreator() {
>, <Line: +		return creator;
>, <Line: +	}
>, <Line: +	public LocalDateTime getCreatedAt() {
>, <Line: +		return createdAt;
>, <Line: +	}
>, <Line: +	public boolean isPullRequest() {
>, <Line: +		return isPullRequest;
>, <Line: +	}
>, <Line: +	public String getDescription() {
>, <Line: +		return description;
>, <Line: +	}
>, <Line: +	public LocalDateTime getUpdatedAt() {
>, <Line: +		return updatedAt;
>, <Line: +	}
>, <Line: +	public int getCommentCount() {
>, <Line: +		return commentCount;
>, <Line: +	}
>, <Line: +	public boolean isOpen() {
>, <Line: +		return isOpen;
>, <Line: +	}
>, <Line: +	public Optional<String> getAssignee() {
>, <Line: +		return assignee;
>, <Line: +	}
>, <Line: +	public List<String> getLabels() {
>, <Line: +		return labels;
>, <Line: +	}
>, <Line: +	public Optional<Integer> getMilestone() {
>, <Line: +		return milestone;
>, <Line: +	}
>, <Line: +}
>]
[]