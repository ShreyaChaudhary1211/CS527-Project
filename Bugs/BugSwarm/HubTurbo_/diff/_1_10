[<Line: +package backend.github;
>, <Line: +import backend.IssueMetadata;
>, <Line: +import backend.interfaces.Repo;
>, <Line: +import backend.interfaces.TaskRunner;
>, <Line: +import github.TurboIssueEvent;
>, <Line: +import org.apache.logging.log4j.Logger;
>, <Line: +import org.eclipse.egit.github.core.Comment;
>, <Line: +import util.HTLog;
>, <Line: +import java.util.HashMap;
>, <Line: +import java.util.List;
>, <Line: +import java.util.Map;
>, <Line: +import java.util.stream.Collectors;
>, <Line: +public class DownloadMetadataTask extends GitHubRepoTask<Map<Integer, IssueMetadata>> {
>, <Line: +	private static final Logger logger = HTLog.get(DownloadMetadataTask.class);
>, <Line: +	private final String repoId;
>, <Line: +	private final List<Integer> issueIds;
>, <Line: +	public DownloadMetadataTask(TaskRunner taskRunner, Repo repo, String repoId,
>, <Line: +	                            List<Integer> issueIds) {
>, <Line: +		super(taskRunner, repo);
>, <Line: +		this.repoId = repoId;
>, <Line: +		this.issueIds = issueIds;
>, <Line: +	}
>, <Line: +	@Override
>, <Line: +	public void run() {
>, <Line: +		Map<Integer, IssueMetadata> result = new HashMap<>();
>, <Line: +		issueIds.forEach(id -> {
>, <Line: +			List<TurboIssueEvent> events = repo.getEvents(repoId, id);
>, <Line: +			List<Comment> comments = repo.getComments(repoId, id);
>, <Line: +			IssueMetadata metadata = new IssueMetadata(events, comments);
>, <Line: +			result.put(id, metadata);
>, <Line: +		});
>, <Line: +		logger.info(HTLog.format(repoId, "Downloaded " + result.entrySet().stream()
>, <Line: +			.map(entry -> "(" + entry.getValue().summarise() + ") for #" + entry.getKey())
>, <Line: +			.collect(Collectors.joining(", "))));
>, <Line: +		response.complete(result);
>, <Line: +	}
>, <Line: +}
>]
[]