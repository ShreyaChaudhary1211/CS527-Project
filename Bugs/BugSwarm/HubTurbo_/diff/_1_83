[]
[<Line: -package handler;
>, <Line: -import java.io.IOException;
>, <Line: -import java.lang.ref.WeakReference;
>, <Line: -import java.net.SocketTimeoutException;
>, <Line: -import java.net.UnknownHostException;
>, <Line: -import javafx.application.Platform;
>, <Line: -import model.Model;
>, <Line: -import model.TurboMilestone;
>, <Line: -import org.apache.logging.log4j.LogManager;
>, <Line: -import org.apache.logging.log4j.Logger;
>, <Line: -import org.eclipse.egit.github.core.Milestone;
>, <Line: -import org.eclipse.egit.github.core.client.RequestException;
>, <Line: -import service.ServiceManager;
>, <Line: -import util.DialogMessage;
>, <Line: -public class MilestonesHandler {
>, <Line: -	private static final Logger logger = LogManager.getLogger(MilestonesHandler.class.getName());
>, <Line: -	WeakReference<Model> modelRef;
>, <Line: -	public MilestonesHandler(Model model){
>, <Line: -		modelRef = new WeakReference<>(model);
>, <Line: -	}
>, <Line: -	public TurboMilestone createMilestone(TurboMilestone newMilestone) {
>, <Line: -		Milestone ghMilestone = newMilestone.toGhResource();
>, <Line: -		Milestone createdMilestone = null;
>, <Line: -		try {
>, <Line: -			createdMilestone = ServiceManager.getInstance().createMilestone(ghMilestone);
>, <Line: -		} catch (SocketTimeoutException | UnknownHostException e) {
>, <Line: -			Platform.runLater(()->{
>, <Line: -				DialogMessage.showWarningDialog("Cannot connect to GitHub", 
>, <Line: -						"Please check your internet connection and try again.");
>, <Line: -			});
>, <Line: -			logger.info("Could not connect to GitHub: " + e.getLocalizedMessage());
>, <Line: -		} catch (RequestException e){
>, <Line: -			Platform.runLater(()->{
>, <Line: -				DialogMessage.showWarningDialog("No repository permissions", 
>, <Line: -						"Could not create milestone for repository on GitHub.");
>, <Line: -			});
>, <Line: -			logger.info("Could not create milestone for repository on GitHub: " + e.getLocalizedMessage());
>, <Line: -		} catch (IOException e) {
>, <Line: -			logger.error(e.getLocalizedMessage(), e);
>, <Line: -		}
>, <Line: -		TurboMilestone returnedMilestone = new TurboMilestone(createdMilestone);
>, <Line: -		modelRef.get().addMilestone(returnedMilestone);
>, <Line: -		modelRef.get().refresh();
>, <Line: -		return returnedMilestone;
>, <Line: -	}
>, <Line: -	public void deleteMilestone(TurboMilestone milestone) {
>, <Line: -		try {
>, <Line: -			ServiceManager.getInstance().deleteMilestone(milestone.getNumber());
>, <Line: -			modelRef.get().deleteMilestone(milestone);
>, <Line: -			modelRef.get().refresh();
>, <Line: -		} catch (SocketTimeoutException | UnknownHostException e) {
>, <Line: -			Platform.runLater(()->{
>, <Line: -				DialogMessage.showWarningDialog("Cannot connect to GitHub", 
>, <Line: -						"Please check your internet connection and try again.");
>, <Line: -			});
>, <Line: -			logger.info("Could not connect to GitHub: " + e.getLocalizedMessage());
>, <Line: -		} catch (RequestException e){
>, <Line: -			Platform.runLater(()->{
>, <Line: -				DialogMessage.showWarningDialog("No repository permissions", 
>, <Line: -						"Could not delete milestone from Github.");
>, <Line: -			});
>, <Line: -			logger.info("Could not delete milestone from GitHub: " + e.getLocalizedMessage());
>, <Line: -		} catch (IOException e) {
>, <Line: -			logger.error(e.getLocalizedMessage(), e);
>, <Line: -		}
>, <Line: -	}
>, <Line: -	public void updateMilestone(TurboMilestone editedMilestone) {
>, <Line: -		Milestone ghMilestone = editedMilestone.toGhResource();
>, <Line: -		try {
>, <Line: -			ServiceManager.getInstance().editMilestone(ghMilestone);
>, <Line: -			modelRef.get().refresh();
>, <Line: -		} catch (SocketTimeoutException | UnknownHostException e) {
>, <Line: -			Platform.runLater(()->{
>, <Line: -				DialogMessage.showWarningDialog("Cannot connect to GitHub", 
>, <Line: -						"Please check your internet connection and try again.");
>, <Line: -			});
>, <Line: -			logger.info("Could not connect to GitHub: " + e.getLocalizedMessage());
>, <Line: -		} catch (RequestException e){
>, <Line: -			Platform.runLater(()->{
>, <Line: -				DialogMessage.showWarningDialog("No repository permissions", 
>, <Line: -						"Cannot update milestone.");
>, <Line: -			});
>, <Line: -			logger.info("Could not update milestone on GitHub: " + e.getLocalizedMessage());
>, <Line: -		} catch (IOException e) {
>, <Line: -			logger.error(e.getLocalizedMessage(), e);
>, <Line: -		}
>, <Line: -	}
>, <Line: -}
>]