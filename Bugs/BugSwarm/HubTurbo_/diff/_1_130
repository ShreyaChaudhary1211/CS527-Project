[]
[<Line: -package util;
>, <Line: -import java.util.ArrayList;
>, <Line: -import java.util.HashMap;
>, <Line: -import java.util.HashSet;
>, <Line: -import java.util.List;
>, <Line: -import java.util.stream.Collectors;
>, <Line: -import model.TurboIssue;
>, <Line: -import model.TurboLabel;
>, <Line: -import model.TurboMilestone;
>, <Line: -import model.TurboUser;
>, <Line: -import org.eclipse.egit.github.core.Issue;
>, <Line: -import org.eclipse.egit.github.core.Label;
>, <Line: -import org.eclipse.egit.github.core.Milestone;
>, <Line: -import org.eclipse.egit.github.core.User;
>, <Line: -import service.ServiceManager;
>, <Line: -public class CollectionUtilities {
>, <Line: -	public static final String REMOVED_TAG = "removed";
>, <Line: -	public static final String ADDED_TAG = "added";
>, <Line: -	/**
>, <Line: -	 * Gets the changes made to the a list of items
>, <Line: -	 * 
>, <Line: -	 * @return HashMap the a list of items removed from the original list and a
>, <Line: -	 *         list of items added to the original list
>, <Line: -	 * */
>, <Line: -	public static <T> HashMap<String, HashSet<T>> getChangesToList(
>, <Line: -			List<T> original, List<T> edited) {
>, <Line: -		HashMap<String, HashSet<T>> changeSet = new HashMap<String, HashSet<T>>();
>, <Line: -		HashSet<T> removed = new HashSet<T>(original);
>, <Line: -		HashSet<T> added = new HashSet<T>(edited);
>, <Line: -		removed.removeAll(edited);
>, <Line: -		added.removeAll(original);
>, <Line: -		changeSet.put(REMOVED_TAG, removed);
>, <Line: -		changeSet.put(ADDED_TAG, added);
>, <Line: -		return changeSet;
>, <Line: -	}
>, <Line: -	public static ArrayList<TurboIssue> getHubTurboIssueList(List<Issue> issues) {
>, <Line: -		ArrayList<TurboIssue> buffer = new ArrayList<>();
>, <Line: -		for (Issue ghIssue : issues) {
>, <Line: -			buffer.add(new TurboIssue(ghIssue, ServiceManager.getInstance()
>, <Line: -					.getModel()));
>, <Line: -		}
>, <Line: -		return buffer;
>, <Line: -	}
>, <Line: -	public static ArrayList<TurboLabel> getHubTurboLabelList(List<Label> labels) {
>, <Line: -		ArrayList<TurboLabel> buffer = new ArrayList<>();
>, <Line: -		for (Label ghLabel : labels) {
>, <Line: -			buffer.add(new TurboLabel(ghLabel));
>, <Line: -		}
>, <Line: -		return buffer;
>, <Line: -	}
>, <Line: -	public static ArrayList<TurboMilestone> getHubTurboMilestoneList(
>, <Line: -			List<Milestone> milestones) {
>, <Line: -		ArrayList<TurboMilestone> buffer = new ArrayList<>();
>, <Line: -		for (Milestone ghMilestone : milestones) {
>, <Line: -			buffer.add(new TurboMilestone(ghMilestone));
>, <Line: -		}
>, <Line: -		return buffer;
>, <Line: -	}
>, <Line: -	public static ArrayList<TurboUser> getHubTurboUserList(List<User> users){
>, <Line: -		ArrayList<TurboUser> buffer = new ArrayList<>();
>, <Line: -		for (User ghUser : users) {
>, <Line: -			buffer.add(new TurboUser(ghUser));
>, <Line: -		}
>, <Line: -		return buffer;
>, <Line: -	}
>, <Line: -	public static ArrayList<Label> getGithubLabelList(List<TurboLabel> labels) {
>, <Line: -		ArrayList<Label> githubLabels = new ArrayList<Label>();
>, <Line: -		for (TurboLabel label : labels) {
>, <Line: -			githubLabels.add(label.toGhResource());
>, <Line: -		}
>, <Line: -		return githubLabels;
>, <Line: -	}
>, <Line: -	public static List<TurboLabel> deepCopyLabels(List<TurboLabel> labels) {
>, <Line: -	    return labels.stream().map(l -> new TurboLabel(l)).collect(Collectors.toList());
>, <Line: -	}
>, <Line: -	public static List<TurboMilestone> deepCopyMilestones(List<TurboMilestone> milestones) {
>, <Line: -	    return milestones.stream().map(m -> new TurboMilestone(m)).collect(Collectors.toList());
>, <Line: -	}
>, <Line: -	public static List<TurboUser> deepCopyUsers(List<TurboUser> users) {
>, <Line: -	    return users.stream().map(u -> new TurboUser(u)).collect(Collectors.toList());
>, <Line: -	}
>, <Line: -	public static List<TurboIssue> deepCopyIssues(List<TurboIssue> issues) {
>, <Line: -	    return issues.stream().map(i -> new TurboIssue(i)).collect(Collectors.toList());
>, <Line: -	}
>, <Line: -}
>]