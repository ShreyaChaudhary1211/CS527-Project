[<Line: +package backend.github;
>, <Line: +import backend.IssueMetadata;
>, <Line: +import backend.UserCredentials;
>, <Line: +import backend.interfaces.Repo;
>, <Line: +import backend.interfaces.RepoSource;
>, <Line: +import backend.resource.Model;
>, <Line: +import org.apache.logging.log4j.Logger;
>, <Line: +import util.HTLog;
>, <Line: +import java.util.List;
>, <Line: +import java.util.Map;
>, <Line: +import java.util.concurrent.CompletableFuture;
>, <Line: +public class GitHubSource extends RepoSource {
>, <Line: +	private static final Logger logger = HTLog.get(GitHubSource.class);
>, <Line: +	private final Repo gitHub = new GitHubRepo();
>, <Line: +	@Override
>, <Line: +	public String getName() {
>, <Line: +		return "GitHub";
>, <Line: +	}
>, <Line: +	@Override
>, <Line: +	public CompletableFuture<Boolean> login(UserCredentials credentials) {
>, <Line: +		CompletableFuture<Boolean> response = new CompletableFuture<>();
>, <Line: +		execute(() -> {
>, <Line: +			boolean success = gitHub.login(credentials);
>, <Line: +			logger.info(String.format("%s to %s as %s",
>, <Line: +				success ? "Logged in" : "Failed to log in",
>, <Line: +				getName(), credentials.username));
>, <Line: +			response.complete(success);
>, <Line: +		});
>, <Line: +		return response;
>, <Line: +	}
>, <Line: +	@Override
>, <Line: +	public CompletableFuture<Model> downloadRepository(String repoId) {
>, <Line: +		return addTask(new DownloadRepoTask(this, gitHub, repoId)).response;
>, <Line: +	}
>, <Line: +	@Override
>, <Line: +	public CompletableFuture<Model> updateModel(Model model) {
>, <Line: +		return addTask(new UpdateModelTask(this, gitHub, model)).response;
>, <Line: +	}
>, <Line: +	@Override
>, <Line: +	public CompletableFuture<Map<Integer, IssueMetadata>> downloadMetadata(String repoId, List<Integer> issues) {
>, <Line: +		return addTask(new DownloadMetadataTask(this, gitHub, repoId, issues)).response;
>, <Line: +	}
>, <Line: +	@Override
>, <Line: +	public CompletableFuture<Boolean> isRepositoryValid(String repoId) {
>, <Line: +		return addTask(new RepoValidityTask(this, gitHub, repoId)).response;
>, <Line: +	}
>, <Line: +}
>]
[]