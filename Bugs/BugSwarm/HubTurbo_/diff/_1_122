[<Line: +import backend.interfaces.IModel;
>, <Line: +import javafx.event.Event;
>, <Line: +	protected final IModel model;
>, <Line: +	public Column(IModel model, ColumnControl parentColumnControl, int columnIndex) {
>, <Line: +		setOnDragDone(Event::consume);
>, <Line: +	public abstract void close();
>]
[<Line: -import javafx.stage.Stage;
>, <Line: -import model.Model;
>, <Line: -import command.TurboCommandExecutor;
>, <Line: -	protected final Model model;
>, <Line: -	protected TurboCommandExecutor dragAndDropExecutor;
>, <Line: -	public Column(Stage mainStage, Model model, ColumnControl parentColumnControl, int columnIndex, TurboCommandExecutor dragAndDropExecutor) {
>, <Line: -		this.dragAndDropExecutor = dragAndDropExecutor;
>, <Line: -		setOnDragDone((event) -> {
>, <Line: -			event.consume();
>, <Line: -		});
>, <Line: -	}
>, <Line: -	public boolean isThisColumnSelected() {
>, <Line: -		return parentColumnControl.getCurrentlySelectedColumn().isPresent()
>, <Line: -			&& parentColumnControl.getCurrentlySelectedColumn().get() == columnIndex;
>, <Line: -	public abstract void deselect();
>]