[<Line: +package guitests;
>, <Line: +import com.google.common.util.concurrent.SettableFuture;
>, <Line: +import javafx.scene.Parent;
>, <Line: +import javafx.scene.control.TextField;
>, <Line: +import javafx.scene.input.KeyCode;
>, <Line: +import javafx.stage.Stage;
>, <Line: +import org.junit.Before;
>, <Line: +import org.junit.Test;
>, <Line: +import org.loadui.testfx.GuiTest;
>, <Line: +import org.loadui.testfx.utils.FXTestUtils;
>, <Line: +import ui.UI;
>, <Line: +import java.util.concurrent.TimeUnit;
>, <Line: +import static org.junit.Assert.assertNotNull;
>, <Line: +import static org.loadui.testfx.controls.Commons.hasText;
>, <Line: +public class TestGuiTest2 extends GuiTest {
>, <Line: +    private static final SettableFuture<Stage> stageFuture = SettableFuture.create();
>, <Line: +    protected static class TestUI extends UI {
>, <Line: +        public TestUI() {
>, <Line: +            super();
>, <Line: +        }
>, <Line: +        @Override
>, <Line: +        public void start(Stage primaryStage) {
>, <Line: +            super.start(primaryStage);
>, <Line: +            stageFuture.set(primaryStage);
>, <Line: +        }
>, <Line: +    }
>, <Line: +    @Before
>, <Line: +    @Override
>, <Line: +    public void setupStage() throws Throwable {
>, <Line: +        FXTestUtils.launchApp(TestUI.class, "--test=true"); // You can add start parameters here
>, <Line: +        try {
>, <Line: +            stage = targetWindow(stageFuture.get(25, TimeUnit.SECONDS));
>, <Line: +            FXTestUtils.bringToFront(stage);
>, <Line: +        } catch (Exception e) {
>, <Line: +            throw new RuntimeException("Unable to show stage", e);
>, <Line: +        }
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    protected Parent getRootNode() {
>, <Line: +        return stage.getScene().getRoot();
>, <Line: +    }
>, <Line: +    @Test
>, <Line: +    public void testBadLoginAgain() throws InterruptedException {
>, <Line: +        TextField repoOwnerField = find("#repoOwnerField");
>, <Line: +        doubleClick(repoOwnerField);
>, <Line: +        type("HubTurbo").push(KeyCode.TAB);
>, <Line: +        type("HubTurbo").push(KeyCode.TAB);
>, <Line: +        type("test").push(KeyCode.TAB);
>, <Line: +        type("test");
>, <Line: +        click("Sign in");
>, <Line: +        sleep(2000);
>, <Line: +        assertNotNull(hasText("Failed to sign in. Please try again."));
>, <Line: +    }
>, <Line: +}>]
[]