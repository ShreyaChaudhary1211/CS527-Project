[<Line: +package backend.interfaces;
>, <Line: +import backend.UserCredentials;
>, <Line: +import backend.resource.TurboIssue;
>, <Line: +import backend.resource.TurboLabel;
>, <Line: +import backend.resource.TurboMilestone;
>, <Line: +import backend.resource.TurboUser;
>, <Line: +import github.TurboIssueEvent;
>, <Line: +import org.apache.commons.lang3.tuple.ImmutablePair;
>, <Line: +import org.apache.commons.lang3.tuple.ImmutableTriple;
>, <Line: +import org.eclipse.egit.github.core.Comment;
>, <Line: +import java.util.Date;
>, <Line: +import java.util.List;
>, <Line: +public interface Repo {
>, <Line: +	public boolean login(UserCredentials credentials);
>, <Line: +	public List<TurboIssue> getIssues(String repoId);
>, <Line: +	public List<TurboLabel> getLabels(String repoId);
>, <Line: +	public List<TurboMilestone> getMilestones(String repoId);
>, <Line: +	public List<TurboUser> getCollaborators(String repoId);
>, <Line: +	// Returns tuples in order to be maximally generic
>, <Line: +	public ImmutableTriple<List<TurboIssue>, String, Date>
>, <Line: +		getUpdatedIssues(String repoId, String ETag, Date lastCheckTime);
>, <Line: +	public ImmutablePair<List<TurboLabel>, String> getUpdatedLabels(String repoId, String ETag);
>, <Line: +	public ImmutablePair<List<TurboMilestone>, String> getUpdatedMilestones(String repoId, String ETag);
>, <Line: +	public ImmutablePair<List<TurboUser>, String> getUpdatedCollaborators(String repoId, String ETag);
>, <Line: +	public List<TurboIssueEvent> getEvents(String repoId, int issueId);
>, <Line: +	public List<Comment> getComments(String repoId, int issueId);
>, <Line: +	public boolean isRepositoryValid(String repoId);
>, <Line: +}
>]
[]