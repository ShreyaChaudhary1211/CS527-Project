[<Line: +import filter.ParseException;
>, <Line: +import filter.Parser;
>, <Line: +import java.util.ArrayList;
>, <Line: +import java.util.List;
>, <Line: +import java.util.function.Function;
>, <Line: +import java.util.regex.Matcher;
>, <Line: +import java.util.regex.Pattern;
>, <Line: +	private List<String> keywords = new ArrayList<>();
>, <Line: +			Platform.runLater(() -> positionCaret(caret+1));
>, <Line: +		for (String candidateWord : keywords) {
>, <Line: +			if (candidateWord.startsWith(word)) {
>, <Line: +				performCompletionOfWord(e, word, candidateWord);
>, <Line: +				break;
>, <Line: +			}
>, <Line: +		}
>, <Line: +	}
>, <Line: +	private void performCompletionOfWord(KeyEvent e, String word, String candidateWord) {
>, <Line: +		e.consume();
>, <Line: +		int caret = getCaretPosition();
>, <Line: +		if (getSelectedText().isEmpty()) {
>, <Line: +			String before = getText().substring(0, caret);
>, <Line: +			String insertion = e.getCharacter();
>, <Line: +			String after = getText().substring(caret, getText().length());
>, <Line: +			String addition = candidateWord.substring(word.length());
>, <Line: +			setText(before + insertion + addition + after);
>, <Line: +			Platform.runLater(() -> {
>, <Line: +				selectRange(
>, <Line: +					before.length() + insertion.length() + addition.length(),
>, <Line: +					before.length() + insertion.length());
>, <Line: +			});
>, <Line: +		} else {
>, <Line: +			IndexRange sel = getSelection();
>, <Line: +//			boolean additionAfter = sel.getEnd() == caret;
>, <Line: +			int start = Math.min(sel.getStart(), sel.getEnd());
>, <Line: +			int end = Math.max(sel.getStart(), sel.getEnd());
>, <Line: +			String before = getText().substring(0, start);
>, <Line: +			String after = getText().substring(end, getText().length());
>, <Line: +//			String selection = getText().substring(start, end);
>, <Line: +			String insertion = e.getCharacter();
>, <Line: +			String addition = candidateWord.substring(word.length());
>, <Line: +			setText(before + insertion + addition + after);
>, <Line: +			Platform.runLater(() -> selectRange(
>, <Line: +				before.length() + insertion.length() + addition.length(),
>, <Line: +				before.length() + insertion.length()));
>, <Line: +	public void setKeywords(List<String> words) {
>, <Line: +		keywords = new ArrayList<>(words);
>]
[<Line: -import java.util.ArrayList;
>, <Line: -import java.util.Arrays;
>, <Line: -import java.util.List;
>, <Line: -import java.util.function.Function;
>, <Line: -import java.util.regex.Matcher;
>, <Line: -import java.util.regex.Pattern;
>, <Line: -import filter.ParseException;
>, <Line: -import filter.Parser;
>, <Line: -    private ArrayList<String> words = new ArrayList<>(Arrays.asList(
>, <Line: -    		"label", "milestone",
>, <Line: -    		"involves", "assignee", "author",
>, <Line: -    		"title", "body",
>, <Line: -    		"is", "issue", "pr", "merged", "unmerged",
>, <Line: -    		"no", "type", "has",
>, <Line: -    		"state", "open", "closed",
>, <Line: -    		"created",
>, <Line: -    		"updated"));
>, <Line: -			Platform.runLater(() -> {
>, <Line: -				positionCaret(caret+1);
>, <Line: -			});
>, <Line: -		for (int i=0; i<words.size(); i++) {
>, <Line: -			if (words.get(i).startsWith(word)) {
>, <Line: -				e.consume();
>, <Line: -				int caret = getCaretPosition();
>, <Line: -				if (getSelectedText().isEmpty()) {
>, <Line: -					String before = getText().substring(0, caret);
>, <Line: -					String insertion = e.getCharacter();
>, <Line: -					String after = getText().substring(caret, getText().length());
>, <Line: -					String addition = words.get(i).substring(word.length());
>, <Line: -					setText(before + insertion + addition + after);
>, <Line: -					Platform.runLater(() -> {
>, <Line: -						selectRange(
>, <Line: -								before.length() + insertion.length() + addition.length(),
>, <Line: -								before.length() + insertion.length());
>, <Line: -					});
>, <Line: -				} else {
>, <Line: -					IndexRange sel = getSelection();
>, <Line: -//							boolean additionAfter = sel.getEnd() == caret;
>, <Line: -					int start = Math.min(sel.getStart(), sel.getEnd());
>, <Line: -					int end = Math.max(sel.getStart(), sel.getEnd());
>, <Line: -					String before = getText().substring(0, start);
>, <Line: -					String after = getText().substring(end, getText().length());
>, <Line: -//							String selection = getText().substring(start, end);
>, <Line: -					String insertion = e.getCharacter();
>, <Line: -					String addition = words.get(i).substring(word.length());
>, <Line: -					setText(before + insertion + addition + after);
>, <Line: -					Platform.runLater(() -> {
>, <Line: -						selectRange(
>, <Line: -								before.length() + insertion.length() + addition.length(),
>, <Line: -								before.length() + insertion.length());
>, <Line: -					});
>, <Line: -				}
>, <Line: -				break;
>, <Line: -			}
>, <Line: -	public void addKeywords(String ... keywords) {
>, <Line: -		words.addAll(Arrays.asList(keywords));
>, <Line: -	}
>, <Line: -	public void addKeywords(List<String> keywords) {
>, <Line: -		words.addAll(keywords);
>]