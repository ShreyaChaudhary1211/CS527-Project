[<Line: +package de.charite.compbio.jannovar.cmd.annotate_pos;
>, <Line: +import java.util.ArrayList;
>, <Line: +import java.util.List;
>, <Line: +import java.util.function.BiFunction;
>, <Line: +import de.charite.compbio.jannovar.UncheckedJannovarException;
>, <Line: +import de.charite.compbio.jannovar.cmd.CommandLineParsingException;
>, <Line: +import de.charite.compbio.jannovar.cmd.JannovarAnnotationOptions;
>, <Line: +import de.charite.compbio.jannovar.cmd.JannovarBaseOptions;
>, <Line: +import net.sourceforge.argparse4j.impl.Arguments;
>, <Line: +import net.sourceforge.argparse4j.inf.ArgumentGroup;
>, <Line: +import net.sourceforge.argparse4j.inf.ArgumentParser;
>, <Line: +import net.sourceforge.argparse4j.inf.Namespace;
>, <Line: +import net.sourceforge.argparse4j.inf.Subparser;
>, <Line: +import net.sourceforge.argparse4j.inf.Subparsers;
>, <Line: +/**
>, <Line: + * Options for the <tt>annotate-pos</tt> comman
>, <Line: + * 
>, <Line: + * @author <a href="mailto:manuel.holtgrewe@bihealth.de">Manuel Holtgrewe</a>
>, <Line: + */
>, <Line: +public class JannovarAnnotatePosOptions extends JannovarAnnotationOptions {
>, <Line: +	/** List of Strings with genomic changes to parse */
>, <Line: +	private List<String> genomicChanges = new ArrayList<>();
>, <Line: +	/**
>, <Line: +	 * Setup {@link ArgumentParser}
>, <Line: +	 * 
>, <Line: +	 * @param subParsers
>, <Line: +	 *            {@link Subparsers} to setup
>, <Line: +	 */
>, <Line: +	public static void setupParser(Subparsers subParsers) {
>, <Line: +		BiFunction<String[], Namespace, AnnotatePositionCommand> handler = (argv, args) -> {
>, <Line: +			try {
>, <Line: +				return new AnnotatePositionCommand(argv, args);
>, <Line: +			} catch (CommandLineParsingException e) {
>, <Line: +				throw new UncheckedJannovarException("Could not parse command line", e);
>, <Line: +			}
>, <Line: +		};
>, <Line: +		Subparser subParser = subParsers.addParser("annotate-pos", true)
>, <Line: +				.help("annotate genomic changes given on the command line").setDefault("cmd", handler);
>, <Line: +		subParser.description("Perform annotation of genomic changes given on the command line");
>, <Line: +		subParser.addArgument("-d", "--database").help("Path to database .ser file").required(true);
>, <Line: +		subParser.addArgument("-c", "--genomic-change").help("Genomic change to annotate, you can give multiple ones")
>, <Line: +				.action(Arguments.append()).required(true);
>, <Line: +		ArgumentGroup optionalGroup = subParser.addArgumentGroup("Optional Arguments");
>, <Line: +		optionalGroup.addArgument("--show-all").help("Show all effects").setDefault(false);
>, <Line: +		optionalGroup.addArgument("--no-3-prime-shifting").help("Disable shifting towards 3' of transcript")
>, <Line: +				.dest("3_prime_shifting").setDefault(true).action(Arguments.storeFalse());
>, <Line: +		optionalGroup.addArgument("--3-letter-amino-acids").help("Enable usage of 3 letter amino acid codes")
>, <Line: +				.setDefault(false).action(Arguments.storeTrue());
>, <Line: +		subParser.epilog("Example: java -jar Jannovar.jar annotate-pos -d hg19_refseq.ser -c 'chr1:12345C>A'");
>, <Line: +		JannovarBaseOptions.setupParser(subParser);
>, <Line: +	}
>, <Line: +	@Override
>, <Line: +	public void setFromArgs(Namespace args) throws CommandLineParsingException {
>, <Line: +		super.setFromArgs(args);
>, <Line: +		genomicChanges = args.getList("genomic_change");
>, <Line: +	}
>, <Line: +	public List<String> getGenomicChanges() {
>, <Line: +		return genomicChanges;
>, <Line: +	}
>, <Line: +	public void setGenomicChanges(List<String> genomicChanges) {
>, <Line: +		this.genomicChanges = genomicChanges;
>, <Line: +	}
>, <Line: +	@Override
>, <Line: +	public String toString() {
>, <Line: +		return "JannovarAnnotatePosOptions [genomicChanges=" + genomicChanges + ", isUseThreeLetterAminoAcidCode()="
>, <Line: +				+ isUseThreeLetterAminoAcidCode() + ", isNt3PrimeShifting()=" + isNt3PrimeShifting()
>, <Line: +				+ ", getDatabaseFilePath()=" + getDatabaseFilePath() + ", isReportProgress()=" + isReportProgress()
>, <Line: +				+ ", getHttpProxy()=" + getHttpProxy() + ", getHttpsProxy()=" + getHttpsProxy() + ", getFtpProxy()="
>, <Line: +				+ getFtpProxy() + "]";
>, <Line: +	}
>, <Line: +}
>]
[]