[<Line: +package de.charite.compbio.jannovar.filter.facade;
>, <Line: +import de.charite.compbio.jannovar.filter.impl.gt.GenotypeFilterAnnotator;
>, <Line: +import htsjdk.variant.variantcontext.Genotype;
>, <Line: +import htsjdk.variant.variantcontext.VariantContext;
>, <Line: +import htsjdk.variant.variantcontext.VariantContextBuilder;
>, <Line: +import java.util.ArrayList;
>, <Line: +/**
>, <Line: + * Perform annotation (sof-filtering) based on coverage/alternative allele fraction/genotype call
>, <Line: + * quality
>, <Line: + *
>, <Line: + * @author <a href="mailto:manuel.holtgrewe@bihealth.de">Manuel Holtgrewe</a>
>, <Line: + */
>, <Line: +public class GenotypeThresholdFilterAnnotator {
>, <Line: +	/** Configuration for the threshold-based filter */
>, <Line: +	private final ThresholdFilterOptions options;
>, <Line: +	/** Helper for genotype-wide application of filters */
>, <Line: +	private final GenotypeFilterAnnotator gtAnnotator;
>, <Line: +	public GenotypeThresholdFilterAnnotator(ThresholdFilterOptions options) {
>, <Line: +		this.options = options;
>, <Line: +		this.gtAnnotator = new GenotypeFilterAnnotator(this.options);
>, <Line: +	}
>, <Line: +	/**
>, <Line: +	 * Annotate VariantContext with the threshold-based filters.
>, <Line: +	 *
>, <Line: +	 * @param vc the {@link VariantContext} to annotate
>, <Line: +	 * @return copy of <code>vc</code> with applied annotations
>, <Line: +	 */
>, <Line: +	public VariantContext annotateVariantContext(VariantContext vc) {
>, <Line: +		VariantContextBuilder builder = new VariantContextBuilder(vc);
>, <Line: +		annotateGenotypes(builder, vc);
>, <Line: +		return builder.make();
>, <Line: +	}
>, <Line: +	/**
>, <Line: +	 * Annotate genotypes individually in <code>vc</code>
>, <Line: +	 * 
>, <Line: +	 * @param builder the {@link VariantContextBuilder} used for building variant
>, <Line: +	 * @param vc {@link VariantContext} to annotate
>, <Line: +	 */
>, <Line: +	private void annotateGenotypes(VariantContextBuilder builder, VariantContext vc) {
>, <Line: +		ArrayList<Genotype> gts = new ArrayList<>();
>, <Line: +		for (Genotype gt : vc.getGenotypes())
>, <Line: +			gts.add(gtAnnotator.gtWithAppliedFilters(gt));
>, <Line: +		builder.genotypes(gts);
>, <Line: +	}
>, <Line: +}
>]
[]