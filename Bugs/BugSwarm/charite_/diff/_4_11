[]
[<Line: -package de.charite.compbio.jannovar.cmd.annotate_pos;
>, <Line: -import java.io.PrintWriter;
>, <Line: -import org.apache.commons.cli.CommandLine;
>, <Line: -import org.apache.commons.cli.HelpFormatter;
>, <Line: -import org.apache.commons.cli.Option;
>, <Line: -import org.apache.commons.cli.ParseException;
>, <Line: -import de.charite.compbio.jannovar.JannovarOptions;
>, <Line: -import de.charite.compbio.jannovar.cmd.HelpRequestedException;
>, <Line: -import de.charite.compbio.jannovar.cmd.JannovarAnnotationCommandLineParser;
>, <Line: -/**
>, <Line: - * Parse the command line for the "annotate-position" command.
>, <Line: - *
>, <Line: - * @author <a href="mailto:manuel.holtgrewe@charite.de">Manuel Holtgrewe</a>
>, <Line: - */
>, <Line: -public class AnnotatePositionCommandLineParser extends JannovarAnnotationCommandLineParser {
>, <Line: -	@Override
>, <Line: -	public JannovarOptions parse(String[] argv) throws ParseException, HelpRequestedException {
>, <Line: -		// Parse the command line.
>, <Line: -		CommandLine cmd = parser.parse(helpOptions, argv, true);
>, <Line: -		printHelpIfOptionIsSet(cmd);
>, <Line: -		cmd = parser.parse(options, argv);
>, <Line: -		printHelpIfOptionIsSet(cmd);
>, <Line: -		// Fill the resulting JannovarOptions.
>, <Line: -		JannovarOptions result = new JannovarOptions();
>, <Line: -		result.printProgressBars = true;
>, <Line: -		result.command = JannovarOptions.Command.ANNOTATE_POSITION;
>, <Line: -		if (cmd.hasOption("verbose"))
>, <Line: -			result.verbosity = 2;
>, <Line: -		if (cmd.hasOption("very-verbose"))
>, <Line: -			result.verbosity = 3;
>, <Line: -		result.dataFile = cmd.getOptionValue("database");
>, <Line: -		result.useThreeLetterAminoAcidCode = cmd.hasOption("three-letter-amino-acid-code");
>, <Line: -		for (String change : cmd.getOptionValues("change")) {
>, <Line: -			result.chromosomalChanges.add(change);
>, <Line: -		}
>, <Line: -		return result;
>, <Line: -	}
>, <Line: -	@Override
>, <Line: -	protected void initializeParser() {
>, <Line: -		super.initializeParser();
>, <Line: -		options.addOption(
>, <Line: -				Option.builder("c").longOpt("change").required().hasArgs().desc("Genomic variant change").build());
>, <Line: -		options.addOption(new Option(null, "three-letter-amino-acid-code", false,
>, <Line: -				"use three-letter amino acid code instead of one-letter code"));
>, <Line: -	}
>, <Line: -	public void printHelp() {
>, <Line: -		final String HEADER = new StringBuilder().append("Jannovar Command: annotate-pos\n\n")
>, <Line: -				.append("Use this command to annotate a chromosomal change.\n\n")
>, <Line: -				.append("Usage: java -jar de.charite.compbio.jannovar.jar annotate-pos [options] -d <database.ser> -c <CHANGE>\n\n")
>, <Line: -				.toString();
>, <Line: -		final String FOOTER = new StringBuilder()
>, <Line: -				.append("\n\nExample: java -jar de.charite.compbio.jannovar.jar annotate-pos -d data/hg19_ucsc.ser -c 'chr1:12345C>A'\n\n")
>, <Line: -				.toString();
>, <Line: -		System.err.print(HEADER);
>, <Line: -		HelpFormatter hf = new HelpFormatter();
>, <Line: -		PrintWriter pw = new PrintWriter(System.err, true);
>, <Line: -		hf.printOptions(pw, 78, options, 2, 2);
>, <Line: -		System.err.print(FOOTER);
>, <Line: -	}
>, <Line: -}
>]