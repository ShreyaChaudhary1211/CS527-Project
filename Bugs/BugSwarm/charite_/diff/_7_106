[<Line: +package de.charite.compbio.jannovar.mendel.bridge;
>, <Line: +import htsjdk.variant.vcf.VCFHeader;
>, <Line: +import htsjdk.variant.vcf.VCFHeaderLineCount;
>, <Line: +import htsjdk.variant.vcf.VCFHeaderLineType;
>, <Line: +import htsjdk.variant.vcf.VCFInfoHeaderLine;
>, <Line: +/**
>, <Line: + * Helper class for extending VCF header for mendelian inheritance annotation
>, <Line: + * 
>, <Line: + * @author <a href="mailto:manuel.holtgrewe@bihealth.de">Manuel Holtgrewe</a>
>, <Line: + */
>, <Line: +public class MendelVCFHeaderExtender {
>, <Line: +	/** Constant for autosomal dominant */
>, <Line: +	public static String AD = "AD";
>, <Line: +	/** Constant for autosomal recessive */
>, <Line: +	public static String AR = "AR";
>, <Line: +	/** Constant for X dominant */
>, <Line: +	public static String XD = "XD";
>, <Line: +	/** Constant for X recessive */
>, <Line: +	public static String XR = "XR";
>, <Line: +	public void extendHeader(VCFHeader vcfHeader) {
>, <Line: +		extendHeader(vcfHeader, "");
>, <Line: +	}
>, <Line: +	public static String key() {
>, <Line: +		return key("");
>, <Line: +	}
>, <Line: +	public static String key(String prefix) {
>, <Line: +		return prefix + "INHERITANCE";
>, <Line: +	}
>, <Line: +	public void extendHeader(VCFHeader vcfHeader, String prefix) {
>, <Line: +		VCFInfoHeaderLine inheritanceLine = new VCFInfoHeaderLine(key(prefix), VCFHeaderLineCount.UNBOUNDED,
>, <Line: +				VCFHeaderLineType.String, "Compatible Mendelian inheritance modes (AD, AR, XD, XR)");
>, <Line: +		vcfHeader.addMetaDataLine(inheritanceLine);
>, <Line: +	}
>, <Line: +}
>]
[]