[]
[<Line: -package de.charite.compbio.jannovar.filter;
>, <Line: -/**
>, <Line: - * Store {@link FlaggedVariant} and a counter.
>, <Line: - */
>, <Line: -class FlaggedVariantCounter {
>, <Line: -	private final FlaggedVariant var;
>, <Line: -	private int count;
>, <Line: -	FlaggedVariantCounter(FlaggedVariant var, int count) {
>, <Line: -		this.var = var;
>, <Line: -		this.count = count;
>, <Line: -	}
>, <Line: -	public int getCount() {
>, <Line: -		return count;
>, <Line: -	}
>, <Line: -	public void setCount(int count) {
>, <Line: -		this.count = count;
>, <Line: -	}
>, <Line: -	public FlaggedVariant getVar() {
>, <Line: -		return var;
>, <Line: -	}
>, <Line: -	@Override
>, <Line: -	public int hashCode() {
>, <Line: -		final int prime = 31;
>, <Line: -		int result = 1;
>, <Line: -		result = prime * result + ((var == null) ? 0 : var.hashCode());
>, <Line: -		return result;
>, <Line: -	}
>, <Line: -	@Override
>, <Line: -	public boolean equals(Object obj) {
>, <Line: -		if (this == obj)
>, <Line: -			return true;
>, <Line: -		if (obj == null)
>, <Line: -			return false;
>, <Line: -		if (getClass() != obj.getClass())
>, <Line: -			return false;
>, <Line: -		FlaggedVariantCounter other = (FlaggedVariantCounter) obj;
>, <Line: -		if (var == null) {
>, <Line: -			if (other.var != null)
>, <Line: -				return false;
>, <Line: -		} else if (!var.equals(other.var))
>, <Line: -			return false;
>, <Line: -		return true;
>, <Line: -	}
>, <Line: -}
>]