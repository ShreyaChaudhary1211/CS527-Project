[<Line: +import java.net.MalformedURLException;
>, <Line: +    /**
>, <Line: +     * Return the missing part of a relative path compared to its absolute path.
>, <Line: +     */
>, <Line: +    private String getPathExpansion() {
>, <Line: +        String resourceNameAsUrlString = new GCResource("temp").getResourceNameAsUrlString();
>, <Line: +        return resourceNameAsUrlString.substring("file:/".length(), resourceNameAsUrlString.indexOf("temp"));
>, <Line: +    }
>, <Line: +    public void addString() throws MalformedURLException {
>, <Line: +        model.add("temp/test.log");
>, <Line: +        model.add("temp/test.log");
>, <Line: +        model.add("file:/" + getPathExpansion() + "temp/test.log");
>, <Line: +        model.add(Arrays.asList(new GCResource("temp/test.log")));
>, <Line: +        model.add(Arrays.asList(new GCResource("temp/test.log")));
>, <Line: +        model.add(Arrays.asList(new GCResource("file:/" + getPathExpansion() + "temp/test.log")));
>]
[<Line: -    public void addString() {
>, <Line: -        model.add("d:/temp/test.log");
>, <Line: -        model.add("d:/temp/test.log");
>, <Line: -        model.add("file:/d:/temp/test.log");
>, <Line: -        model.add(Arrays.asList(new GCResource("d:/temp/test.log")));
>, <Line: -        model.add(Arrays.asList(new GCResource("d:/temp/test.log")));
>, <Line: -        model.add(Arrays.asList(new GCResource("file:/d:/temp/test.log")));
>]