[<Line: +import rx.Observable;
>, <Line: +import rx.observers.TestSubscriber;
>, <Line: +    @Test
>, <Line: +    public void testParameterOperatorBackpressure() {
>, <Line: +        // use composition to find the first person alphabetically with
>, <Line: +        // a score less than the person with the last name alphabetically
>, <Line: +        // whose name is not XAVIER. Two threads and connections will be used.
>, <Line: +        Database db = DatabaseCreator.db();
>, <Line: +        TestSubscriber<String> ts = TestSubscriber.create(0);
>, <Line: +        Observable.just("FRED", "FRED").repeat()
>, <Line: +                .lift(db.select("select name from person where name = ?")
>, <Line: +                        .parameterOperator().getAs(String.class))
>, <Line: +                .subscribe(ts);
>, <Line: +        ts.requestMore(1);
>, <Line: +        ts.assertValueCount(1);
>, <Line: +        ts.unsubscribe();
>, <Line: +    }
>]
[]