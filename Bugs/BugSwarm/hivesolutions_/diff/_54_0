[<Line: +        self._user_routes = None
>, <Line: +        return []
>, <Line: +    def all_routes(self):
>, <Line: +        return App._BASE_ROUTES + self.user_routes() + self.core_routes()
>, <Line: +    def user_routes(self):
>, <Line: +        if self._user_routes: return self._user_routes
>, <Line: +        routes = self.routes()
>, <Line: +        self._user_routes = [App.norm_route(*route) for route in routes]
>, <Line: +        return self._user_routes
>, <Line: +        self.routes_v = self.all_routes()
>, <Line: +        """
>, <Line: +        Runs the processing of the user and core routes so that the proper
>, <Line: +        context is used for it's handling, this is required in order to have
>, <Line: +        the controllers referenced at runtime.
>, <Line: +        It's possible to override the default set of routes that is going
>, <Line: +        to be processed by passing the extra routes parameter.
>, <Line: +        :type routes: List
>, <Line: +        :param routes: The sequence containing the complete set of routes
>, <Line: +        that is going to be processed.
>, <Line: +        """
>, <Line: +        routes = routes or (self.user_routes() + self.core_routes())
>]
[<Line: -        return App._BASE_ROUTES + self.core_routes()
>, <Line: -        self.routes_v = self.routes()
>, <Line: -        routes = routes or self.core_routes()
>]