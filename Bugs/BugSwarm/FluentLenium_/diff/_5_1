[<Line: +import static org.assertj.core.api.Fail.fail;
>, <Line: +import static org.junit.Assert.assertEquals;
>, <Line: +import static org.mockito.Matchers.anyString;
>, <Line: +import static org.mockito.Matchers.eq;
>, <Line: +import static org.mockito.Matchers.isNull;
>, <Line: +import static org.mockito.Mockito.never;
>, <Line: +import static org.mockito.Mockito.spy;
>, <Line: +import static org.mockito.Mockito.times;
>, <Line: +import static org.mockito.Mockito.verify;
>, <Line: +import static org.mockito.Mockito.when;
>, <Line: +import java.io.IOException;
>, <Line: +import java.nio.file.Files;
>, <Line: +import java.nio.file.Path;
>, <Line: +    @Test(expected = IllegalStateException.class)
>, <Line: +    public void webDriverNotAvailable() {
>, <Line: +        FluentTestRunnerAdapter adapter = spy(new FluentTestRunnerAdapter());
>, <Line: +        when(adapter.getControlContainer().getFluentControl()).thenReturn(null);
>, <Line: +        try {
>, <Line: +            adapter.takeHtmlDump();
>, <Line: +        } catch (IllegalStateException ex) {
>, <Line: +            verify(adapter, times(1)).takeHtmlDump();
>, <Line: +            verify(adapter, times(1)).getDriver();
>, <Line: +            assertEquals("FluentControl is not initialized, WebDriver or Configuration issue", ex.getMessage());
>, <Line: +            throw ex;
>, <Line: +        }
>, <Line: +        fail("FluentControl is not initialized exception, did not throw!");
>, <Line: +    }
>]
[<Line: -import java.io.IOException;
>, <Line: -import java.nio.file.Files;
>, <Line: -import java.nio.file.Path;
>, <Line: -import static org.mockito.Matchers.anyString;
>, <Line: -import static org.mockito.Matchers.eq;
>, <Line: -import static org.mockito.Matchers.isNull;
>, <Line: -import static org.mockito.Mockito.never;
>, <Line: -import static org.mockito.Mockito.spy;
>, <Line: -import static org.mockito.Mockito.verify;
>, <Line: -import static org.mockito.Mockito.when;
>]