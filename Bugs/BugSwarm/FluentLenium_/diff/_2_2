[<Line: +        listener.beforeFindBy(by, element == null ? null : instantiator.newComponent(FluentWebElement.class, element), driver);
>, <Line: +        listener.afterFindBy(by, element == null ? null : instantiator.newComponent(FluentWebElement.class, element), driver);
>, <Line: +    public void beforeChangeValueOf(WebElement element, WebDriver driver) {
>, <Line: +        listener.beforeChangeValueOf(element == null ? null : instantiator.newComponent(FluentWebElement.class, element), driver);
>, <Line: +    public void afterChangeValueOf(WebElement element, WebDriver driver) {
>, <Line: +        listener.afterChangeValueOf(element == null ? null : instantiator.newComponent(FluentWebElement.class, element), driver);
>]
[<Line: -        listener
>, <Line: -                .beforeFindBy(by, element == null ? null : instantiator.newComponent(FluentWebElement.class, element), driver);
>, <Line: -        listener
>, <Line: -                .afterFindBy(by, element == null ? null : instantiator.newComponent(FluentWebElement.class, element), driver);
>, <Line: -    public void beforeChangeValueOf(WebElement element, WebDriver driver, CharSequence[] charSequence) {
>, <Line: -        this.listener
>, <Line: -                .beforeChangeValueOf(element == null ? null : instantiator.newComponent(FluentWebElement.class, element), driver,
>, <Line: -                        charSequence);
>, <Line: -    public void afterChangeValueOf(WebElement element, WebDriver driver, CharSequence[] charSequence) {
>, <Line: -        this.listener
>, <Line: -                .afterChangeValueOf(element == null ? null : instantiator.newComponent(FluentWebElement.class, element), driver,
>, <Line: -                        charSequence);
>]