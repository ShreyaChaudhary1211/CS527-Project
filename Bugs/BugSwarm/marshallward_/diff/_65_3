[<Line: +    def assert_write(self, nml, target_fname, sort=False):
>, <Line: +        self.assert_write_path(nml, target_fname, sort)
>, <Line: +        self.assert_write_file(nml, target_fname, sort)
>, <Line: +    def assert_write_path(self, nml, target_fname, sort=False):
>, <Line: +        f90nml.write(nml, tmp_fname, sort=sort)
>, <Line: +    def assert_write_file(self, nml, target_fname, sort=False):
>, <Line: +            f90nml.write(nml, tmp_file, sort=sort)
>, <Line: +        # Check overwriting values
>, <Line: +        # Check appending values doesn't remove previous
>, <Line: +        # Check adding a new section also works
>, <Line: +    def test_sorted_output(self):
>, <Line: +        test_nml = f90nml.read('types.nml')
>, <Line: +        self.assert_write(test_nml, 'types_sorted.nml', sort=True)
>]
[<Line: -    def assert_write(self, nml, target_fname):
>, <Line: -        self.assert_write_path(nml, target_fname)
>, <Line: -        self.assert_write_file(nml, target_fname)
>, <Line: -    def assert_write_path(self, nml, target_fname):
>, <Line: -        f90nml.write(nml, tmp_fname)
>, <Line: -    def assert_write_file(self, nml, target_fname):
>, <Line: -            f90nml.write(nml, tmp_file)
>, <Line: -        # check overwriting values
>, <Line: -        # check appending values doesn't remove previous
>, <Line: -        # check adding a new section also works
>]