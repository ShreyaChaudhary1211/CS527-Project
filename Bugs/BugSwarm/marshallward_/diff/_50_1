[<Line: +The examples below use the namelist file ``config.nml`` with the following
>, <Line: +data.
>, <Line: +::
>, <Line: +  &config_nml
>, <Line: +  input = 'wind.nc'
>, <Line: +  steps = 864
>, <Line: +  layout = 8, 16      ! (X, Y)
>, <Line: +  visc = 1e-4         ! m2 s-1
>, <Line: +  use_biharmonic = .false.
>, <Line: +  /
>, <Line: +To display the formatted output of a namelist::
>, <Line: +   $ f90nml config.nml
>, <Line: +::
>, <Line: +   &config_nml
>, <Line: +       input = 'wind.nc'
>, <Line: +       steps = 864
>, <Line: +       layout = 8, 16
>, <Line: +       visc = 0.0001
>, <Line: +       use_biharmonic = .false.
>, <Line: +   /
>, <Line: +To modify one of the values or add a new variable::
>, <Line: +   $ f90nml -g config_nml -v steps=432 config.nml
>, <Line: +::
>, <Line: +   &config_nml
>, <Line: +       input = 'wind.nc'
>, <Line: +       steps = 432
>, <Line: +       layout = 8, 16
>, <Line: +       visc = 0.0001
>, <Line: +       use_biharmonic = .false.
>, <Line: +   /
>, <Line: +Multiple variables can be set with separate flags or separated by commas::
>, <Line: +   $ f90nml -g config_nml -v steps=432,date='19960101' config.nml
>, <Line: +::
>, <Line: +   $ f90nml -g config_nml -v steps=432 -v date='19960101' config.nml
>, <Line: +::
>, <Line: +   &config_nml
>, <Line: +       input = 'wind.nc'
>, <Line: +       steps = 432
>, <Line: +       layout = 8, 16
>, <Line: +       visc = 0.0001
>, <Line: +       use_biharmonic = .false.
>, <Line: +       date = 19960101
>, <Line: +   /
>, <Line: +Spaces should not be used when assigning values.
>, <Line: +When the namelist group is unspecified, the first group is assumed::
>, <Line: +   $ f90nml -v steps=432 config.nml
>, <Line: +::
>, <Line: +   f90nml: warning: Assuming variables are in group 'config_nml'.
>, <Line: +   &config_nml
>, <Line: +       input = 'wind.nc'
>, <Line: +       steps = 432
>, <Line: +       layout = 8, 16
>, <Line: +       visc = 0.0001
>, <Line: +       use_biharmonic = .false.
>, <Line: +   /
>, <Line: +To save the modified namelist to a new file, say ``out.nml``::
>, <Line: +   $ f90nml -v steps=432 config.nml out.nml
>, <Line: +To patch the existing file and preserve comments::
>, <Line: +   $ f90nml -g config_nml -v steps=432 -p config.nml
>, <Line: +::
>, <Line: +   f90nml: warning: Assuming variables are in group 'config_nml'.
>, <Line: +   &config_nml
>, <Line: +   input = 'wind.nc'
>, <Line: +   steps = 432
>, <Line: +   layout = 8, 16      ! (X, Y)
>, <Line: +   visc = 1e-4         ! m2 s-1
>, <Line: +   use_biharmonic = .false.
>, <Line: +   /
>, <Line: +To convert the output to JSON format::
>, <Line: +   $ f90nml -g config_nml -v steps=432 config.nml -f json
>, <Line: +::
>, <Line: +   {
>, <Line: +       "config_nml": {
>, <Line: +           "input": "wind.nc",
>, <Line: +           "steps": 432,
>, <Line: +           "layout": [
>, <Line: +               8,
>, <Line: +               16
>, <Line: +           ],
>, <Line: +           "visc": 0.0001,
>, <Line: +           "use_biharmonic": false
>, <Line: +       }
>, <Line: +   }
>, <Line: +Output format is also inferred from the output extension.
>, <Line: +::
>, <Line: +   $ f90nml -g config_nml -v steps=432 config.nml out.json
>, <Line: +::
>, <Line: +   $ f90nml -g config_nml -v steps=432 config.nml out.yaml
>, <Line: +JSON and YAML can also act as input files.  Format is assumed by extension.
>, <Line: +::
>, <Line: +   $ f90nml out.json
>, <Line: +::
>, <Line: +   &config_nml
>, <Line: +       input = 'wind.nc'
>, <Line: +       layout = 8, 16
>, <Line: +       steps = 864
>, <Line: +       use_biharmonic = .false.
>, <Line: +       visc = 0.0001
>, <Line: +   /
>]
[]