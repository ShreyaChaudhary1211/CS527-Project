[<Line: +        self._column_width = 72
>, <Line: +        self._float_format = ''
>, <Line: +    def column_width(self):
>, <Line: +        Tokens longer than ``column_width`` are allowed to extend past this
>, <Line: +        limit.  (Default: 72)
>, <Line: +        return self._column_width
>, <Line: +    @column_width.setter
>, <Line: +    def column_width(self, width):
>, <Line: +                self._column_width = width
>, <Line: +    def float_format(self):
>, <Line: +        return self._float_format
>, <Line: +    @float_format.setter
>, <Line: +    def float_format(self, value):
>, <Line: +            self._float_format = value
>, <Line: +                if len(self.indent + v_header) >= self.column_width:
>, <Line: +                    column_width = len(self.indent + v_header) + 1
>, <Line: +                    column_width = self.column_width
>, <Line: +                v_width = column_width - len(self.indent + v_header)
>, <Line: +        return '{0:{fmt}}'.format(value, fmt=self.float_format)
>, <Line: +                                               fmt=self.float_format)
>]
[<Line: -        self._colwidth = 72
>, <Line: -        self._floatformat = ''
>, <Line: -    def colwidth(self):
>, <Line: -        Tokens longer than ``colwidth`` are allowed to extend past this limit.
>, <Line: -        (Default: 72)
>, <Line: -        return self._colwidth
>, <Line: -    @colwidth.setter
>, <Line: -    def colwidth(self, width):
>, <Line: -                self._colwidth = width
>, <Line: -    def floatformat(self):
>, <Line: -        return self._floatformat
>, <Line: -    @floatformat.setter
>, <Line: -    def floatformat(self, value):
>, <Line: -            self._floatformat = value
>, <Line: -                if len(self.indent + v_header) >= self.colwidth:
>, <Line: -                    colwidth = len(self.indent + v_header) + 1
>, <Line: -                    colwidth = self.colwidth
>, <Line: -                v_width = colwidth - len(self.indent + v_header)
>, <Line: -        return '{0:{fmt}}'.format(value, fmt=self.floatformat)
>, <Line: -                                               fmt=self.floatformat)
>]