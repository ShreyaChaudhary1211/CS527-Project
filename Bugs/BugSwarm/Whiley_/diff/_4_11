[<Line: +		int[] targets = bytecode.targets();
>, <Line: +		for (int i = 0; i != targets.length; ++i) {
>, <Line: +			frame[bytecode.target(i)] = frame[bytecode.operand(i)];
>, <Line: +		}		
>, <Line: +		frame[bytecode.target(0)] = result;
>, <Line: +			frame[bytecode.target(0)] = convert(operand, target, context);
>, <Line: +		frame[bytecode.target(0)] = ref.read();
>, <Line: +		frame[bytecode.target(0)] = rec.values.get(bytecode.field);
>, <Line: +		frame[bytecode.target(0)] = list.values.get(index.value.intValue());
>, <Line: +		List<Type> returns = bytecode.type(0).returns();
>, <Line: +		frame[bytecode.target(0)] = Constant.V_BYTE((byte) ~b.value);
>, <Line: +		Constant[] results = execute(bytecode.name, bytecode.type(0), arguments);
>, <Line: +		frame[bytecode.target(0)] = Constant.V_LAMBDA(bytecode.name, bytecode.type(0), arguments);
>, <Line: +		frame[bytecode.target(0)] = Constant.V_INTEGER(length);
>, <Line: +		frame[bytecode.target(0)] = Constant.V_ARRAY(values);
>, <Line: +		int[] operands = bytecode.operands();
>, <Line: +		for(int i=0;i!=operands.length;++i) {
>, <Line: +			frame[bytecode.target(i)] = frame[bytecode.operand(i)];
>, <Line: +			frame[bytecode.operand(i)] = null;
>, <Line: +		}
>, <Line: +		frame[bytecode.target(0)] = Constant.V_ARRAY(values);
>, <Line: +		frame[bytecode.target(0)] = o;
>, <Line: +		ArrayList<String> fields = new ArrayList<String>(bytecode.type(0).fields().keySet());
>, <Line: +		frame[bytecode.target(0)] = Constant.V_RECORD(values);
>, <Line: +		frame[bytecode.target(0)] = result;
>, <Line: +		Constant lhs = frame[bytecode.target(0)];
>, <Line: +		frame[bytecode.target(0)] = update(lhs, bytecode.iterator(), rhs, frame, context);
>]
[<Line: -		frame[bytecode.target()] = frame[bytecode.operand(0)];
>, <Line: -		frame[bytecode.target()] = result;
>, <Line: -			frame[bytecode.target()] = convert(operand, target, context);
>, <Line: -		frame[bytecode.target()] = ref.read();
>, <Line: -		frame[bytecode.target()] = rec.values.get(bytecode.field);
>, <Line: -		frame[bytecode.target()] = list.values.get(index.value.intValue());
>, <Line: -		List<Type> returns = bytecode.type().returns();
>, <Line: -		frame[bytecode.target()] = Constant.V_BYTE((byte) ~b.value);
>, <Line: -		Constant[] results = execute(bytecode.name, bytecode.type(), arguments);
>, <Line: -		List<Type> returns = bytecode.type().returns();
>, <Line: -		frame[bytecode.target()] = Constant.V_LAMBDA(bytecode.name,
>, <Line: -				bytecode.type(), arguments);
>, <Line: -		frame[bytecode.target()] = Constant.V_INTEGER(length);
>, <Line: -		frame[bytecode.target()] = Constant.V_ARRAY(values);
>, <Line: -		frame[bytecode.target()] = frame[bytecode.operand(0)];
>, <Line: -		frame[bytecode.operand(0)] = null;
>, <Line: -		frame[bytecode.target()] = Constant.V_ARRAY(values);
>, <Line: -		frame[bytecode.target()] = o;
>, <Line: -		ArrayList<String> fields = new ArrayList<String>(bytecode.type()
>, <Line: -				.fields().keySet());
>, <Line: -		frame[bytecode.target()] = Constant.V_RECORD(values);
>, <Line: -		frame[bytecode.target()] = result;
>, <Line: -		Constant lhs = frame[bytecode.target()];
>, <Line: -		frame[bytecode.target()] = update(lhs, bytecode.iterator(), rhs, frame,
>, <Line: -				context);
>]