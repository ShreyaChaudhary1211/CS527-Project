[<Line: +    int count = 0
>, <Line: +    int i = item
>, <Line: +    while i > 0:
>, <Line: +        int v = i / 16
>, <Line: +        int w = i % 16
>, <Line: +        count = count + 1
>, <Line: +        i = v
>, <Line: +    //
>, <Line: +    i = count
>, <Line: +        i = i - 1    
>, <Line: +        r[i] = digits[w]
>, <Line: +    //
>, <Line: +// public function toUnsignedBytes(uint v) -> [byte]:
>, <Line: +//     //
>, <Line: +//     [byte] bytes = []
>, <Line: +//     // do-while is needed here
>, <Line: +//     byte r = 0b
>, <Line: +//     byte mask = 00000001b
>, <Line: +//     int i = 0
>, <Line: +//     while i < 8:
>, <Line: +//         if (v % 2) == 1:
>, <Line: +//             r = r | mask
>, <Line: +//         v = v / 2
>, <Line: +//         mask = mask << 1
>, <Line: +//         i = i + 1
>, <Line: +//     bytes = bytes ++ [r]
>, <Line: +//     while v > 0:
>, <Line: +//         r = 0b
>, <Line: +//         mask = 00000001b
>, <Line: +//         int j = 0
>, <Line: +//         while j < 8:
>, <Line: +//             if (v % 2) == 1:
>, <Line: +//                 r = r | mask
>, <Line: +//             v = v / 2
>, <Line: +//             mask = mask << 1
>, <Line: +//             j = j + 1
>, <Line: +//         bytes = bytes ++ [r]
>, <Line: +//     return bytes
>]
[<Line: -        r = [digits[w]] ++ r
>, <Line: -public function toUnsignedBytes(uint v) -> [byte]:
>, <Line: -    //
>, <Line: -    [byte] bytes = []
>, <Line: -    // do-while is needed here
>, <Line: -    byte r = 0b
>, <Line: -    byte mask = 00000001b
>, <Line: -    int i = 0
>, <Line: -    while i < 8:
>, <Line: -        if (v % 2) == 1:
>, <Line: -            r = r | mask
>, <Line: -        v = v / 2
>, <Line: -        mask = mask << 1
>, <Line: -        i = i + 1
>, <Line: -    bytes = bytes ++ [r]
>, <Line: -    while v > 0:
>, <Line: -        r = 0b
>, <Line: -        mask = 00000001b
>, <Line: -        int j = 0
>, <Line: -        while j < 8:
>, <Line: -            if (v % 2) == 1:
>, <Line: -                r = r | mask
>, <Line: -            v = v / 2
>, <Line: -            mask = mask << 1
>, <Line: -            j = j + 1
>, <Line: -        bytes = bytes ++ [r]
>, <Line: -    return bytes
>]