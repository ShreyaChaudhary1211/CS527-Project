[<Line: +		IGNORED.put("Array_Invalid_7", "#665");
>, <Line: +		IGNORED.put("ConstrainedArray_Invalid_1", "#666");
>, <Line: +		IGNORED.put("ConstrainedArray_Invalid_3", "#666");
>, <Line: +		IGNORED.put("ConstrainedInt_Invalid_12", "#666");
>, <Line: +		IGNORED.put("ConstrainedInt_Invalid_1", "#666");
>, <Line: +		IGNORED.put("ConstrainedInt_Invalid_2", "#666");
>, <Line: +		IGNORED.put("ConstrainedInt_Invalid_3", "#666");
>, <Line: +		IGNORED.put("ConstrainedInt_Invalid_5", "#666");
>, <Line: +		IGNORED.put("ConstrainedInt_Invalid_6", "#666");
>, <Line: +		IGNORED.put("ConstrainedInt_Invalid_7", "#666");
>, <Line: +		IGNORED.put("ConstrainedInt_Invalid_8", "#666");
>, <Line: +		IGNORED.put("ConstrainedInt_Invalid_9", "#666");
>, <Line: +		IGNORED.put("ConstrainedRecord_Invalid_1", "#666");
>, <Line: +		IGNORED.put("DefiniteAssign_Invalid_2", "#665");
>, <Line: +		IGNORED.put("DefiniteAssign_Invalid_4", "#665");
>, <Line: +		IGNORED.put("Function_Invalid_4", "#667");
>, <Line: +		IGNORED.put("MethodCall_Invalid_4", "#667");
>, <Line: +		IGNORED.put("MethodCall_Invalid_5", "#667");
>, <Line: +		IGNORED.put("MethodCall_Invalid_6", "#667");
>, <Line: +		IGNORED.put("MethodCall_Invalid_7", "#667");
>, <Line: +		IGNORED.put("MethodCall_Invalid_8", "#667");				
>, <Line: +		IGNORED.put("MethodRef_Invalid_1", "#667");		
>, <Line: +		IGNORED.put("MethodRef_Invalid_3", "#667");		
>, <Line: +		IGNORED.put("Parsing_Invalid_15", "609");
>, <Line: +		IGNORED.put("Parsing_Invalid_1", "608");
>, <Line: +		IGNORED.put("Parsing_Invalid_2", "608");
>, <Line: +		IGNORED.put("Parsing_Invalid_27", "609");
>, <Line: +		IGNORED.put("Parsing_Invalid_28", "609");
>, <Line: +		IGNORED.put("Parsing_Invalid_31", "610");
>, <Line: +		IGNORED.put("Record_Invalid_3", "#665");
>, <Line: +		IGNORED.put("RecursiveType_Invalid_10", "#666");
>, <Line: +		IGNORED.put("RecursiveType_Invalid_2", "#666");
>, <Line: +		IGNORED.put("RecursiveType_Invalid_9", "#666");
>, <Line: +		IGNORED.put("Subtype_Invalid_1", "#666");
>, <Line: +		IGNORED.put("Subtype_Invalid_2", "#666");
>, <Line: +		IGNORED.put("Subtype_Invalid_3", "#666");
>, <Line: +		IGNORED.put("Subtype_Invalid_4", "#666");
>, <Line: +		IGNORED.put("Subtype_Invalid_5", "#666");
>, <Line: +		IGNORED.put("Subtype_Invalid_6", "#666");
>, <Line: +		IGNORED.put("Subtype_Invalid_7", "#666");
>, <Line: +		IGNORED.put("Subtype_Invalid_8", "#666");
>, <Line: +		IGNORED.put("Subtype_Invalid_9", "#666");
>, <Line: +		IGNORED.put("TupleAssign_Invalid_2", "#666");
>, <Line: +		IGNORED.put("TupleDefine_Invalid_2", "#666");
>, <Line: +		IGNORED.put("Tuple_Invalid_3", "#666");
>, <Line: +		IGNORED.put("Tuple_Invalid_4", "#666");
>, <Line: +		IGNORED.put("Tuple_Invalid_5", "#666");		
>, <Line: +		IGNORED.put("TypeEquals_Invalid_5", "#666");
>, <Line: +		IGNORED.put("TypeEquals_Invalid_6", "#666");
>, <Line: +		IGNORED.put("UnionType_Invalid_7", "#666");
>, <Line: +		IGNORED.put("UnionType_Invalid_8", "#666");
>, <Line: +		IGNORED.put("UnionType_Invalid_9", "#666");
>, <Line: +		IGNORED.put("While_Invalid_1", "#665");
>, <Line: +		IGNORED.put("While_Invalid_3", "#665");
>]
[<Line: -		IGNORED.put("ConstrainedDictionary_Invalid_1", "unclassified");
>, <Line: -		IGNORED.put("ConstrainedInt_Invalid_1", "unclassified");
>, <Line: -		IGNORED.put("ConstrainedInt_Invalid_10", "unclassified");
>, <Line: -		IGNORED.put("ConstrainedInt_Invalid_12", "unclassified");
>, <Line: -		IGNORED.put("ConstrainedInt_Invalid_7", "timeout");
>, <Line: -		IGNORED.put("ConstrainedInt_Invalid_8", "timeout");
>, <Line: -		IGNORED.put("ConstrainedInt_Invalid_9", "Timeout");
>, <Line: -		IGNORED.put("ConstrainedArray_Invalid_2", "unclassified");
>, <Line: -		IGNORED.put("ConstrainedArray_Invalid_3", "unclassified");
>, <Line: -		IGNORED.put("Contractive_Invalid_1", "#425");
>, <Line: -		IGNORED.put("Contractive_Invalid_2", "unclassified");
>, <Line: -		IGNORED.put("EndOfFile_Invalid_1", "unclassified");
>, <Line: -		IGNORED.put("Intersection_Invalid_1", "unclassified");
>, <Line: -		IGNORED.put("Intersection_Invalid_2", "unclassified");
>, <Line: -		IGNORED.put("Lambda_Invalid_3", "unclassified");
>, <Line: -		IGNORED.put("ArrayAssign_Invalid_2", "Infinite Loop?");
>, <Line: -		IGNORED.put("ArrayAssign_Invalid_3", "Infinite Loop?");
>, <Line: -		IGNORED.put("ArrayEquals_Invalid_1", "unclassified");
>, <Line: -		IGNORED.put("ArrayLength_Invalid_2", "Timeout");
>, <Line: -		IGNORED.put("ArrayUpdate_Invalid_1", "unclassified");
>, <Line: -		IGNORED.put("MethodRef_Invalid_1", "unclassified");
>, <Line: -		IGNORED.put("MethodRef_Invalid_2", "unclassified");
>, <Line: -		IGNORED.put("MethodRef_Invalid_3", "unclassified");
>, <Line: -		IGNORED.put("NegationType_Invalid_2", "unclassified");
>, <Line: -		IGNORED.put("OpenRecord_Invalid_1", "wrong output");
>, <Line: -		IGNORED.put("RecursiveType_Invalid_10", "unclassified");
>, <Line: -		IGNORED.put("RecursiveType_Invalid_2", "unclassified");
>, <Line: -		IGNORED.put("RecursiveType_Invalid_9", "unclassified");
>, <Line: -		IGNORED.put("Subtype_Invalid_6", "unclassified");
>, <Line: -		IGNORED.put("Subtype_Invalid_8", "unclassified");
>, <Line: -		IGNORED.put("Subtype_Invalid_9", "unclassified");
>, <Line: -		IGNORED.put("Switch_Invalid_6", "unclassified");
>, <Line: -		IGNORED.put("TupleAssign_Invalid_1", "unclassified");
>, <Line: -		IGNORED.put("TupleAssign_Invalid_2", "unclassified");
>, <Line: -		IGNORED.put("TupleAssign_Invalid_3", "unclassified");
>, <Line: -		IGNORED.put("TupleDefine_Invalid_2", "unclassified");
>, <Line: -		IGNORED.put("Tuple_Invalid_3", "unclassified");
>, <Line: -		IGNORED.put("Tuple_Invalid_4", "unclassified");
>, <Line: -		IGNORED.put("Tuple_Invalid_5", "unclassified");
>, <Line: -		IGNORED.put("Tuple_Invalid_6", "unclassified");
>, <Line: -		IGNORED.put("Tuple_Invalid_7", "unclassified");
>, <Line: -		IGNORED.put("TypeEquals_Invalid_5", "unclassified");
>, <Line: -		IGNORED.put("UnionType_Invalid_7", "unclassified");
>, <Line: -		IGNORED.put("UnionType_Invalid_8", "unclassified");
>, <Line: -		IGNORED.put("UnionType_Invalid_9", "#348");
>, <Line: -		IGNORED.put("Void_Invalid_1", "unclassified");
>, <Line: -		IGNORED.put("Void_Invalid_2", "unclassified");
>, <Line: -		IGNORED.put("Void_Invalid_3", "unclassified");
>, <Line: -		IGNORED.put("While_Invalid_12", "unclassified");
>, <Line: -		IGNORED.put("Parsing_Invalid_1", "608");
>, <Line: -		IGNORED.put("Parsing_Invalid_2", "608");
>, <Line: -		IGNORED.put("Parsing_Invalid_15", "609");
>, <Line: -		IGNORED.put("Parsing_Invalid_27", "609");
>, <Line: -		IGNORED.put("Parsing_Invalid_28", "609");
>, <Line: -		IGNORED.put("Parsing_Invalid_31", "610");
>]