[<Line: +		checkIsSubtype(Type.Array(Type.T_INT,false), stmt.expr);
>, <Line: +			srcType = Type.Array(Type.T_INT, false);
>, <Line: +		} else if (Type.isSubtype(Type.T_ARRAY_ANY, lub)) {
>, <Line: +		if (raw instanceof Type.EffectiveArray) {
>, <Line: +			if (!(nominal instanceof Type.EffectiveArray)) {
>, <Line: +				|| type instanceof Type.Tuple || type instanceof Type.Array
>]
[<Line: -		checkIsSubtype(Type.List(Type.T_INT,false), stmt.expr);
>, <Line: -			srcType = Type.List(Type.T_INT, false);
>, <Line: -		} else if (Type.isSubtype(Type.T_LIST_ANY, lub)) {
>, <Line: -		if (raw instanceof Type.EffectiveList) {
>, <Line: -			if (!(nominal instanceof Type.EffectiveList)) {
>, <Line: -				|| type instanceof Type.Tuple || type instanceof Type.List
>]