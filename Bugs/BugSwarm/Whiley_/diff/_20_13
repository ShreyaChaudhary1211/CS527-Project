[<Line: +		} else if (type instanceof Type.EffectiveArray) {
>, <Line: +			Type.EffectiveArray ts = (Type.EffectiveArray) type;
>, <Line: +		} else if (from instanceof Type.Array && to instanceof Type.Array) {
>, <Line: +			buildCoercion((Type.Array) from, (Type.Array) to, freeSlot,
>, <Line: +	protected void buildCoercion(Type.Array fromType, Type.Array toType,
>, <Line: +		} else if (t instanceof Type.EffectiveArray) {
>]
[<Line: -		} else if (type instanceof Type.EffectiveList) {
>, <Line: -			Type.EffectiveList ts = (Type.EffectiveList) type;
>, <Line: -		} else if (from instanceof Type.List && to instanceof Type.List) {
>, <Line: -			buildCoercion((Type.List) from, (Type.List) to, freeSlot,
>, <Line: -	protected void buildCoercion(Type.List fromType, Type.List toType,
>, <Line: -		} else if (t instanceof Type.EffectiveList) {
>]