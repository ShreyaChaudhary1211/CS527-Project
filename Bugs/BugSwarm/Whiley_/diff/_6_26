[<Line: +		builder.logTimedMessage("[" + filename + "] Verified assertion #" + number + " (steps " + result.numberOfSteps + ")",
>, <Line: +		case ARRAYGEN:
>, <Line: +			return ArrayGen(automaton,lhs,rhs);
>, <Line: +		} else if(condition instanceof Code.IndexOf) {
>, <Line: +			return instantiateAxioms((Code.IndexOf) condition, freeVariable);
>, <Line: +		case TUPLE: {
>, <Line: +			return condition;
>, <Line: +		}
>, <Line: +	private Code instantiateAxioms(Code.IndexOf condition, int freeVariable) {
>, <Line: +		// I believe this is the appropriate thing to do here.
>, <Line: +		return condition;
>, <Line: +	}
>, <Line: +				wyrl.util.Runtime.debug(automaton, Solver.SCHEMA, "And", "Or");
>]
[<Line: -		builder.logTimedMessage("[" + filename + "] Verified assertion #" + number + " (steps: " + result.numberOfSteps + ")",
>, <Line: -				//wyrl.util.Runtime.debug(automaton, Solver.SCHEMA, "And", "Or");
>]