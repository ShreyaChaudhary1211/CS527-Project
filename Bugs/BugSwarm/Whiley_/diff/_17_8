[<Line: +		case ARRAY: 			
>]
[<Line: -		case LIST: {
>, <Line: -			// The goal here is convert from a list of the form [x,y,z] into a
>, <Line: -			// set of tuples of the form {(0,x),(1,y),(2,z)}.
>, <Line: -			for (int i = 0; i != operands.length; ++i) {
>, <Line: -				SemanticType.Tuple tt = SemanticType.Tuple(SemanticType.Int,
>, <Line: -						operands[i].returnType());
>, <Line: -				Code.Constant idx = Code.Constant(Value.Integer(BigInteger
>, <Line: -						.valueOf(i)));
>, <Line: -				operands[i] = Code.Nary(tt, Code.Op.TUPLE, new Code[] { idx,
>, <Line: -						operands[i] });
>, <Line: -			}
>, <Line: -		}
>]