[<Line: +function append([int] xs, [int] ys) -> ([int] zs)
>, <Line: +ensures |zs| == |xs| + |ys|:
>, <Line: +    //    
>, <Line: +    int count = |xs| + |ys|
>, <Line: +    [int] rs = [0; count]
>, <Line: +    //
>, <Line: +    int i = 0
>, <Line: +    while i < |xs| where i >= 0:
>, <Line: +        rs[i] = xs[i]
>, <Line: +        i = i + 1
>, <Line: +    //
>, <Line: +    int j = 0
>, <Line: +    while j < |ys| where j >= 0:
>, <Line: +        rs[j + i] = ys[j]
>, <Line: +        j = j + 1
>, <Line: +    //
>, <Line: +    return rs
>, <Line: +        string tmp = append(piece2str(m.piece),pos2str(m.from))
>, <Line: +        tmp = append(tmp,"x")
>, <Line: +        tmp = append(tmp,piece2str(m.taken))
>, <Line: +        return append(tmp,pos2str(m.to))
>, <Line: +            string tmp = append(piece2str(m.piece),pos2str(m.from))
>, <Line: +            tmp = append(tmp,"-")
>, <Line: +            return append(tmp,pos2str(m.to))
>, <Line: +                    return append(move2str(m.check),"+")
>]
[<Line: -        return (((piece2str(m.piece) ++ pos2str(m.from)) ++ "x") ++ piece2str(m.taken)) ++ pos2str(m.to)
>, <Line: -            return ((piece2str(m.piece) ++ pos2str(m.from)) ++ "-") ++ pos2str(m.to)
>, <Line: -                    return move2str(m.check) ++ "+"
>]