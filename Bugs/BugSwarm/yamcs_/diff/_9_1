[<Line: +package org.yamcs.utils;
>, <Line: +import java.util.Arrays;
>, <Line: +public class ByteArrayUtils {
>, <Line: +    /**
>, <Line: +     * returns true if a starts with b
>, <Line: +     * @param a
>, <Line: +     * @param b
>, <Line: +     * @return true if a and b are not null, a.length>=b.length and a[i]=b[i] for i=0...b.length-1
>, <Line: +     * @throws NullPointerException if any of them is null
>, <Line: +     */
>, <Line: +    static public boolean startsWith(byte[] a, byte[] b) {
>, <Line: +        if(a.length<b.length) return false;
>, <Line: +        for(int i=0; i<b.length; i++) {
>, <Line: +            if(a[i]!=b[i]) return false;
>, <Line: +        }
>, <Line: +        return true;
>, <Line: +    }
>, <Line: +    /**
>, <Line: +     * 
>, <Line: +     * Compares the first n bytes of two arrays. The arrays must be at least n bytes long (otherwise false is returned)
>, <Line: +     *  
>, <Line: +     * @param a - the first array to compare
>, <Line: +     * @param b - the second array to compare
>, <Line: +     * @param n - the number of bytes to compare
>, <Line: +     * @return true if a.length>=n, b.length >=n and a[i]==b[i] for i=0..n-1
>, <Line: +     * @throws NullPointerException if any of them is null
>, <Line: +     */
>, <Line: +    static public boolean equalsPrefix(byte[] a, byte b[], int n) {
>, <Line: +        if(a.length<n || b.length<n) return false;
>, <Line: +        for(int i=0;i<n; i++) {
>, <Line: +            if(a[i]!=b[i]) return false;
>, <Line: +        }
>, <Line: +        return true;
>, <Line: +    }
>, <Line: +    /**
>, <Line: +     * If the array is considered binary representation of an integer, add 1 to the integer and returns the corresponding binary representation.
>, <Line: +     * 
>, <Line: +     * In case an overflow is detected (if the initial array was all 0XFF) an IllegalArgumentException is thrown.
>, <Line: +     * 
>, <Line: +     * @param a
>, <Line: +     * @return a+1
>, <Line: +     */
>, <Line: +    static public byte[] plusOne(byte[] a) {
>, <Line: +        byte[] b = Arrays.copyOf(a, a.length);
>, <Line: +        int i = b.length-1;
>, <Line: +        while(i>=0 && b[i]==0xFF) {
>, <Line: +            b[i]=0;
>, <Line: +            i--;
>, <Line: +        }
>, <Line: +        if(i==-1)  {
>, <Line: +            throw new IllegalArgumentException("overflow");
>, <Line: +        } else {
>, <Line: +            b[i]= (byte) (1+((b[i]&0xFF)));
>, <Line: +        }
>, <Line: +        return b;
>, <Line: +    }
>, <Line: +}
>]
[]