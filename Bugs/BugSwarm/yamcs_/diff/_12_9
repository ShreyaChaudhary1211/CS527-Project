[<Line: +import org.yamcs.api.YamcsApiException;
>, <Line: + * receives data from ActiveMQ Artemis and publishes it into a yamcs stream
>, <Line: +    private YamcsSession yamcsSession; 
>, <Line: +    final String hornetAddress; 
>, <Line: +        ppdb = XtceDbFactory.getInstance(instance);
>, <Line: +        this.hornetAddress = hornetAddress;
>, <Line: +        if(disabled) {
>, <Line: +            return;
>, <Line: +        }
>, <Line: +            SimpleString queue=new SimpleString(hornetAddress+"-ActiveMQPpProvider");
>, <Line: +            yamcsSession = YamcsSession.newBuilder().build();
>, <Line: +            YamcsClient yclient = yamcsSession.newClientBuilder().setDataProducer(false).setDataConsumer(new SimpleString(hornetAddress), queue).
>, <Line: +                    setFilter(new SimpleString(AbstractArtemisTranslatorService.UNIQUEID_HDR_NAME+"<>"+AbstractArtemisTranslatorService.UNIQUEID)).
>, <Line: +                    build();
>, <Line: +            yclient.dataConsumer.setMessageHandler(this);
>, <Line: +        } catch (ActiveMQException|YamcsApiException e) {
>, <Line: +            log.error("Failed connect to artemis");
>, <Line: +            yamcsSession.close();
>]
[<Line: - * receives data from ActiveMQ and publishes it into a yamcs stream
>, <Line: -    YamcsSession yamcsSession; 
>, <Line: -    final private YamcsClient msgClient;
>, <Line: -        SimpleString queue=new SimpleString(hornetAddress+"-ActiveMQPpProvider");
>, <Line: -        ppdb=XtceDbFactory.getInstance(instance);
>, <Line: -        try {
>, <Line: -            yamcsSession=YamcsSession.newBuilder().build();
>, <Line: -            msgClient=yamcsSession.newClientBuilder().setDataProducer(false).setDataConsumer(new SimpleString(hornetAddress), queue).
>, <Line: -                    setFilter(new SimpleString(AbstractArtemisTranslatorService.UNIQUEID_HDR_NAME+"<>"+AbstractArtemisTranslatorService.UNIQUEID)).
>, <Line: -                    build();
>, <Line: -        } catch (Exception e) {
>, <Line: -            throw new ConfigurationException(e.getMessage(),e);
>, <Line: -        }
>, <Line: -        if(disabled) return;
>, <Line: -            msgClient.dataConsumer.setMessageHandler(this);
>, <Line: -        } catch (ActiveMQException e) {
>, <Line: -            log.error("Failed to set message handler");
>, <Line: -            msgClient.close();
>]