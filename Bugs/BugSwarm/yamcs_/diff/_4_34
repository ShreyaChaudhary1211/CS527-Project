[<Line: +    public void listQueues(RestRequest req) throws HttpException {
>, <Line: +        sendOK(req, response.build(), SchemaRest.ListCommandQueuesResponse.WRITE);
>, <Line: +    public void getQueue(RestRequest req) throws HttpException {
>, <Line: +        sendOK(req, info, SchemaCommanding.CommandQueueInfo.WRITE);
>, <Line: +    public void editQueue(RestRequest req) throws HttpException {
>, <Line: +        sendOK(req, qinfo, SchemaCommanding.CommandQueueInfo.WRITE);
>, <Line: +    public void listQueueEntries(RestRequest req) throws HttpException {
>, <Line: +        sendOK(req, responseb.build(), SchemaRest.ListCommandQueueEntries.WRITE);
>, <Line: +    public void editQueueEntry(RestRequest req) throws HttpException {
>, <Line: +        sendOK(req);
>]
[<Line: -import io.netty.channel.ChannelFuture;
>, <Line: -    public ChannelFuture listQueues(RestRequest req) throws HttpException {
>, <Line: -        return sendOK(req, response.build(), SchemaRest.ListCommandQueuesResponse.WRITE);
>, <Line: -    public ChannelFuture getQueue(RestRequest req) throws HttpException {
>, <Line: -        return sendOK(req, info, SchemaCommanding.CommandQueueInfo.WRITE);
>, <Line: -    public ChannelFuture editQueue(RestRequest req) throws HttpException {
>, <Line: -        return sendOK(req, qinfo, SchemaCommanding.CommandQueueInfo.WRITE);
>, <Line: -    public ChannelFuture listQueueEntries(RestRequest req) throws HttpException {
>, <Line: -        return sendOK(req, responseb.build(), SchemaRest.ListCommandQueueEntries.WRITE);
>, <Line: -    public ChannelFuture editQueueEntry(RestRequest req) throws HttpException {
>, <Line: -        return sendOK(req);
>]