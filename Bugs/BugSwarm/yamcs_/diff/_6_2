[<Line: +    boolean startArtemisServer;
>, <Line: +        boolean readonly = false;
>, <Line: +        this.yamcsInstance = yamcsInstance;
>, <Line: +        YConfiguration c = YConfiguration.getConfiguration("yamcs."+yamcsInstance);
>, <Line: +            String icn = c.getString("tmIndexer");
>, <Line: +        startArtemisServer = c.getBoolean("startArtemisServer", false);
>, <Line: +            if(config==null) {
>, <Line: +                List<StreamConfigEntry> sceList = sc.getEntries(StandardStreamType.tm);
>, <Line: +                for(StreamConfigEntry sce: sceList){
>, <Line: +                    subscribe(sce);
>, <Line: +                }
>, <Line: +            } else {
>, <Line: +                List<String> streamNames = YConfiguration.getList(config, "streams");
>, <Line: +                for(String sn: streamNames) {
>, <Line: +                    StreamConfigEntry sce = sc.getEntry(StandardStreamType.tm, sn);
>, <Line: +                    if(sce==null) {
>, <Line: +                        throw new ConfigurationException("No stream config found for '"+sn+"'");
>, <Line: +                    subscribe(sce);
>, <Line: +            }
>, <Line: +            if(startArtemisServer) {
>, <Line: +                hqIndexServer = new HornetQIndexServer(this, tagDb);
>, <Line: +                hqIndexServer.startAsync();
>, <Line: +                hqIndexServer.awaitRunning();
>, <Line: +            }
>, <Line: +            if(hqIndexServer!=null) {
>, <Line: +                hqIndexServer.stopAsync();
>, <Line: +                hqIndexServer.awaitTerminated();
>, <Line: +            }
>, <Line: +            tmIndexer.close();
>, <Line: +            tagDb.close();
>]
[<Line: -        boolean readonly=false;
>, <Line: -        this.yamcsInstance=yamcsInstance;
>, <Line: -        YConfiguration c=YConfiguration.getConfiguration("yamcs."+yamcsInstance);
>, <Line: -            String icn=c.getString("tmIndexer");
>, <Line: -                if(config==null) {
>, <Line: -                    List<StreamConfigEntry> sceList = sc.getEntries(StandardStreamType.tm);
>, <Line: -                    for(StreamConfigEntry sce: sceList){
>, <Line: -                        subscribe(sce);
>, <Line: -                    }
>, <Line: -                } else {
>, <Line: -                    List<String> streamNames = YConfiguration.getList(config, "streams");
>, <Line: -                    for(String sn: streamNames) {
>, <Line: -                        StreamConfigEntry sce = sc.getEntry(StandardStreamType.tm, sn);
>, <Line: -                        if(sce==null) {
>, <Line: -                            throw new ConfigurationException("No stream config found for '"+sn+"'");
>, <Line: -                        }
>, <Line: -                        subscribe(sce);
>, <Line: -            hqIndexServer = new HornetQIndexServer(this, tagDb);
>, <Line: -            hqIndexServer.startAsync();
>, <Line: -            hqIndexServer.awaitRunning();
>, <Line: -           hqIndexServer.stopAsync();
>, <Line: -           hqIndexServer.awaitTerminated();
>, <Line: -           tmIndexer.close();
>, <Line: -           tagDb.close();
>]