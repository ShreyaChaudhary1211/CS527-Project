[<Line: +        // Filter with a strict range start
>, <Line: +        ydb.execute("create stream s3 as select * from RdbSelectTest where gentime>2000 order asc");        
>, <Line: +        tuples = fetchTuples(ydb.getStream("s3"));
>, <Line: +        assertEquals(1, tuples.size());      
>, <Line: +        assertEquals(3000L, tuples.get(0).getColumn("gentime"));
>, <Line: +        // Filter with a non-strict range start
>, <Line: +        ydb.execute("create stream s4 as select * from RdbSelectTest where gentime>=3000 order asc");        
>, <Line: +        tuples = fetchTuples(ydb.getStream("s4"));
>, <Line: +        assertEquals(1, tuples.size());        
>, <Line: +        assertEquals(3000L, tuples.get(0).getColumn("gentime"));
>, <Line: +        // Filter with a strict range end
>, <Line: +        ydb.execute("create stream s5 as select * from RdbSelectTest where gentime<3000 order asc");        
>, <Line: +        tuples = fetchTuples(ydb.getStream("s5"));
>, <Line: +        assertEquals(2, tuples.size());
>, <Line: +        assertEquals(1000L, tuples.get(0).getColumn("gentime"));
>, <Line: +        assertEquals(2000L, tuples.get(1).getColumn("gentime"));
>, <Line: +        // Filter with a non-strict range end
>, <Line: +        ydb.execute("create stream s6 as select * from RdbSelectTest where gentime<=2000 order asc");        
>, <Line: +        Stream s4 = ydb.getStream("s6");
>, <Line: +        tuples = fetchTuples(s4);
>, <Line: +        assertEquals(2, tuples.size());
>, <Line: +        assertEquals(1000L, tuples.get(0).getColumn("gentime"));
>, <Line: +        assertEquals(2000L, tuples.get(1).getColumn("gentime"));
>]
[]