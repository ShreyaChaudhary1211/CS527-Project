[<Line: +import java.util.concurrent.CompletableFuture;
>, <Line: +    public void getParameterSamples(RestRequest req) throws HttpException {
>, <Line: +        sendOK(req, series.build(), SchemaPvalue.TimeSeries.WRITE);
>, <Line: +    public void listParameterHistory(RestRequest req) throws HttpException {
>, <Line: +        CompletableFuture<Void> cf = req.getCompletableFuture();
>, <Line: +                RestParameterReplayListener replayListener = new RestParameterReplayListener(0, limit, cf) {
>, <Line: +                //FIXME - make async
>, <Line: +            sendOK(req, MediaType.CSV, buf);
>, <Line: +                RestParameterReplayListener replayListener = new RestParameterReplayListener(0, limit, cf) {
>, <Line: +              //FIXME - make async
>, <Line: +            sendOK(req, resultb.build(), SchemaPvalue.ParameterData.WRITE);
>]
[<Line: -    public ChannelFuture getParameterSamples(RestRequest req) throws HttpException {
>, <Line: -        return sendOK(req, series.build(), SchemaPvalue.TimeSeries.WRITE);
>, <Line: -    public ChannelFuture listParameterHistory(RestRequest req) throws HttpException {
>, <Line: -                RestParameterReplayListener replayListener = new RestParameterReplayListener(0, limit) {
>, <Line: -            return sendOK(req, MediaType.CSV, buf);
>, <Line: -                RestParameterReplayListener replayListener = new RestParameterReplayListener(0, limit) {
>, <Line: -            return sendOK(req, resultb.build(), SchemaPvalue.ParameterData.WRITE);
>]