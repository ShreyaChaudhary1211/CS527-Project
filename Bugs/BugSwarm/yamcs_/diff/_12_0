[<Line: +package org.yamcs.cli;
>, <Line: +import java.util.HashMap;
>, <Line: +import org.rocksdb.RocksDB;
>, <Line: +import org.yamcs.parameterarchive.ParameterArchive;
>, <Line: +import org.yamcs.parameterarchive.ParameterIdDb;
>, <Line: +import org.yamcs.utils.TimeEncoding;
>, <Line: +import com.beust.jcommander.Parameter;
>, <Line: +import com.beust.jcommander.Parameters;
>, <Line: +/**
>, <Line: + * Command line utility for doing general archive operations
>, <Line: + * 
>, <Line: + * @author nm
>, <Line: + *
>, <Line: + */
>, <Line: +@Parameters(commandDescription = "Parameter Archive operations (works offline, the yamcs server has to be stopped)")
>, <Line: +public class ParameterArchiveCli extends Command {
>, <Line: +    @Parameter(names="--instance", description="yamcs instance", required=true)
>, <Line: +    String yamcsInstance;
>, <Line: +    public ParameterArchiveCli(YamcsCli yamcsCli) {
>, <Line: +        super("parchive", yamcsCli);
>, <Line: +        addSubCommand(new PrintMetadata());
>, <Line: +        TimeEncoding.setUp();
>, <Line: +    }
>, <Line: +    @Parameters(commandDescription = "Print parameter name to parameter id mapping")
>, <Line: +    class PrintMetadata extends Command {
>, <Line: +        PrintMetadata() {
>, <Line: +            super("print-pid", ParameterArchiveCli.this);
>, <Line: +        }
>, <Line: +        @Override
>, <Line: +        public void execute() throws Exception {
>, <Line: +            RocksDB.loadLibrary();
>, <Line: +            ParameterArchive parchive = new ParameterArchive(yamcsInstance, new HashMap<String, Object>());
>, <Line: +            ParameterIdDb pid = parchive.getParameterIdDb();
>, <Line: +            pid.print(System.out);
>, <Line: +        }
>, <Line: +    }
>, <Line: +}
>]
[]