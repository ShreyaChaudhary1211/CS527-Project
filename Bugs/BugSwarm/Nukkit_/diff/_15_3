[<Line: +package cn.nukkit.block;
>, <Line: +import cn.nukkit.item.Item;
>, <Line: +import cn.nukkit.item.Tool;
>, <Line: +import cn.nukkit.nbt.tag.CompoundTag;
>, <Line: +import cn.nukkit.Player;
>, <Line: +import cn.nukkit.nbt.tag.ListTag;
>, <Line: +import cn.nukkit.nbt.tag.StringTag;
>, <Line: +import cn.nukkit.nbt.tag.Tag;
>, <Line: +import cn.nukkit.tile.Tile;
>, <Line: +import java.util.Iterator;
>, <Line: +import java.util.Map;
>, <Line: +public class BrewingStand extends Solid{
>, <Line: +    protected int id = BREWING_STAND_BLOCK;
>, <Line: +    public BrewingStand(){
>, <Line: +        this(0);
>, <Line: +    }
>, <Line: +    public BrewingStand(int meta){
>, <Line: +        super(meta);
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public String getName(){
>, <Line: +        return "Brewing Stand";
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public boolean canBeActivated(){
>, <Line: +        return true;
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public double getHardness(){
>, <Line: +        return 0.5;
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public int getToolType(){
>, <Line: +        return Tool.TYPE_PICKAXE;
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public int getLightLevel(){
>, <Line: +        return 1;
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public boolean place(Item item, Block block, Block target, int face, double fx, double fy, double fz, Player player){
>, <Line: +        int faces[] = {4, 2, 5, 3};
>, <Line: +        meta = faces[player != null ? player.getDirection() : 0];
>, <Line: +        getLevel().setBlock(block, this, true, true);
>, <Line: +        CompoundTag nbt = new CompoundTag()
>, <Line: +                .putList(new ListTag<>("Items"))
>, <Line: +                .putString("id", Tile.BREWING_STAND)
>, <Line: +                .putInt("x", (int) this.x)
>, <Line: +                .putInt("y", (int) this.y)
>, <Line: +                .putInt("z", (int) this.z);
>, <Line: +        if(item.hasCustomName()){
>, <Line: +            nbt.putString("CustomName", item.getCustomName());
>, <Line: +        }
>, <Line: +        if (item.hasCustomBlockData()) {
>, <Line: +            Map<String, Tag> customData = item.getCustomBlockData().getTags();
>, <Line: +            Iterator iter = customData.entrySet().iterator();
>, <Line: +            while (iter.hasNext()) {
>, <Line: +                Map.Entry tag = (Map.Entry) iter.next();
>, <Line: +                nbt.put((String) tag.getKey(), (Tag) tag.getValue());
>, <Line: +            }
>, <Line: +        }
>, <Line: +        Tile.createTile("BrewingStand", getLevel().getChunk((int) this.x >> 4, (int) this.z >> 4), nbt);
>, <Line: +        return true;
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public boolean onBreak(Item item){
>, <Line: +        this.getLevel().setBlock(this, new Air(), true, true);
>, <Line: +        return true;
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public int getId() {
>, <Line: +        return Block.BREWING_STAND_BLOCK;
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public boolean onActivate(Item item, Player player){
>, <Line: +        if(player != null){
>, <Line: +            Tile t = getLevel().getTile(this);
>, <Line: +            cn.nukkit.tile.BrewingStand brewing = null;
>, <Line: +            if(t instanceof cn.nukkit.tile.BrewingStand){
>, <Line: +                brewing = (cn.nukkit.tile.BrewingStand) t;
>, <Line: +            }else{
>, <Line: +                CompoundTag nbt = new CompoundTag()
>, <Line: +                        .putList(new ListTag<>("Items"))
>, <Line: +                        .putString("id", Tile.FURNACE)
>, <Line: +                        .putInt("x", (int) this.x)
>, <Line: +                        .putInt("y", (int) this.y)
>, <Line: +                        .putInt("z", (int) this.z);
>, <Line: +                brewing = new cn.nukkit.tile.BrewingStand(this.getLevel().getChunk((int) (this.x) >> 4, (int) (this.z) >> 4), nbt);
>, <Line: +            }
>, <Line: +            if(brewing.namedTag.contains("Lock") && brewing.namedTag.get("Lock") instanceof StringTag){
>, <Line: +                if(!brewing.namedTag.getString("Lock").equals(item.getCustomName())){
>, <Line: +                    return false;
>, <Line: +                }
>, <Line: +            }
>, <Line: +            if(player.isCreative()){
>, <Line: +                return false;
>, <Line: +            }
>, <Line: +            player.addWindow(brewing.getInventory());
>, <Line: +        }
>, <Line: +        return true;
>, <Line: +    }
>, <Line: +    @Override
>, <Line: +    public int[][] getDrops(Item item){
>, <Line: +        if (item.isPickaxe() && item.getTier() >= Tool.TIER_WOODEN) {
>, <Line: +            return new int[][]{new int[]{Item.BREWING_STAND, 0, 1}};
>, <Line: +        } else {
>, <Line: +            return new int[0][];
>, <Line: +        }
>, <Line: +    }
>, <Line: +}
>]
[]