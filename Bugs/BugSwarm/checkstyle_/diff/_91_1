[<Line: +////////////////////////////////////////////////////////////////////////////////
>, <Line: +// checkstyle: Checks Java source code for adherence to a set of rules.
>, <Line: +// Copyright (C) 2001-2015 the original author or authors.
>, <Line: +//
>, <Line: +// This library is free software; you can redistribute it and/or
>, <Line: +// modify it under the terms of the GNU Lesser General Public
>, <Line: +// License as published by the Free Software Foundation; either
>, <Line: +// version 2.1 of the License, or (at your option) any later version.
>, <Line: +//
>, <Line: +// This library is distributed in the hope that it will be useful,
>, <Line: +// but WITHOUT ANY WARRANTY; without even the implied warranty of
>, <Line: +// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
>, <Line: +// Lesser General Public License for more details.
>, <Line: +//
>, <Line: +// You should have received a copy of the GNU Lesser General Public
>, <Line: +// License along with this library; if not, write to the Free Software
>, <Line: +// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
>, <Line: +////////////////////////////////////////////////////////////////////////////////
>, <Line: +package com.puppycrawl.tools.checkstyle.api;
>, <Line: +import org.junit.Assert;
>, <Line: +import org.junit.Test;
>, <Line: +public class SeverityLevelCounterTest {
>, <Line: +    @Test(expected = IllegalArgumentException.class)
>, <Line: +    public void testCtorException() {
>, <Line: +        final SeverityLevelCounter o = new SeverityLevelCounter(null);
>, <Line: +    }
>, <Line: +    @Test
>, <Line: +    public void testAddException() {
>, <Line: +        final SeverityLevelCounter counter = new SeverityLevelCounter(SeverityLevel.ERROR);
>, <Line: +        final AuditEvent event = new AuditEvent(this, "ATest.java", null);
>, <Line: +        Assert.assertTrue(counter.getCount() == 0);
>, <Line: +        counter.addException(event, new IllegalStateException());
>, <Line: +        Assert.assertTrue(counter.getCount() == 1);
>, <Line: +    }
>, <Line: +    @Test
>, <Line: +    public void testAddExceptionWarning() {
>, <Line: +        final SeverityLevelCounter counter = new SeverityLevelCounter(SeverityLevel.WARNING);
>, <Line: +        final AuditEvent event = new AuditEvent(this, "ATest.java", null);
>, <Line: +        Assert.assertTrue(counter.getCount() == 0);
>, <Line: +        counter.addException(event, new IllegalStateException());
>, <Line: +        Assert.assertTrue(counter.getCount() == 0);
>, <Line: +    }
>, <Line: +}>]
[]