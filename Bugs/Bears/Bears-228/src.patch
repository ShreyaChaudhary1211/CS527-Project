diff --git a/Bears-228/buggy/api/src/main/java/org/openmrs/module/htmlformentry/element/EncounterDetailSubmissionElement.java b/Bears-228/fixed/api/src/main/java/org/openmrs/module/htmlformentry/element/EncounterDetailSubmissionElement.java
index fc54a7c..3dc57ef 100644
--- a/Bears-228/buggy/api/src/main/java/org/openmrs/module/htmlformentry/element/EncounterDetailSubmissionElement.java
+++ b/Bears-228/fixed/api/src/main/java/org/openmrs/module/htmlformentry/element/EncounterDetailSubmissionElement.java
@@ -4,6 +4,7 @@ import org.apache.commons.beanutils.PropertyUtils;
 import org.apache.commons.lang.StringEscapeUtils;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.joda.time.DateMidnight;
 import org.openmrs.Encounter;
 import org.openmrs.EncounterType;
 import org.openmrs.Location;
@@ -775,12 +776,21 @@ public class EncounterDetailSubmissionElement implements HtmlGeneratorElement, F
     public void handleSubmission(FormEntrySession session, HttpServletRequest submission) {
         if (dateWidget != null) {
             Date date = (Date) dateWidget.getValue(session.getContext(), submission);
-            if (session.getSubmissionActions().getCurrentEncounter().getEncounterDatetime() != null
-                    && !session.getSubmissionActions().getCurrentEncounter().getEncounterDatetime().equals(date)) {
-                session.getContext().setPreviousEncounterDate(
-                        new Date(session.getSubmissionActions().getCurrentEncounter().getEncounterDatetime().getTime()));
+            Date previousDate = session.getSubmissionActions().getCurrentEncounter().getEncounterDatetime();
+
+            if (previousDate == null) {
+                session.getSubmissionActions().getCurrentEncounter().setEncounterDatetime(date);
+            }
+
+            else {
+                // we don't want to lose any time information just because we edited it with a form that only collects date,
+                // so we only update the date if the date has a time component or the actual date has changed
+                if (hasTimeComponent(date) || !stripTimeComponent(date).equals(stripTimeComponent(previousDate))) {
+                    session.getContext().setPreviousEncounterDate(
+                            new Date(session.getSubmissionActions().getCurrentEncounter().getEncounterDatetime().getTime()));
+                    session.getSubmissionActions().getCurrentEncounter().setEncounterDatetime(date);
+                }
             }
-            session.getSubmissionActions().getCurrentEncounter().setEncounterDatetime(date);
         }
         if (timeWidget != null) {
             Date time = (Date) timeWidget.getValue(session.getContext(), submission);
@@ -816,4 +826,12 @@ public class EncounterDetailSubmissionElement implements HtmlGeneratorElement, F
         }
     }
 
+    private boolean hasTimeComponent(Date date) {
+        return !(new DateMidnight(date).toDate().equals(date));
+    }
+
+    private DateMidnight stripTimeComponent(Date date) {
+        return new DateMidnight(date);
+    }
+
 }
