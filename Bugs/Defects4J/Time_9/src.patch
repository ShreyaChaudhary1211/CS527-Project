diff --git a/Time_9/buggy/.defects4j.config b/Time_9/fixed/.defects4j.config
index af1cd33..6cf5ab2 100644
--- a/Time_9/buggy/.defects4j.config
+++ b/Time_9/fixed/.defects4j.config
@@ -1,3 +1,3 @@
 #File automatically generated by Defects4J
 pid=Time
-vid=9b
+vid=9f
diff --git a/Time_9/buggy/.git/HEAD b/Time_9/fixed/.git/HEAD
index b5acbfe..6f7cb95 100644
--- a/Time_9/buggy/.git/HEAD
+++ b/Time_9/fixed/.git/HEAD
@@ -1 +1 @@
-e6accb7763f5e50138c6030624374c41706366f7
+e1eb46c3ac130000616258cd6a15ee8a71018618
diff --git a/Time_9/buggy/.git/index b/Time_9/fixed/.git/index
index dae3e1b..db63cf0 100644
Binary files a/Time_9/buggy/.git/index and b/Time_9/fixed/.git/index differ
diff --git a/Time_9/buggy/.git/logs/HEAD b/Time_9/fixed/.git/logs/HEAD
index 8357f98..f0ee514 100644
--- a/Time_9/buggy/.git/logs/HEAD
+++ b/Time_9/fixed/.git/logs/HEAD
@@ -7,3 +7,4 @@ e1eb46c3ac130000616258cd6a15ee8a71018618 e6accb7763f5e50138c6030624374c41706366f
 e6accb7763f5e50138c6030624374c41706366f7 552fdb1dd2d6c9569cdbf0f13b07616f93d5220d defects4j <defects4j@localhost> 1709005698 -0800	checkout: moving from e6accb7763f5e50138c6030624374c41706366f7 to D4J_Time_9_POST_FIX_REVISION
 552fdb1dd2d6c9569cdbf0f13b07616f93d5220d d71337c07be8ad85a428f28aaeea6323f77c72d2 defects4j <defects4j@localhost> 1709005698 -0800	commit: D4J_Time_9_PRE_FIX_REVISION
 d71337c07be8ad85a428f28aaeea6323f77c72d2 e6accb7763f5e50138c6030624374c41706366f7 defects4j <defects4j@localhost> 1709005698 -0800	checkout: moving from d71337c07be8ad85a428f28aaeea6323f77c72d2 to D4J_Time_9_BUGGY_VERSION
+e6accb7763f5e50138c6030624374c41706366f7 e1eb46c3ac130000616258cd6a15ee8a71018618 defects4j <defects4j@localhost> 1709005698 -0800	checkout: moving from e6accb7763f5e50138c6030624374c41706366f7 to D4J_Time_9_FIXED_VERSION
diff --git a/Time_9/buggy/src/main/java/org/joda/time/DateTimeZone.java b/Time_9/fixed/src/main/java/org/joda/time/DateTimeZone.java
index 3ad5cfe..afa75d7 100644
--- a/Time_9/buggy/src/main/java/org/joda/time/DateTimeZone.java
+++ b/Time_9/fixed/src/main/java/org/joda/time/DateTimeZone.java
@@ -93,6 +93,7 @@ public abstract class DateTimeZone implements Serializable {
     /** The time zone for Universal Coordinated Time */
     public static final DateTimeZone UTC = new FixedDateTimeZone("UTC", "UTC", 0, 0);
     /** Maximum offset. */
+    private static final int MAX_MILLIS = (86400 * 1000) - 1;
 
     /** The instance that is providing time zones. */
     private static Provider cProvider;
@@ -254,16 +255,19 @@ public abstract class DateTimeZone implements Serializable {
         if (hoursOffset == 0 && minutesOffset == 0) {
             return DateTimeZone.UTC;
         }
+        if (hoursOffset < -23 || hoursOffset > 23) {
+            throw new IllegalArgumentException("Hours out of range: " + hoursOffset);
+        }
         if (minutesOffset < 0 || minutesOffset > 59) {
             throw new IllegalArgumentException("Minutes out of range: " + minutesOffset);
         }
         int offset = 0;
         try {
-            int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);
+            int hoursInMinutes = hoursOffset * 60;
             if (hoursInMinutes < 0) {
-                minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);
+                minutesOffset = hoursInMinutes - minutesOffset;
             } else {
-                minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);
+                minutesOffset = hoursInMinutes + minutesOffset;
             }
             offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);
         } catch (ArithmeticException ex) {
@@ -279,6 +283,9 @@ public abstract class DateTimeZone implements Serializable {
      * @return the DateTimeZone object for the offset
      */
     public static DateTimeZone forOffsetMillis(int millisOffset) {
+        if (millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS) {
+            throw new IllegalArgumentException("Millis out of range: " + millisOffset);
+        }
         String id = printOffset(millisOffset);
         return fixedOffsetZone(id, millisOffset);
     }
