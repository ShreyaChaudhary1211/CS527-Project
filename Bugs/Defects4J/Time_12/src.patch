diff --git a/Time_12/buggy/org/joda/time/LocalDate.java b/Time_12/fixed/org/joda/time/LocalDate.java
index 3868531..c86b9d7 100644
--- a/Time_12/buggy/org/joda/time/LocalDate.java
+++ b/Time_12/fixed/org/joda/time/LocalDate.java
@@ -207,9 +207,10 @@ public final class LocalDate
         if (calendar == null) {
             throw new IllegalArgumentException("The calendar must not be null");
         }
+        int era = calendar.get(Calendar.ERA);
         int yearOfEra = calendar.get(Calendar.YEAR);
         return new LocalDate(
-            yearOfEra,
+            (era == GregorianCalendar.AD ? yearOfEra : 1 - yearOfEra),
             calendar.get(Calendar.MONTH) + 1,
             calendar.get(Calendar.DAY_OF_MONTH)
         );
@@ -240,7 +241,12 @@ public final class LocalDate
         if (date == null) {
             throw new IllegalArgumentException("The date must not be null");
         }
+        if (date.getTime() < 0) {
             // handle years in era BC
+            GregorianCalendar cal = new GregorianCalendar();
+            cal.setTime(date);
+            return fromCalendarFields(cal);
+        }
         return new LocalDate(
             date.getYear() + 1900,
             date.getMonth() + 1,
diff --git a/Time_12/buggy/org/joda/time/LocalDateTime.java b/Time_12/fixed/org/joda/time/LocalDateTime.java
index f37db3e..e75deca 100644
--- a/Time_12/buggy/org/joda/time/LocalDateTime.java
+++ b/Time_12/fixed/org/joda/time/LocalDateTime.java
@@ -196,9 +196,10 @@ public final class LocalDateTime
         if (calendar == null) {
             throw new IllegalArgumentException("The calendar must not be null");
         }
+        int era = calendar.get(Calendar.ERA);
         int yearOfEra = calendar.get(Calendar.YEAR);
         return new LocalDateTime(
-            yearOfEra,
+            (era == GregorianCalendar.AD ? yearOfEra : 1 - yearOfEra),
             calendar.get(Calendar.MONTH) + 1,
             calendar.get(Calendar.DAY_OF_MONTH),
             calendar.get(Calendar.HOUR_OF_DAY),
@@ -233,7 +234,12 @@ public final class LocalDateTime
         if (date == null) {
             throw new IllegalArgumentException("The date must not be null");
         }
+        if (date.getTime() < 0) {
             // handle years in era BC
+            GregorianCalendar cal = new GregorianCalendar();
+            cal.setTime(date);
+            return fromCalendarFields(cal);
+        }
         return new LocalDateTime(
             date.getYear() + 1900,
             date.getMonth() + 1,
