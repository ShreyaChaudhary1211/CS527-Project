diff --git a/JacksonXml_1/buggy/.defects4j.config b/JacksonXml_1/fixed/.defects4j.config
index f2b8794..c39576a 100644
--- a/JacksonXml_1/buggy/.defects4j.config
+++ b/JacksonXml_1/fixed/.defects4j.config
@@ -1,3 +1,3 @@
 #File automatically generated by Defects4J
 pid=JacksonXml
-vid=1b
+vid=1f
diff --git a/JacksonXml_1/buggy/.git/HEAD b/JacksonXml_1/fixed/.git/HEAD
index 5bde47c..9d2df61 100644
--- a/JacksonXml_1/buggy/.git/HEAD
+++ b/JacksonXml_1/fixed/.git/HEAD
@@ -1 +1 @@
-ccec799bb129af35d765affb614654998f0e2735
+79d4bc6577ebafe52bac76a3bed36feaf83a3ffd
diff --git a/JacksonXml_1/buggy/.git/index b/JacksonXml_1/fixed/.git/index
index 2145508..72d641e 100644
Binary files a/JacksonXml_1/buggy/.git/index and b/JacksonXml_1/fixed/.git/index differ
diff --git a/JacksonXml_1/buggy/.git/logs/HEAD b/JacksonXml_1/fixed/.git/logs/HEAD
index a01d5d1..138f8cf 100644
--- a/JacksonXml_1/buggy/.git/logs/HEAD
+++ b/JacksonXml_1/fixed/.git/logs/HEAD
@@ -7,3 +7,4 @@ ff8ce24281b4ce1e67865d74b2b64cde9939dc9c 2d7683ed820116b77cba9b4b290cd7ce7dfa5cf
 ccec799bb129af35d765affb614654998f0e2735 74bb1979201442e65776cab35153994ab05d8be0 defects4j <defects4j@localhost> 1709004526 -0800	checkout: moving from ccec799bb129af35d765affb614654998f0e2735 to D4J_JacksonXml_1_POST_FIX_REVISION
 74bb1979201442e65776cab35153994ab05d8be0 391cb8e2b2997b5ca17765bd38a5654595816257 defects4j <defects4j@localhost> 1709004526 -0800	commit: D4J_JacksonXml_1_PRE_FIX_REVISION
 391cb8e2b2997b5ca17765bd38a5654595816257 ccec799bb129af35d765affb614654998f0e2735 defects4j <defects4j@localhost> 1709004526 -0800	checkout: moving from 391cb8e2b2997b5ca17765bd38a5654595816257 to D4J_JacksonXml_1_BUGGY_VERSION
+ccec799bb129af35d765affb614654998f0e2735 79d4bc6577ebafe52bac76a3bed36feaf83a3ffd defects4j <defects4j@localhost> 1709004526 -0800	checkout: moving from ccec799bb129af35d765affb614654998f0e2735 to D4J_JacksonXml_1_FIXED_VERSION
diff --git a/JacksonXml_1/buggy/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java b/JacksonXml_1/fixed/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
index 91b14dd..58618b4 100644
--- a/JacksonXml_1/buggy/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
+++ b/JacksonXml_1/fixed/src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java
@@ -509,8 +509,13 @@ public class FromXmlParser
             // Simple, except that if this is a leaf, need to suppress end:
             if (_mayBeLeaf) {
                 _mayBeLeaf = false;
+                if (_parsingContext.inArray()) {
                     // 06-Jan-2015, tatu: as per [dataformat-xml#180], need to
                     //    expose as empty Object, not null
+                    _nextToken = JsonToken.END_OBJECT;
+                    _parsingContext = _parsingContext.createChildObjectContext(-1, -1);
+                    return (_currToken = JsonToken.START_OBJECT);
+                }
                 return (_currToken = JsonToken.VALUE_NULL);
             }
             _currToken = _parsingContext.inArray() ? JsonToken.END_ARRAY : JsonToken.END_OBJECT;
@@ -547,10 +552,9 @@ public class FromXmlParser
                         // 06-Jan-2015, tatu: as per [dataformat-xml#180], need to
                         //    expose as empty Object, not null (or, worse, as used to
                         //    be done, by swallowing the token)
-                        _currToken = JsonToken.END_ARRAY;
-                        _parsingContext = _parsingContext.getParent();
-                        _namesToWrap = _parsingContext.getNamesToWrap();
-                        return _currToken;
+                        _nextToken = JsonToken.END_OBJECT;
+                        _parsingContext = _parsingContext.createChildObjectContext(-1, -1);
+                        return (_currToken = JsonToken.START_OBJECT);
                     }
                 }
                 return (_currToken = JsonToken.VALUE_STRING);
