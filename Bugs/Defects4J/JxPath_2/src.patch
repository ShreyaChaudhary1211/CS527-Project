diff --git a/JxPath_2/Buggy-Version/.defects4j.config b/JxPath_2/Patched-Version/.defects4j.config
index a6da4b2..6df1f99 100644
--- a/JxPath_2/Buggy-Version/.defects4j.config
+++ b/JxPath_2/Patched-Version/.defects4j.config
@@ -1,3 +1,3 @@
 #File automatically generated by Defects4J
 pid=JxPath
-vid=2b
+vid=2f
diff --git a/JxPath_2/Buggy-Version/src/java/org/apache/commons/jxpath/ri/compiler/Expression.java b/JxPath_2/Patched-Version/src/java/org/apache/commons/jxpath/ri/compiler/Expression.java
index 5f7dcd0..355c8e3 100644
--- a/JxPath_2/Buggy-Version/src/java/org/apache/commons/jxpath/ri/compiler/Expression.java
+++ b/JxPath_2/Patched-Version/src/java/org/apache/commons/jxpath/ri/compiler/Expression.java
@@ -16,6 +16,7 @@
  */
 package org.apache.commons.jxpath.ri.compiler;
 
+import org.apache.commons.jxpath.NodeSet;
 import org.apache.commons.jxpath.Pointer;
 import org.apache.commons.jxpath.ri.EvalContext;
 import org.apache.commons.jxpath.ri.model.NodePointer;
@@ -74,6 +75,9 @@ public abstract class Expression {
         if (result instanceof EvalContext) {
             return new ValueIterator((EvalContext) result);
         }
+        if (result instanceof NodeSet) {
+            return new ValueIterator(((NodeSet) result).getPointers().iterator());
+        }
         return ValueUtils.iterate(result);
     }
 
@@ -85,6 +89,11 @@ public abstract class Expression {
         if (result instanceof EvalContext) {
             return (EvalContext) result;
         }
+        if (result instanceof NodeSet) {
+            return new PointerIterator(((NodeSet) result).getPointers().iterator(),
+                    new QName(null, "value"),
+                    context.getRootContext().getCurrentNodePointer().getLocale());
+        }
         return new PointerIterator(ValueUtils.iterate(result),
                 new QName(null, "value"),
                 context.getRootContext().getCurrentNodePointer().getLocale());
@@ -142,4 +151,4 @@ public abstract class Expression {
             throw new UnsupportedOperationException();
         }
     }
-}
+}
\ No newline at end of file
