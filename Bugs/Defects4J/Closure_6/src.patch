diff --git a/Closure_6/buggy/com/google/javascript/jscomp/TypeValidator.java b/Closure_6/fixed/com/google/javascript/jscomp/TypeValidator.java
index 8cdb02a..12ce5b3 100644
--- a/Closure_6/buggy/com/google/javascript/jscomp/TypeValidator.java
+++ b/Closure_6/fixed/com/google/javascript/jscomp/TypeValidator.java
@@ -363,9 +363,6 @@ class TypeValidator {
       JSType leftType, Node owner, String propName) {
     // The NoType check is a hack to make typedefs work OK.
     if (!leftType.isNoType() && !rightType.canAssignTo(leftType)) {
-      if ((leftType.isConstructor() || leftType.isEnumType()) && (rightType.isConstructor() || rightType.isEnumType())) {
-        registerMismatch(rightType, leftType, null);
-      } else {
       // Do not type-check interface methods, because we expect that
       // they will have dummy implementations that do not match the type
       // annotations.
@@ -382,7 +379,6 @@ class TypeValidator {
           "assignment to property " + propName + " of " +
           getReadableJSTypeName(owner, true),
           rightType, leftType);
-      }
       return false;
     }
     return true;
@@ -402,11 +398,7 @@ class TypeValidator {
   boolean expectCanAssignTo(NodeTraversal t, Node n, JSType rightType,
       JSType leftType, String msg) {
     if (!rightType.canAssignTo(leftType)) {
-      if ((leftType.isConstructor() || leftType.isEnumType()) && (rightType.isConstructor() || rightType.isEnumType())) {
-        registerMismatch(rightType, leftType, null);
-      } else {
       mismatch(t, n, msg, rightType, leftType);
-      }
       return false;
     }
     return true;
