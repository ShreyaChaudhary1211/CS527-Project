diff --git a/Closure_147/buggy/com/google/javascript/jscomp/CheckGlobalThis.java b/Closure_147/fixed/com/google/javascript/jscomp/CheckGlobalThis.java
index d63c72b..604526e 100644
--- a/Closure_147/buggy/com/google/javascript/jscomp/CheckGlobalThis.java
+++ b/Closure_147/fixed/com/google/javascript/jscomp/CheckGlobalThis.java
@@ -105,7 +105,8 @@ final class CheckGlobalThis implements Callback {
       if (!(pType == Token.BLOCK ||
             pType == Token.SCRIPT ||
             pType == Token.NAME ||
-            pType == Token.ASSIGN)) {
+            pType == Token.ASSIGN ||
+            pType == Token.OBJECTLIT)) {
         return false;
       }
     }
diff --git a/Closure_147/buggy/com/google/javascript/jscomp/RuntimeTypeCheck.java b/Closure_147/fixed/com/google/javascript/jscomp/RuntimeTypeCheck.java
index ed4a6b9..5cedf1e 100644
--- a/Closure_147/buggy/com/google/javascript/jscomp/RuntimeTypeCheck.java
+++ b/Closure_147/fixed/com/google/javascript/jscomp/RuntimeTypeCheck.java
@@ -244,6 +244,11 @@ class RuntimeTypeCheck implements CompilerPass {
 
       // To satisfy normalization constraints, the type checking must be
       // added after any inner function declarations.
+      for (Node next = block.getFirstChild();
+           next != null && NodeUtil.isFunctionDeclaration(next);
+           next = next.getNext()) {
+        insertionPoint = next;
+      }
 
       for (Node paramType : funType.getParameters()) {
         // Can this ever happen?
