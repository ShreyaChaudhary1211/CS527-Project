diff --git a/JacksonDatabind_14/buggy/.defects4j.config b/JacksonDatabind_14/fixed/.defects4j.config
index 07791ae..327af59 100644
--- a/JacksonDatabind_14/buggy/.defects4j.config
+++ b/JacksonDatabind_14/fixed/.defects4j.config
@@ -1,3 +1,3 @@
 #File automatically generated by Defects4J
 pid=JacksonDatabind
-vid=14b
+vid=14f
diff --git a/JacksonDatabind_14/buggy/.git/HEAD b/JacksonDatabind_14/fixed/.git/HEAD
index 620caf6..f5b1c7a 100644
--- a/JacksonDatabind_14/buggy/.git/HEAD
+++ b/JacksonDatabind_14/fixed/.git/HEAD
@@ -1 +1 @@
-036b60042e7c224a7f8a31a40d6359c6a5910ac1
+8891427c84551711895e02bbfa2ddac686380ec4
diff --git a/JacksonDatabind_14/buggy/.git/index b/JacksonDatabind_14/fixed/.git/index
index 209b593..5cd257e 100644
Binary files a/JacksonDatabind_14/buggy/.git/index and b/JacksonDatabind_14/fixed/.git/index differ
diff --git a/JacksonDatabind_14/buggy/.git/logs/HEAD b/JacksonDatabind_14/fixed/.git/logs/HEAD
index e59e6f1..73d9f0b 100644
--- a/JacksonDatabind_14/buggy/.git/logs/HEAD
+++ b/JacksonDatabind_14/fixed/.git/logs/HEAD
@@ -7,3 +7,4 @@ f3b1ea27e7c8156f268cbaebb5c0b6115b79ab6f 8891427c84551711895e02bbfa2ddac686380ec
 036b60042e7c224a7f8a31a40d6359c6a5910ac1 f6d4593c7a1e0922880488a0d8f9eb5c68f03a95 defects4j <defects4j@localhost> 1709004284 -0800	checkout: moving from 036b60042e7c224a7f8a31a40d6359c6a5910ac1 to D4J_JacksonDatabind_14_POST_FIX_REVISION
 f6d4593c7a1e0922880488a0d8f9eb5c68f03a95 6296aae03a05260447aa2b16b6d391d1b00a7c54 defects4j <defects4j@localhost> 1709004284 -0800	commit: D4J_JacksonDatabind_14_PRE_FIX_REVISION
 6296aae03a05260447aa2b16b6d391d1b00a7c54 036b60042e7c224a7f8a31a40d6359c6a5910ac1 defects4j <defects4j@localhost> 1709004284 -0800	checkout: moving from 6296aae03a05260447aa2b16b6d391d1b00a7c54 to D4J_JacksonDatabind_14_BUGGY_VERSION
+036b60042e7c224a7f8a31a40d6359c6a5910ac1 8891427c84551711895e02bbfa2ddac686380ec4 defects4j <defects4j@localhost> 1709004284 -0800	checkout: moving from 036b60042e7c224a7f8a31a40d6359c6a5910ac1 to D4J_JacksonDatabind_14_FIXED_VERSION
diff --git a/JacksonDatabind_14/buggy/src/main/java/com/fasterxml/jackson/databind/ObjectReader.java b/JacksonDatabind_14/fixed/src/main/java/com/fasterxml/jackson/databind/ObjectReader.java
index e684b10..05098fd 100644
--- a/JacksonDatabind_14/buggy/src/main/java/com/fasterxml/jackson/databind/ObjectReader.java
+++ b/JacksonDatabind_14/fixed/src/main/java/com/fasterxml/jackson/databind/ObjectReader.java
@@ -1473,7 +1473,7 @@ public class ObjectReader
             result = NullNode.instance;
         } else {
             DeserializationContext ctxt = createDeserializationContext(jp, _config);
-            JsonDeserializer<Object> deser = _findRootDeserializer(ctxt, JSON_NODE_TYPE);
+            JsonDeserializer<Object> deser = _findTreeDeserializer(ctxt);
             if (_unwrapRoot) {
                 result = (JsonNode) _unwrapAndDeserialize(jp, ctxt, JSON_NODE_TYPE, deser);
             } else {
@@ -1574,7 +1574,20 @@ public class ObjectReader
     /**
      * @since 2.6
      */
+    protected JsonDeserializer<Object> _findTreeDeserializer(DeserializationContext ctxt)
+        throws JsonMappingException
+    {
+        JsonDeserializer<Object> deser = _rootDeserializers.get(JSON_NODE_TYPE);
+        if (deser == null) {
             // Nope: need to ask provider to resolve it
+            deser = ctxt.findRootValueDeserializer(JSON_NODE_TYPE);
+            if (deser == null) { // can this happen?
+                throw new JsonMappingException("Can not find a deserializer for type "+JSON_NODE_TYPE);
+            }
+            _rootDeserializers.put(JSON_NODE_TYPE, deser);
+        }
+        return deser;
+    }
 
     /**
      * Method called to locate deserializer ahead of time, if permitted
