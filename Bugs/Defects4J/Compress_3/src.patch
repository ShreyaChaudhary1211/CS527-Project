diff --git a/Compress_3/Buggy-Version/.defects4j.config b/Compress_3/Patched-Version/.defects4j.config
index 6a4bd5d..87c997a 100644
--- a/Compress_3/Buggy-Version/.defects4j.config
+++ b/Compress_3/Patched-Version/.defects4j.config
@@ -1,3 +1,3 @@
 #File automatically generated by Defects4J
 pid=Compress
-vid=3b
+vid=3f
diff --git a/Compress_3/Buggy-Version/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java b/Compress_3/Patched-Version/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java
index 005e3e7..2dc3b26 100644
--- a/Compress_3/Buggy-Version/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java
+++ b/Compress_3/Patched-Version/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java
@@ -52,6 +52,7 @@ public class TarArchiveOutputStream extends ArchiveOutputStream {
     private boolean closed = false;
 
     /* Indicates if putArchiveEntry has been called without closeArchiveEntry */
+    private boolean haveUnclosedEntry = false;
     
     private final OutputStream out;
 
@@ -109,6 +110,9 @@ public class TarArchiveOutputStream extends ArchiveOutputStream {
      * @throws IOException on error
      */
     public void finish() throws IOException {
+        if(haveUnclosedEntry) {
+            throw new IOException("This archives contains unclosed entries.");
+        }
         writeEOFRecord();
         writeEOFRecord();
     }
@@ -184,6 +188,7 @@ public class TarArchiveOutputStream extends ArchiveOutputStream {
             currSize = entry.getSize();
         }
         currName = entry.getName();
+        haveUnclosedEntry = true;
     }
 
     /**
@@ -214,6 +219,7 @@ public class TarArchiveOutputStream extends ArchiveOutputStream {
                                   + "' before the '" + currSize
                                   + "' bytes specified in the header were written");
         }
+        haveUnclosedEntry = false;
     }
 
     /**
