diff --git a/Closure_143/buggy/com/google/javascript/jscomp/AbstractCommandLineRunner.java b/Closure_143/fixed/com/google/javascript/jscomp/AbstractCommandLineRunner.java
index 13cb626..aa29e5f 100644
--- a/Closure_143/buggy/com/google/javascript/jscomp/AbstractCommandLineRunner.java
+++ b/Closure_143/fixed/com/google/javascript/jscomp/AbstractCommandLineRunner.java
@@ -868,7 +868,8 @@ abstract class AbstractCommandLineRunner<A extends Compiler,
           } else if (defValue.length() > 1
               && ((defValue.charAt(0) == '\'' &&
                   defValue.charAt(defValue.length() - 1) == '\'')
-            )) {
+                  || (defValue.charAt(0) == '\"' &&
+                      defValue.charAt(defValue.length() - 1) == '\"'))) {
             // If the value starts and ends with a single quote,
             // we assume that it's a string.
             String maybeStringVal =
diff --git a/Closure_143/buggy/com/google/javascript/jscomp/RemoveConstantExpressions.java b/Closure_143/fixed/com/google/javascript/jscomp/RemoveConstantExpressions.java
index fee9c28..17d55c9 100644
--- a/Closure_143/buggy/com/google/javascript/jscomp/RemoveConstantExpressions.java
+++ b/Closure_143/fixed/com/google/javascript/jscomp/RemoveConstantExpressions.java
@@ -88,7 +88,8 @@ final class RemoveConstantExpressions implements CompilerPass {
 
       Node exprBody = node.getFirstChild();
       if (!NodeUtil.nodeTypeMayHaveSideEffects(exprBody)
-      ) {
+          || exprBody.getType() == Token.NEW
+          || exprBody.getType() == Token.CALL) {
         changeProxy.replaceWith(parent, node, getSideEffectNodes(exprBody));
       }
     }
