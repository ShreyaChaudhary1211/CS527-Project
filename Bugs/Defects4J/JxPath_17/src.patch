diff --git a/JxPath_17/buggy/org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java b/JxPath_17/fixed/org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java
index a2ee4db..a979a10 100644
--- a/JxPath_17/buggy/org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java
+++ b/JxPath_17/fixed/org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java
@@ -81,18 +81,14 @@ public class DOMAttributeIterator implements NodeIterator {
         if (testLocalName.equals("*") || testLocalName.equals(nodeLocalName)) {
             String testPrefix = name.getPrefix();
 
-            if (equalStrings(testPrefix, nodePrefix)) {
+            if (testPrefix == null || equalStrings(testPrefix, nodePrefix)) {
                 return true;
             }
-            String testNS = null;
-            if (testPrefix != null) {
-                testNS = parent.getNamespaceURI(testPrefix);
+            if (nodePrefix == null) {
+                return false;
             }
-            String nodeNS = null;
-            if (nodePrefix != null) {
-                nodeNS = parent.getNamespaceURI(nodePrefix);
-            }
-            return equalStrings(testNS, nodeNS);
+            return equalStrings(parent.getNamespaceURI(testPrefix), parent
+                    .getNamespaceURI(nodePrefix));
         }
         return false;
     }
@@ -152,4 +148,4 @@ public class DOMAttributeIterator implements NodeIterator {
         this.position = position;
         return position >= 1 && position <= attributes.size();
     }
-}
+}
\ No newline at end of file
diff --git a/JxPath_17/buggy/org/apache/commons/jxpath/ri/model/jdom/JDOMAttributeIterator.java b/JxPath_17/fixed/org/apache/commons/jxpath/ri/model/jdom/JDOMAttributeIterator.java
index db0b14d..d7b7a30 100644
--- a/JxPath_17/buggy/org/apache/commons/jxpath/ri/model/jdom/JDOMAttributeIterator.java
+++ b/JxPath_17/fixed/org/apache/commons/jxpath/ri/model/jdom/JDOMAttributeIterator.java
@@ -67,11 +67,9 @@ public class JDOMAttributeIterator implements NodeIterator {
             String lname = name.getName();
             if (!lname.equals("*")) {
                 attributes = new ArrayList();
-                if (ns != null) {
                 Attribute attr = element.getAttribute(lname, ns);
                 if (attr != null) {
                     attributes.add(attr);
-                    }
                 }
             }
             else {
@@ -79,7 +77,8 @@ public class JDOMAttributeIterator implements NodeIterator {
                 List allAttributes = element.getAttributes();
                 for (int i = 0; i < allAttributes.size(); i++) {
                     Attribute attr = (Attribute) allAttributes.get(i);
-                    if (attr.getNamespace().equals(ns)) {
+                    if (ns == Namespace.NO_NAMESPACE
+                            || attr.getNamespace().equals(ns)) {
                         attributes.add(attr);
                     }
                 }
@@ -114,4 +113,4 @@ public class JDOMAttributeIterator implements NodeIterator {
         this.position = position;
         return position >= 1 && position <= attributes.size();
     }
-}
+}
\ No newline at end of file
