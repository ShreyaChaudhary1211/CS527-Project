diff --git a/JacksonDatabind_2/buggy/.defects4j.config b/JacksonDatabind_2/fixed/.defects4j.config
index 6929416..b5c6891 100644
--- a/JacksonDatabind_2/buggy/.defects4j.config
+++ b/JacksonDatabind_2/fixed/.defects4j.config
@@ -1,3 +1,3 @@
 #File automatically generated by Defects4J
 pid=JacksonDatabind
-vid=2b
+vid=2f
diff --git a/JacksonDatabind_2/buggy/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java b/JacksonDatabind_2/fixed/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java
index ff8b1c4..caea328 100644
--- a/JacksonDatabind_2/buggy/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java
+++ b/JacksonDatabind_2/fixed/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java
@@ -780,19 +780,39 @@ sb.append("NativeObjectIds=").append(_hasNativeObjectIds).append(",");
     @Override
     public void writeObject(Object value) throws IOException
     {
+        if (value == null) {
+            writeNull();
+            return;
+        }
+        Class<?> raw = value.getClass();
+        if (raw == byte[].class) {
             _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);
+            return;
+        } else if (_objectCodec == null) {
             /* 28-May-2014, tatu: Tricky choice here; if no codec, should we
              *   err out, or just embed? For now, do latter.
              */
 //          throw new JsonMappingException("No ObjectCodec configured for TokenBuffer, writeObject() called");
+            _append(JsonToken.VALUE_EMBEDDED_OBJECT, value);
+        } else {
+            _objectCodec.writeValue(this, value);
+        }
     }
 
     @Override
     public void writeTree(TreeNode node) throws IOException
     {
+        if (node == null) {
+            writeNull();
+            return;
+        }
 
+        if (_objectCodec == null) {
             // as with 'writeObject()', is codec optional?
             _append(JsonToken.VALUE_EMBEDDED_OBJECT, node);
+        } else {
+            _objectCodec.writeTree(this, node);
+        }
     }
 
     /*
