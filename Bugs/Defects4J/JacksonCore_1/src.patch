diff --git a/JacksonCore_1/buggy/.defects4j.config b/JacksonCore_1/fixed/.defects4j.config
index 42ba87a..83428f4 100644
--- a/JacksonCore_1/buggy/.defects4j.config
+++ b/JacksonCore_1/fixed/.defects4j.config
@@ -1,3 +1,3 @@
 #File automatically generated by Defects4J
 pid=JacksonCore
-vid=1b
+vid=1f
diff --git a/JacksonCore_1/buggy/src/main/java/com/fasterxml/jackson/core/io/NumberInput.java b/JacksonCore_1/fixed/src/main/java/com/fasterxml/jackson/core/io/NumberInput.java
index 01c18d9..eb463b9 100644
--- a/JacksonCore_1/buggy/src/main/java/com/fasterxml/jackson/core/io/NumberInput.java
+++ b/JacksonCore_1/fixed/src/main/java/com/fasterxml/jackson/core/io/NumberInput.java
@@ -292,7 +292,11 @@ public final class NumberInput
 
     public static BigDecimal parseBigDecimal(String numStr) throws NumberFormatException
     {
+        try {
             return new BigDecimal(numStr);
+        } catch (NumberFormatException e) {
+            throw _badBigDecimal(numStr);
+        }
     }
 
     public static BigDecimal parseBigDecimal(char[] buffer) throws NumberFormatException {
@@ -302,7 +306,14 @@ public final class NumberInput
     public static BigDecimal parseBigDecimal(char[] buffer, int offset, int len)
             throws NumberFormatException
     {
+        try {
             return new BigDecimal(buffer, offset, len);
+        } catch (NumberFormatException e) {
+            throw _badBigDecimal(new String(buffer, offset, len));
+        }
     }
 
+    private static NumberFormatException _badBigDecimal(String str) {
+        return new NumberFormatException("Value \""+str+"\" can not be represented as BigDecimal");
+    }
 }
diff --git a/JacksonCore_1/buggy/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java b/JacksonCore_1/fixed/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java
index a05410d..bab80e0 100644
--- a/JacksonCore_1/buggy/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java
+++ b/JacksonCore_1/fixed/src/main/java/com/fasterxml/jackson/core/util/TextBuffer.java
@@ -387,11 +387,11 @@ public final class TextBuffer
             return NumberInput.parseBigDecimal(_resultArray);
         }
         // Or a shared buffer?
-        if (_inputStart >= 0) {
+        if ((_inputStart >= 0) && (_inputBuffer != null)) {
             return NumberInput.parseBigDecimal(_inputBuffer, _inputStart, _inputLen);
         }
         // Or if not, just a single buffer (the usual case)
-        if (_segmentSize == 0) {
+        if ((_segmentSize == 0) && (_currentSegment != null)) {
             return NumberInput.parseBigDecimal(_currentSegment, 0, _currentSize);
         }
         // If not, let's just get it aggregated...
