diff --git a/Lang_3/Buggy-Version/.defects4j.config b/Lang_3/Patched-Version/.defects4j.config
index b425da3..d2ef024 100644
--- a/Lang_3/Buggy-Version/.defects4j.config
+++ b/Lang_3/Patched-Version/.defects4j.config
@@ -1,3 +1,3 @@
 #File automatically generated by Defects4J
 pid=Lang
-vid=3b
+vid=3f
diff --git a/Lang_3/Buggy-Version/src/main/java/org/apache/commons/lang3/math/NumberUtils.java b/Lang_3/Patched-Version/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
index c584021..1e6ccdc 100644
--- a/Lang_3/Buggy-Version/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
+++ b/Lang_3/Patched-Version/src/main/java/org/apache/commons/lang3/math/NumberUtils.java
@@ -590,18 +590,22 @@ public class NumberUtils {
         //Must be a Float, Double, BigDecimal
         final boolean allZeros = isAllZeros(mant) && isAllZeros(exp);
         try {
+            if(numDecimals <= 7){// If number has 7 or fewer digits past the decimal point then make it a float
                 final Float f = createFloat(str);
                 if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
                     return f;
                 }
+            }
         } catch (final NumberFormatException nfe) { // NOPMD
             // ignore the bad number
         }
         try {
+            if(numDecimals <= 16){// If number has between 8 and 16 digits past the decimal point then make it a double
                 final Double d = createDouble(str);
                 if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {
                     return d;
                 }
+            }
         } catch (final NumberFormatException nfe) { // NOPMD
             // ignore the bad number
         }
