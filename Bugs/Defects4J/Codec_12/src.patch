diff --git a/Codec_12/buggy/.defects4j.config b/Codec_12/fixed/.defects4j.config
index 354e37f..dc4ae63 100644
--- a/Codec_12/buggy/.defects4j.config
+++ b/Codec_12/fixed/.defects4j.config
@@ -1,3 +1,3 @@
 #File automatically generated by Defects4J
 pid=Codec
-vid=12b
+vid=12f
diff --git a/Codec_12/buggy/.git/HEAD b/Codec_12/fixed/.git/HEAD
index 2794db6..31d656b 100644
--- a/Codec_12/buggy/.git/HEAD
+++ b/Codec_12/fixed/.git/HEAD
@@ -1 +1 @@
-71b31032c688daa435ee4d01b7e3cf4c458ae4b7
+07e72d3b15d36a8a24787f47da6bb6121b16ec6d
diff --git a/Codec_12/buggy/.git/index b/Codec_12/fixed/.git/index
index 40fbeba..c812f07 100644
Binary files a/Codec_12/buggy/.git/index and b/Codec_12/fixed/.git/index differ
diff --git a/Codec_12/buggy/.git/logs/HEAD b/Codec_12/fixed/.git/logs/HEAD
index fce31bc..818de5b 100644
--- a/Codec_12/buggy/.git/logs/HEAD
+++ b/Codec_12/fixed/.git/logs/HEAD
@@ -7,3 +7,4 @@ ce2f1b82f1ab64795af80535053d99f977879818 1875768407e9f33ea03fb1d30e2bd0751deebe2
 71b31032c688daa435ee4d01b7e3cf4c458ae4b7 ce2f1b82f1ab64795af80535053d99f977879818 defects4j <defects4j@localhost> 1709003993 -0800	checkout: moving from 71b31032c688daa435ee4d01b7e3cf4c458ae4b7 to D4J_Codec_12_POST_FIX_REVISION
 ce2f1b82f1ab64795af80535053d99f977879818 c49e39f51cfeec39dac80fbd2bd3f1115c9abade defects4j <defects4j@localhost> 1709003993 -0800	commit: D4J_Codec_12_PRE_FIX_REVISION
 c49e39f51cfeec39dac80fbd2bd3f1115c9abade 71b31032c688daa435ee4d01b7e3cf4c458ae4b7 defects4j <defects4j@localhost> 1709003993 -0800	checkout: moving from c49e39f51cfeec39dac80fbd2bd3f1115c9abade to D4J_Codec_12_BUGGY_VERSION
+71b31032c688daa435ee4d01b7e3cf4c458ae4b7 07e72d3b15d36a8a24787f47da6bb6121b16ec6d defects4j <defects4j@localhost> 1709003993 -0800	checkout: moving from 71b31032c688daa435ee4d01b7e3cf4c458ae4b7 to D4J_Codec_12_FIXED_VERSION
diff --git a/Codec_12/buggy/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java b/Codec_12/fixed/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java
index 02cb18a..d1eb77b 100644
--- a/Codec_12/buggy/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java
+++ b/Codec_12/fixed/src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java
@@ -139,9 +139,31 @@ public class BaseNCodecInputStream extends FilterInputStream {
      *
      * @throws IllegalArgumentException if the provided skip length is negative
      */
+    @Override
+    public long skip(long n) throws IOException {
+        if (n < 0) {
+            throw new IllegalArgumentException("Negative skip length");
+        }
 
         // skip in chunks of 512 bytes
+        final byte[] b = new byte[512];
+        final int max = (int) Math.min(n, Integer.MAX_VALUE);
+        int total = 0;
+
+        while (total < max) {
+            int len = max - total;
+            if (len > b.length) {
+                len = b.length;
+            }
+            len = read(b, 0, len);
+            if (len == EOF) {
+                break;
+            }
+            total += len;
+        }
 
+        return total;
+    }
 
     /**
      * {@inheritDoc}
@@ -149,10 +171,17 @@ public class BaseNCodecInputStream extends FilterInputStream {
      * @return <code>0</code> if the {@link InputStream} has reached <code>EOF</code>,
      * <code>1</code> otherwise
      */
+    public int available() throws IOException {
         // Note: the logic is similar to the InflaterInputStream:
         //       as long as we have not reached EOF, indicate that there is more
         //       data available. As we do not know for sure how much data is left,
         //       just return 1 as a safe guess.
 
         // use the EOF flag of the underlying codec instance
+        if (baseNCodec.eof) {
+            return 0;
+        } else {
+            return 1;
+        }
+    }
 }
